; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	CLSID_Registrar
PUBLIC	IID_IRegistrar
PUBLIC	IID_IDocHostUIHandlerDispatch
PUBLIC	IID_IAxWinHostWindow
PUBLIC	IID_IAxWinHostWindowLic
PUBLIC	IID_IAxWinAmbientDispatch
PUBLIC	IID_IAxWinAmbientDispatchEx
PUBLIC	IID_IInternalConnection
PUBLIC	LIBID_ATLLib
PUBLIC	__pobjMapEntryFirst
PUBLIC	__pobjMapEntryLast
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPEAUHINSTANCE__@@@ZEA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZEA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA		; ATL::_pAtlModule
PUBLIC	?_pModule@ATL@@3PEAVCComModule@1@EA		; ATL::_pModule
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PEAUIAtlAutoThreadModule@1@EA ; ATL::_pAtlAutoThreadModule
PUBLIC	?chDirSep@ATL@@3DB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3DB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3DB				; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3DB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3DB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QEBDEB			; ATL::szStringVal
PUBLIC	?multiszStringVal@ATL@@3QEBDEB			; ATL::multiszStringVal
PUBLIC	?szDwordVal@ATL@@3QEBDEB			; ATL::szDwordVal
PUBLIC	?szBinaryVal@ATL@@3QEBDEB			; ATL::szBinaryVal
PUBLIC	?szValToken@ATL@@3QEBDEB			; ATL::szValToken
PUBLIC	?szForceRemove@ATL@@3QEBDEB			; ATL::szForceRemove
PUBLIC	?szNoRemove@ATL@@3QEBDEB			; ATL::szNoRemove
PUBLIC	?szDelete@ATL@@3QEBDEB				; ATL::szDelete
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPEAUHINSTANCE__@@@ZEA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPEAUHINSTANCE__@@@ZEA DQ 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZEA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZEA DQ 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA
_BSS	SEGMENT
?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA DQ 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PEAVCComModule@1@EA
_BSS	SEGMENT
?_pModule@ATL@@3PEAVCComModule@1@EA DQ 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PEAUIAtlAutoThreadModule@1@EA
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PEAUIAtlAutoThreadModule@1@EA DQ 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
;	COMDAT ?szDelete@ATL@@3QEBDEB
CONST	SEGMENT
?szDelete@ATL@@3QEBDEB DQ FLAT:$SG138348		; ATL::szDelete
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QEBDEB
CONST	SEGMENT
?szNoRemove@ATL@@3QEBDEB DQ FLAT:$SG138346		; ATL::szNoRemove
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QEBDEB
CONST	SEGMENT
?szForceRemove@ATL@@3QEBDEB DQ FLAT:$SG138344		; ATL::szForceRemove
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QEBDEB
CONST	SEGMENT
?szValToken@ATL@@3QEBDEB DQ FLAT:$SG138342		; ATL::szValToken
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QEBDEB
CONST	SEGMENT
?szBinaryVal@ATL@@3QEBDEB DQ FLAT:$SG138340		; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QEBDEB
CONST	SEGMENT
?szDwordVal@ATL@@3QEBDEB DQ FLAT:$SG138338		; ATL::szDwordVal
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QEBDEB
CONST	SEGMENT
?multiszStringVal@ATL@@3QEBDEB DQ FLAT:$SG138336	; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QEBDEB
CONST	SEGMENT
?szStringVal@ATL@@3QEBDEB DQ FLAT:$SG138334		; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3DB
CONST	SEGMENT
?chEquals@ATL@@3DB DB 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3DB
CONST	SEGMENT
?chQuote@ATL@@3DB DB 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3DB
CONST	SEGMENT
?chLeftBracket@ATL@@3DB DB 07bH				; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3DB
CONST	SEGMENT
?chRightBracket@ATL@@3DB DB 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3DB
CONST	SEGMENT
?chDirSep@ATL@@3DB DB 05cH				; ATL::chDirSep
CONST	ENDS
;	COMDAT __pobjMapEntryLast
ATL$__z	SEGMENT
__pobjMapEntryLast DQ 0000000000000000H
ATL$__z	ENDS
;	COMDAT __pobjMapEntryFirst
ATL$__a	SEGMENT
__pobjMapEntryFirst DQ 0000000000000000H
ATL$__a	ENDS
;	COMDAT LIBID_ATLLib
CONST	SEGMENT
LIBID_ATLLib DD	044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT IID_IInternalConnection
CONST	SEGMENT
IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT IID_IAxWinAmbientDispatch
CONST	SEGMENT
IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT IID_IAxWinHostWindowLic
CONST	SEGMENT
IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT IID_IAxWinHostWindow
CONST	SEGMENT
IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT IID_IRegistrar
CONST	SEGMENT
IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT CLSID_Registrar
CONST	SEGMENT
CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
CONST	SEGMENT
$SG123109 DB	00H
$SG181669 DB	00H
$SG181671 DB	00H
$SG176263 DB	00H
$SG114957 DB	'VP8', 00H
$SG123110 DB	'SandyBridge', 00H
$SG114959 DB	'VP9', 00H
$SG123111 DB	'IvyBridge', 00H
$SG177736 DB	00H
$SG177740 DB	00H
$SG180943 DB	'a', 00H
$SG177743 DB	00H
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
$SG123112 DB	'Silvermont', 00H
	ORG $+5
$SG123113 DB	'Haswell', 00H
$SG123114 DB	'Airmont', 00H
$SG123115 DB	'Broadwell', 00H
	ORG $+2
$SG180950 DB	'%s', 00H
	ORG $+1
$SG123116 DB	'Skylake', 00H
$SG123117 DB	'Apollolake', 00H
	ORG $+1
$SG180951 DB	'hw', 00H
	ORG $+1
$SG123118 DB	'Kabylake', 00H
	ORG $+3
$SG114949 DB	'MPEG2', 00H
	ORG $+2
$SG180952 DB	'sw', 00H
	ORG $+1
$SG123119 DB	'Geminilake', 00H
	ORG $+1
$SG180953 DB	'x64', 00H
$SG123120 DB	'Coffeelake', 00H
	ORG $+1
$SG180956 DB	0aH, 00H
	ORG $+2
$SG123121 DB	'Cannonlake', 00H
	ORG $+1
$SG180980 DB	0aH, 00H
	ORG $+2
$SG123122 DB	'Icelake', 00H
?LIB_VER_LIST@@3QBTmfxVersion@@B DW 00H			; LIB_VER_LIST
	DW	00H
	DW	00H
	DW	01H
	DW	01H
	DW	01H
	DW	03H
	DW	01H
	DW	04H
	DW	01H
	DW	06H
	DW	01H
	DW	07H
	DW	01H
	DW	08H
	DW	01H
	DW	09H
	DW	01H
	DW	0aH
	DW	01H
	DW	0bH
	DW	01H
	DW	0dH
	DW	01H
	DW	0fH
	DW	01H
	DW	010H
	DW	01H
	DW	011H
	DW	01H
	DW	013H
	DW	01H
	DW	017H
	DW	01H
	DW	01aH
	DW	01H
	DW	01bH
	DW	01H
	DW	00H
	DW	00H
?CODEC_LIST_AUO@@3QBIB DD 020435641H			; CODEC_LIST_AUO
	DD	043564548H
$SG114945 DB	'H.264/AVC', 00H
	ORG $+2
$SG180988 DB	'a', 00H
	ORG $+2
$SG114947 DB	'H.265/HEVC', 00H
	ORG $+1
$SG114951 DB	'MPEG1', 00H
	ORG $+2
$SG114953 DB	'VC-1', 00H
	ORG $+3
$SG114955 DB	'MPEG4', 00H
	ORG $+2
$SG180995 DB	0aH, 00H
	ORG $+2
$SG114961 DB	'unknown', 00H
$SG123211 DB	'CBR  ', 00H
	ORG $+2
$SG123212 DB	'VBR  ', 00H
	ORG $+2
$SG123213 DB	'AVBR ', 00H
	ORG $+2
$SG123214 DB	'QVBR ', 00H
	ORG $+2
$SG123215 DB	'CQP  ', 00H
	ORG $+2
$SG123216 DB	'LA   ', 00H
	ORG $+2
$SG123217 DB	'LAHRD', 00H
	ORG $+2
$SG123218 DB	'ICQ  ', 00H
	ORG $+2
$SG123219 DB	'LAICQ', 00H
	ORG $+2
$SG123220 DB	'VCM  ', 00H
	ORG $+2
$SG123222 DB	'RC mode      ', 00H
	ORG $+2
$SG123223 DB	'10bit depth  ', 00H
	ORG $+2
$SG123224 DB	'Fixed Func   ', 00H
	ORG $+2
$SG123225 DB	'Interlace    ', 00H
	ORG $+2
$SG123226 DB	'VUI info     ', 00H
	ORG $+2
$SG123227 DB	'Trellis      ', 00H
	ORG $+2
$SG123228 DB	'Adaptive_I   ', 00H
	ORG $+2
$SG123229 DB	'Adaptive_B   ', 00H
	ORG $+2
$SG123230 DB	'WeightP      ', 00H
	ORG $+2
$SG123231 DB	'WeightB      ', 00H
	ORG $+2
$SG123232 DB	'FadeDetect   ', 00H
	ORG $+2
$SG123233 DB	'B_Pyramid    ', 00H
	ORG $+2
$SG123234 DB	' +ManyBframes', 00H
	ORG $+2
$SG123235 DB	'PyramQPOffset', 00H
	ORG $+2
$SG123236 DB	'MBBRC        ', 00H
	ORG $+2
$SG123237 DB	'ExtBRC       ', 00H
	ORG $+2
$SG123238 DB	'Adaptive_LTR ', 00H
	ORG $+2
$SG123239 DB	'LA Quality   ', 00H
	ORG $+2
$SG123240 DB	'QP Min/Max   ', 00H
	ORG $+2
$SG123241 DB	'IntraRefresh ', 00H
	ORG $+2
$SG123242 DB	'No Deblock   ', 00H
	ORG $+2
$SG123243 DB	'No GPB       ', 00H
	ORG $+2
$SG123244 DB	'Windowed BRC ', 00H
	ORG $+2
$SG123245 DB	'PerMBQP(CQP) ', 00H
	ORG $+2
$SG123246 DB	'DirectBiasAdj', 00H
	ORG $+2
$SG123247 DB	'MVCostScaling', 00H
	ORG $+2
$SG123248 DB	'SAO          ', 00H
	ORG $+2
$SG123249 DB	'Max CTU Size ', 00H
	ORG $+2
$SG123250 DB	'TSkip        ', 00H
	ORG $+2
$SG123252 DB	'Resize               ', 00H
	ORG $+2
$SG123253 DB	'Deinterlace          ', 00H
	ORG $+2
$SG123254 DB	'Scaling Quality      ', 00H
	ORG $+2
$SG123255 DB	'Denoise              ', 00H
	ORG $+2
$SG123256 DB	'Mctf                 ', 00H
	ORG $+2
$SG123257 DB	'Rotate               ', 00H
	ORG $+2
$SG123258 DB	'Mirror               ', 00H
	ORG $+2
$SG123259 DB	'Detail Enhancement   ', 00H
	ORG $+2
$SG123260 DB	'Proc Amp.            ', 00H
	ORG $+2
$SG115068 DB	'unknown', 00H
$SG123261 DB	'Image Stabilization  ', 00H
	ORG $+2
$SG123262 DB	'Video Signal Info    ', 00H
	ORG $+2
$SG123263 DB	'FPS Conversion       ', 00H
	ORG $+2
$SG123264 DB	'FPS Conversion (Adv.)', 00H
	ORG $+2
$SG180944 DB	0aH, 'ERROR: failed opening benchmark result file.', 0aH, 00H
	ORG $+1
$SG180946 DB	'Started benchmark on %d.%02d.%02d %2d:%02d:%02d', 0aH, 00H
	ORG $+3
$SG180998 DB	0aH, 00H
	ORG $+2
$SG180947 DB	'Input File: %s', 0aH, 00H
$SG180948 DB	'Basic parameters of the benchmark', 0aH, ' (Target Usage'
	DB	' and output resolution will be changed)', 0aH, 00H
	ORG $+3
$SG180949 DB	'%s', 0aH, 0aH, 00H
	ORG $+3
$SG180954 DB	'3.25', 00H
	ORG $+3
$SG180999 DB	0aH, 00H
	ORG $+2
$SG180955 DB	'QSV: QSVEncC %s (%s) / API[%s]: v%d.%d / %s', 0aH, 00H
	ORG $+3
$SG180958 DB	0aH, 'ERROR: failed opening benchmark result file.', 0aH, 00H
	ORG $+1
$SG180963 DB	0aH, 'ERROR: Hardware device was lost or returned an unex'
	DB	'pected error. Recovering...', 0aH, 00H
	ORG $+7
$SG180989 DB	0aH, 'ERROR: failed opening benchmark result file.', 0aH, 00H
	ORG $+1
$SG180992 DB	'Encode Speed (fps)', 0aH, 00H
	ORG $+4
$SG180977 DB	0aH, 'ERROR: Hardware device was lost or returned an unex'
	DB	'pected error. Recovering...', 0aH, 00H
	ORG $+3
$SG181003 DB	0aH, 00H
	ORG $+2
$SG180991 DB	'TargetUsage ([TU-1]:Best Quality) ', 0a1H, 0abH, ' ([TU-'
	DB	'7]:Fastest Speed)', 0aH, 0aH, 00H
	ORG $+2
$SG180993 DB	'TargetUsage', 00H
$SG181006 DB	0aH, 00H
	ORG $+2
$SG180994 DB	',   %dx%d', 00H
	ORG $+2
$SG181007 DB	0aH, 00H
	ORG $+2
$SG180996 DB	' ', 0a1H, 0a1H, 0a1H, 0a1H, 'TU-%d', 00H
	ORG $+1
$SG181011 DB	0aH, 00H
	ORG $+2
$SG180997 DB	',', 0a1H, 0a1H, 0a1H, 0a1H, 0a1H, 0a1H, '%6.2f', 00H
	ORG $+3
$SG181000 DB	'Bitrate (kbps)', 0aH, 00H
$SG181001 DB	'TargetUsage', 00H
$SG181014 DB	0aH, 00H
	ORG $+2
$SG181002 DB	',   %dx%d', 00H
	ORG $+2
$SG181015 DB	0aH, 00H
	ORG $+2
$SG181004 DB	' ', 0a1H, 0a1H, 0a1H, 0a1H, 'TU-%d', 00H
	ORG $+1
$SG115570 DB	'fcc', 00H
$SG181005 DB	',', 0a1H, 0a1H, 0a1H, 0a1H, 0a1H, 0a1H, '%6d', 00H
	ORG $+1
$SG115571 DB	'GBR', 00H
$SG181008 DB	'CPU Usage (%%)', 0aH, 00H
$SG181009 DB	'TargetUsage', 00H
$SG115884 DB	'pal', 00H
$SG181010 DB	',   %dx%d', 00H
	ORG $+2
$SG115722 DB	'bt470m', 00H
	ORG $+1
$SG115886 DB	'mac', 00H
$SG181012 DB	' ', 0a1H, 0a1H, 0a1H, 0a1H, 'TU-%d', 00H
	ORG $+1
$SG115888 DB	'0', 00H
	ORG $+2
$SG181013 DB	',', 0a1H, 0a1H, 0a1H, 0a1H, 0a1H, 0a1H, '%6.2f', 00H
	ORG $+3
$SG181016 DB	0aH, 'Finished benchmark.', 0aH, 00H
	ORG $+2
$SG181017 DB	0aH, 'Error occurred during benchmark.', 0aH, 00H
	ORG $+5
?list_colormatrix@@3QBUCX_DESC@@B DQ FLAT:$SG115563	; list_colormatrix
	DD	02H
	ORG $+4
	DQ	FLAT:$SG115564
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG115565
	DD	01H
	ORG $+4
	DQ	FLAT:$SG115566
	DD	06H
	ORG $+4
	DQ	FLAT:$SG115567
	DD	05H
	ORG $+4
	DQ	FLAT:$SG115568
	DD	07H
	ORG $+4
	DQ	FLAT:$SG115569
	DD	08H
	ORG $+4
	DQ	FLAT:$SG115570
	DD	04H
	ORG $+4
	DQ	FLAT:$SG115571
	DD	00H
	ORG $+4
	DQ	FLAT:$SG115572
	DD	09H
	ORG $+4
	DQ	FLAT:$SG115573
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG115574
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG115575
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG115576
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG115577
	DD	0fH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG115563 DB	'undef', 00H
	ORG $+2
$SG115564 DB	'auto', 00H
	ORG $+3
$SG115565 DB	'bt709', 00H
	ORG $+2
$SG115566 DB	'smpte170m', 00H
	ORG $+2
$SG115725 DB	'linear', 00H
	ORG $+1
$SG115889 DB	'1', 00H
	ORG $+2
$SG115567 DB	'bt470bg', 00H
$SG115568 DB	'smpte240m', 00H
	ORG $+2
$SG115569 DB	'YCgCo', 00H
	ORG $+2
$SG115726 DB	'log100', 00H
	ORG $+1
$SG115890 DB	'2', 00H
	ORG $+2
$SG115572 DB	'bt2020nc', 00H
	ORG $+3
$SG115576 DB	'ictco', 00H
	ORG $+2
$SG115727 DB	'log316', 00H
	ORG $+1
$SG115891 DB	'3', 00H
	ORG $+2
$SG115573 DB	'bt2020c', 00H
$SG115574 DB	'derived-ncl', 00H
$SG115892 DB	'4', 00H
	ORG $+2
$SG115575 DB	'derived-cl', 00H
	ORG $+1
$SG115893 DB	'5', 00H
	ORG $+2
$SG115577 DB	'2100-lms', 00H
	ORG $+7
?list_transfer@@3QBUCX_DESC@@B DQ FLAT:$SG115718	; list_transfer
	DD	02H
	ORG $+4
	DQ	FLAT:$SG115719
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG115720
	DD	01H
	ORG $+4
	DQ	FLAT:$SG115721
	DD	06H
	ORG $+4
	DQ	FLAT:$SG115722
	DD	04H
	ORG $+4
	DQ	FLAT:$SG115723
	DD	05H
	ORG $+4
	DQ	FLAT:$SG115724
	DD	07H
	ORG $+4
	DQ	FLAT:$SG115725
	DD	08H
	ORG $+4
	DQ	FLAT:$SG115726
	DD	09H
	ORG $+4
	DQ	FLAT:$SG115727
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG115728
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG115729
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG115730
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG115731
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG115732
	DD	0fH
	ORG $+4
	DQ	FLAT:$SG115733
	DD	010H
	ORG $+4
	DQ	FLAT:$SG115734
	DD	011H
	ORG $+4
	DQ	FLAT:$SG115735
	DD	012H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG115718 DB	'undef', 00H
	ORG $+2
$SG115719 DB	'auto', 00H
	ORG $+3
$SG115720 DB	'bt709', 00H
	ORG $+2
$SG115721 DB	'smpte170m', 00H
	ORG $+2
$SG115871 DB	'bt470m', 00H
	ORG $+1
$SG115897 DB	'tv', 00H
	ORG $+1
$SG115723 DB	'bt470bg', 00H
$SG115724 DB	'smpte240m', 00H
	ORG $+2
$SG115875 DB	'bt2020', 00H
	ORG $+1
$SG115898 DB	'pc', 00H
	ORG $+1
$SG115728 DB	'iec61966-2-4', 00H
	ORG $+3
$SG115729 DB	'bt1361e', 00H
$SG115730 DB	'iec61966-2-1', 00H
	ORG $+3
$SG115731 DB	'bt2020-10', 00H
	ORG $+2
$SG116987 DB	'cfr', 00H
$SG115732 DB	'bt2020-12', 00H
	ORG $+2
$SG116988 DB	'vfr', 00H
$SG115733 DB	'smpte2084', 00H
	ORG $+2
$SG116991 DB	'swr', 00H
$SG115734 DB	'smpte428', 00H
	ORG $+3
$SG115867 DB	'undef', 00H
	ORG $+2
$SG174688 DB	'%s', 00H
	ORG $+1
$SG115735 DB	'arib-srd-b67', 00H
	ORG $+3
$SG140339 DB	'l', 00H, 'p', 00H, 's', 00H, 'z', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG174717 DB	' ', 00H
	ORG $+2
$SG140340 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG140341 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG115868 DB	'auto', 00H
	ORG $+7
?list_colorprim@@3QBUCX_DESC@@B DQ FLAT:$SG115867	; list_colorprim
	DD	02H
	ORG $+4
	DQ	FLAT:$SG115868
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG115869
	DD	01H
	ORG $+4
	DQ	FLAT:$SG115870
	DD	06H
	ORG $+4
	DQ	FLAT:$SG115871
	DD	04H
	ORG $+4
	DQ	FLAT:$SG115872
	DD	05H
	ORG $+4
	DQ	FLAT:$SG115873
	DD	07H
	ORG $+4
	DQ	FLAT:$SG115874
	DD	08H
	ORG $+4
	DQ	FLAT:$SG115875
	DD	09H
	ORG $+4
	DQ	FLAT:$SG115876
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG115877
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG115878
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG115879
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG115869 DB	'bt709', 00H
	ORG $+2
$SG115870 DB	'smpte170m', 00H
	ORG $+2
$SG174716 DB	'   %s ', 00H
	ORG $+1
$SG174720 DB	', ', 00H
	ORG $+1
$SG115872 DB	'bt470bg', 00H
$SG115873 DB	'smpte240m', 00H
	ORG $+2
$SG115874 DB	'film', 00H
	ORG $+3
$SG115876 DB	'st428', 00H
	ORG $+2
$SG174721 DB	0aH, '%s', 00H
$SG115877 DB	'st431-2', 00H
$SG115878 DB	'st432-1', 00H
$SG115879 DB	'ebu3213-e', 00H
	ORG $+2
$SG115881 DB	'undef', 00H
	ORG $+6
?list_videoformat@@3QBUCX_DESC@@B DQ FLAT:$SG115881	; list_videoformat
	DD	05H
	ORG $+4
	DQ	FLAT:$SG115882
	DD	02H
	ORG $+4
	DQ	FLAT:$SG115883
	DD	00H
	ORG $+4
	DQ	FLAT:$SG115884
	DD	01H
	ORG $+4
	DQ	FLAT:$SG115885
	DD	03H
	ORG $+4
	DQ	FLAT:$SG115886
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG115882 DB	'ntsc', 00H
	ORG $+3
$SG115883 DB	'component', 00H
	ORG $+2
$SG115885 DB	'secam', 00H
	ORG $+2
$SG174723 DB	', ', 00H
	ORG $+1
$SG115895 DB	'limited', 00H
$SG115896 DB	'full', 00H
	ORG $+3
$SG173321 DB	'1.19', 00H
	ORG $+3
$SG181659 DB	'-----------------------------------------> run start', 0dH
	DB	0aH, 00H
	ORG $+1
$SG181672 DB	'----------------------------------------->parse_cmd star'
	DB	't.', 0dH, 0aH, 00H
	ORG $+3
$SG181675 DB	0dH, 0aH, '----------------------------------------->pars'
	DB	'e_cmd end.', 0dH, 0aH, 00H
	ORG $+3
$SG181685 DB	'----------------------------------------->loop start.', 0dH
	DB	0aH, 00H
$SG181696 DB	'----------------------------------------->loop end.', 0dH
	DB	0aH, 00H
	ORG $+2
$SG181689 DB	0aH, 'ERROR: Hardware device was lost or returned an unex'
	DB	'pected error. Recovering...', 0aH, 00H
	ORG $+3
$SG116980 DB	'trace', 00H
	ORG $+2
$SG174724 DB	'%s', 00H
	ORG $+1
$SG181697 DB	0aH, 'Processing finished', 0aH, 00H
	ORG $+2
$SG181708 DB	'----------------------------------------->_tmain start.', 0dH
	DB	0aH, 00H
	ORG $+2
$SG117883 DB	'vp8', 00H
$SG181710 DB	'QSVEncC.exe finished with error!', 0aH, 00H
	ORG $+2
$SG117884 DB	'raw', 00H
?list_empty@@3QBUCX_DESC@@B DQ 0000000000000000H	; list_empty
	DD	00H
	ORG $+4
$SG116981 DB	'debug', 00H
	ORG $+2
$SG116982 DB	'more', 00H
	ORG $+3
$SG116983 DB	'info', 00H
	ORG $+3
$SG116984 DB	'warn', 00H
	ORG $+3
$SG116985 DB	'error', 00H
	ORG $+2
$SG116989 DB	'forcecfr', 00H
	ORG $+3
$SG116992 DB	'soxr', 00H
	ORG $+3
$SG117881 DB	'mpeg2', 00H
	ORG $+2
$SG117886 DB	'CBR', 00H
$SG174715 DB	'                                ', 00H
	ORG $+3
$SG117887 DB	'VBR', 00H
$SG174725 DB	0aH, '%s default: %s', 0aH, 00H
	ORG $+3
$SG117879 DB	'h264', 00H
	ORG $+3
$SG117880 DB	'hevc', 00H
	ORG $+3
$SG117882 DB	'vc-1', 00H
	ORG $+3
$SG117888 DB	'CQP', 00H
$SG117889 DB	'AVBR', 00H
	ORG $+3
$SG117890 DB	'LA', 00H
	ORG $+1
$SG117891 DB	'LA-EXT', 00H
	ORG $+1
$SG117892 DB	'LA-HRD', 00H
	ORG $+1
$SG117893 DB	'LA-ICQ', 00H
	ORG $+1
$SG117894 DB	'ICQ', 00H
$SG117895 DB	'QVBR', 00H
	ORG $+3
$SG117896 DB	'VCM', 00H
$SG117898 DB	'auto', 00H
	ORG $+7
?list_avc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG117898	; list_avc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG117899
	DD	042H
	ORG $+4
	DQ	FLAT:$SG117900
	DD	04dH
	ORG $+4
	DQ	FLAT:$SG117901
	DD	064H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG117899 DB	'Baseline', 00H
	ORG $+3
$SG117900 DB	'Main', 00H
	ORG $+3
$SG117901 DB	'High', 00H
	ORG $+7
?list_hevc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG117903	; list_hevc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG117904
	DD	01H
	ORG $+4
	DQ	FLAT:$SG117905
	DD	02H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG117903 DB	'auto', 00H
	ORG $+3
$SG117904 DB	'main', 00H
	ORG $+3
$SG117905 DB	'main10', 00H
	ORG $+1
?list_hevc_tier@@3QBUCX_DESC@@B DQ FLAT:$SG117907	; list_hevc_tier
	DD	00H
	ORG $+4
	DQ	FLAT:$SG117908
	DD	0100H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG117907 DB	'main', 00H
	ORG $+3
$SG117908 DB	'high', 00H
	ORG $+3
$SG117910 DB	'auto', 00H
	ORG $+3
?list_mpeg2_profile@@3QBUCX_DESC@@B DQ FLAT:$SG117910	; list_mpeg2_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG117911
	DD	050H
	ORG $+4
	DQ	FLAT:$SG117912
	DD	040H
	ORG $+4
	DQ	FLAT:$SG117913
	DD	010H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG117911 DB	'Simple', 00H
	ORG $+1
$SG117912 DB	'Main', 00H
	ORG $+3
$SG117913 DB	'High', 00H
	ORG $+3
$SG117915 DB	'auto', 00H
	ORG $+3
?list_vc1_profile@@3QBUCX_DESC@@B DQ FLAT:$SG117915	; list_vc1_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG117916
	DD	01H
	ORG $+4
	DQ	FLAT:$SG117917
	DD	05H
	ORG $+4
	DQ	FLAT:$SG117918
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG117916 DB	'Simple', 00H
	ORG $+1
$SG117917 DB	'Main', 00H
	ORG $+3
$SG117918 DB	'Advanced', 00H
	ORG $+7
?list_vp8_profile@@3QBUCX_DESC@@B DQ FLAT:$SG117920	; list_vp8_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG117921
	DD	01H
	ORG $+4
	DQ	FLAT:$SG117922
	DD	02H
	ORG $+4
	DQ	FLAT:$SG117923
	DD	03H
	ORG $+4
	DQ	FLAT:$SG117924
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG117920 DB	'auto', 00H
	ORG $+3
$SG117921 DB	'0', 00H
	ORG $+2
$SG117922 DB	'1', 00H
	ORG $+2
$SG117923 DB	'2', 00H
	ORG $+2
$SG117924 DB	'3', 00H
	ORG $+2
$SG117926 DB	'auto', 00H
	ORG $+3
?list_vp9_profile@@3QBUCX_DESC@@B DQ FLAT:$SG117926	; list_vp9_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG117927
	DD	01H
	ORG $+4
	DQ	FLAT:$SG117928
	DD	02H
	ORG $+4
	DQ	FLAT:$SG117929
	DD	03H
	ORG $+4
	DQ	FLAT:$SG117930
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG117927 DB	'0', 00H
	ORG $+2
$SG117928 DB	'1', 00H
	ORG $+2
$SG117929 DB	'2', 00H
	ORG $+2
$SG117930 DB	'3', 00H
	ORG $+2
$SG117932 DB	'8', 00H
	ORG $+2
$SG117933 DB	'10', 00H
	ORG $+1
$SG117935 DB	'progressive', 00H
$SG117941 DB	'it', 00H
	ORG $+1
$SG117936 DB	'interlaced(tff)', 00H
$SG117937 DB	'interlaced(bff)', 00H
$SG117939 DB	'none', 00H
	ORG $+3
$SG117940 DB	'normal', 00H
	ORG $+1
$SG117942 DB	'bob', 00H
$SG117944 DB	'32', 00H
	ORG $+1
$SG117945 DB	'2332', 00H
	ORG $+3
$SG117946 DB	'repeat', 00H
	ORG $+1
$SG117947 DB	'41', 00H
	ORG $+1
$SG117949 DB	'auto', 00H
	ORG $+7
?list_avc_level@@3QBUCX_DESC@@B DQ FLAT:$SG117949	; list_avc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG117950
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG117951
	DD	09H
	ORG $+4
	DQ	FLAT:$SG117952
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG117953
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG117954
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG117955
	DD	014H
	ORG $+4
	DQ	FLAT:$SG117956
	DD	015H
	ORG $+4
	DQ	FLAT:$SG117957
	DD	016H
	ORG $+4
	DQ	FLAT:$SG117958
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG117959
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG117960
	DD	020H
	ORG $+4
	DQ	FLAT:$SG117961
	DD	028H
	ORG $+4
	DQ	FLAT:$SG117962
	DD	029H
	ORG $+4
	DQ	FLAT:$SG117963
	DD	02aH
	ORG $+4
	DQ	FLAT:$SG117964
	DD	032H
	ORG $+4
	DQ	FLAT:$SG117965
	DD	033H
	ORG $+4
	DQ	FLAT:$SG117966
	DD	034H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG117950 DB	'1', 00H
	ORG $+2
$SG117951 DB	'1b', 00H
	ORG $+1
$SG117952 DB	'1.1', 00H
$SG117953 DB	'1.2', 00H
$SG117954 DB	'1.3', 00H
$SG117955 DB	'2', 00H
	ORG $+2
$SG117956 DB	'2.1', 00H
$SG117957 DB	'2.2', 00H
$SG117958 DB	'3', 00H
	ORG $+2
$SG117959 DB	'3.1', 00H
$SG117960 DB	'3.2', 00H
$SG117961 DB	'4', 00H
	ORG $+2
$SG117962 DB	'4.1', 00H
$SG117963 DB	'4.2', 00H
$SG117964 DB	'5', 00H
	ORG $+2
$SG117965 DB	'5.1', 00H
$SG117966 DB	'5.2', 00H
$SG117968 DB	'auto', 00H
	ORG $+7
?list_hevc_level@@3QBUCX_DESC@@B DQ FLAT:$SG117968	; list_hevc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG117969
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG117970
	DD	014H
	ORG $+4
	DQ	FLAT:$SG117971
	DD	015H
	ORG $+4
	DQ	FLAT:$SG117972
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG117973
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG117974
	DD	028H
	ORG $+4
	DQ	FLAT:$SG117975
	DD	029H
	ORG $+4
	DQ	FLAT:$SG117976
	DD	032H
	ORG $+4
	DQ	FLAT:$SG117977
	DD	033H
	ORG $+4
	DQ	FLAT:$SG117978
	DD	034H
	ORG $+4
	DQ	FLAT:$SG117979
	DD	03cH
	ORG $+4
	DQ	FLAT:$SG117980
	DD	03dH
	ORG $+4
	DQ	FLAT:$SG117981
	DD	03eH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG117969 DB	'1', 00H
	ORG $+2
$SG117970 DB	'2', 00H
	ORG $+2
$SG117971 DB	'2.1', 00H
$SG117972 DB	'3', 00H
	ORG $+2
$SG117973 DB	'3.1', 00H
$SG117974 DB	'4', 00H
	ORG $+2
$SG117975 DB	'4.1', 00H
$SG117976 DB	'5', 00H
	ORG $+2
$SG117977 DB	'5.1', 00H
$SG117978 DB	'5.2', 00H
$SG117979 DB	'6', 00H
	ORG $+2
$SG117980 DB	'6.1', 00H
$SG117981 DB	'6.2', 00H
$SG117983 DB	'auto', 00H
	ORG $+7
?list_mpeg2_level@@3QBUCX_DESC@@B DQ FLAT:$SG117983	; list_mpeg2_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG117984
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG117985
	DD	08H
	ORG $+4
	DQ	FLAT:$SG117986
	DD	04H
	ORG $+4
	DQ	FLAT:$SG117987
	DD	06H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG117984 DB	'low', 00H
$SG117985 DB	'main', 00H
	ORG $+3
$SG117986 DB	'high', 00H
	ORG $+3
$SG117990 DB	'low', 00H
$SG117987 DB	'high1440', 00H
	ORG $+3
$SG117989 DB	'auto', 00H
	ORG $+7
?list_vc1_level@@3QBUCX_DESC@@B DQ FLAT:$SG117989	; list_vc1_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG117990
	DD	01H
	ORG $+4
	DQ	FLAT:$SG117991
	DD	03H
	ORG $+4
	DQ	FLAT:$SG117992
	DD	05H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG117991 DB	'median', 00H
	ORG $+1
$SG117992 DB	'high', 00H
	ORG $+3
$SG117994 DB	'auto', 00H
	ORG $+3
$SG117995 DB	'0', 00H
	ORG $+2
$SG117996 DB	'1', 00H
	ORG $+2
$SG117997 DB	'2', 00H
	ORG $+2
$SG117998 DB	'3', 00H
	ORG $+2
$SG117999 DB	'4', 00H
	ORG $+2
$SG118006 DB	'off', 00H
?list_vp8_level@@3QBUCX_DESC@@B DQ FLAT:$SG118001	; list_vp8_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG118001 DB	'auto', 00H
	ORG $+3
?list_vp9_level@@3QBUCX_DESC@@B DQ FLAT:$SG118003	; list_vp9_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG118003 DB	'auto', 00H
	ORG $+3
$SG118005 DB	'Auto', 00H
	ORG $+3
$SG118007 DB	'for I frames', 00H
	ORG $+3
$SG118008 DB	'for I,P frames', 00H
	ORG $+1
$SG118009 DB	'for All frames', 00H
	ORG $+1
$SG118011 DB	'auto', 00H
	ORG $+3
$SG118012 DB	'off', 00H
$SG118013 DB	'i', 00H
	ORG $+2
$SG126205 DB	'atlTraceGeneral', 00H
$SG118014 DB	'ip', 00H
	ORG $+1
$SG118015 DB	'all', 00H
$SG118016 DB	'ipb', 00H
$SG118017 DB	'ib', 00H
	ORG $+1
$SG118018 DB	'p', 00H
	ORG $+2
$SG118019 DB	'pb', 00H
	ORG $+1
$SG118020 DB	'b', 00H
	ORG $+2
$SG118022 DB	'auto', 00H
	ORG $+3
$SG118023 DB	'slow', 00H
	ORG $+3
$SG118024 DB	'medium', 00H
	ORG $+1
$SG118025 DB	'fast', 00H
	ORG $+3
$SG118028 DB	'0', 00H
	ORG $+2
$SG118027 DB	'default', 00H
$SG118029 DB	'1', 00H
	ORG $+2
$SG118030 DB	'2', 00H
	ORG $+2
$SG118031 DB	'3', 00H
	ORG $+2
$SG118032 DB	'4', 00H
	ORG $+2
$SG118034 DB	'low', 00H
$SG118035 DB	'normal', 00H
	ORG $+1
$SG118036 DB	'high', 00H
	ORG $+3
$SG118048 DB	'none', 00H
	ORG $+3
$SG118049 DB	'copy', 00H
	ORG $+3
$SG118050 DB	'aac', 00H
$SG118051 DB	'libmp3lame', 00H
	ORG $+1
$SG118056 DB	'ac3', 00H
$SG118052 DB	'libtwolame', 00H
	ORG $+1
$SG118087 DB	'tff', 00H
$SG118053 DB	'libvorbis', 00H
	ORG $+2
$SG118088 DB	'bff', 00H
$SG118054 DB	'pcm_s16le', 00H
	ORG $+2
$SG118099 DB	'higher', 00H
	ORG $+1
$SG118113 DB	'8x8', 00H
$SG118055 DB	'libopus', 00H
$SG126254 DB	'atlTraceCOM', 00H
$SG118086 DB	'none', 00H
	ORG $+7
?list_quality@@3QBUCX_DESC@@B DQ FLAT:$SG118090		; list_quality
	DD	01H
	ORG $+4
	DQ	FLAT:$SG118091
	DD	02H
	ORG $+4
	DQ	FLAT:$SG118092
	DD	03H
	ORG $+4
	DQ	FLAT:$SG118093
	DD	04H
	ORG $+4
	DQ	FLAT:$SG118094
	DD	05H
	ORG $+4
	DQ	FLAT:$SG118095
	DD	06H
	ORG $+4
	DQ	FLAT:$SG118096
	DD	07H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG118090 DB	' 1 - best quality', 00H
	ORG $+2
$SG118103 DB	'faster', 00H
	ORG $+1
$SG118114 DB	'4x4', 00H
$SG118091 DB	' 2 - higher', 00H
$SG118117 DB	'16', 00H
	ORG $+1
$SG118092 DB	' 3 - high quality', 00H
	ORG $+2
$SG118118 DB	'32', 00H
	ORG $+1
$SG118093 DB	' 4 - balanced', 00H
	ORG $+2
$SG118094 DB	' 5 - fast', 00H
	ORG $+2
$SG118119 DB	'64', 00H
	ORG $+1
$SG118095 DB	' 6 - faster', 00H
$SG118127 DB	'all', 00H
$SG118096 DB	' 7 - fastest', 00H
	ORG $+3
$SG118098 DB	'best', 00H
	ORG $+3
$SG118100 DB	'high', 00H
	ORG $+3
$SG118101 DB	'balanced', 00H
	ORG $+3
$SG118102 DB	'fast', 00H
	ORG $+3
$SG118109 DB	'Q-pel', 00H
	ORG $+2
$SG118126 DB	'chroma', 00H
	ORG $+1
$SG118131 DB	'box', 00H
$SG118104 DB	'fastest', 00H
$SG118106 DB	'Auto', 00H
	ORG $+3
$SG118107 DB	'full-pel', 00H
	ORG $+3
$SG118112 DB	'16x16', 00H
	ORG $+2
$SG118133 DB	'off', 00H
$SG118108 DB	'half-pel', 00H
	ORG $+3
$SG118134 DB	'x2', 00H
	ORG $+1
$SG126303 DB	'atlTraceQI', 00H
	ORG $+1
$SG118111 DB	'Auto', 00H
	ORG $+3
$SG118116 DB	'auto', 00H
	ORG $+3
$SG118123 DB	'auto', 00H
	ORG $+3
$SG118124 DB	'none', 00H
	ORG $+3
$SG118125 DB	'luma', 00H
	ORG $+3
$SG118129 DB	'none', 00H
	ORG $+3
$SG118137 DB	'simple', 00H
	ORG $+1
$SG118140 DB	'0', 00H
	ORG $+2
$SG118130 DB	'upscale', 00H
$SG118135 DB	'x2.5', 00H
	ORG $+3
$SG118138 DB	'complex', 00H
$SG118141 DB	'90', 00H
	ORG $+1
$SG118142 DB	'180', 00H
$SG118143 DB	'270', 00H
$SG118145 DB	'n', 00H
	ORG $+2
$SG118146 DB	'h', 00H
	ORG $+2
$SG118147 DB	'v', 00H
	ORG $+2
$SG118149 DB	'auto', 00H
	ORG $+3
$SG118150 DB	'simple', 00H
	ORG $+1
$SG118151 DB	'fine', 00H
	ORG $+3
$SG118153 DB	'auto', 00H
	ORG $+3
$SG118154 DB	'none', 00H
	ORG $+3
$SG118155 DB	'sse2', 00H
	ORG $+3
$SG118156 DB	'sse3', 00H
	ORG $+3
$SG118157 DB	'ssse3', 00H
	ORG $+2
$SG118158 DB	'sse41', 00H
	ORG $+2
$SG118159 DB	'avx', 00H
$SG118552 DB	'%s', 00H
	ORG $+1
$SG126352 DB	'atlTraceRegistrar', 00H
	ORG $+2
$SG118160 DB	'avx2', 00H
	ORG $+3
$SG176249 DB	'   %s ', 00H
	ORG $+1
$SG176250 DB	' ', 00H
	ORG $+2
$SG126401 DB	'atlTraceRefcount', 00H
	ORG $+3
$SG176251 DB	'%s', 0aH, 00H
$SG126450 DB	'atlTraceWindowing', 00H
	ORG $+2
$SG176253 DB	' ', 00H
	ORG $+2
$SG126499 DB	'atlTraceControls', 00H
	ORG $+3
$SG176254 DB	', ', 00H
	ORG $+1
$SG126548 DB	'atlTraceHosting', 00H
$SG126597 DB	'atlTraceDBClient', 00H
	ORG $+3
$SG176258 DB	0aH, 00H
	ORG $+2
$SG126646 DB	'atlTraceDBProvider', 00H
	ORG $+1
$SG176259 DB	' ', 00H
	ORG $+2
$SG126695 DB	'atlTraceSnapin', 00H
	ORG $+1
$SG126744 DB	'atlTraceNotImpl', 00H
$SG126793 DB	'atlTraceAllocation', 00H
	ORG $+1
$SG176261 DB	', ', 00H
	ORG $+1
$SG126842 DB	'atlTraceException', 00H
	ORG $+2
$SG176265 DB	0aH, 00H
	ORG $+2
$SG126891 DB	'atlTraceTime', 00H
	ORG $+3
$SG126940 DB	'atlTraceCache', 00H
	ORG $+2
$SG126989 DB	'atlTraceStencil', 00H
$SG127038 DB	'atlTraceString', 00H
	ORG $+1
$SG127087 DB	'atlTraceMap', 00H
$SG176387 DB	'%s', 0aH, 00H
$SG127092 DB	'atlTraceUtil', 00H
	ORG $+3
$SG176248 DB	'                                ', 00H
	ORG $+3
$SG176359 DB	'H.264', 00H
	ORG $+2
$SG152216 DB	'all', 00H
$SG176252 DB	'%s- %s: ', 00H
	ORG $+3
$SG176361 DB	'MPEG2', 00H
	ORG $+2
$SG152217 DB	'cpu', 00H
$SG176255 DB	'(default)', 00H
	ORG $+2
$SG152222 DB	'cpu_in', 00H
	ORG $+1
$SG152227 DB	'mem', 00H
$SG176262 DB	'(default)', 00H
	ORG $+2
$SG176264 DB	'%s%s', 00H
	ORG $+3
$SG176364 DB	'H.264', 00H
	ORG $+2
$SG152230 DB	'io', 00H
	ORG $+1
$SG127141 DB	'atlTraceSecurity', 00H
	ORG $+3
$SG176366 DB	'MPEG2', 00H
	ORG $+2
$SG152233 DB	'fps', 00H
$SG127190 DB	'atlTraceSync', 00H
	ORG $+3
$SG176351 DB	'Usage: QSVEncC [Options] -i <filename> -o <filename>', 0aH
	DB	00H
	ORG $+2
$SG176360 DB	'HEVC', 00H
	ORG $+3
$SG176352 DB	0aH, '%s input can be %s%s%sraw YUV or YUV4MPEG2(y4m) for'
	DB	'mat.', 0aH, 'when raw(default), fps, input-res are also neces'
	DB	'sary.', 0aH, 0aH, 'output format will be automatically set by'
	DB	' the output extension.', 0aH, 'when output filename is set to'
	DB	' "-", H.264/AVC ES output is thrown to stdout.', 0aH, 0aH, 'E'
	DB	'xample:', 0aH, '  QSVEncC -i "<avsfilename>" -o "<outfilename'
	DB	'>"', 0aH, '  avs2pipemod -y4mp "<avsfile>" | QSVEncC --y4m -i'
	DB	' - -o "<outfilename>"', 0aH, 0aH, 'Example for Benchmark:', 0aH
	DB	'  QSVEncC -i "<avsfilename>" --benchmark "<benchmark_result.t'
	DB	'xt>"', 0aH, 00H
	ORG $+5
$SG176353 DB	0aH, 'Information Options: ', 0aH, '-h,-? --help         '
	DB	'           show help', 0aH, '-v,--version                    '
	DB	'show version info', 0aH, '   --check-hw                   che'
	DB	'ck if QuickSyncVideo is available', 0aH, '   --check-lib     '
	DB	'             check lib API version installed', 0aH, '   --che'
	DB	'ck-features [<string>]  check encode/vpp features', 0aH, '   '
	DB	'                              with no option value, result wi'
	DB	'll on stdout,', 0aH, '                                 otherw'
	DB	'ise, it is written to file path set', 0aH, '                 '
	DB	'                and opened by default application.', 0aH, '  '
	DB	'                               when writing to file, txt/html'
	DB	'/csv format', 0aH, '                                 is avail'
	DB	'able, chosen by the extension', 0aH, '                       '
	DB	'          of the output file.', 0aH, '   --check-features-htm'
	DB	'l [<string>]', 0aH, '                                check en'
	DB	'code/vpp features and write html report to', 0aH, '          '
	DB	'                       specified path. With no value, "qsv_ch'
	DB	'eck.html"', 0aH, '                                 will be cr'
	DB	'eated to current directory.', 0aH, '   --check-environment   '
	DB	'       check environment info', 0aH, 0aH, 00H
	ORG $+2
$SG176354 DB	0aH, 'Basic Encoding Options: ', 0aH, '-c,--codec <string'
	DB	'>             set encode codec', 0aH, '                      '
	DB	'           - h264(default), hevc, mpeg2, raw', 0aH, '-i,--inp'
	DB	'ut-file <filename>      set input file name', 0aH, '-o,--outp'
	DB	'ut-file <filename>     set ouput file name', 0aH, 0aH, ' Inpu'
	DB	't formats (will be estimated from extension if not set.)', 0aH
	DB	'   --raw                        set input as raw format', 0aH
	DB	'   --y4m                        set input as y4m format', 0aH
	DB	00H
	ORG $+2
$SG176362 DB	'set codec level', 00H
$SG176363 DB	'--level <string>', 00H
	ORG $+7
$SG176355 DB	0aH, '   --nv12                       set raw input as NV'
	DB	'12 color format,', 0aH, '                                if n'
	DB	'ot specified YV12 is expected', 0aH, '   --tff               '
	DB	'         set as interlaced, top field first', 0aH, '   --bff '
	DB	'                       set as interlaced, bottom field first', 0aH
	DB	'   --fps <int>/<int> or <float> video frame rate (frames per '
	DB	'second)', 0aH, 0aH, '   --input-res <int>x<int>      input re'
	DB	'solution', 0aH, '   --output-res <int>x<int>     output resol'
	DB	'ution', 0aH, '                                if different fr'
	DB	'om input, uses vpp resizing', 0aH, '                         '
	DB	'       if not set, output resolution will be same', 0aH, '   '
	DB	'                             as input (no resize will be done'
	DB	').', 0aH, '   --fixed-func                 use fixed func ins'
	DB	'tead of GPU EU (default:off)', 0aH, 0aH, 00H
	ORG $+1
$SG176365 DB	'HEVC', 00H
	ORG $+7
$SG176356 DB	'Frame buffer Options:', 0aH, ' frame buffers are selecte'
	DB	'd automatically by default.', 0aH, ' d3d9 memory is faster th'
	DB	'an d3d11, so d3d9 frames are used whenever possible,', 0aH, ' '
	DB	'except decode/vpp only mode (= no encoding mode, system frame'
	DB	's are used).', 0aH, ' On particular cases, such as runnning o'
	DB	'n a system with dGPU, or running', 0aH, ' vpp-rotate, will re'
	DB	'quire the uses of d3d11 surface.', 0aH, ' Options below will '
	DB	'change this default behavior.', 0aH, 0aH, '   --disable-d3d  '
	DB	'              disable using d3d surfaces', 0aH, '   --d3d    '
	DB	'                    use d3d9/d3d11 surfaces', 0aH, '   --d3d9'
	DB	'                       use d3d9 surfaces', 0aH, '   --d3d11  '
	DB	'                    use d3d11 surfaces', 0aH, 0aH, 00H
$SG176357 DB	'Encode Mode Options:', 0aH, ' EncMode default: --cqp', 0aH
	DB	'   --cqp <int> or               encode in Constant QP, defaul'
	DB	't %d:%d:%d', 0aH, '         <int>:<int>:<int>      set qp val'
	DB	'ue for i:p:b frame', 0aH, '   --la <int>                   se'
	DB	't bitrate in Lookahead mode (kbps)', 0aH, '   --la-hrd <int> '
	DB	'              set bitrate in HRD-Lookahead mode (kbps)', 0aH, ' '
	DB	'  --icq <int>                  encode in Intelligent Const. Q'
	DB	'uality mode', 0aH, '                                  default'
	DB	' value: %d', 0aH, '   --la-icq <int>               encode in '
	DB	'ICQ mode with Lookahead', 0aH, '                             '
	DB	'     default value: %d', 0aH, '   --cbr <int>                '
	DB	'  set bitrate in CBR mode (kbps)', 0aH, '   --vbr <int>      '
	DB	'            set bitrate in VBR mode (kbps)', 0aH, '   --avbr '
	DB	'<int>                 set bitrate in AVBR mode (kbps)', 0aH, ' '
	DB	'                                AVBR mode is only supported w'
	DB	'ith API v1.3', 0aH, '   --avbr-unitsize <int>        avbr cal'
	DB	'culation period in x100 frames', 0aH, '                      '
	DB	'           default %d (= unit size %d00 frames)', 0aH, '   --'
	DB	'qvbr <int>                 set bitrate in Quality VBR mode.', 0aH
	DB	'                                 requires --qvbr-q option to '
	DB	'be set as well', 0aH, '   --qvbr-q <int>  or           set qu'
	DB	'ality used in qvbr mode. default: %d', 0aH, '   --qvbr-qualit'
	DB	'y <int>          QVBR mode is only supported with API v1.11', 0aH
	DB	'   --vcm <int>                  set bitrate in VCM mode (kbps'
	DB	')', 0aH, 0aH, 00H
	ORG $+1
$SG176358 DB	'Other Encode Options:', 0aH, '   --fallback-rc          '
	DB	'      enable fallback of ratecontrol mode, when', 0aH, '     '
	DB	'                            platform does not support new rat'
	DB	'econtrol modes.', 0aH, '-a,--async-depth                set a'
	DB	'sync depth for QSV pipeline. (0-%d)', 0aH, '                 '
	DB	'                default: 0 (=auto, 4+2*(extra pipeline step))'
	DB	0aH, '   --max-bitrate <int>          set max bitrate(kbps)', 0aH
	DB	'   --qp-min <int> or            set min QP, default 0 (= unse'
	DB	't)', 0aH, '           <int>:<int>:<int>', 0aH, '   --qp-max <'
	DB	'int> or            set max QP, default 0 (= unset)', 0aH, '  '
	DB	'         <int>:<int>:<int>', 0aH, '   --qp-offset <int>[:<int'
	DB	'>][:<int>]...', 0aH, '                                set qp '
	DB	'offset of each pyramid reference layers.', 0aH, '            '
	DB	'                     default 0 (= unset).', 0aH, '-u,--qualit'
	DB	'y <string>           encode quality', 0aH, '                 '
	DB	'                 - best, higher, high, balanced(default)', 0aH
	DB	'                                    fast, faster, fastest', 0aH
	DB	'   --la-depth <int>             set Lookahead Depth, %d-%d', 0aH
	DB	'   --la-window-size <int>       enables Lookahead Windowed Ra'
	DB	'te Control mode,', 0aH, '                                  an'
	DB	'd set the window size in frames.', 0aH, '   --la-quality <str'
	DB	'ing>        set lookahead quality.', 0aH, '                  '
	DB	'               - auto(default), fast, medium, slow', 0aH, '  '
	DB	' --(no-)mbbrc                 enables per macro block rate co'
	DB	'ntrol', 0aH, '                                 default: auto', 0aH
	DB	'   --ref <int>                  reference frames', 0aH, '    '
	DB	'                              default %d (auto)', 0aH, '-b,--'
	DB	'bframes <int>              number of sequential b frames', 0aH
	DB	'                                  default %d(HEVC) / %d(other'
	DB	's)', 0aH, '   --(no-)b-pyramid             enables B-frame py'
	DB	'ramid reference (default:off)', 0aH, '   --(no-)direct-bias-a'
	DB	'djust    lower usage of B frame Direct/Skip type', 0aH, '   -'
	DB	'-gop-len <int>              (max) gop length, default %d (aut'
	DB	'o)', 0aH, '                                  when auto, fps x'
	DB	' 10 will be set.', 0aH, '   --(no-)open-gop              enab'
	DB	'les open gop (default:off)', 0aH, '   --strict-gop           '
	DB	'      force gop structure', 0aH, '   --(no-)i-adapt          '
	DB	'     enables adaptive I frame insert (default:off)', 0aH, '  '
	DB	' --(no-)b-adapt               enables adaptive B frame insert'
	DB	' (default:off)', 0aH, '   --(no-)weightp               enable'
	DB	' weighted prediction for P frame', 0aH, '   --(no-)weightb   '
	DB	'            enable weighted prediction for B frame', 0aH, '  '
	DB	' --(no-)adapt-ltr             enable adaptive LTR frames', 0aH
	DB	'   --(no-)repartition-check     [H.264] enable prediction fro'
	DB	'm small partitions', 0aH, '   --(no-)fade-detect           en'
	DB	'able fade detection', 0aH, '   --trellis <string>           s'
	DB	'et trellis mode used in encoding', 0aH, '                    '
	DB	'             - auto(default), off, i, ip, all', 0aH, '   --mv'
	DB	'-scaling                 set mv cost scaling', 0aH, '        '
	DB	'                         - 0  set MV cost to be 0', 0aH, '   '
	DB	'                              - 1  set MV cost 1/2 of default'
	DB	0aH, '                                 - 2  set MV cost 1/4 of'
	DB	' default', 0aH, '                                 - 3  set MV'
	DB	' cost 1/8 of default', 0aH, '   --slices <int>               '
	DB	'number of slices, default 0 (auto)', 0aH, '   --vbv-bufsize <'
	DB	'int>          set vbv buffer size (kbit) / default: auto', 0aH
	DB	'   --no-deblock                 [h264] disables H.264 deblock'
	DB	' feature', 0aH, '   --tskip                      [hevc] enabl'
	DB	'e transform skip', 0aH, '   --sao <string>               [hev'
	DB	'c]', 0aH, '                                 - auto    default'
	DB	0aH, '                                 - none    disable sao', 0aH
	DB	'                                 - luma    enable sao for lum'
	DB	'a', 0aH, '                                 - chroma  enable s'
	DB	'ao for chroma', 0aH, '                                 - all '
	DB	'    enable sao for luma & chroma', 0aH, '   --ctu <int>      '
	DB	'            [hevc] max ctu size', 0aH, '                     '
	DB	'            - auto(default), 16, 32, 64', 0aH, '   --sharpnes'
	DB	's <int>            [vp8] set sharpness level for vp8 enc', 0aH
	DB	0aH, 00H
	ORG $+3
$SG152238 DB	'gpu', 00H
$SG176367 DB	'set codec profile', 00H
	ORG $+2
$SG177664 DB	'w', 00H
	ORG $+2
$SG176368 DB	'--profile <string>', 00H
	ORG $+1
$SG176369 DB	'HEVC', 00H
	ORG $+3
$SG152245 DB	'queue', 00H
	ORG $+2
$SG177667 DB	0aH, 00H
	ORG $+2
$SG176370 DB	'set codec tier', 00H
	ORG $+1
$SG176371 DB	'--tier <string>', 00H
$SG176373 DB	'--videoformat <string>', 00H
	ORG $+1
$SG176372 DB	0aH, '   --sar <int>:<int>            set Sample Aspect R'
	DB	'atio', 0aH, '   --dar <int>:<int>            set Display Aspe'
	DB	'ct Ratio', 0aH, '   --bluray                     for H.264 bl'
	DB	'uray encoding', 0aH, 0aH, '   --crop <int>,<int>,<int>,<int>', 0aH
	DB	'                                set crop pixels of left, up, '
	DB	'right, bottom.', 0aH, 0aH, 00H
	ORG $+3
$SG176374 DB	'--colormatrix <string>', 00H
	ORG $+1
$SG176375 DB	'--colorprim <string>', 00H
	ORG $+3
$SG176376 DB	'--transfer <string>', 00H
$SG177681 DB	'%s', 0aH, 0aH, 00H
	ORG $+7
$SG176377 DB	'   --aud                        insert aud nal unit to o'
	DB	'uput stream.', 0aH, '   --pic-struct                 insert p'
	DB	'ic-timing SEI with pic_struct.', 0aH, '   --chromaloc <int>  '
	DB	'          set chroma location flag [ 0 ... 5 ]', 0aH, '      '
	DB	'                            default: 0 = unspecified', 0aH, ' '
	DB	'  --fullrange                  set stream as fullrange yuv', 0aH
	DB	'   --max-cll <int>,<int>        set MaxCLL and MaxFall in nit'
	DB	's. e.g. "1000,300"', 0aH, '   --master-display <string>    se'
	DB	't Mastering display data.', 0aH, '      e.g. "G(13250,34500)B'
	DB	'(7500,3000)R(34000,16000)WP(15635,16450)L(10000000,1)"', 0aH, 00H
	ORG $+1
$SG152221 DB	'cpu_enc', 00H
$SG176378 DB	0aH, '   --input-buf <int>            buffer size for inp'
	DB	'ut in frames (%d-%d)', 0aH, '                                '
	DB	' default   hw: %d,  sw: %d', 0aH, '                          '
	DB	'       cannot be used with avqsv reader.', 0aH, 00H
$SG152223 DB	'cpu_aud', 00H
$SG176379 DB	'   --output-buf <int>           buffer size for output i'
	DB	'n MByte', 0aH, '                                 default %d M'
	DB	'B (0-%d)', 0aH, 00H
	ORG $+1
$SG152226 DB	'cpu_out', 00H
$SG176380 DB	'   --mfx-thread <int>          set mfx thread num (-1 (a'
	DB	'uto), 2, 3, ...)', 0aH, '                                 not'
	DB	'e that mfx thread cannot be less than 2.', 0aH, '   --input-t'
	DB	'hread <int>        set input thread num', 0aH, '             '
	DB	'                     0: disable (slow, but less cpu usage)', 0aH
	DB	'                                  1: use one thread', 0aH, ' '
	DB	'  --output-thread <int>        set output thread num', 0aH, ' '
	DB	'                                -1: auto (= default)', 0aH, ' '
	DB	'                                 0: disable (slow, but less m'
	DB	'emory usage)', 0aH, '                                  1: use'
	DB	' one thread', 0aH, '   --min-memory                 minimize '
	DB	'memory usage of QSVEncC.', 0aH, '                            '
	DB	'     same as --output-thread 0 --audio-thread 0', 0aH, '     '
	DB	'                              --mfx-thread 2 -a 1 --input-buf'
	DB	' 1 --output-buf 0', 0aH, '                                 th'
	DB	'is will cause lower performance!', 0aH, '   --max-procfps <in'
	DB	't>         limit processing speed to lower resource usage.', 0aH
	DB	'                                 default:0 (no limit)', 0aH, 00H
	ORG $+3
$SG176381 DB	'   --log <string>               output log to file (txt '
	DB	'or html).', 0aH, '   --log-level <string>         set output '
	DB	'log level', 0aH, '                                 info(defau'
	DB	'lt), warn, error, debug', 0aH, '   --log-framelist <string>  '
	DB	'   output frame info for avqsv reader (for debug)', 0aH, '   '
	DB	'--log-mus-ts <string>         (for debug)', 0aH, '   --log-co'
	DB	'py-framedata <string> (for debug)', 0aH, 00H
$SG177684 DB	0aH, 00H
	ORG $+2
$SG152231 DB	'io_read', 00H
$SG176382 DB	0aH, '   --benchmark <string>         run in benchmark mo'
	DB	'de', 0aH, '                                 and write result '
	DB	'in txt file', 0aH, '   --bench-quality "all" or <string>[,<st'
	DB	'ring>][,<string>]...', 0aH, '                                '
	DB	' default: "best,balanced,fastest"', 0aH, '                   '
	DB	'             list of target quality to check on benchmark', 0aH
	DB	'   --perf-monitor [<string>][,<string>]...', 0aH, '       che'
	DB	'ck performance info of QSVEncC and output to log file', 0aH, ' '
	DB	'      select counter from below, default = all', 0aH, '   --p'
	DB	'erf-monitor-plot [<string>][,<string>]...', 0aH, '       plot'
	DB	' perf monitor realtime (required python, pyqtgraph)', 0aH, ' '
	DB	'      select counter from below, default = cpu,bitrate', 0aH, ' '
	DB	'                                ', 0aH, '     counters for pe'
	DB	'rf-monitor, perf-monitor-plot', 0aH, '                       '
	DB	'          all          ... monitor all info', 0aH, '         '
	DB	'                        cpu_total    ... cpu total usage (%%)'
	DB	0aH, '                                 cpu_kernel   ... cpu ke'
	DB	'rnel usage (%%)', 0aH, '                                 cpu_'
	DB	'main     ... cpu main thread usage (%%)', 0aH, '             '
	DB	'                    cpu_enc      ... cpu encode thread usage '
	DB	'(%%)', 0aH, '                                 cpu_in       ..'
	DB	'. cpu input thread usage (%%)', 0aH, '                       '
	DB	'          cpu_out      ... cpu output thread usage (%%)', 0aH
	DB	'                                 cpu_aud_proc ... cpu aud pro'
	DB	'c thread usage (%%)', 0aH, '                                 '
	DB	'cpu_aud_enc  ... cpu aud enc thread usage (%%)', 0aH, '      '
	DB	'                           cpu          ... monitor all cpu i'
	DB	'nfo', 0aH, '                                 gpu_load    ... '
	DB	'gpu usage (%%)', 0aH, '                                 gpu_c'
	DB	'lock   ... gpu avg clock (%%)', 0aH, '                       '
	DB	'          gpu         ... monitor all gpu info', 0aH, '      '
	DB	'                           queue       ... queue usage', 0aH, ' '
	DB	'                                mem_private ... private memor'
	DB	'y (MB)', 0aH, '                                 mem_virtual .'
	DB	'.. virtual memory (MB)', 0aH, '                              '
	DB	'   mem         ... monitor all memory info', 0aH, '          '
	DB	'                       io_read     ... io read  (MB/s)', 0aH, ' '
	DB	'                                io_write    ... io write (MB/'
	DB	's)', 0aH, '                                 io          ... m'
	DB	'onitor all io info', 0aH, '                                 f'
	DB	'ps         ... encode speed (fps)', 0aH, '                   '
	DB	'              fps_avg     ... encode avg. speed (fps)', 0aH, ' '
	DB	'                                bitrate     ... encode bitrat'
	DB	'e (kbps)', 0aH, '                                 bitrate_avg'
	DB	' ... encode avg. bitrate (kbps)', 0aH, '                     '
	DB	'            frame_out   ... written_frames', 0aH, '          '
	DB	'                       ', 0aH, '   --python <string>         '
	DB	'   set python path for --perf-monitor-plot', 0aH, '          '
	DB	'                       default: python', 0aH, '   --perf-moni'
	DB	'tor-interval <int> set perf monitor check interval (millisec)'
	DB	0aH, '                                 default 250, must be 50'
	DB	' or more', 0aH, '   --(no-)timer-period-tuning   enable(disab'
	DB	'le) timer period tuning', 0aH, '                             '
	DB	'     default: enabled', 0aH, 00H
	ORG $+4
$SG176383 DB	0aH, 'VPP Options:', 0aH, '   --vpp-denoise <int>        '
	DB	'  use vpp denoise, set strength (%d-%d)', 0aH, '   --vpp-mctf'
	DB	' ["auto" or <int>] use vpp motion compensated temporal filter'
	DB	'(mctf)', 0aH, '                                  set strength'
	DB	' (%d-%d), default: %d (auto)', 0aH, '   --vpp-detail-enhance '
	DB	'<int>   use vpp detail enahancer, set strength (%d-%d)', 0aH, ' '
	DB	'  --vpp-deinterlace <string>   set vpp deinterlace mode', 0aH
	DB	'                                 - none     disable deinterla'
	DB	'ce', 0aH, '                                 - normal   normal'
	DB	' deinterlace', 0aH, '                                 - it   '
	DB	'    inverse telecine', 0aH, '                                '
	DB	' - bob      double framerate', 0aH, '   --vpp-image-stab <str'
	DB	'ing>    set image stabilizer mode', 0aH, '                   '
	DB	'              - none, upscale, box', 0aH, '   --vpp-rotate <i'
	DB	'nt>           rotate image', 0aH, '                          '
	DB	'       90, 180, 270.', 0aH, '   --vpp-mirror <string>        '
	DB	'mirror image', 0aH, '                                 - h   m'
	DB	'irror in horizontal direction', 0aH, '                       '
	DB	'          - v   mirror in vertical   direction', 0aH, '   --v'
	DB	'pp-half-turn              half turn video image', 0aH, '     '
	DB	'                            unoptimized and very slow.', 0aH, ' '
	DB	'  --vpp-resize <string>        set scaling quality', 0aH, '  '
	DB	'                               - auto(default)', 0aH, '      '
	DB	'                           - simple   use simple scaling', 0aH
	DB	'                                 - fine     use high quality '
	DB	'scaling', 0aH, '   --vpp-delogo <string>        set delogo fi'
	DB	'le path', 0aH, '   --vpp-delogo-select <string> set target lo'
	DB	'go name or auto select file', 0aH, '                         '
	DB	'        or logo index starting from 1.', 0aH, '   --vpp-delog'
	DB	'o-pos <int>:<int> set delogo pos offset', 0aH, '   --vpp-delo'
	DB	'go-depth <int>     set delogo depth [default:%d]', 0aH, '   -'
	DB	'-vpp-delogo-y  <int>        set delogo y  param', 0aH, '   --'
	DB	'vpp-delogo-cb <int>        set delogo cb param', 0aH, '   --v'
	DB	'pp-delogo-cr <int>        set delogo cr param', 0aH, '   --vp'
	DB	'p-delogo-add             add logo mode', 0aH, 00H
	ORG $+2
$SG127239 DB	'atlTraceISAPI', 00H
	ORG $+2
$SG152218 DB	'cpu_total', 00H
	ORG $+2
$SG177687 DB	0aH, 00H
	ORG $+2
$SG152219 DB	'cpu_kernel', 00H
	ORG $+1
$SG177728 DB	'%s', 00H
	ORG $+1
$SG152220 DB	'cpu_main', 00H
	ORG $+3
$SG177731 DB	'%s', 00H
	ORG $+1
$SG152224 DB	'cpu_aud_proc', 00H
	ORG $+3
$SG152225 DB	'cpu_aud_enc', 00H
$SG177757 DB	'64', 00H
	ORG $+1
$SG152228 DB	'mem_private', 00H
$SG203433 DB	'%s', 00H
	ORG $+1
$SG152229 DB	'mem_virtual', 00H
$SG138334 DB	'S', 00H
	ORG $+2
$SG152232 DB	'io_write', 00H
	ORG $+3
$SG138336 DB	'M', 00H
	ORG $+2
$SG152234 DB	'fps_avg', 00H
$SG152235 DB	'bitrate', 00H
$SG152236 DB	'bitrate_avg', 00H
$SG138338 DB	'D', 00H
	ORG $+2
$SG152237 DB	'frame_out', 00H
	ORG $+2
$SG138340 DB	'B', 00H
	ORG $+2
$SG152239 DB	'gpu_load', 00H
	ORG $+3
$SG138342 DB	'Val', 00H
$SG152240 DB	'gpu_clock', 00H
	ORG $+2
$SG138348 DB	'Delete', 00H
	ORG $+1
$SG114007 DB	'rgb', 00H
$SG152241 DB	'vee_load', 00H
	ORG $+3
$SG113979 DB	'yuv422', 00H
	ORG $+1
$SG114009 DB	'gbr', 00H
$SG152242 DB	'ved_load', 00H
	ORG $+3
$SG113981 DB	'yuv444', 00H
	ORG $+1
$SG114012 DB	'y8', 00H
	ORG $+1
$SG152243 DB	'pcie_load', 00H
	ORG $+2
$SG114001 DB	'rgb24r', 00H
	ORG $+1
$SG139128 DB	'SAM', 00H
$SG152244 DB	've_clock', 00H
	ORG $+7
$SG201489 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xlocale', 00H
$SG177666 DB	'[DEBUG]--->Checking for QSV...', 0aH, 00H
$SG177668 DB	'Software', 00H
	ORG $+3
$SG114002 DB	'rgb32r', 00H
	ORG $+5
$SG177669 DB	'Hardware', 00H
	ORG $+7
$SG177674 DB	'QSV unavailable.', 0aH, 00H
	ORG $+6
$SG177675 DB	'Media SDK %s unavailable.', 0aH, 00H
	ORG $+5
$SG177677 DB	'Media SDK Version: ', 00H
	ORG $+4
$SG177678 DB	'%s API v%d.%d', 0aH, 0aH, 00H
$SG177679 DB	'[DEBUG]--->Supported Enc features:', 0aH, 00H
	ORG $+4
$SG177680 DB	'[DEBUG]--->Supported Enc features size = (%d):', 0aH, 00H
$SG177683 DB	'Supported Vpp features:', 0aH, 00H
	ORG $+3
$SG177685 DB	'%s', 0aH, 0aH, 00H
	ORG $+7
$SG177686 DB	'Supported Decode features:', 0aH, 00H
$SG177688 DB	'%s', 0aH, 0aH, 00H
	ORG $+3
$SG177691 DB	'open', 00H
	ORG $+3
$SG177723 DB	'help', 00H
	ORG $+7
$SG177725 DB	'version', 00H
$SG177727 DB	'check-environment', 00H
	ORG $+6
$SG177730 DB	'check-environment-auo', 00H
	ORG $+2
$SG177733 DB	'Media SDK Version: Hardware API v%d.%d', 0aH, 0aH, 00H
	ORG $+7
$SG177735 DB	'check-features', 00H
	ORG $+1
$SG177739 DB	'check-features-auo', 00H
	ORG $+5
$SG177742 DB	'check-features-html', 00H
	ORG $+4
$SG177747 DB	'check-hw', 00H
	ORG $+7
$SG177748 DB	'hw-check', 00H
	ORG $+7
$SG177751 DB	'Success: QuickSyncVideo (hw encoding) available', 0aH, 00H
	ORG $+7
$SG177752 DB	'Error: QuickSyncVideo (hw encoding) unavailable', 0aH, 00H
	ORG $+7
$SG177755 DB	'lib-check', 00H
	ORG $+6
$SG177756 DB	'check-lib', 00H
	ORG $+6
$SG177760 DB	'libmfxhw%s.dll : v%d.%d', 0aH, 00H
	ORG $+7
$SG177761 DB	'libmfxhw%s.dll : ----', 0aH, 00H
	ORG $+1
$SG177764 DB	'libmfxsw%s.dll : v%d.%d', 0aH, 00H
	ORG $+7
$SG177765 DB	'libmfxsw%s.dll : ----', 0aH, 00H
	ORG $+1
$SG177775 DB	'failed to set signal handler.', 0aH, 00H
	ORG $+1
$SG178000 DB	0aH, 'ERROR: Hardware device was lost or returned an unex'
	DB	'pected error. Recovering...', 0aH, 00H
	ORG $+7
$SG203432 DB	'invalid argument', 00H
	ORG $+7
$SG203434 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG203437 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG203435 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG203436 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG138344 DB	'ForceRemove', 00H
	ORG $+4
$SG138346 DB	'NoRemove', 00H
	ORG $+7
$SG113975 DB	'Invalid', 00H
$SG113976 DB	'nv12', 00H
	ORG $+3
$SG113977 DB	'yv12', 00H
	ORG $+3
$SG113978 DB	'yuy2', 00H
	ORG $+3
$SG113980 DB	'nv16', 00H
	ORG $+3
$SG113982 DB	'yv12(9bit)', 00H
	ORG $+5
$SG113983 DB	'yv12(10bit)', 00H
	ORG $+4
$SG113984 DB	'yv12(12bit)', 00H
	ORG $+4
$SG113985 DB	'yv12(14bit)', 00H
	ORG $+4
$SG113986 DB	'yv12(16bit)', 00H
$SG113987 DB	'p010', 00H
	ORG $+7
$SG113988 DB	'yuv422(9bit)', 00H
	ORG $+3
$SG113989 DB	'yuv422(10bit)', 00H
	ORG $+2
$SG113990 DB	'yuv422(12bit)', 00H
	ORG $+2
$SG113991 DB	'yuv422(14bit)', 00H
	ORG $+2
$SG113992 DB	'yuv422(16bit)', 00H
	ORG $+2
$SG113993 DB	'p210', 00H
	ORG $+3
$SG113994 DB	'yuv444(9bit)', 00H
	ORG $+3
$SG113995 DB	'yuv444(10bit)', 00H
	ORG $+2
$SG113996 DB	'yuv444(12bit)', 00H
	ORG $+2
$SG113997 DB	'yuv444(14bit)', 00H
	ORG $+2
$SG113998 DB	'yuv444(16bit)', 00H
	ORG $+2
$SG113999 DB	'yuva444', 00H
$SG114000 DB	'yuva444(16bit)', 00H
	ORG $+1
$SG114003 DB	'rgb24', 00H
	ORG $+2
$SG114004 DB	'rgb32', 00H
	ORG $+2
$SG114005 DB	'bgr24', 00H
	ORG $+2
$SG114006 DB	'bgr32', 00H
	ORG $+2
$SG114008 DB	'rgba', 00H
	ORG $+3
$SG114010 DB	'gbra', 00H
	ORG $+3
$SG114011 DB	'yc48', 00H
	ORG $+3
$SG114013 DB	'yc16', 00H
	ORG $+3
$SG139121 DB	'AppID', 00H
	ORG $+2
$SG139122 DB	'CLSID', 00H
	ORG $+2
$SG139123 DB	'Component Categories', 00H
	ORG $+3
$SG139124 DB	'FileType', 00H
	ORG $+7
$SG139125 DB	'Interface', 00H
	ORG $+6
$SG139126 DB	'Hardware', 00H
	ORG $+3
$SG139127 DB	'Mime', 00H
	ORG $+7
$SG139129 DB	'SECURITY', 00H
	ORG $+3
$SG139130 DB	'SYSTEM', 00H
	ORG $+5
$SG139131 DB	'Software', 00H
	ORG $+7
$SG139132 DB	'TypeLib', 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	__local_stdio_printf_options
PUBLIC	_vswprintf_s_l
PUBLIC	swprintf_s
PUBLIC	_vfprintf_l
PUBLIC	fprintf
PUBLIC	printf
PUBLIC	_vsnprintf_s_l
PUBLIC	_vsnprintf_s
PUBLIC	_vscprintf_l
PUBLIC	_vscprintf
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	wmemcpy
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy
PUBLIC	?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z	; std::_Narrow_char_traits<char,int>::eq
PUBLIC	?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
PUBLIC	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
PUBLIC	?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0bad_cast@std@@QEAA@XZ			; std::bad_cast::bad_cast
PUBLIC	??1bad_cast@std@@UEAA@XZ			; std::bad_cast::~bad_cast
PUBLIC	??0bad_cast@std@@QEAA@AEBV01@@Z			; std::bad_cast::bad_cast
PUBLIC	??_Gbad_cast@std@@UEAAPEAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	?_Throw_bad_cast@std@@YAXXZ			; std::_Throw_bad_cast
PUBLIC	??1locale@std@@QEAA@XZ				; std::locale::~locale
PUBLIC	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z	; std::locale::_Getfacet
PUBLIC	??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPEA_WPEB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z		; std::_Fgetc<char>
PUBLIC	??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z		; std::_Fputc<char>
PUBLIC	??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z	; std::_Ungetc<char>
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	HRESULT_FROM_WIN32
PUBLIC	_tcscmp
PUBLIC	??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
PUBLIC	??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
PUBLIC	??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?0HH$0A@@?$pair@HH@std@@QEAA@XZ		; std::pair<int,int>::pair<int,int><int,int,0>
PUBLIC	??$?4U?$pair@HH@std@@$0A@@?$pair@HH@std@@QEAAAEAU01@AEBU01@@Z ; std::pair<int,int>::operator=<std::pair<int,int>,0>
PUBLIC	?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z		; ATL::CCRTAllocator::Allocate
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPEAX@Z		; ATL::CCRTAllocator::Free
PUBLIC	??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
PUBLIC	??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEBD@Z	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
PUBLIC	??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEBD@Z	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
PUBLIC	??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ	; ATL::CTraceCategoryEx<2,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEBD@Z	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
PUBLIC	??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEBD@Z	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
PUBLIC	??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
PUBLIC	??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
PUBLIC	??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
PUBLIC	??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
PUBLIC	?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z		; ATL::CTrace::GetCategoryName
PUBLIC	?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z		; ATL::CTrace::TraceV
PUBLIC	?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z		; ATL::CTrace::TraceV
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z	; ATL::CTrace::RegisterCategory
PUBLIC	??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
PUBLIC	?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
PUBLIC	??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>
PUBLIC	??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
PUBLIC	??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEBAPEADXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
PUBLIC	?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free
PUBLIC	??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>
PUBLIC	??0CPreserveLastError@ATL@@QEAA@XZ		; ATL::CPreserveLastError::CPreserveLastError
PUBLIC	??1CPreserveLastError@ATL@@QEAA@XZ		; ATL::CPreserveLastError::~CPreserveLastError
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
PUBLIC	?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
PUBLIC	??0CComCriticalSection@ATL@@QEAA@XZ		; ATL::CComCriticalSection::CComCriticalSection
PUBLIC	??1CComCriticalSection@ATL@@QEAA@XZ		; ATL::CComCriticalSection::~CComCriticalSection
PUBLIC	?Init@CComCriticalSection@ATL@@QEAAJXZ		; ATL::CComCriticalSection::Init
PUBLIC	?Term@CComCriticalSection@ATL@@QEAAJXZ		; ATL::CComCriticalSection::Term
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
PUBLIC	??0_ATL_COM_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
PUBLIC	??1_ATL_COM_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
PUBLIC	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
PUBLIC	??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
PUBLIC	??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
PUBLIC	?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
PUBLIC	?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
PUBLIC	??0CAtlComModule@ATL@@QEAA@XZ			; ATL::CAtlComModule::CAtlComModule
PUBLIC	??1CAtlComModule@ATL@@QEAA@XZ			; ATL::CAtlComModule::~CAtlComModule
PUBLIC	?Term@CAtlComModule@ATL@@QEAAXXZ		; ATL::CAtlComModule::Term
PUBLIC	??0CAtlWinModule@ATL@@QEAA@XZ			; ATL::CAtlWinModule::CAtlWinModule
PUBLIC	??1CAtlWinModule@ATL@@QEAA@XZ			; ATL::CAtlWinModule::~CAtlWinModule
PUBLIC	?Term@CAtlWinModule@ATL@@QEAAXXZ		; ATL::CAtlWinModule::Term
PUBLIC	??$max@I@std@@YAAEBIAEBI0@Z			; std::max<unsigned int>
PUBLIC	??$max@H@std@@YAAEBHAEBH0@Z			; std::max<int>
PUBLIC	??0?$allocator@I@std@@QEAA@XZ			; std::allocator<unsigned int>::allocator<unsigned int>
PUBLIC	?deallocate@?$allocator@I@std@@QEAAXQEAI_K@Z	; std::allocator<unsigned int>::deallocate
PUBLIC	?allocate@?$allocator@I@std@@QEAAPEAI_K@Z	; std::allocator<unsigned int>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SA_KAEBV?$allocator@I@2@@Z ; std::_Default_allocator_traits<std::allocator<unsigned int> >::max_size
PUBLIC	??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ	; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
PUBLIC	?max_size@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::max_size
PUBLIC	?_Destroy@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Destroy
PUBLIC	?_Buy_raw@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Tidy
PUBLIC	?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlength
PUBLIC	?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal
PUBLIC	?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEBAAEBV?$allocator@I@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@I@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<unsigned int> >::_Vector_val<std::_Simple_types<unsigned int> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAAAEAV?$allocator@I@2@XZ ; std::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEBAAEBV?$allocator@I@2@XZ ; std::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Get_first
PUBLIC	??0ParseCmdError@@QEAA@XZ			; ParseCmdError::ParseCmdError
PUBLIC	??1ParseCmdError@@QEAA@XZ			; ParseCmdError::~ParseCmdError
PUBLIC	??0?$allocator@UListData@@@std@@QEAA@XZ		; std::allocator<ListData>::allocator<ListData>
PUBLIC	?deallocate@?$allocator@UListData@@@std@@QEAAXQEAUListData@@_K@Z ; std::allocator<ListData>::deallocate
PUBLIC	?allocate@?$allocator@UListData@@@std@@QEAAPEAUListData@@_K@Z ; std::allocator<ListData>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UListData@@@std@@@std@@SA_KAEBV?$allocator@UListData@@@2@@Z ; std::_Default_allocator_traits<std::allocator<ListData> >::max_size
PUBLIC	??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z ; std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >
PUBLIC	??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >
PUBLIC	?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::begin
PUBLIC	?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::end
PUBLIC	?_Unchecked_begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ ; std::vector<ListData,std::allocator<ListData> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ ; std::vector<ListData,std::allocator<ListData> >::_Unchecked_end
PUBLIC	?max_size@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA_KXZ ; std::vector<ListData,std::allocator<ListData> >::max_size
PUBLIC	?_Destroy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEAUListData@@0@Z ; std::vector<ListData,std::allocator<ListData> >::_Destroy
PUBLIC	?_Buy_raw@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z ; std::vector<ListData,std::allocator<ListData> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z ; std::vector<ListData,std::allocator<ListData> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ ; std::vector<ListData,std::allocator<ListData> >::_Tidy
PUBLIC	?_Xlength@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@CAXXZ ; std::vector<ListData,std::allocator<ListData> >::_Xlength
PUBLIC	?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::_Getal
PUBLIC	?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEBAAEBV?$allocator@UListData@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<ListData> >::_Vector_val<std::_Simple_types<ListData> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UListData@@@2@XZ ; std::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UListData@@@2@XZ ; std::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1>::_Get_first
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >
PUBLIC	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEBAPEBUListData@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Unwrapped
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >
PUBLIC	??0?$initializer_list@UListData@@@std@@QEAA@PEBUListData@@0@Z ; std::initializer_list<ListData>::initializer_list<ListData>
PUBLIC	?begin@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ ; std::initializer_list<ListData>::begin
PUBLIC	?end@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ ; std::initializer_list<ListData>::end
PUBLIC	??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z ; make_vector<unsigned int,2>
PUBLIC	?deallocate@?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@QEAAXQEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@_K@Z ; std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
PUBLIC	?_Move_construct@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Move_construct
PUBLIC	??0?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?size@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::size
PUBLIC	??A?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBAAEBU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@_K@Z ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator[]
PUBLIC	?_Destroy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@0@Z ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Destroy
PUBLIC	?_Tidy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Tidy
PUBLIC	?_Getal@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?_Take_contents@?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Take_contents
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Get_first
PUBLIC	?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z	; std::allocator<unsigned __int64>::deallocate
PUBLIC	??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
PUBLIC	?_Destroy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K0@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Destroy
PUBLIC	?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Tidy
PUBLIC	?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first
PUBLIC	??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ ; std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??_G?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAAPEAXI@Z ; std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
PUBLIC	?parse_print_options@@YAHPEBD0@Z		; parse_print_options
PUBLIC	?run_encode@@YAHPEAUsInputParams@@@Z		; run_encode
PUBLIC	??R?$default_delete@VCQSVPipeline@@@std@@QEBAXPEAVCQSVPipeline@@@Z ; std::default_delete<CQSVPipeline>::operator()
PUBLIC	??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
PUBLIC	??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
PUBLIC	??B?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBA_NXZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator bool
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAAAEAU?$default_delete@VCQSVPipeline@@@2@XZ ; std::_Compressed_pair<std::default_delete<CQSVPipeline>,CQSVPipeline *,1>::_Get_first
PUBLIC	??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> ><std::default_delete<CQSVPipeline>,0>
PUBLIC	?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z ; run_benchmark
PUBLIC	??0?$allocator@U?$pair@HH@std@@@std@@QEAA@XZ	; std::allocator<std::pair<int,int> >::allocator<std::pair<int,int> >
PUBLIC	?deallocate@?$allocator@U?$pair@HH@std@@@std@@QEAAXQEAU?$pair@HH@2@_K@Z ; std::allocator<std::pair<int,int> >::deallocate
PUBLIC	?allocate@?$allocator@U?$pair@HH@std@@@std@@QEAAPEAU?$pair@HH@2@_K@Z ; std::allocator<std::pair<int,int> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@HH@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<int,int> > >::max_size
PUBLIC	??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
PUBLIC	??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
PUBLIC	?_Unchecked_begin@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_end
PUBLIC	?size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::size
PUBLIC	?max_size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::max_size
PUBLIC	??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::operator[]
PUBLIC	?_Destroy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEAU?$pair@HH@2@0@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Destroy
PUBLIC	?_Buy_raw@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@CAXXZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Xlength
PUBLIC	?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::pair<int,int> > >::_Vector_val<std::_Simple_types<std::pair<int,int> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1>::_Get_first
PUBLIC	??0?$initializer_list@U?$pair@HH@std@@@std@@QEAA@PEBU?$pair@HH@1@0@Z ; std::initializer_list<std::pair<int,int> >::initializer_list<std::pair<int,int> >
PUBLIC	?begin@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::initializer_list<std::pair<int,int> >::begin
PUBLIC	?end@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::initializer_list<std::pair<int,int> >::end
PUBLIC	??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z	; std::pair<int,int>::pair<int,int><int,int,0>
PUBLIC	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
PUBLIC	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
PUBLIC	??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
PUBLIC	?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
PUBLIC	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
PUBLIC	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
PUBLIC	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
PUBLIC	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
PUBLIC	?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
PUBLIC	?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
PUBLIC	?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::overflow
PUBLIC	?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::basic_filebuf<char,std::char_traits<char> >::underflow
PUBLIC	?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
PUBLIC	?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::xsputn
PUBLIC	?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
PUBLIC	?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
PUBLIC	?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
PUBLIC	?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::basic_filebuf<char,std::char_traits<char> >::sync
PUBLIC	?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::imbue
PUBLIC	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
PUBLIC	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
PUBLIC	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
PUBLIC	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
PUBLIC	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
PUBLIC	??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$allocator@UCX_DESC@@@std@@QEAA@XZ		; std::allocator<CX_DESC>::allocator<CX_DESC>
PUBLIC	?deallocate@?$allocator@UCX_DESC@@@std@@QEAAXQEAUCX_DESC@@_K@Z ; std::allocator<CX_DESC>::deallocate
PUBLIC	?allocate@?$allocator@UCX_DESC@@@std@@QEAAPEAUCX_DESC@@_K@Z ; std::allocator<CX_DESC>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SA_KAEBV?$allocator@UCX_DESC@@@2@@Z ; std::_Default_allocator_traits<std::allocator<CX_DESC> >::max_size
PUBLIC	??0?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::vector<CX_DESC,std::allocator<CX_DESC> >
PUBLIC	??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::~vector<CX_DESC,std::allocator<CX_DESC> >
PUBLIC	?push_back@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::push_back
PUBLIC	?size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::size
PUBLIC	?max_size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::max_size
PUBLIC	?capacity@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::capacity
PUBLIC	??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::operator[]
PUBLIC	?_Umove@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAPEAUCX_DESC@@PEAU3@00@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00U?$integral_constant@_N$00@2@@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@0@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBA_K_K@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXQEAUCX_DESC@@_K1@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Change_array
PUBLIC	?_Tidy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Tidy
PUBLIC	?_Xlength@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@CAXXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Orphan_range
PUBLIC	?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
PUBLIC	?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAAEBV?$allocator@UCX_DESC@@@2@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<CX_DESC> >::_Vector_val<std::_Simple_types<CX_DESC> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UCX_DESC@@@2@XZ ; std::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UCX_DESC@@@2@XZ ; std::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1>::_Get_first
PUBLIC	?run@@YAHHQEAPEAD@Z				; run
PUBLIC	??0?$allocator@PEBD@std@@QEAA@XZ		; std::allocator<char const *>::allocator<char const *>
PUBLIC	?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ; std::allocator<char const *>::deallocate
PUBLIC	?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z	; std::allocator<char const *>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::max_size
PUBLIC	??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
PUBLIC	?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::push_back
PUBLIC	?data@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDXZ ; std::vector<char const *,std::allocator<char const *> >::data
PUBLIC	?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ; std::vector<char const *,std::allocator<char const *> >::max_size
PUBLIC	?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ; std::vector<char const *,std::allocator<char const *> >::capacity
PUBLIC	?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z ; std::vector<char const *,std::allocator<char const *> >::_Calculate_growth
PUBLIC	?_Buy_raw@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z ; std::vector<char const *,std::allocator<char const *> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z ; std::vector<char const *,std::allocator<char const *> >::_Buy_nonzero
PUBLIC	?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z ; std::vector<char const *,std::allocator<char const *> >::_Change_array
PUBLIC	?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ ; std::vector<char const *,std::allocator<char const *> >::_Tidy
PUBLIC	?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ ; std::vector<char const *,std::allocator<char const *> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range
PUBLIC	?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
PUBLIC	?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<char const *> >::_Vector_val<std::_Simple_types<char const *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first
PUBLIC	??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z ; std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> ><char * * const,void>
PUBLIC	main
PUBLIC	??$_Unfancy_maybe_null@PEBD@std@@YAPEAPEBDPEAPEBD@Z ; std::_Unfancy_maybe_null<char const *>
PUBLIC	??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::emplace_back<char const * const &>
PUBLIC	??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z	; std::forward<char const * const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Emplace_back_with_unused_capacity<char const * const &>
PUBLIC	??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z	; std::_Unfancy<char const *>
PUBLIC	??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const * const &>
PUBLIC	??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char const *>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$emplace_back@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::emplace_back<CX_DESC const &>
PUBLIC	??$forward@AEBUCX_DESC@@@std@@YAAEBUCX_DESC@@AEBU1@@Z ; std::forward<CX_DESC const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXAEBUCX_DESC@@@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Emplace_back_with_unused_capacity<CX_DESC const &>
PUBLIC	??$_Unfancy@UCX_DESC@@@std@@YAPEAUCX_DESC@@PEAU1@@Z ; std::_Unfancy<CX_DESC>
PUBLIC	??$construct@UCX_DESC@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SAXAEAV?$allocator@UCX_DESC@@@1@QEAUCX_DESC@@AEBU3@@Z ; std::_Default_allocator_traits<std::allocator<CX_DESC> >::construct<CX_DESC,CX_DESC const &>
PUBLIC	??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Emplace_reallocate<CX_DESC const &>
PUBLIC	??$?0UCX_DESC@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UCX_DESC@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CX_DESC>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1>::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1><>
PUBLIC	??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ ; std::fpos<_Mbstatet>::state
PUBLIC	??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ		; std::fpos<_Mbstatet>::operator __int64
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z	; std::_Max_value<char *>
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ; std::pointer_traits<char *>::pointer_to
PUBLIC	??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0U?$pair@HH@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@HH@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<int,int> >
PUBLIC	??$?0AEBV?$allocator@U?$pair@HH@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1>::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1><std::allocator<std::pair<int,int> > const &>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Range_construct_or_tidy<std::pair<int,int> const *>
PUBLIC	??$?0U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$move@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z ; std::move<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
PUBLIC	??$?0V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Compressed_pair<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1><std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@0@AEBV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<ListData> > const >
PUBLIC	??$?0UListData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UListData@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><ListData>
PUBLIC	??$?0AEBV?$allocator@UListData@@@std@@$$V@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@UListData@@@1@@Z ; std::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1>::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1><std::allocator<ListData> const &>
PUBLIC	??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z ; std::vector<ListData,std::allocator<ListData> >::_Range_construct_or_tidy<ListData const *>
PUBLIC	??$?0I@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@I@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned int>
PUBLIC	??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z		; ATL::AtlMultiply<unsigned __int64>
PUBLIC	??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$addressof@D@std@@YAPEADAEAD@Z		; std::addressof<char>
PUBLIC	??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z ; std::addressof<std::codecvt<char,char,_Mbstatet> const >
PUBLIC	??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Max_value<unsigned __int64>
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
PUBLIC	??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z ; std::_Destroy_range<std::allocator<char const *> >
PUBLIC	??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z		; std::_Get_size_of_n<32>
PUBLIC	??$_Destroy_range@V?$allocator@UCX_DESC@@@std@@@std@@YAXPEAUCX_DESC@@QEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z ; std::_Destroy_range<std::allocator<CX_DESC> >
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@HH@std@@@std@@@std@@YAXPEAU?$pair@HH@0@QEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<int,int> > >
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@QEAU10@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Destroy_range@V?$allocator@UListData@@@std@@@std@@YAXPEAUListData@@QEAU1@AEAV?$allocator@UListData@@@0@@Z ; std::_Destroy_range<std::allocator<ListData> >
PUBLIC	??$_Get_size_of_n@$03@std@@YA_K_K@Z		; std::_Get_size_of_n<4>
PUBLIC	??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPEAIQEAIAEAV?$allocator@I@0@@Z ; std::_Destroy_range<std::allocator<unsigned int> >
PUBLIC	??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ; std::default_delete<std::_Facet_base>::operator()
PUBLIC	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
PUBLIC	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
PUBLIC	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
PUBLIC	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
PUBLIC	??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > > >
PUBLIC	??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@$0A@@std@@YAPEBUListData@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,0>
PUBLIC	??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> ><unsigned int const *,void>
PUBLIC	??$?0AEAPEAVCQSVPipeline@@@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCQSVPipeline@@@Z ; std::_Compressed_pair<std::default_delete<CQSVPipeline>,CQSVPipeline *,1>::_Compressed_pair<std::default_delete<CQSVPipeline>,CQSVPipeline *,1><CQSVPipeline * &>
PUBLIC	??$forward@H@std@@YA$$QEAHAEAH@Z		; std::forward<int>
PUBLIC	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
PUBLIC	??$?0AEBV?$allocator@PEBD@std@@$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEBD@1@@Z ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1><std::allocator<char const *> const &>
PUBLIC	??$_Adl_verify_range@PEAPEADPEAPEAD@std@@YAXAEBQEAPEAD0@Z ; std::_Adl_verify_range<char * *,char * *>
PUBLIC	??$_Get_unwrapped@PEAD@std@@YAPEAPEADQEAPEAD@Z	; std::_Get_unwrapped<char *>
PUBLIC	??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z ; std::vector<char const *,std::allocator<char const *> >::_Range_construct_or_tidy<char * *>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@AEBV?$allocator@U?$pair@HH@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@HH@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::pair<int,int> > const &>
PUBLIC	??$distance@PEBU?$pair@HH@std@@@std@@YA_JPEBU?$pair@HH@0@0@Z ; std::distance<std::pair<int,int> const *>
PUBLIC	??1?$_Tidy_guard@V?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > > >::~_Tidy_guard<std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > > >
PUBLIC	??$_Ucopy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAPEAU?$pair@HH@1@PEBU21@0PEAU21@@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Ucopy<std::pair<int,int> const *>
PUBLIC	??$forward@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z ; std::forward<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$forward@AEBV?$allocator@UListData@@@std@@@std@@YAAEBV?$allocator@UListData@@@0@AEBV10@@Z ; std::forward<std::allocator<ListData> const &>
PUBLIC	??$distance@PEBUListData@@@std@@YA_JPEBUListData@@0@Z ; std::distance<ListData const *>
PUBLIC	??1?$_Tidy_guard@V?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<ListData,std::allocator<ListData> > >::~_Tidy_guard<std::vector<ListData,std::allocator<ListData> > >
PUBLIC	??$_Ucopy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAPEAUListData@@PEBU2@0PEAU2@@Z ; std::vector<ListData,std::allocator<ListData> >::_Ucopy<ListData const *>
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Unfancy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@YAPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@PEAU10@@Z ; std::_Unfancy<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$destroy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@QEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
PUBLIC	??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::_Facet_base *,std::_Facet_base *>
PUBLIC	??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z ; std::_Uninitialized_move<char const * *,std::allocator<char const *> >
PUBLIC	??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z		; std::_Get_size_of_n<40>
PUBLIC	??$_Uninitialized_move@PEAUCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@YAPEAUCX_DESC@@QEAU1@0PEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z ; std::_Uninitialized_move<CX_DESC *,std::allocator<CX_DESC> >
PUBLIC	??$_Unfancy@UListData@@@std@@YAPEAUListData@@PEAU1@@Z ; std::_Unfancy<ListData>
PUBLIC	??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
PUBLIC	??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z		; std::_Get_size_of_n<24>
PUBLIC	??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
PUBLIC	??$?0AEBV?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@I@1@@Z ; std::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1><std::allocator<unsigned int> const &>
PUBLIC	??$_Adl_verify_range@PEBIPEBI@std@@YAXAEBQEBI0@Z ; std::_Adl_verify_range<unsigned int const *,unsigned int const *>
PUBLIC	??$_Get_unwrapped@$$CBI@std@@YAPEBIQEBI@Z	; std::_Get_unwrapped<unsigned int const >
PUBLIC	??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Range_construct_or_tidy<unsigned int const *>
PUBLIC	??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::forward<CQSVPipeline * &>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$forward@AEBV?$allocator@PEBD@std@@@std@@YAAEBV?$allocator@PEBD@0@AEBV10@@Z ; std::forward<std::allocator<char const *> const &>
PUBLIC	??$_Verify_range@PEAD@std@@YAXQEBQEAD0@Z	; std::_Verify_range<char *>
PUBLIC	??$distance@PEAPEAD@std@@YA_JPEAPEAD0@Z		; std::distance<char * *>
PUBLIC	??1?$_Tidy_guard@V?$vector@PEBDV?$allocator@PEBD@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<char const *,std::allocator<char const *> > >::~_Tidy_guard<std::vector<char const *,std::allocator<char const *> > >
PUBLIC	??$_Ucopy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEAD0PEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Ucopy<char * *>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z ; std::_Uninitialized_copy<std::pair<int,int> const *,std::allocator<std::pair<int,int> > >
PUBLIC	??$_Uninitialized_copy@PEBUListData@@V?$allocator@UListData@@@std@@@std@@YAPEAUListData@@QEBU1@0PEAU1@AEAV?$allocator@UListData@@@0@@Z ; std::_Uninitialized_copy<ListData const *,std::allocator<ListData> >
PUBLIC	??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z	; std::_Get_unwrapped<char const *>
PUBLIC	??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z ; std::_Copy_memmove<char const * *,char const * *>
PUBLIC	??$_Get_unwrapped@UCX_DESC@@@std@@YAPEAUCX_DESC@@QEAU1@@Z ; std::_Get_unwrapped<CX_DESC>
PUBLIC	??$_Copy_memmove@PEAUCX_DESC@@PEAU1@@std@@YAPEAUCX_DESC@@PEAU1@00@Z ; std::_Copy_memmove<CX_DESC *,CX_DESC *>
PUBLIC	??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned __int64>
PUBLIC	??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z ; std::_Destroy_range<std::allocator<unsigned __int64> >
PUBLIC	??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ; std::forward<std::_Facet_base * &>
PUBLIC	??$forward@AEBV?$allocator@I@std@@@std@@YAAEBV?$allocator@I@0@AEBV10@@Z ; std::forward<std::allocator<unsigned int> const &>
PUBLIC	??$_Verify_range@I@std@@YAXQEBI0@Z		; std::_Verify_range<unsigned int>
PUBLIC	??$distance@PEBI@std@@YA_JPEBI0@Z		; std::distance<unsigned int const *>
PUBLIC	??1?$_Tidy_guard@V?$vector@IV?$allocator@I@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<unsigned int,std::allocator<unsigned int> > >::~_Tidy_guard<std::vector<unsigned int,std::allocator<unsigned int> > >
PUBLIC	??$_Ucopy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAPEAIPEBI0PEAI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ucopy<unsigned int const *>
PUBLIC	??$_Uninitialized_copy@PEAPEADV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEAD0PEAPEBDAEAV?$allocator@PEBD@0@@Z ; std::_Uninitialized_copy<char * *,std::allocator<char const *> >
PUBLIC	??$_Get_unwrapped@$$CBU?$pair@HH@std@@@std@@YAPEBU?$pair@HH@0@QEBU10@@Z ; std::_Get_unwrapped<std::pair<int,int> const >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@PEAU?$pair@HH@1@AEAV?$allocator@U?$pair@HH@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::~_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAPEAU?$pair@HH@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::_Release
PUBLIC	??$_Emplace_back@AEBU?$pair@HH@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAXAEBU?$pair@HH@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::_Emplace_back<std::pair<int,int> const &>
PUBLIC	??$_Get_unwrapped@$$CBUListData@@@std@@YAPEBUListData@@QEBU1@@Z ; std::_Get_unwrapped<ListData const >
PUBLIC	??$_Copy_memmove@PEBUListData@@PEAU1@@std@@YAPEAUListData@@PEBU1@0PEAU1@@Z ; std::_Copy_memmove<ListData const *,ListData *>
PUBLIC	??$_Uninitialized_copy@PEBIV?$allocator@I@std@@@std@@YAPEAIQEBI0PEAIAEAV?$allocator@I@0@@Z ; std::_Uninitialized_copy<unsigned int const *,std::allocator<unsigned int> >
PUBLIC	??$_Copy_memmove@PEAPEADPEAPEBD@std@@YAPEAPEBDPEAPEAD0PEAPEBD@Z ; std::_Copy_memmove<char * *,char const * *>
PUBLIC	??$_Unfancy@U?$pair@HH@std@@@std@@YAPEAU?$pair@HH@0@PEAU10@@Z ; std::_Unfancy<std::pair<int,int> >
PUBLIC	??$forward@AEBU?$pair@HH@std@@@std@@YAAEBU?$pair@HH@0@AEBU10@@Z ; std::forward<std::pair<int,int> const &>
PUBLIC	??$construct@U?$pair@HH@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@HH@std@@@1@QEAU?$pair@HH@1@AEBU31@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<int,int> > >::construct<std::pair<int,int>,std::pair<int,int> const &>
PUBLIC	??$_Unfancy@I@std@@YAPEAIPEAI@Z			; std::_Unfancy<unsigned int>
PUBLIC	??$_Copy_memmove@PEBIPEAI@std@@YAPEAIPEBI0PEAI@Z ; std::_Copy_memmove<unsigned int const *,unsigned int *>
PUBLIC	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast@			; `string'
PUBLIC	_TI2?AVbad_cast@std@@
PUBLIC	_CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0GI@PBEGAEEH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0GI@HCALAGOG@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_13COJANIEC@?$AA0@				; `string'
PUBLIC	??_C@_1OE@BPCMJDLP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
PUBLIC	?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
PUBLIC	?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
PUBLIC	?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
PUBLIC	?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
PUBLIC	?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
PUBLIC	?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
PUBLIC	?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
PUBLIC	?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
PUBLIC	?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
PUBLIC	?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
PUBLIC	?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
PUBLIC	?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
PUBLIC	?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
PUBLIC	?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
PUBLIC	?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
PUBLIC	?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
PUBLIC	?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
PUBLIC	?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
PUBLIC	?m_nLevel@CTrace@ATL@@1IA			; ATL::CTrace::m_nLevel
PUBLIC	?m_nCategory@CTrace@ATL@@1IA			; ATL::CTrace::m_nCategory
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ ; `string'
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@GMIHPBDM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	??_C@_1OC@KMMBJFLB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0HB@NHAHFMOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0EA@EJEMLPD@ERROR?5?3?5Unable?5to?5initialize?5cr@ ; `string'
PUBLIC	?_AtlComModule@ATL@@3VCAtlComModule@1@A		; ATL::_AtlComModule
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	??_C@_0ED@GFNHMOFC@ERROR?5?3?5Unable?5to?5initialize?5cr@ ; `string'
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BLO@LPKJDEKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1JO@DHPHBBCK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1MM@CFLCIPDM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1DEA@ECHCKIDC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_1OK@ENELOBIL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
PUBLIC	??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0BP@PFIPNLNI@front?$CI?$CJ?5called?5on?5empty?5string@ ; `string'
PUBLIC	??_C@_1LC@BJDDPGPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1EC@DINNLDHA@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@	; `string'
PUBLIC	??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ ; `string'
PUBLIC	??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ ; `string'
PUBLIC	??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ ; `string'
PUBLIC	??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ofstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3fe0000000000000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	atexit:PROC
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp_signal:PROC
EXTRN	__imp__calloc_dbg:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp__CrtDbgReportW:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__imp_free:PROC
EXTRN	__imp_malloc:PROC
EXTRN	__imp_exit:PROC
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp___stdio_common_vswprintf_s:PROC
EXTRN	__imp__get_stream_buffer_pointers:PROC
EXTRN	__imp_fopen_s:PROC
EXTRN	__imp_fclose:PROC
EXTRN	__imp_fflush:PROC
EXTRN	__imp_fgetc:PROC
EXTRN	__imp_fgetpos:PROC
EXTRN	__imp_fputc:PROC
EXTRN	__imp_fread:PROC
EXTRN	__imp_fsetpos:PROC
EXTRN	__imp__fseeki64:PROC
EXTRN	__imp_fwrite:PROC
EXTRN	__imp_setvbuf:PROC
EXTRN	__imp_ungetc:PROC
EXTRN	__imp__lock_file:PROC
EXTRN	__imp__unlock_file:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	__imp___stdio_common_vsprintf:PROC
EXTRN	__imp___stdio_common_vsnprintf_s:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	__imp_wcscpy_s:PROC
EXTRN	__imp_wcslen:PROC
EXTRN	strlen:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Ebad_cast@std@@UEAAPEAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	_Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ:PROC
EXTRN	__imp_??Bid@locale@std@@QEAA_KXZ:PROC
EXTRN	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ:PROC ; std::locale::_Getgloballocale
EXTRN	__imp_?always_noconv@codecvt_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z:PROC
EXTRN	__imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z:PROC
EXTRN	__imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z:PROC
EXTRN	__imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z:PROC
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEBA?AVlocale@2@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ:PROC
EXTRN	__imp_?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ:PROC
EXTRN	__imp_?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ:PROC
EXTRN	__imp_?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAPEAD0PEAH001@Z:PROC
EXTRN	__imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z:PROC
EXTRN	__imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	__imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:PROC
EXTRN	__imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z:PROC	; std::_Fiopen
EXTRN	__imp__localtime64:PROC
EXTRN	__imp__time64:PROC
EXTRN	__imp_DecodePointer:PROC
EXTRN	__imp_RaiseException:PROC
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_SetLastError:PROC
EXTRN	__imp_InitializeCriticalSectionEx:PROC
EXTRN	__imp_DeleteCriticalSection:PROC
EXTRN	__imp_UnregisterClassA:PROC
EXTRN	__imp_MultiByteToWideChar:PROC
EXTRN	__imp_ShellExecuteA:PROC
EXTRN	__imp_FindExecutableA:PROC
EXTRN	__imp__mbscmp:PROC
EXTRN	__imp_PathFileExistsA:PROC
EXTRN	?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z:PROC ; tchar_to_string
EXTRN	?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z:PROC ; tchar_to_string
EXTRN	?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ:PROC ; strsprintf
EXTRN	?rgy_print_stderr@@YAHHPEBDPEAX@Z:PROC		; rgy_print_stderr
EXTRN	?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z:PROC ; getOSVersion
EXTRN	?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z:PROC ; getEnviromentInfo
EXTRN	?init_qsvp_prm@@YAXPEAUsInputParams@@@Z:PROC	; init_qsvp_prm
EXTRN	?MemTypeToStr@@YAPEBDI@Z:PROC			; MemTypeToStr
EXTRN	?get_mfx_libhw_version@@YA?ATmfxVersion@@XZ:PROC ; get_mfx_libhw_version
EXTRN	?get_mfx_libsw_version@@YA?ATmfxVersion@@XZ:PROC ; get_mfx_libsw_version
EXTRN	?check_lib_version@@YAHTmfxVersion@@0@Z:PROC	; check_lib_version
EXTRN	?MakeFeatureListStr@@YA?AV?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@W4FeatureListStrType@@@Z:PROC ; MakeFeatureListStr
EXTRN	?MakeFeatureListStr@@YA?AV?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@W4FeatureListStrType@@AEBV?$vector@IV?$allocator@I@std@@@2@@Z:PROC ; MakeFeatureListStr
EXTRN	?MakeVppFeatureStr@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FeatureListStrType@@@Z:PROC ; MakeVppFeatureStr
EXTRN	?MakeDecFeatureStr@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FeatureListStrType@@@Z:PROC ; MakeDecFeatureStr
EXTRN	??0CQSVPipeline@@QEAA@XZ:PROC			; CQSVPipeline::CQSVPipeline
EXTRN	?cmd_short_opt_to_long@@YAPEBDD@Z:PROC		; cmd_short_opt_to_long
EXTRN	?GetQSVEncVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; GetQSVEncVersion
EXTRN	?parse_cmd@@YAHPEAUsInputParams@@QEAPEBDHAEAUParseCmdError@@_N@Z:PROC ; parse_cmd
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z:PROC ; std::basic_filebuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z:PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__chkstk:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A:QWORD
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B DB 038H DUP (?) ; CspMatrixList
?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B DB 03cH DUP (?) ; CspTransferList
?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B DB 030H DUP (?) ; CspColorprimList
_BSS	ENDS
;	COMDAT ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A
_BSS	SEGMENT
?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceGeneral
_BSS	ENDS
;	COMDAT ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A
_BSS	SEGMENT
?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCOM
_BSS	ENDS
;	COMDAT ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A
_BSS	SEGMENT
?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceQI
_BSS	ENDS
;	COMDAT ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A
_BSS	SEGMENT
?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRegistrar
_BSS	ENDS
;	COMDAT ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A
_BSS	SEGMENT
?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRefcount
_BSS	ENDS
;	COMDAT ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A
_BSS	SEGMENT
?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceWindowing
_BSS	ENDS
;	COMDAT ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A
_BSS	SEGMENT
?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceControls
_BSS	ENDS
;	COMDAT ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A
_BSS	SEGMENT
?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceHosting
_BSS	ENDS
;	COMDAT ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBClient
_BSS	ENDS
;	COMDAT ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBProvider
_BSS	ENDS
;	COMDAT ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSnapin
_BSS	ENDS
;	COMDAT ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceNotImpl
_BSS	ENDS
;	COMDAT ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceAllocation
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceTime
_BSS	ENDS
;	COMDAT ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCache
_BSS	ENDS
;	COMDAT ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceStencil
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceMap
_BSS	ENDS
;	COMDAT ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceUtil
_BSS	ENDS
;	COMDAT ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSecurity
_BSS	ENDS
;	COMDAT ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSync
_BSS	ENDS
;	COMDAT ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceISAPI
_BSS	ENDS
;	COMDAT ?m_nLevel@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLevel@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLevel
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_AtlComModule@ATL@@3VCAtlComModule@1@A
_BSS	SEGMENT
?_AtlComModule@ATL@@3VCAtlComModule@1@A DB 048H DUP (?)	; ATL::_AtlComModule
_BSS	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 048H DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
_BSS	SEGMENT
?version@dtl@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B DB 028H DUP (?) ; dtl::version
?g_signal_abort@@3_NA DB 01H DUP (?)			; g_signal_abort
_BSS	ENDS
;	COMDAT ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A
_BSS	SEGMENT
?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A DQ 01H DUP (?) ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vswprintf_s_l DD imagerel $LN5
	DD	imagerel $LN5+133
	DD	imagerel $unwind$_vswprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$swprintf_s DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$swprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fprintf DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$fprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN3
	DD	imagerel $LN3+129
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsnprintf_s_l DD imagerel $LN5
	DD	imagerel $LN5+149
	DD	imagerel $unwind$_vsnprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsnprintf_s DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$_vsnprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscprintf_l DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$_vscprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscprintf DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$_vscprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemcpy DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$wmemcpy
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+182
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iterator_base12@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??1_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel $LN8
	DD	imagerel $LN8+251
	DD	imagerel $unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD imagerel $LN15
	DD	imagerel $LN15+270
	DD	imagerel $unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+77
	DD	imagerel $unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z DD imagerel $LN7
	DD	imagerel $LN7+102
	DD	imagerel $unwind$?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+233
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+220
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+163
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+381
	DD	imagerel $unwind$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+153
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+270
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+198
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+236
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z DD imagerel $LN4
	DD	imagerel $LN4+213
	DD	imagerel $unwind$?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ DD imagerel $LN12
	DD	imagerel $LN12+188
	DD	imagerel $unwind$?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+153
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z DD imagerel $LN7
	DD	imagerel $LN7+219
	DD	imagerel $unwind$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+189
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+190
	DD	imagerel $unwind$?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_cast@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_cast@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_cast@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_cast@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_cast@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_cast@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1locale@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+121
	DD	imagerel $unwind$??1locale@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD imagerel $LN8
	DD	imagerel $LN8+189
	DD	imagerel $unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD imagerel $LN12
	DD	imagerel $LN12+557
	DD	imagerel $unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Maklocwcs@std@@YAPEA_WPEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+135
	DD	imagerel $unwind$?_Maklocwcs@std@@YAPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z DD imagerel $LN5
	DD	imagerel $LN5+83
	DD	imagerel $unwind$??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$localtime DD imagerel localtime
	DD	imagerel localtime+47
	DD	imagerel $unwind$localtime
$pdata$time DD	imagerel time
	DD	imagerel time+47
	DD	imagerel $unwind$time
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+387
	DD	imagerel $unwind$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+387
	DD	imagerel $unwind$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$HRESULT_FROM_WIN32 DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$HRESULT_FROM_WIN32
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_tcscmp DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$_tcscmp
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+297
	DD	imagerel $unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspMatrixList@@YAXXZ DD imagerel ??__ECspMatrixList@@YAXXZ
	DD	imagerel ??__ECspMatrixList@@YAXXZ+452
	DD	imagerel $unwind$??__ECspMatrixList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+311
	DD	imagerel $unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspTransferList@@YAXXZ DD imagerel ??__ECspTransferList@@YAXXZ
	DD	imagerel ??__ECspTransferList@@YAXXZ+476
	DD	imagerel $unwind$??__ECspTransferList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+263
	DD	imagerel $unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspColorprimList@@YAXXZ DD imagerel ??__ECspColorprimList@@YAXXZ
	DD	imagerel ??__ECspColorprimList@@YAXXZ+398
	DD	imagerel $unwind$??__ECspColorprimList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+270
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH$0A@@?$pair@HH@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?0HH$0A@@?$pair@HH@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?4U?$pair@HH@std@@$0A@@?$pair@HH@std@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$?4U?$pair@HH@std@@$0A@@?$pair@HH@std@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@CCRTAllocator@ATL@@SAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?Free@CCRTAllocator@ATL@@SAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceGeneral@ATL@@YAXXZ DD imagerel ??__EatlTraceGeneral@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceGeneral@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceGeneral@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceCOM@ATL@@YAXXZ DD imagerel ??__EatlTraceCOM@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceCOM@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceCOM@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceQI@ATL@@YAXXZ DD imagerel ??__EatlTraceQI@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceQI@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceQI@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceRegistrar@ATL@@YAXXZ DD imagerel ??__EatlTraceRegistrar@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceRegistrar@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceRegistrar@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceRefcount@ATL@@YAXXZ DD imagerel ??__EatlTraceRefcount@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceRefcount@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceRefcount@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceWindowing@ATL@@YAXXZ DD imagerel ??__EatlTraceWindowing@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceWindowing@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceWindowing@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceControls@ATL@@YAXXZ DD imagerel ??__EatlTraceControls@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceControls@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceControls@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceHosting@ATL@@YAXXZ DD imagerel ??__EatlTraceHosting@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceHosting@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceHosting@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceDBClient@ATL@@YAXXZ DD imagerel ??__EatlTraceDBClient@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceDBClient@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceDBClient@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceDBProvider@ATL@@YAXXZ DD imagerel ??__EatlTraceDBProvider@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceDBProvider@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceDBProvider@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceSnapin@ATL@@YAXXZ DD imagerel ??__EatlTraceSnapin@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceSnapin@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceSnapin@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceNotImpl@ATL@@YAXXZ DD imagerel ??__EatlTraceNotImpl@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceNotImpl@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceNotImpl@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceAllocation@ATL@@YAXXZ DD imagerel ??__EatlTraceAllocation@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceAllocation@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceAllocation@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceException@ATL@@YAXXZ DD imagerel ??__EatlTraceException@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceException@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceException@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceTime@ATL@@YAXXZ DD imagerel ??__EatlTraceTime@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceTime@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceTime@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceCache@ATL@@YAXXZ DD imagerel ??__EatlTraceCache@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceCache@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceCache@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceStencil@ATL@@YAXXZ DD imagerel ??__EatlTraceStencil@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceStencil@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceStencil@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceString@ATL@@YAXXZ DD imagerel ??__EatlTraceString@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceString@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceString@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceMap@ATL@@YAXXZ DD imagerel ??__EatlTraceMap@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceMap@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceMap@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceUtil@ATL@@YAXXZ DD imagerel ??__EatlTraceUtil@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceUtil@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceUtil@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceSecurity@ATL@@YAXXZ DD imagerel ??__EatlTraceSecurity@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceSecurity@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceSecurity@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceSync@ATL@@YAXXZ DD imagerel ??__EatlTraceSync@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceSync@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceSync@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceISAPI@ATL@@YAXXZ DD imagerel ??__EatlTraceISAPI@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceISAPI@ATL@@YAXXZ+46
	DD	imagerel $unwind$??__EatlTraceISAPI@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z DD imagerel $LN7
	DD	imagerel $LN7+116
	DD	imagerel $unwind$?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z DD imagerel $LN13
	DD	imagerel $LN13+686
	DD	imagerel $unwind$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z@4HA DD imagerel ?dtor$0@?0??TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0??TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z DD imagerel $LN10
	DD	imagerel $LN10+567
	DD	imagerel $unwind$?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA DD imagerel ?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA
	DD	imagerel ?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA DD imagerel ?dtor$1@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA
	DD	imagerel ?dtor$1@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z DD imagerel $LN6
	DD	imagerel $LN6+328
	DD	imagerel $unwind$?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+52
	DD	imagerel $unwind$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD imagerel $LN4
	DD	imagerel $LN4+115
	DD	imagerel $unwind$?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEBAPEADXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEBAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+52
	DD	imagerel $unwind$??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD imagerel $LN4
	DD	imagerel $LN4+115
	DD	imagerel $unwind$?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CPreserveLastError@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??0CPreserveLastError@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CPreserveLastError@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??1CPreserveLastError@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ DD imagerel $LN4
	DD	imagerel $LN4+177
	DD	imagerel $unwind$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ@4HA DD imagerel ?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ@4HA
	DD	imagerel ?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_AtlRaiseException@ATL@@YAXKK@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$?_AtlRaiseException@ATL@@YAXKK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CComCriticalSection@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0CComCriticalSection@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CComCriticalSection@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1CComCriticalSection@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Init@CComCriticalSection@ATL@@QEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?Init@CComCriticalSection@ATL@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Term@CComCriticalSection@ATL@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?Term@CComCriticalSection@ATL@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+133
	DD	imagerel $unwind$?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z DD imagerel $LN7
	DD	imagerel $LN7+173
	DD	imagerel $unwind$??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+77
	DD	imagerel $unwind$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+72
	DD	imagerel $unwind$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z DD imagerel $LN7
	DD	imagerel $LN7+254
	DD	imagerel $unwind$?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z DD imagerel $LN9
	DD	imagerel $LN9+228
	DD	imagerel $unwind$?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CAtlComModule@ATL@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+288
	DD	imagerel $unwind$??0CAtlComModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CAtlComModule@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0CAtlComModule@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0CAtlComModule@ATL@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0CAtlComModule@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAtlComModule@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$??1CAtlComModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1CAtlComModule@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CAtlComModule@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CAtlComModule@ATL@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1CAtlComModule@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Term@CAtlComModule@ATL@@QEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+213
	DD	imagerel $unwind$?Term@CAtlComModule@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E_AtlComModule@ATL@@YAXXZ DD imagerel ??__E_AtlComModule@ATL@@YAXXZ
	DD	imagerel ??__E_AtlComModule@ATL@@YAXXZ+51
	DD	imagerel $unwind$??__E_AtlComModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__F_AtlComModule@ATL@@YAXXZ DD imagerel ??__F_AtlComModule@ATL@@YAXXZ
	DD	imagerel ??__F_AtlComModule@ATL@@YAXXZ+39
	DD	imagerel $unwind$??__F_AtlComModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CAtlWinModule@ATL@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+167
	DD	imagerel $unwind$??0CAtlWinModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CAtlWinModule@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0CAtlWinModule@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0CAtlWinModule@ATL@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0CAtlWinModule@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAtlWinModule@ATL@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$??1CAtlWinModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1CAtlWinModule@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CAtlWinModule@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CAtlWinModule@ATL@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1CAtlWinModule@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Term@CAtlWinModule@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?Term@CAtlWinModule@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E_AtlWinModule@ATL@@YAXXZ DD imagerel ??__E_AtlWinModule@ATL@@YAXXZ
	DD	imagerel ??__E_AtlWinModule@ATL@@YAXXZ+51
	DD	imagerel $unwind$??__E_AtlWinModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__F_AtlWinModule@ATL@@YAXXZ DD imagerel ??__F_AtlWinModule@ATL@@YAXXZ
	DD	imagerel ??__F_AtlWinModule@ATL@@YAXXZ+39
	DD	imagerel $unwind$??__F_AtlWinModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@I@std@@YAAEBIAEBI0@Z DD imagerel $LN13
	DD	imagerel $LN13+210
	DD	imagerel $unwind$??$max@I@std@@YAAEBIAEBI0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@H@std@@YAAEBHAEBH0@Z DD imagerel $LN13
	DD	imagerel $LN13+210
	DD	imagerel $unwind$??$max@H@std@@YAAEBHAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@I@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@I@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@I@std@@QEAAXQEAI_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@I@std@@QEAAXQEAI_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@I@std@@QEAAPEAI_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@I@std@@QEAAPEAI_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SA_KAEBV?$allocator@I@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SA_KAEBV?$allocator@I@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+169
	DD	imagerel $unwind$?_Buy_raw@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEBAAEBV?$allocator@I@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEBAAEBV?$allocator@I@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@I@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@I@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAAAEAV?$allocator@I@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAAAEAV?$allocator@I@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEBAAEBV?$allocator@I@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEBAAEBV?$allocator@I@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ParseCmdError@@QEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+109
	DD	imagerel $unwind$??0ParseCmdError@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ParseCmdError@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0ParseCmdError@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0ParseCmdError@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0ParseCmdError@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0ParseCmdError@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0ParseCmdError@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0ParseCmdError@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0ParseCmdError@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0ParseCmdError@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0ParseCmdError@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0ParseCmdError@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???0ParseCmdError@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???0ParseCmdError@@QEAA@XZ@4HA DD imagerel ?dtor$3@?0???0ParseCmdError@@QEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???0ParseCmdError@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$3@?0???0ParseCmdError@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ParseCmdError@@QEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+104
	DD	imagerel $unwind$??1ParseCmdError@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1ParseCmdError@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1ParseCmdError@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1ParseCmdError@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1ParseCmdError@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1ParseCmdError@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???1ParseCmdError@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1ParseCmdError@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???1ParseCmdError@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???1ParseCmdError@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???1ParseCmdError@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???1ParseCmdError@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???1ParseCmdError@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???1ParseCmdError@@QEAA@XZ@4HA DD imagerel ?dtor$3@?0???1ParseCmdError@@QEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???1ParseCmdError@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$3@?0???1ParseCmdError@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eversion@dtl@@YAXXZ DD imagerel ??__Eversion@dtl@@YAXXZ
	DD	imagerel ??__Eversion@dtl@@YAXXZ+58
	DD	imagerel $unwind$??__Eversion@dtl@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fversion@dtl@@YAXXZ DD imagerel ??__Fversion@dtl@@YAXXZ
	DD	imagerel ??__Fversion@dtl@@YAXXZ+39
	DD	imagerel $unwind$??__Fversion@dtl@@YAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?show_version@@YAXXZ DD imagerel ?show_version@@YAXXZ
	DD	imagerel ?show_version@@YAXXZ+140
	DD	imagerel $unwind$?show_version@@YAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??show_version@@YAXXZ@4HA DD imagerel ?dtor$0@?0??show_version@@YAXXZ@4HA
	DD	imagerel ?dtor$0@?0??show_version@@YAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??show_version@@YAXXZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z DD imagerel ?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z
	DD	imagerel ?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z+854
	DD	imagerel $unwind$?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA DD imagerel ?dtor$0@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
	DD	imagerel ?dtor$0@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
$pdata$?dtor$1@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA DD imagerel ?dtor$1@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
	DD	imagerel ?dtor$1@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
$pdata$?dtor$2@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA DD imagerel ?dtor$2@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
	DD	imagerel ?dtor$2@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
$pdata$?dtor$3@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA DD imagerel ?dtor$3@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
	DD	imagerel ?dtor$3@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
$pdata$?dtor$4@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA DD imagerel ?dtor$4@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
	DD	imagerel ?dtor$4@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
$pdata$?dtor$5@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA DD imagerel ?dtor$5@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
	DD	imagerel ?dtor$5@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA+58
	DD	imagerel $unwind$?dtor$5@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z DD imagerel ?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z
	DD	imagerel ?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z+1675
	DD	imagerel $unwind$?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$0@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$pdata$?dtor$1@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$1@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$pdata$?dtor$2@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$2@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$2@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$pdata$?dtor$3@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$3@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$3@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$pdata$?dtor$4@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$4@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$4@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$pdata$?dtor$5@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$5@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$5@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$pdata$?dtor$6@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$6@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$6@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$pdata$?dtor$7@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$7@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$7@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$7@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$pdata$?dtor$8@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$8@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$8@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$8@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$pdata$?dtor$9@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$9@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$9@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$9@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$pdata$?dtor$10@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$10@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$10@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$10@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$pdata$?dtor$11@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$11@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$11@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$11@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$pdata$?dtor$12@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD imagerel ?dtor$12@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$12@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA+58
	DD	imagerel $unwind$?dtor$12@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@UListData@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@UListData@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UListData@@@std@@QEAAXQEAUListData@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@UListData@@@std@@QEAAXQEAUListData@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UListData@@@std@@QEAAPEAUListData@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@UListData@@@std@@QEAAPEAUListData@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@UListData@@@std@@@std@@SA_KAEBV?$allocator@UListData@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@UListData@@@std@@@std@@SA_KAEBV?$allocator@UListData@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+258
	DD	imagerel $unwind$??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEAUListData@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEAUListData@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+172
	DD	imagerel $unwind$?_Buy_raw@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEBAAEBV?$allocator@UListData@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEBAAEBV?$allocator@UListData@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UListData@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UListData@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UListData@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UListData@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@1@0@Z DD imagerel $LN21
	DD	imagerel $LN21+334
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEBAPEBUListData@@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEBAPEBUListData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_4d8cc05983fd0010d774c5fc658865f4>@@QEBAHHUListData@@@Z DD imagerel ??R<lambda_4d8cc05983fd0010d774c5fc658865f4>@@QEBAHHUListData@@@Z
	DD	imagerel ??R<lambda_4d8cc05983fd0010d774c5fc658865f4>@@QEBAHHUListData@@@Z+79
	DD	imagerel $unwind$??R<lambda_4d8cc05983fd0010d774c5fc658865f4>@@QEBAHHUListData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z DD imagerel ??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z
	DD	imagerel ??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z+237
	DD	imagerel $unwind$??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA DD imagerel ?dtor$0@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA DD imagerel ?dtor$1@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD imagerel ?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	imagerel ?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ+2898
	DD	imagerel $unwind$?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$0@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$0@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$1@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$1@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$1@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$2@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$2@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$2@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$3@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$3@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$3@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$4@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$4@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$4@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$5@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$5@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$5@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$6@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$6@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$6@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$7@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$7@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$7@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$7@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$8@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$8@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$8@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$8@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$9@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$9@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$9@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$9@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$10@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$10@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$10@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$10@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$11@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$11@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$11@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$11@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$12@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$12@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$12@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$12@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$13@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$13@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$13@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$13@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$14@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$14@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$14@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$14@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$15@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$15@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$15@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$15@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$16@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$16@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$16@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$16@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$17@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$17@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$17@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$17@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$18@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$18@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$18@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$18@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$19@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$19@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$19@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$19@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$20@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$20@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$20@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$20@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$21@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$21@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$21@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$21@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$22@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$22@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$22@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$22@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$23@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$23@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$23@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$23@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$24@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$24@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$24@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$24@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$25@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$25@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$25@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$25@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$26@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$26@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$26@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$26@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$27@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$27@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$27@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+58
	DD	imagerel $unwind$?dtor$27@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$initializer_list@UListData@@@std@@QEAA@PEBUListData@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$initializer_list@UListData@@@std@@QEAA@PEBUListData@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?begin@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?end@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?show_help@@YAXXZ DD imagerel ?show_help@@YAXXZ
	DD	imagerel ?show_help@@YAXXZ+140
	DD	imagerel $unwind$?show_help@@YAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??show_help@@YAXXZ@4HA DD imagerel ?dtor$0@?0??show_help@@YAXXZ@4HA
	DD	imagerel ?dtor$0@?0??show_help@@YAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??show_help@@YAXXZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z DD imagerel ?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z
	DD	imagerel ?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z+2958
	DD	imagerel $unwind$?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$0@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$0@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$1@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$1@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$1@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$2@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$2@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$2@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$3@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$3@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$3@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$4@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$4@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$4@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$5@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$5@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$5@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$6@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$6@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$6@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$7@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$7@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$7@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+58
	DD	imagerel $unwind$?dtor$7@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$8@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$8@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$8@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+58
	DD	imagerel $unwind$?dtor$8@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$9@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$9@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$9@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+58
	DD	imagerel $unwind$?dtor$9@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$11@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$11@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$11@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$11@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$12@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$12@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$12@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$12@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$13@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$13@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$13@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$13@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$14@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$14@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$14@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$14@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$15@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$15@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$15@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$15@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$16@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$16@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$16@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$16@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$17@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$17@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$17@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$17@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$18@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$18@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$18@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$18@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$19@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$19@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$19@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$19@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$20@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$20@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$20@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$20@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$21@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$21@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$21@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$21@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$22@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$22@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$22@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$22@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$23@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$23@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$23@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$23@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$pdata$?dtor$24@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD imagerel ?dtor$24@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DD	imagerel ?dtor$24@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$24@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z+102
	DD	imagerel $unwind$??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$0@?0???R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEAA@AEAW4FeatureListStrType@@AEAPEAU_iobuf@@@Z DD imagerel ??0<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEAA@AEAW4FeatureListStrType@@AEAPEAU_iobuf@@@Z
	DD	imagerel ??0<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEAA@AEAW4FeatureListStrType@@AEAPEAU_iobuf@@@Z+50
	DD	imagerel $unwind$??0<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEAA@AEAW4FeatureListStrType@@AEAPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z DD imagerel $LN5
	DD	imagerel $LN5+107
	DD	imagerel $unwind$??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z@4HA DD imagerel ?dtor$0@?0???$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@QEAAXQEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@QEAAXQEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_construct@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?_Move_construct@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+163
	DD	imagerel $unwind$??0?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?size@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBAAEBU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+225
	DD	imagerel $unwind$??A?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBAAEBU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAAPEAXI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?parse_print_options@@YAHPEBD0@Z DD imagerel $LN33
	DD	imagerel $LN33+1819
	DD	imagerel $unwind$?parse_print_options@@YAHPEBD0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??parse_print_options@@YAHPEBD0@Z@4HA DD imagerel ?dtor$0@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DD	imagerel ?dtor$0@?0??parse_print_options@@YAHPEBD0@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??parse_print_options@@YAHPEBD0@Z@4HA
$pdata$?dtor$1@?0??parse_print_options@@YAHPEBD0@Z@4HA DD imagerel ?dtor$1@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DD	imagerel ?dtor$1@?0??parse_print_options@@YAHPEBD0@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??parse_print_options@@YAHPEBD0@Z@4HA
$pdata$?dtor$2@?0??parse_print_options@@YAHPEBD0@Z@4HA DD imagerel ?dtor$2@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DD	imagerel ?dtor$2@?0??parse_print_options@@YAHPEBD0@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??parse_print_options@@YAHPEBD0@Z@4HA
$pdata$?dtor$3@?0??parse_print_options@@YAHPEBD0@Z@4HA DD imagerel ?dtor$3@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DD	imagerel ?dtor$3@?0??parse_print_options@@YAHPEBD0@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??parse_print_options@@YAHPEBD0@Z@4HA
$pdata$?dtor$4@?0??parse_print_options@@YAHPEBD0@Z@4HA DD imagerel ?dtor$4@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DD	imagerel ?dtor$4@?0??parse_print_options@@YAHPEBD0@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??parse_print_options@@YAHPEBD0@Z@4HA
$pdata$?dtor$5@?0??parse_print_options@@YAHPEBD0@Z@4HA DD imagerel ?dtor$5@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DD	imagerel ?dtor$5@?0??parse_print_options@@YAHPEBD0@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??parse_print_options@@YAHPEBD0@Z@4HA
$pdata$?dtor$6@?0??parse_print_options@@YAHPEBD0@Z@4HA DD imagerel ?dtor$6@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DD	imagerel ?dtor$6@?0??parse_print_options@@YAHPEBD0@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??parse_print_options@@YAHPEBD0@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?sigcatch@@YAXH@Z DD imagerel ?sigcatch@@YAXH@Z
	DD	imagerel ?sigcatch@@YAXH@Z+14
	DD	imagerel $unwind$?sigcatch@@YAXH@Z
$pdata$?set_signal_handler@@YAHXZ DD imagerel ?set_signal_handler@@YAHXZ
	DD	imagerel ?set_signal_handler@@YAHXZ+89
	DD	imagerel $unwind$?set_signal_handler@@YAHXZ
$pdata$?run_encode@@YAHPEAUsInputParams@@@Z DD imagerel $LN20
	DD	imagerel $LN20+828
	DD	imagerel $unwind$?run_encode@@YAHPEAUsInputParams@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA DD imagerel ?dtor$0@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$0@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA+40
	DD	imagerel $unwind$?dtor$0@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA
$pdata$?dtor$1@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA DD imagerel ?dtor$1@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$1@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@VCQSVPipeline@@@std@@QEBAXPEAVCQSVPipeline@@@Z DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$??R?$default_delete@VCQSVPipeline@@@std@@QEBAXPEAVCQSVPipeline@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$??B?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAAAEAU?$default_delete@VCQSVPipeline@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAAAEAU?$default_delete@VCQSVPipeline@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z DD imagerel $LN102
	DD	imagerel $LN102+6936
	DD	imagerel $unwind$?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$0@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$0@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$1@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$1@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$1@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$2@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$2@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$2@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$2@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$3@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$3@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$3@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$4@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$4@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$4@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$5@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$5@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$5@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$6@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$6@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$6@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$7@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$7@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$7@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$7@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$8@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$8@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$8@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$8@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$9@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$9@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$9@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$9@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$10@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$10@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$10@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$10@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$11@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$11@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$11@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$11@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$12@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$12@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$12@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$12@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$13@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$13@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$13@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$13@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$14@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$14@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$14@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$14@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$15@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$15@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$15@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$15@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$16@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$16@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$16@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$16@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$17@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$17@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$17@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$17@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$pdata$?dtor$18@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD imagerel ?dtor$18@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DD	imagerel ?dtor$18@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$18@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$pair@HH@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$pair@HH@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$pair@HH@std@@@std@@QEAAXQEAU?$pair@HH@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@U?$pair@HH@std@@@std@@QEAAXQEAU?$pair@HH@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$pair@HH@std@@@std@@QEAAPEAU?$pair@HH@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U?$pair@HH@std@@@std@@QEAAPEAU?$pair@HH@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@HH@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@HH@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+258
	DD	imagerel $unwind$??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+222
	DD	imagerel $unwind$??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEAU?$pair@HH@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEAU?$pair@HH@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+169
	DD	imagerel $unwind$?_Buy_raw@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$initializer_list@U?$pair@HH@std@@@std@@QEAA@PEBU?$pair@HH@1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$initializer_list@U?$pair@HH@std@@@std@@QEAA@PEBU?$pair@HH@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?begin@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?end@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD imagerel $LN8
	DD	imagerel $LN8+252
	DD	imagerel $unwind$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA+57
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA+40
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD imagerel ?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+161
	DD	imagerel $unwind$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA+47
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA+46
	DD	imagerel $unwind$?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+89
	DD	imagerel $unwind$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD imagerel ?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN9
	DD	imagerel $LN9+411
	DD	imagerel $unwind$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD imagerel ?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DD	imagerel ?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA+52
	DD	imagerel $unwind$?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD imagerel $LN16
	DD	imagerel $LN16+683
	DD	imagerel $unwind$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD imagerel $LN6
	DD	imagerel $LN6+278
	DD	imagerel $unwind$?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ DD imagerel $LN8
	DD	imagerel $LN8+309
	DD	imagerel $unwind$?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD imagerel $LN23
	DD	imagerel $LN23+701
	DD	imagerel $unwind$?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD imagerel $LN10
	DD	imagerel $LN10+430
	DD	imagerel $unwind$?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+252
	DD	imagerel $unwind$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+124
	DD	imagerel $unwind$?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z DD imagerel $LN9
	DD	imagerel $LN9+323
	DD	imagerel $unwind$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA+57
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA+40
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA DD imagerel ?dtor$2@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
	DD	imagerel ?dtor$2@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DD imagerel $LN4
	DD	imagerel $LN4+165
	DD	imagerel $unwind$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+163
	DD	imagerel $unwind$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA+47
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA+46
	DD	imagerel $unwind$?dtor$1@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+113
	DD	imagerel $unwind$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DD imagerel $LN6
	DD	imagerel $LN6+197
	DD	imagerel $unwind$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA DD imagerel ?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA
	DD	imagerel ?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ DD imagerel $LN7
	DD	imagerel $LN7+152
	DD	imagerel $unwind$?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD imagerel $LN18
	DD	imagerel $LN18+816
	DD	imagerel $unwind$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD imagerel $LN13
	DD	imagerel $LN13+406
	DD	imagerel $unwind$?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD imagerel $LN7
	DD	imagerel $LN7+216
	DD	imagerel $unwind$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD imagerel $LN21
	DD	imagerel $LN21+978
	DD	imagerel $unwind$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA DD imagerel ?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA
	DD	imagerel ?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z DD imagerel $LN11
	DD	imagerel $LN11+576
	DD	imagerel $unwind$?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z DD imagerel $LN7
	DD	imagerel $LN7+322
	DD	imagerel $unwind$?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD imagerel $LN8
	DD	imagerel $LN8+298
	DD	imagerel $unwind$?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD imagerel $LN5
	DD	imagerel $LN5+236
	DD	imagerel $unwind$?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z DD imagerel $LN7
	DD	imagerel $LN7+179
	DD	imagerel $unwind$?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD imagerel $LN5
	DD	imagerel $LN5+150
	DD	imagerel $unwind$?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z DD imagerel $LN6
	DD	imagerel $LN6+376
	DD	imagerel $unwind$?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ DD imagerel $LN15
	DD	imagerel $LN15+522
	DD	imagerel $unwind$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+104
	DD	imagerel $unwind$?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+108
	DD	imagerel $unwind$?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+151
	DD	imagerel $unwind$?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0benchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAA@XZ DD imagerel ??0benchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAA@XZ
	DD	imagerel ??0benchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAA@XZ+54
	DD	imagerel $unwind$??0benchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@UCX_DESC@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@UCX_DESC@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UCX_DESC@@@std@@QEAAXQEAUCX_DESC@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@UCX_DESC@@@std@@QEAAXQEAUCX_DESC@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UCX_DESC@@@std@@QEAAPEAUCX_DESC@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@UCX_DESC@@@std@@QEAAPEAUCX_DESC@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SA_KAEBV?$allocator@UCX_DESC@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SA_KAEBV?$allocator@UCX_DESC@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?push_back@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?capacity@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+219
	DD	imagerel $unwind$??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAPEAUCX_DESC@@PEAU3@00@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAPEAUCX_DESC@@PEAU3@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXQEAUCX_DESC@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+275
	DD	imagerel $unwind$?_Change_array@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXQEAUCX_DESC@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAAEBV?$allocator@UCX_DESC@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAAEBV?$allocator@UCX_DESC@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UCX_DESC@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UCX_DESC@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UCX_DESC@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UCX_DESC@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ DD imagerel ??0?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ
	DD	imagerel ??0?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ+13
	DD	imagerel $unwind$??0?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z DD imagerel ?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z
	DD	imagerel ?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z+65
	DD	imagerel $unwind$?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z DD imagerel ?allocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z
	DD	imagerel ?allocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z+59
	DD	imagerel $unwind$?allocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@Z DD imagerel ?max_size@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@Z
	DD	imagerel ?max_size@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@Z+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ DD imagerel ??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ
	DD	imagerel ??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ+99
	DD	imagerel $unwind$??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ DD imagerel ??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ
	DD	imagerel ??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ+140
	DD	imagerel $unwind$??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@@Z DD imagerel ?push_back@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@@Z
	DD	imagerel ?push_back@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@@Z+56
	DD	imagerel $unwind$?push_back@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z DD imagerel ?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z
	DD	imagerel ?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z+194
	DD	imagerel $unwind$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z@4HA DD imagerel ?catch$0@?0??_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z@4HA
	DD	imagerel ?catch$0@?0??_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z@4HA+69
	DD	imagerel $unwind$?catch$0@?0??_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAX_K@Z DD imagerel ?reserve@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAX_K@Z
	DD	imagerel ?reserve@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAX_K@Z+95
	DD	imagerel $unwind$?reserve@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ DD imagerel ?_Unchecked_begin@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ
	DD	imagerel ?_Unchecked_begin@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ DD imagerel ?_Unchecked_end@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ
	DD	imagerel ?_Unchecked_end@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ DD imagerel ?size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ
	DD	imagerel ?size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ+68
	DD	imagerel $unwind$?size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ DD imagerel ?max_size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ
	DD	imagerel ?max_size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ+87
	DD	imagerel $unwind$?max_size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ DD imagerel ?capacity@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ
	DD	imagerel ?capacity@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ+68
	DD	imagerel $unwind$?capacity@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@PEAV32@00@Z DD imagerel ?_Umove@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@PEAV32@00@Z
	DD	imagerel ?_Umove@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@PEAV32@00@Z+84
	DD	imagerel $unwind$?_Umove@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@PEAV32@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00U?$integral_constant@_N$00@2@@Z DD imagerel ?_Umove_if_noexcept1@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00U?$integral_constant@_N$00@2@@Z
	DD	imagerel ?_Umove_if_noexcept1@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00U?$integral_constant@_N$00@2@@Z+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00@Z DD imagerel ?_Umove_if_noexcept@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00@Z
	DD	imagerel ?_Umove_if_noexcept@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00@Z+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z DD imagerel ?_Destroy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z
	DD	imagerel ?_Destroy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z+74
	DD	imagerel $unwind$?_Destroy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBA_K_K@Z DD imagerel ?_Calculate_growth@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBA_K_K@Z
	DD	imagerel ?_Calculate_growth@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBA_K_K@Z+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K1@Z DD imagerel ?_Change_array@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K1@Z
	DD	imagerel ?_Change_array@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K1@Z+275
	DD	imagerel $unwind$?_Change_array@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ DD imagerel ?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ
	DD	imagerel ?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ+237
	DD	imagerel $unwind$?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@CAXXZ DD imagerel ?_Xlength@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@CAXXZ
	DD	imagerel ?_Xlength@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@CAXXZ+39
	DD	imagerel $unwind$?_Xlength@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z DD imagerel ?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z
	DD	imagerel ?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ DD imagerel ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ
	DD	imagerel ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ DD imagerel ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ
	DD	imagerel ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel ??0?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ
	DD	imagerel ??0?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ DD imagerel ?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ
	DD	imagerel ?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ DD imagerel ?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ
	DD	imagerel ?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAA@XZ DD imagerel ??0?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAA@XZ
	DD	imagerel ??0?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAA@XZ+13
	DD	imagerel $unwind$??0?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z DD imagerel ?deallocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z
	DD	imagerel ?deallocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z+65
	DD	imagerel $unwind$?deallocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z DD imagerel ?allocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z
	DD	imagerel ?allocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z+59
	DD	imagerel $unwind$?allocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA_KAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@@Z DD imagerel ?max_size@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA_KAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@@Z
	DD	imagerel ?max_size@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA_KAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@@Z+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA_KAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA?AV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@AEBV32@@Z DD imagerel ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA?AV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@AEBV32@@Z
	DD	imagerel ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA?AV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@AEBV32@@Z+18
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA?AV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ DD imagerel ??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
	DD	imagerel ??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ+99
	DD	imagerel $unwind$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z DD imagerel ??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel ??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z+400
	DD	imagerel $unwind$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$1@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_construct@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel ?_Move_construct@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
	DD	imagerel ?_Move_construct@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z+64
	DD	imagerel $unwind$?_Move_construct@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel ??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel ??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z+163
	DD	imagerel $unwind$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ DD imagerel ??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
	DD	imagerel ??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ+140
	DD	imagerel $unwind$??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z DD imagerel ?push_back@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
	DD	imagerel ?push_back@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z+56
	DD	imagerel $unwind$?push_back@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ DD imagerel ?_Unchecked_begin@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ
	DD	imagerel ?_Unchecked_begin@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ DD imagerel ?_Unchecked_end@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ
	DD	imagerel ?_Unchecked_end@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ DD imagerel ?max_size@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ
	DD	imagerel ?max_size@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ+87
	DD	imagerel $unwind$?max_size@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ DD imagerel ?capacity@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ
	DD	imagerel ?capacity@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ+74
	DD	imagerel $unwind$?capacity@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z DD imagerel ??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z
	DD	imagerel ??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z+225
	DD	imagerel $unwind$??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU3?1??4@YA?AW45@0@Z@11@Z DD imagerel ?_Umove@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU3?1??4@YA?AW45@0@Z@11@Z
	DD	imagerel ?_Umove@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU3?1??4@YA?AW45@0@Z@11@Z+84
	DD	imagerel $unwind$?_Umove@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU3?1??4@YA?AW45@0@Z@11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11U?$integral_constant@_N$00@2@@Z DD imagerel ?_Umove_if_noexcept1@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11U?$integral_constant@_N$00@2@@Z
	DD	imagerel ?_Umove_if_noexcept1@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11U?$integral_constant@_N$00@2@@Z+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11@Z DD imagerel ?_Umove_if_noexcept@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11@Z
	DD	imagerel ?_Umove_if_noexcept@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11@Z+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z DD imagerel ?_Destroy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z
	DD	imagerel ?_Destroy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z+74
	DD	imagerel $unwind$?_Destroy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBA_K_K@Z DD imagerel ?_Calculate_growth@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBA_K_K@Z
	DD	imagerel ?_Calculate_growth@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBA_K_K@Z+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAX_K@Z DD imagerel ?_Buy_raw@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAX_K@Z
	DD	imagerel ?_Buy_raw@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAX_K@Z+172
	DD	imagerel $unwind$?_Buy_raw@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K2@Z DD imagerel ?_Change_array@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K2@Z
	DD	imagerel ?_Change_array@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K2@Z+281
	DD	imagerel $unwind$?_Change_array@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ DD imagerel ?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ
	DD	imagerel ?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ+247
	DD	imagerel $unwind$?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@CAXXZ DD imagerel ?_Xlength@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@CAXXZ
	DD	imagerel ?_Xlength@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@CAXXZ+39
	DD	imagerel $unwind$?_Xlength@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z DD imagerel ?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z
	DD	imagerel ?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ DD imagerel ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ
	DD	imagerel ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ+49
	DD	imagerel $unwind$?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ DD imagerel ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ
	DD	imagerel ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ+49
	DD	imagerel $unwind$?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ DD imagerel ??0?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
	DD	imagerel ??0?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAV12@@Z DD imagerel ?_Take_contents@?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAV12@@Z
	DD	imagerel ?_Take_contents@?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAV12@@Z+149
	DD	imagerel $unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ DD imagerel ?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ
	DD	imagerel ?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ DD imagerel ?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ
	DD	imagerel ?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAXI@Z DD imagerel ??_G?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAXI@Z
	DD	imagerel ??_G?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAXI@Z+81
	DD	imagerel $unwind$??_G?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAXI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?run@@YAHHQEAPEAD@Z DD imagerel $LN40
	DD	imagerel $LN40+2482
	DD	imagerel $unwind$?run@@YAHHQEAPEAD@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??run@@YAHHQEAPEAD@Z@4HA DD imagerel ?dtor$0@?0??run@@YAHHQEAPEAD@Z@4HA
	DD	imagerel ?dtor$0@?0??run@@YAHHQEAPEAD@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??run@@YAHHQEAPEAD@Z@4HA
$pdata$?dtor$1@?0??run@@YAHHQEAPEAD@Z@4HA DD imagerel ?dtor$1@?0??run@@YAHHQEAPEAD@Z@4HA
	DD	imagerel ?dtor$1@?0??run@@YAHHQEAPEAD@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??run@@YAHHQEAPEAD@Z@4HA
$pdata$?dtor$2@?0??run@@YAHHQEAPEAD@Z@4HA DD imagerel ?dtor$2@?0??run@@YAHHQEAPEAD@Z@4HA
	DD	imagerel ?dtor$2@?0??run@@YAHHQEAPEAD@Z@4HA+43
	DD	imagerel $unwind$?dtor$2@?0??run@@YAHHQEAPEAD@Z@4HA
$pdata$?dtor$3@?0??run@@YAHHQEAPEAD@Z@4HA DD imagerel ?dtor$3@?0??run@@YAHHQEAPEAD@Z@4HA
	DD	imagerel ?dtor$3@?0??run@@YAHHQEAPEAD@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??run@@YAHHQEAPEAD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEBD@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@PEBD@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?data@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+169
	DD	imagerel $unwind$?_Buy_raw@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+269
	DD	imagerel $unwind$?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+284
	DD	imagerel $unwind$??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN4
	DD	imagerel $LN4+108
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy_maybe_null@PEBD@std@@YAPEAPEBDPEAPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy_maybe_null@PEBD@std@@YAPEAPEBDPEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DD imagerel $LN13
	DD	imagerel $LN13+551
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z DD imagerel ??$emplace_back@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
	DD	imagerel ??$emplace_back@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z+145
	DD	imagerel $unwind$??$emplace_back@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z DD imagerel ??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z
	DD	imagerel ??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z+13
	DD	imagerel $unwind$??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z DD imagerel ??$_Emplace_back_with_unused_capacity@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
	DD	imagerel ??$_Emplace_back_with_unused_capacity@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU1?1??2@YA?AW43@0@Z@@Z DD imagerel ??$_Unfancy@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU1?1??2@YA?AW43@0@Z@@Z
	DD	imagerel ??$_Unfancy@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU1?1??2@YA?AW43@0@Z@@Z+13
	DD	imagerel $unwind$??$_Unfancy@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU1?1??2@YA?AW43@0@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU3?1??4@YA?AW45@1@Z@@Z DD imagerel ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU3?1??4@YA?AW45@1@Z@@Z
	DD	imagerel ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU3?1??4@YA?AW45@1@Z@@Z+93
	DD	imagerel $unwind$??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU3?1??4@YA?AW45@1@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z DD imagerel ??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z
	DD	imagerel ??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z+574
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z DD imagerel ??$?0Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z
	DD	imagerel ??$?0Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z+18
	DD	imagerel $unwind$??$?0Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel ??$?0$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	imagerel ??$?0$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z DD imagerel ??$emplace_back@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z
	DD	imagerel ??$emplace_back@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z+145
	DD	imagerel $unwind$??$emplace_back@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z DD imagerel ??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z
	DD	imagerel ??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z+13
	DD	imagerel $unwind$??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z DD imagerel ??$_Emplace_back_with_unused_capacity@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z
	DD	imagerel ??$_Emplace_back_with_unused_capacity@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@PEAV10@@Z DD imagerel ??$_Unfancy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@PEAV10@@Z
	DD	imagerel ??$_Unfancy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@PEAV10@@Z+13
	DD	imagerel $unwind$??$_Unfancy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@PEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEBV31@@Z DD imagerel ??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEBV31@@Z
	DD	imagerel ??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEBV31@@Z+89
	DD	imagerel $unwind$??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEBV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z DD imagerel ??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z
	DD	imagerel ??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z+562
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z DD imagerel ??$?0V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z
	DD	imagerel ??$?0V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z+18
	DD	imagerel $unwind$??$?0V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel ??$?0$$V@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	imagerel ??$?0$$V@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBUCX_DESC@@@std@@YAAEBUCX_DESC@@AEBU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBUCX_DESC@@@std@@YAAEBUCX_DESC@@AEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXAEBUCX_DESC@@@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXAEBUCX_DESC@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@UCX_DESC@@@std@@YAPEAUCX_DESC@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@UCX_DESC@@@std@@YAPEAUCX_DESC@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@UCX_DESC@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SAXAEAV?$allocator@UCX_DESC@@@1@QEAUCX_DESC@@AEBU3@@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??$construct@UCX_DESC@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SAXAEAV?$allocator@UCX_DESC@@@1@QEAUCX_DESC@@AEBU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z DD imagerel $LN13
	DD	imagerel $LN13+562
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UCX_DESC@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UCX_DESC@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0UCX_DESC@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UCX_DESC@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DD imagerel $LN11
	DD	imagerel $LN11+328
	DD	imagerel $unwind$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$pair@HH@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@HH@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$pair@HH@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@HH@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@U?$pair@HH@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0AEBV?$allocator@U?$pair@HH@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+194
	DD	imagerel $unwind$??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UListData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UListData@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0UListData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UListData@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@UListData@@@std@@$$V@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@UListData@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0AEBV?$allocator@UListData@@@std@@$$V@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@UListData@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+194
	DD	imagerel $unwind$??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0I@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@I@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0I@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@I@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z DD imagerel $LN5
	DD	imagerel $LN5+124
	DD	imagerel $unwind$??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z DD imagerel $LN6
	DD	imagerel $LN6+497
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@D@std@@YAPEADAEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@D@std@@YAPEADAEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+330
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD imagerel $LN3
	DD	imagerel $LN3+150
	DD	imagerel $unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+525
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z DD imagerel ??$_Destroy_range@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
	DD	imagerel ??$_Destroy_range@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z DD imagerel ??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z
	DD	imagerel ??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z+101
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UCX_DESC@@@std@@@std@@YAXPEAUCX_DESC@@QEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UCX_DESC@@@std@@@std@@YAXPEAUCX_DESC@@QEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$pair@HH@std@@@std@@@std@@YAXPEAU?$pair@HH@0@QEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$pair@HH@std@@@std@@@std@@YAXPEAU?$pair@HH@0@QEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@QEAU10@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+101
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@QEAU10@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UListData@@@std@@@std@@YAXPEAUListData@@QEAU1@AEAV?$allocator@UListData@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UListData@@@std@@@std@@YAXPEAUListData@@QEAU1@AEAV?$allocator@UListData@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$03@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$??$_Get_size_of_n@$03@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPEAIQEAIAEAV?$allocator@I@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPEAIQEAIAEAV?$allocator@I@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z DD imagerel ??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z
	DD	imagerel ??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z+212
	DD	imagerel $unwind$??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD imagerel $LN7
	DD	imagerel $LN7+200
	DD	imagerel $unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@$0A@@std@@YAPEBUListData@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@$0A@@std@@YAPEBUListData@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+284
	DD	imagerel $unwind$??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAVCQSVPipeline@@@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCQSVPipeline@@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$?0AEAPEAVCQSVPipeline@@@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCQSVPipeline@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@H@std@@YA$$QEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@H@std@@YA$$QEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD imagerel $LN26
	DD	imagerel $LN26+901
	DD	imagerel $unwind$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD imagerel ?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD imagerel ?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	imagerel ?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA+79
	DD	imagerel $unwind$?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@PEBD@std@@$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEBD@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0AEBV?$allocator@PEBD@std@@$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEBD@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@PEAPEADPEAPEAD@std@@YAXAEBQEAPEAD0@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$_Adl_verify_range@PEAPEADPEAPEAD@std@@YAXAEBQEAPEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@PEAD@std@@YAPEAPEADQEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@PEAD@std@@YAPEAPEADQEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+194
	DD	imagerel $unwind$??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@U?$pair@HH@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@HH@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@U?$pair@HH@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@HH@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@PEBU?$pair@HH@std@@@std@@YA_JPEBU?$pair@HH@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??$distance@PEBU?$pair@HH@std@@@std@@YA_JPEBU?$pair@HH@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAPEAU?$pair@HH@1@PEBU21@0PEAU21@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$_Ucopy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAPEAU?$pair@HH@1@PEBU21@0PEAU21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@UListData@@@std@@@std@@YAAEBV?$allocator@UListData@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@UListData@@@std@@@std@@YAAEBV?$allocator@UListData@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@PEBUListData@@@std@@YA_JPEBUListData@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$??$distance@PEBUListData@@@std@@YA_JPEBUListData@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAPEAUListData@@PEBU2@0PEAU2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$_Ucopy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAPEAUListData@@PEBU2@0PEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z DD imagerel ??$destroy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z
	DD	imagerel ??$destroy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z+53
	DD	imagerel $unwind$??$destroy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@YAPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@YAPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@QEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$destroy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@QEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@@Z DD imagerel ??$_Get_unwrapped@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@@Z
	DD	imagerel ??$_Get_unwrapped@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@@Z+13
	DD	imagerel $unwind$??$_Get_unwrapped@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z DD imagerel ??$move@AEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z
	DD	imagerel ??$move@AEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z+13
	DD	imagerel $unwind$??$move@AEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z DD imagerel ??0?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z
	DD	imagerel ??0?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ DD imagerel ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ
	DD	imagerel ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z DD imagerel ??$_Emplace_back@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z
	DD	imagerel ??$_Emplace_back@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z+117
	DD	imagerel $unwind$??$_Emplace_back@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+138
	DD	imagerel $unwind$??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z DD imagerel ??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
	DD	imagerel ??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z+212
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z DD imagerel ??$?0V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z
	DD	imagerel ??$?0V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z+73
	DD	imagerel $unwind$??$?0V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Tidy_guard@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ
	DD	imagerel ??1?$_Tidy_guard@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ+60
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU2?1??3@YA?AW44@0@Z@11@Z DD imagerel ??$_Ucopy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU2?1??3@YA?AW44@0@Z@11@Z
	DD	imagerel ??$_Ucopy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU2?1??3@YA?AW44@0@Z@11@Z+84
	DD	imagerel $unwind$??$_Ucopy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU2?1??3@YA?AW44@0@Z@11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@YAPEAUCX_DESC@@QEAU1@0PEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+144
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@YAPEAUCX_DESC@@QEAU1@0PEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@UListData@@@std@@YAPEAUListData@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@UListData@@@std@@YAPEAUListData@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z DD imagerel $LN6
	DD	imagerel $LN6+459
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@I@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0AEBV?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@I@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@PEBIPEBI@std@@YAXAEBQEBI0@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$_Adl_verify_range@PEBIPEBI@std@@YAXAEBQEBI0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@$$CBI@std@@YAPEBIQEBI@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@$$CBI@std@@YAPEBIQEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+194
	DD	imagerel $unwind$??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+133
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+231
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+75
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@PEBD@std@@@std@@YAAEBV?$allocator@PEBD@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@PEBD@std@@@std@@YAAEBV?$allocator@PEBD@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Verify_range@PEAD@std@@YAXQEBQEAD0@Z DD imagerel $LN12
	DD	imagerel $LN12+174
	DD	imagerel $unwind$??$_Verify_range@PEAD@std@@YAXQEBQEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@PEAPEAD@std@@YA_JPEAPEAD0@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??$distance@PEAPEAD@std@@YA_JPEAPEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@PEBDV?$allocator@PEBD@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@PEBDV?$allocator@PEBD@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEAD0PEAPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$_Ucopy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEAD0PEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+210
	DD	imagerel $unwind$??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEBUListData@@V?$allocator@UListData@@@std@@@std@@YAPEAUListData@@QEBU1@0PEAU1@AEAV?$allocator@UListData@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+160
	DD	imagerel $unwind$??$_Uninitialized_copy@PEBUListData@@V?$allocator@UListData@@@std@@@std@@YAPEAUListData@@QEBU1@0PEAU1@AEAV?$allocator@UListData@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z DD imagerel ??$forward@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z
	DD	imagerel ??$forward@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z+13
	DD	imagerel $unwind$??$forward@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@$$QEAV31@@Z DD imagerel ??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@$$QEAV31@@Z
	DD	imagerel ??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@$$QEAV31@@Z+89
	DD	imagerel $unwind$??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@$$QEAV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@@Z DD imagerel ??$_Get_unwrapped@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@@Z
	DD	imagerel ??$_Get_unwrapped@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@@Z+13
	DD	imagerel $unwind$??$_Get_unwrapped@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z DD imagerel ??$move@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z
	DD	imagerel ??$move@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z+13
	DD	imagerel $unwind$??$move@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z DD imagerel ??0?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z
	DD	imagerel ??0?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ DD imagerel ?_Release@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ
	DD	imagerel ?_Release@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAX$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z DD imagerel ??$_Emplace_back@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAX$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
	DD	imagerel ??$_Emplace_back@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAX$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z+117
	DD	imagerel $unwind$??$_Emplace_back@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAX$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z DD imagerel ??$forward@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z
	DD	imagerel ??$forward@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z+13
	DD	imagerel $unwind$??$forward@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z DD imagerel ??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
	DD	imagerel ??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z+210
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@UCX_DESC@@@std@@YAPEAUCX_DESC@@QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@UCX_DESC@@@std@@YAPEAUCX_DESC@@QEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUCX_DESC@@PEAU1@@std@@YAPEAUCX_DESC@@PEAU1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Copy_memmove@PEAUCX_DESC@@PEAU1@@std@@YAPEAUCX_DESC@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@I@std@@@std@@YAAEBV?$allocator@I@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@I@std@@@std@@YAAEBV?$allocator@I@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Verify_range@I@std@@YAXQEBI0@Z DD imagerel $LN12
	DD	imagerel $LN12+174
	DD	imagerel $unwind$??$_Verify_range@I@std@@YAXQEBI0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@PEBI@std@@YA_JPEBI0@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??$distance@PEBI@std@@YA_JPEBI0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@IV?$allocator@I@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@IV?$allocator@I@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAPEAIPEBI0PEAI@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$_Ucopy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAPEAIPEBI0PEAI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAPEADV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEAD0PEAPEBDAEAV?$allocator@PEBD@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+148
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAPEADV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEAD0PEAPEBDAEAV?$allocator@PEBD@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@$$CBU?$pair@HH@std@@@std@@YAPEBU?$pair@HH@0@QEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@$$CBU?$pair@HH@std@@@std@@YAPEBU?$pair@HH@0@QEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@PEAU?$pair@HH@1@AEAV?$allocator@U?$pair@HH@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@PEAU?$pair@HH@1@AEAV?$allocator@U?$pair@HH@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAPEAU?$pair@HH@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAPEAU?$pair@HH@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEBU?$pair@HH@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAXAEBU?$pair@HH@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$_Emplace_back@AEBU?$pair@HH@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAXAEBU?$pair@HH@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@$$CBUListData@@@std@@YAPEBUListData@@QEBU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@$$CBUListData@@@std@@YAPEBUListData@@QEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEBUListData@@PEAU1@@std@@YAPEAUListData@@PEBU1@0PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Copy_memmove@PEBUListData@@PEAU1@@std@@YAPEAUListData@@PEBU1@0PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z DD imagerel ??$forward@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z
	DD	imagerel ??$forward@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z+13
	DD	imagerel $unwind$??$forward@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@U1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@$$QEAU3?1??4@YA?AW45@1@Z@@Z DD imagerel ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@U1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@$$QEAU3?1??4@YA?AW45@1@Z@@Z
	DD	imagerel ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@U1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@$$QEAU3?1??4@YA?AW45@1@Z@@Z+93
	DD	imagerel $unwind$??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@U1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@$$QEAU3?1??4@YA?AW45@1@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z DD imagerel ??$_Emplace_back@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
	DD	imagerel ??$_Emplace_back@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z+117
	DD	imagerel $unwind$??$_Emplace_back@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z DD imagerel ??$move@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z
	DD	imagerel ??$move@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEBIV?$allocator@I@std@@@std@@YAPEAIQEBI0PEAIAEAV?$allocator@I@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+148
	DD	imagerel $unwind$??$_Uninitialized_copy@PEBIV?$allocator@I@std@@@std@@YAPEAIQEBI0PEAIAEAV?$allocator@I@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEADPEAPEBD@std@@YAPEAPEBDPEAPEAD0PEAPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEADPEAPEBD@std@@YAPEAPEBDPEAPEAD0PEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$pair@HH@std@@@std@@YAPEAU?$pair@HH@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$pair@HH@std@@@std@@YAPEAU?$pair@HH@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBU?$pair@HH@std@@@std@@YAAEBU?$pair@HH@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBU?$pair@HH@std@@@std@@YAAEBU?$pair@HH@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$pair@HH@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@HH@std@@@1@QEAU?$pair@HH@1@AEBU31@@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$construct@U?$pair@HH@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@HH@std@@@1@QEAU?$pair@HH@1@AEBU31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z DD imagerel ??$forward@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z
	DD	imagerel ??$forward@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z+13
	DD	imagerel $unwind$??$forward@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU3?1??4@YA?AW45@1@Z@@Z DD imagerel ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU3?1??4@YA?AW45@1@Z@@Z
	DD	imagerel ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU3?1??4@YA?AW45@1@Z@@Z+93
	DD	imagerel $unwind$??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU3?1??4@YA?AW45@1@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@I@std@@YAPEAIPEAI@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@I@std@@YAPEAIPEAI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEBIPEAI@std@@YAPEAIPEBI0PEAI@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Copy_memmove@PEBIPEAI@std@@YAPEAIPEBI0PEAI@Z
pdata	ENDS
CRT$XCU	SEGMENT
?CspMatrixList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspMatrixList@@YAXXZ ; CspMatrixList$initializer$
CRT$XCU	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD imagerel ??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD imagerel ??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 01H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	imagerel ??_R3bad_cast@std@@8
	DD	imagerel ??_R4bad_cast@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ofstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DD 01H ; std::basic_ofstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	0a8H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@@8
	DD	imagerel ??_R3?$basic_ofstream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD 01H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
	DD	imagerel ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD imagerel ??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	imagerel ??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD imagerel ??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD imagerel ??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ios_base@std@@8
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	imagerel ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	DD	imagerel ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	imagerel ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	DD	imagerel ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	imagerel ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$alloc'
	DB	'ator@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 01H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	098H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	imagerel ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
	DD	imagerel ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 01H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	imagerel ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
	DD	imagerel ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
CONST	SEGMENT
??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ DB 'vector iterato'
	DB	'r range transposed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' '
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'm', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 'r', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
CONST	SEGMENT
??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ DB 'vector itera'
	DB	'tors in range are from different containers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
CONST	SEGMENT
??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ DB '"'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'p', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'o'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
CONST	SEGMENT
??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
CONST	SEGMENT
??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@ DB 'transposed pointer ran'
	DB	'ge', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@DINNLDHA@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@
CONST	SEGMENT
??_C@_1EC@DINNLDHA@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@ DB '"'
	DB	00H, 'f', 00H, 'r', 00H, 'o', 00H, 'n', 00H, 't', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'e', 00H
	DB	'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@BJDDPGPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
CONST	SEGMENT
??_C@_1LC@BJDDPGPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H
	DB	's', 00H, 'i', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	'<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PFIPNLNI@front?$CI?$CJ?5called?5on?5empty?5string@
CONST	SEGMENT
??_C@_0BP@PFIPNLNI@front?$CI?$CJ?5called?5on?5empty?5string@ DB 'front() '
	DB	'called on empty string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xstring', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xutility', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OK@ENELOBIL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OK@ENELOBIL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'c', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'n'
	DB	00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'm', 00H, '_', 00H, 'n'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DEA@ECHCKIDC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1DEA@ECHCKIDC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H, 'i'
	DB	00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'<', 00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, '_', 00H, '_', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, '6', 00H, '4', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, '_', 00H, '_', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, '6', 00H, '4', 00H, '>', 00H, ' ', 00H, '>', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a'
	DB	00H, 's', 00H, 'i', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H
	DB	'_', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's'
	DB	00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H
	DB	',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ',', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'p', 00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '_'
	DB	00H, '_', 00H, 'i', 00H, 'n', 00H, 't', 00H, '6', 00H, '4', 00H
	DB	',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H
	DB	'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '_', 00H, '_'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, '6', 00H, '4', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H, '_'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a'
	DB	00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MM@CFLCIPDM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1MM@CFLCIPDM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H, 'i'
	DB	00H, 'r', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't', 00H, ',', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H
	DB	'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, ',', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '[', 00H, ']', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@DHPHBBCK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1JO@DHPHBBCK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'C', 00H
	DB	'X', 00H, '_', 00H, 'D', 00H, 'E', 00H, 'S', 00H, 'C', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 'C', 00H, 'X', 00H, '_', 00H, 'D', 00H
	DB	'E', 00H, 'S', 00H, 'C', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BLO@LPKJDEKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1BLO@LPKJDEKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, '`', 00H
	DB	'e', 00H, 'n', 00H, 'u', 00H, 'm', 00H, ' ', 00H, 'm', 00H, 'f'
	DB	00H, 'x', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H, 'u', 00H
	DB	's', 00H, ' ', 00H, '_', 00H, '_', 00H, 'c', 00H, 'd', 00H, 'e'
	DB	00H, 'c', 00H, 'l', 00H, ' ', 00H, 'r', 00H, 'u', 00H, 'n', 00H
	DB	'_', 00H, 'b', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'h', 00H, 'm'
	DB	00H, 'a', 00H, 'r', 00H, 'k', 00H, '(', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 'I'
	DB	00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, 's', 00H, ' ', 00H, '*', 00H, ')'
	DB	00H, '''', 00H, ':', 00H, ':', 00H, '`', 00H, '2', 00H, '''', 00H
	DB	':', 00H, ':', 00H, 'b', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'h'
	DB	00H, 'm', 00H, 'a', 00H, 'r', 00H, 'k', 00H, '_', 00H, 't', 00H
	DB	',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H
	DB	'c', 00H, 't', 00H, ' ', 00H, '`', 00H, 'e', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, ' ', 00H, 'm', 00H, 'f', 00H, 'x', 00H, 'S', 00H
	DB	't', 00H, 'a', 00H, 't', 00H, 'u', 00H, 's', 00H, ' ', 00H, '_'
	DB	00H, '_', 00H, 'c', 00H, 'd', 00H, 'e', 00H, 'c', 00H, 'l', 00H
	DB	' ', 00H, 'r', 00H, 'u', 00H, 'n', 00H, '_', 00H, 'b', 00H, 'e'
	DB	00H, 'n', 00H, 'c', 00H, 'h', 00H, 'm', 00H, 'a', 00H, 'r', 00H
	DB	'k', 00H, '(', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 's', 00H, 'I', 00H, 'n', 00H, 'p', 00H
	DB	'u', 00H, 't', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, 's', 00H, ' ', 00H, '*', 00H, ')', 00H, '''', 00H, ':', 00H
	DB	':', 00H, '`', 00H, '2', 00H, '''', 00H, ':', 00H, ':', 00H, 'b'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'h', 00H, 'm', 00H, 'a', 00H
	DB	'r', 00H, 'k', 00H, '_', 00H, 't', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Prog'
	DB	'ram Files (x86)\Microsoft Visual Studio\2019\Community\VC\Too'
	DB	'ls\MSVC\14.23.28105\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ofstream<char,std::char_traits<char> >::`vbtable'
	DD	0a8H
CONST	ENDS
;	COMDAT ??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ DQ FLAT:??_R4?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ofstream<char,std::char_traits<char> >::`vftable'
	DQ	FLAT:??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DQ FLAT:??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
	DQ	FLAT:??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
	DQ	FLAT:?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
	DQ	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ
	DQ	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
	DQ	FLAT:?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
	DQ	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DQ	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DQ	FLAT:?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z
	DQ	FLAT:?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	088H
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	098H
CONST	ENDS
;	COMDAT ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DQ FLAT:??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DQ	FLAT:??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DQ FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DQ	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
	DQ	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
	DQ	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ
	DQ	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ
	DQ	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
	DQ	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
	DQ	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DQ	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DQ	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z
	DQ	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0ED@GFNHMOFC@ERROR?5?3?5Unable?5to?5initialize?5cr@
CONST	SEGMENT
??_C@_0ED@GFNHMOFC@ERROR?5?3?5Unable?5to?5initialize?5cr@ DB 'ERROR : Una'
	DB	'ble to initialize critical section in AtlWinModuleInit', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@EJEMLPD@ERROR?5?3?5Unable?5to?5initialize?5cr@
CONST	SEGMENT
??_C@_0EA@EJEMLPD@ERROR?5?3?5Unable?5to?5initialize?5cr@ DB 'ERROR : Unab'
	DB	'le to initialize critical section in CAtlComModule', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HB@NHAHFMOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HB@NHAHFMOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\atlmfc\include\atlbase.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OC@KMMBJFLB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OC@KMMBJFLB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@GMIHPBDM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@GMIHPBDM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H
	DB	's', 00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'u', 00H, ' '
	DB	00H, '-', 00H, ' ', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'l', 00H
	DB	's', 00H, ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?m_nCategory@CTrace@ATL@@1IA
_DATA	SEGMENT
?m_nCategory@CTrace@ATL@@1IA DD 0ffffffffH		; ATL::CTrace::m_nCategory
_DATA	ENDS
;	COMDAT ??_C@_1OE@BPCMJDLP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@BPCMJDLP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0@ DB '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@HCALAGOG@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@HCALAGOG@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xlocnum', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@PBEGAEEH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@PBEGAEEH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xlocale', 00H	; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_cast@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
_CTA2?AVbad_cast@std@@ DD 02H
	DD	imagerel _CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI2?AVbad_cast@std@@
xdata$x	SEGMENT
_TI2?AVbad_cast@std@@ DD 00H
	DD	imagerel ??1bad_cast@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast@ DB 'bad cast', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DQ FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DQ	FLAT:??_Ebad_cast@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
CONST	SEGMENT
??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '_', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '1', 00H
	DB	'2', 00H, ':', 00H, ':', 00H, '_', 00H, 'O', 00H, 'r', 00H, 'p'
	DB	00H, 'h', 00H, 'a', 00H, 'n', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEBIPEAI@std@@YAPEAIPEBI0PEAI@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@I@std@@YAPEAIPEAI@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU3?1??4@YA?AW45@1@Z@@Z DD 032901H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$pair@HH@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@HH@std@@@1@QEAU?$pair@HH@1@AEBU31@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBU?$pair@HH@std@@@std@@YAAEBU?$pair@HH@0@AEBU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$pair@HH@std@@@std@@YAPEAU?$pair@HH@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEADPEAPEBD@std@@YAPEAPEBDPEAPEAD0PEAPEBD@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEBIV?$allocator@I@std@@@std@@YAPEAIQEBI0PEAIAEAV?$allocator@I@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@U1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@$$QEAU3?1??4@YA?AW45@1@Z@@Z DD 032901H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEBUListData@@PEAU1@@std@@YAPEAUListData@@PEBU1@0PEAU1@@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@$$CBUListData@@@std@@YAPEBUListData@@QEBU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEBU?$pair@HH@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAXAEBU?$pair@HH@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAPEAU?$pair@HH@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@PEAU?$pair@HH@1@AEAV?$allocator@U?$pair@HH@std@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@$$CBU?$pair@HH@std@@@std@@YAPEBU?$pair@HH@0@QEBU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAPEADV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEAD0PEAPEBDAEAV?$allocator@PEBD@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAPEAIPEBI0PEAI@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@IV?$allocator@I@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@PEBI@std@@YA_JPEBI0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Verify_range@I@std@@YAXQEBI0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Verify_range@I@std@@YAXQEBI0@Z DB 040H
	DD	imagerel $ip2state$??$_Verify_range@I@std@@YAXQEBI0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Verify_range@I@std@@YAXQEBI0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Verify_range@I@std@@YAXQEBI0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@I@std@@@std@@YAAEBV?$allocator@I@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUCX_DESC@@PEAU1@@std@@YAPEAUCX_DESC@@PEAU1@00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@UCX_DESC@@@std@@YAPEAUCX_DESC@@QEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_copy<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_copy<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_copy<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAX$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@$$QEAV31@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEBUListData@@V?$allocator@UListData@@@std@@@std@@YAPEAUListData@@QEBU1@0PEAU1@AEAV?$allocator@UListData@@@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_copy<std::pair<int,int> const *,std::allocator<std::pair<int,int> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_copy<std::pair<int,int> const *,std::allocator<std::pair<int,int> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_copy<std::pair<int,int> const *,std::allocator<std::pair<int,int> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEAD0PEAPEBD@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@PEBDV?$allocator@PEBD@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@PEAPEAD@std@@YA_JPEAPEAD0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Verify_range@PEAD@std@@YAXQEBQEAD0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Verify_range@PEAD@std@@YAXQEBQEAD0@Z DB 040H
	DD	imagerel $ip2state$??$_Verify_range@PEAD@std@@YAXQEBQEAD0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Verify_range@PEAD@std@@YAXQEBQEAD0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Verify_range@PEAD@std@@YAXQEBQEAD0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@PEBD@std@@@std@@YAAEBV?$allocator@PEBD@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	'8'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	0a5H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 022311H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d4H
	DB	02H
	DB	'r'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z
	DD	imagerel $ip2state$??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z DD 022d11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z$rtcName$0 DB 05fH ; std::vector<unsigned int,std::allocator<unsigned int> >::_Range_construct_or_tidy<unsigned int const *>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+9
??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z$rtcVarDesc DD 038H ; std::vector<unsigned int,std::allocator<unsigned int> >::_Range_construct_or_tidy<unsigned int const *>
	DD	08H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z$rtcName$0
	ORG $+48
??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z$rtcFrameData DD 01H ; std::vector<unsigned int,std::allocator<unsigned int> >::_Range_construct_or_tidy<unsigned int const *>
	DD	00H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@$$CBI@std@@YAPEBIQEBI@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@PEBIPEBI@std@@YAXAEBQEBI0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@I@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z DD 022e01H
	DD	07010f217H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@UListData@@@std@@YAPEAUListData@@PEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@YAPEAUCX_DESC@@QEAU1@0PEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU2?1??3@YA?AW44@0@Z@11@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	088H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@QEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@YAPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAPEAUListData@@PEBU2@0PEAU2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@PEBUListData@@@std@@YA_JPEBUListData@@0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@UListData@@@std@@@std@@YAAEBV?$allocator@UListData@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAPEAU?$pair@HH@1@PEBU21@0PEAU21@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@PEBU?$pair@HH@std@@@std@@YA_JPEBU?$pair@HH@0@0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@U?$pair@HH@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@HH@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d4H
	DB	02H
	DB	'r'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z
	DD	imagerel $ip2state$??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z DD 022d11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z$rtcName$0 DB 05fH ; std::vector<char const *,std::allocator<char const *> >::_Range_construct_or_tidy<char * *>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+9
??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z$rtcVarDesc DD 038H ; std::vector<char const *,std::allocator<char const *> >::_Range_construct_or_tidy<char * *>
	DD	08H
	DQ	FLAT:??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z$rtcName$0
	ORG $+48
??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z$rtcFrameData DD 01H ; std::vector<char const *,std::allocator<char const *> >::_Range_construct_or_tidy<char * *>
	DD	00H
	DQ	FLAT:??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@PEAD@std@@YAPEAPEADQEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@PEAPEADPEAPEAD@std@@YAXAEBQEAPEAD0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@PEBD@std@@$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEBD@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	089H, 03H
	DB	02H
	DB	'B'
	DB	04H
	DB	'e', 08H
	DB	02H
	DB	'x'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 02H
	DB	00H
	DD	imagerel ?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	imagerel $tryMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	imagerel $ip2state$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcName$0 DB 05fH ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcVarDesc DD 038H ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
	DD	010H
	DQ	FLAT:??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcName$0
	ORG $+48
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcFrameData DD 01H ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@H@std@@YA$$QEAHAEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAVCQSVPipeline@@@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCQSVPipeline@@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'=', 02H
	DB	02H
	DB	0baH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z
	DD	imagerel $ip2state$??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z DD 023311H
	DD	07015f21cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z$rtcName$0 DB 024H ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> ><unsigned int const *,void>
	DB	053H
	DB	035H
	DB	032H
	DB	00H
	ORG $+3
??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z$rtcName$1 DB 05fH ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> ><unsigned int const *,void>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z$rtcVarDesc DD 058H ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> ><unsigned int const *,void>
	DD	010H
	DQ	FLAT:??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z$rtcName$0
	ORG $+96
??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z$rtcFrameData DD 02H ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> ><unsigned int const *,void>
	DD	00H
	DQ	FLAT:??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@$0A@@std@@YAPEBUListData@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD 022801H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z DB 040H
	DD	imagerel $ip2state$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	088H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > *,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > *,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > *,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPEAIQEAIAEAV?$allocator@I@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$03@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UListData@@@std@@@std@@YAXPEAUListData@@QEAU1@AEAV?$allocator@UListData@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@QEAU10@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@QEAU10@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@QEAU10@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@QEAU10@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@QEAU10@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$pair@HH@std@@@std@@@std@@YAXPEAU?$pair@HH@0@QEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UCX_DESC@@@std@@@std@@YAXPEAUCX_DESC@@QEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD 033301H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc DD 048H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@D@std@@YAPEADAEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z DD 033301H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0I@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@I@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d4H
	DB	02H
	DB	'r'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z
	DD	imagerel $ip2state$??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z DD 022d11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z$rtcName$0 DB 05fH ; std::vector<ListData,std::allocator<ListData> >::_Range_construct_or_tidy<ListData const *>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+9
??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z$rtcVarDesc DD 038H ; std::vector<ListData,std::allocator<ListData> >::_Range_construct_or_tidy<ListData const *>
	DD	08H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z$rtcName$0
	ORG $+48
??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z$rtcFrameData DD 01H ; std::vector<ListData,std::allocator<ListData> >::_Range_construct_or_tidy<ListData const *>
	DD	00H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@UListData@@@std@@$$V@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@UListData@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UListData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UListData@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d4H
	DB	02H
	DB	'r'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z
	DD	imagerel $ip2state$??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z DD 022d11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z$rtcName$0 DB 05fH ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Range_construct_or_tidy<std::pair<int,int> const *>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+9
??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z$rtcVarDesc DD 038H ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Range_construct_or_tidy<std::pair<int,int> const *>
	DD	08H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z$rtcName$0
	ORG $+48
??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z$rtcFrameData DD 01H ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Range_construct_or_tidy<std::pair<int,int> const *>
	DD	00H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@U?$pair@HH@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$pair@HH@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@HH@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'd'
	DB	02H
	DB	'M', 02H
	DB	04H
	DB	'v'
	DB	02H
	DB	'.'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
	DD	imagerel $ip2state$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DD 032411H
	DD	012010dH
	DD	07006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcName$0 DB 05fH ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcName$1 DB 05fH ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	DB	050H
	DB	073H
	DB	061H
	DB	076H
	DB	065H
	DB	00H
	ORG $+1
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcName$2 DB 05fH ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	DB	050H
	DB	073H
	DB	061H
	DB	076H
	DB	065H
	DB	05fH
	DB	067H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+3
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcVarDesc DD 078H ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	DD	08H
	DQ	FLAT:??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcName$1
	DD	024H
	DD	04H
	DQ	FLAT:??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcName$0
	ORG $+144
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcFrameData DD 03H ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	DD	00H
	DQ	FLAT:??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UCX_DESC@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UCX_DESC@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z DB 06H
	DB	00H
	DB	00H
	DB	'Q', 04H
	DB	02H
	DB	099H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@UCX_DESC@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SAXAEAV?$allocator@UCX_DESC@@@1@QEAUCX_DESC@@AEBU3@@Z DD 032901H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@UCX_DESC@@@std@@YAPEAUCX_DESC@@PEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXAEBUCX_DESC@@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBUCX_DESC@@@std@@YAAEBUCX_DESC@@AEBU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z DB 06H
	DB	00H
	DB	00H
	DB	'Q', 04H
	DB	02H
	DB	099H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEBV31@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@PEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z DB 06H
	DB	00H
	DB	00H
	DB	081H, 04H
	DB	02H
	DB	099H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU3?1??4@YA?AW45@1@Z@@Z DD 032901H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU1?1??2@YA?AW43@0@Z@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'M', 04H
	DB	02H
	DB	'}', 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy_maybe_null@PEBD@std@@YAPEAPEBDPEAPEBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'=', 02H
	DB	02H
	DB	0baH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z
	DD	imagerel $ip2state$??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z DD 023311H
	DD	07015f21cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z$rtcName$0 DB 024H ; std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> ><char * * const,void>
	DB	053H
	DB	034H
	DB	038H
	DB	00H
	ORG $+3
??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z$rtcName$1 DB 05fH ; std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> ><char * * const,void>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z$rtcVarDesc DD 058H ; std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> ><char * * const,void>
	DD	010H
	DQ	FLAT:??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z$rtcName$0
	ORG $+96
??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z$rtcFrameData DD 02H ; std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> ><char * * const,void>
	DD	00H
	DQ	FLAT:??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z$rtcName$0 DB 05fH ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z$rtcVarDesc DD 024H ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z$rtcFrameData DD 01H ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?data@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?data@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDXZ DB 040H
	DD	imagerel $ip2state$?data@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?data@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
	DB	053H
	DB	031H
	DB	033H
	DB	00H
	ORG $+11
??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
	DD	01H
	DQ	FLAT:??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
	DD	00H
	DQ	FLAT:??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEBD@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z$rtcName$0 DB 05fH ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z$rtcVarDesc DD 024H ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z$rtcFrameData DD 01H ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K2@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU3?1??4@YA?AW45@0@Z@11@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z DB 040H
	DD	imagerel $ip2state$??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::~vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DB	053H
	DB	031H
	DB	034H
	DB	00H
	ORG $+11
??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::~vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DD	01H
	DQ	FLAT:??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::~vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DD	00H
	DQ	FLAT:??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_construct@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'5', 03H
	DB	02H
	DB	08cH
	DB	04H
	DB	'j'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z DD 032911H
	DD	0180112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z$rtcName$0 DB 024H ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DB	053H
	DB	034H
	DB	039H
	DB	00H
	ORG $+3
??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z$rtcName$1 DB 05fH ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z$rtcName$2 DB 05fH ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+1
??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z$rtcFrameData DD 03H ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DD	00H
	DQ	FLAT:??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z$rtcVarDesc
	ORG $+8
??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z$rtcVarDesc DD 0a8H ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
	DD	08H
	DQ	FLAT:??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z$rtcName$2
	DD	078H
	DD	010H
	DQ	FLAT:??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA?AV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@AEBV32@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA_KAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z$rtcName$0 DB 05fH ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z$rtcVarDesc DD 024H ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z$rtcFrameData DD 01H ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@PEAV32@00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z DB 06H
	DB	00H
	DB	00H
	DB	05H, 02H
	DB	02H
	DB	'@'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0??_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z DB 018H
	DD	imagerel $stateUnwindMap$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z
	DD	imagerel $tryMap$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z
	DD	imagerel $ip2state$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z DD 022319H
	DD	0700b920fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
	DB	053H
	DB	031H
	DB	035H
	DB	00H
	ORG $+11
??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
	DD	01H
	DQ	FLAT:??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
	DD	00H
	DQ	FLAT:??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UCX_DESC@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UCX_DESC@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAAEBV?$allocator@UCX_DESC@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z$rtcName$0 DB 05fH ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z$rtcVarDesc DD 024H ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z$rtcFrameData DD 01H ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXQEAUCX_DESC@@_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAPEAUCX_DESC@@PEAU3@00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z DB 040H
	DD	imagerel $ip2state$??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<CX_DESC,std::allocator<CX_DESC> >::~vector<CX_DESC,std::allocator<CX_DESC> >
	DB	053H
	DB	031H
	DB	036H
	DB	00H
	ORG $+11
??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<CX_DESC,std::allocator<CX_DESC> >::~vector<CX_DESC,std::allocator<CX_DESC> >
	DD	01H
	DQ	FLAT:??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<CX_DESC,std::allocator<CX_DESC> >::~vector<CX_DESC,std::allocator<CX_DESC> >
	DD	00H
	DQ	FLAT:??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SA_KAEBV?$allocator@UCX_DESC@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UCX_DESC@@@std@@QEAAPEAUCX_DESC@@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UCX_DESC@@@std@@QEAAXQEAUCX_DESC@@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@UCX_DESC@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0benchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ DD 033619H
	DD	01a010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0c0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcName$1 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	DB	044H
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+2
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcVarDesc DD 088H ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	DD	08H
	DQ	FLAT:?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcName$1
	DD	048H
	DD	020H
	DQ	FLAT:?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcName$0
	ORG $+96
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcFrameData DD 02H ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	DD	00H
	DQ	FLAT:?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z DD 032e01H
	DD	0160117H
	DD	07010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::_Init
	DB	050H
	DB	062H
	DB	00H
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcName$1 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::_Init
	DB	050H
	DB	06eH
	DB	00H
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcName$2 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::_Init
	DB	04eH
	DB	072H
	DB	00H
	ORG $+4
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcVarDesc DD 088H ; std::basic_filebuf<char,std::char_traits<char> >::_Init
	DD	08H
	DQ	FLAT:?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcName$2
	DD	068H
	DD	08H
	DQ	FLAT:?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcName$0
	ORG $+144
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcFrameData DD 03H ; std::basic_filebuf<char,std::char_traits<char> >::_Init
	DD	00H
	DQ	FLAT:?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
	DB	04fH
	DB	066H
	DB	066H
	DB	00H
	ORG $+11
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z$rtcVarDesc DD 028H ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
	DD	08H
	DQ	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z$rtcName$0
	ORG $+48
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z$rtcFrameData DD 01H ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
	DD	00H
	DQ	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
	DB	046H
	DB	069H
	DB	06cH
	DB	065H
	DB	070H
	DB	06fH
	DB	073H
	DB	069H
	DB	074H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	ORG $+2
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z$rtcVarDesc DD 028H ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
	DD	08H
	DQ	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z$rtcName$0
	ORG $+48
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z$rtcFrameData DD 01H ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
	DD	00H
	DQ	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z DD 022b01H
	DD	07010d214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
	DB	043H
	DB	06fH
	DB	075H
	DB	06eH
	DB	074H
	DB	05fH
	DB	073H
	DB	00H
	ORG $+7
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcName$1 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
	DB	041H
	DB	076H
	DB	061H
	DB	069H
	DB	06cH
	DB	061H
	DB	062H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+5
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcVarDesc DD 048H ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
	DD	08H
	DQ	FLAT:?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcName$0
	ORG $+96
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcFrameData DD 02H ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
	DD	00H
	DQ	FLAT:?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DB 016H
	DB	00H
	DB	00H
	DB	08dH, 04H
	DB	02H
	DB	'd'
	DB	00H
	DB	','
	DB	02H
	DB	09dH, 06H
	DB	00H
	DB	'&'
	DB	02H
	DB	'z'
	DB	00H
	DB	'&'
	DB	02H
	DB	018H
	DB	00H
	DB	'&'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DB 08H
	DD	imagerel $stateUnwindMap$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DD	imagerel $ip2state$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 033619H
	DD	02c010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DD	0152H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DB	043H
	DB	068H
	DB	00H
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$1 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$2 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DB	053H
	DB	072H
	DB	063H
	DB	00H
	ORG $+3
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$3 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DB	043H
	DB	068H
	DB	00H
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$4 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DB	044H
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+2
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcVarDesc DD 0e8H ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DD	08H
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$4
	DD	0c4H
	DD	01H
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$3
	DD	0a8H
	DD	08H
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$2
	DD	068H
	DD	028H
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$0
	ORG $+240
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcFrameData DD 05H ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DD	00H
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::underflow
	DB	04dH
	DB	065H
	DB	074H
	DB	061H
	DB	00H
	ORG $+10
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcVarDesc DD 024H ; std::basic_filebuf<char,std::char_traits<char> >::underflow
	DD	04H
	DQ	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$0
	ORG $+48
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcFrameData DD 01H ; std::basic_filebuf<char,std::char_traits<char> >::underflow
	DD	00H
	DQ	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD 022201H
	DD	0700a720eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD 033a19H
	DD	0240111H
	DD	0700aH
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::overflow
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$1 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::overflow
	DB	043H
	DB	068H
	DB	00H
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$2 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::overflow
	DB	053H
	DB	072H
	DB	063H
	DB	00H
	ORG $+3
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$3 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::overflow
	DB	044H
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+6
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcVarDesc DD 0d8H ; std::basic_filebuf<char,std::char_traits<char> >::overflow
	DD	08H
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$3
	DD	0b8H
	DD	08H
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$2
	DD	094H
	DD	01H
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$1
	DD	058H
	DD	020H
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$0
	ORG $+192
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcFrameData DD 04H ; std::basic_filebuf<char,std::char_traits<char> >::overflow
	DD	00H
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DB 06H
	DB	00H
	DB	00H
	DB	'a', 02H
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DB 08H
	DD	imagerel $stateUnwindMap$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
	DD	imagerel $ip2state$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DD 022d11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'Z'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DD	imagerel $ip2state$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'^'
	DB	02H
	DB	'D'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
	DD	imagerel $ip2state$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	0e8H
	DB	02H
	DB	'('
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DD	imagerel $ip2state$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DB 06H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
	DB	086H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
	DD	imagerel $ip2state$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DD 022d11H
	DD	070155219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z DB 0aH
	DB	00H
	DB	00H
	DB	0c0H
	DB	02H
	DB	'b'
	DB	04H
	DB	0aeH
	DB	06H
	DB	0a0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
	DD	imagerel $ip2state$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z DD 022d11H
	DD	070155219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z DD 021c01H
	DD	070051209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcName$0 DB 05fH ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
	DB	050H
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+10
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcVarDesc DD 038H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
	DD	08H
	DQ	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcName$0
	ORG $+48
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcFrameData DD 01H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
	DD	00H
	DQ	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD 022201H
	DD	0700a720eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD 022201H
	DD	0700ab20eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 06H
	DB	00H
	DB	00H
	DB	0baH
	DB	04H
	DB	0f5H, 03H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 08H
	DD	imagerel $stateUnwindMap$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	imagerel $ip2state$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 033b19H
	DD	0120112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	082H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcName$0 DB 05fH ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+8
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcVarDesc DD 028H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	DD	028H
	DQ	FLAT:?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcName$0
	ORG $+48
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcFrameData DD 01H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	DD	00H
	DQ	FLAT:?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'Z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
	DD	imagerel $ip2state$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
	DD	imagerel $ip2state$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	084H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 08H
	DD	imagerel $stateUnwindMap$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	imagerel $ip2state$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 022311H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	0e8H
	DB	02H
	DB	'('
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
	DD	imagerel $ip2state$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 08H
	DB	00H
	DB	00H
	DB	0d4H
	DB	02H
	DB	'\'
	DB	04H
	DB	0b2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
	DD	imagerel $ip2state$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD 022711H
	DD	0700f5213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$initializer_list@U?$pair@HH@std@@@std@@QEAA@PEBU?$pair@HH@1@0@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEAU?$pair@HH@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z DB 040H
	DD	imagerel $ip2state$??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
	DB	053H
	DB	031H
	DB	037H
	DB	00H
	ORG $+11
??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	')', 02H
	DB	02H
	DB	090H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z
	DD	imagerel $ip2state$??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z DD 022e11H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z$rtcName$0 DB 024H ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
	DB	053H
	DB	031H
	DB	038H
	DB	00H
	ORG $+3
??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z$rtcName$1 DB 05fH ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z$rtcVarDesc DD 058H ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
	DD	010H
	DQ	FLAT:??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z$rtcName$0
	ORG $+96
??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z$rtcFrameData DD 02H ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
	DD	00H
	DQ	FLAT:??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@HH@std@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$pair@HH@std@@@std@@QEAAPEAU?$pair@HH@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$pair@HH@std@@@std@@QEAAXQEAU?$pair@HH@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$pair@HH@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z DB 040H
	DD	imagerel $ip2state$??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAAAEAU?$default_delete@VCQSVPipeline@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@VCQSVPipeline@@@std@@QEBAXPEAVCQSVPipeline@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
	DB	053H
	DB	035H
	DB	033H
	DB	00H
	ORG $+11
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
	DD	01H
	DQ	FLAT:??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
	DD	00H
	DQ	FLAT:??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBAAEBU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBAAEBU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@_K@Z DB 040H
	DD	imagerel $ip2state$??A?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBAAEBU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBAAEBU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@_K@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBAAEBU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	DB	053H
	DB	031H
	DB	039H
	DB	00H
	ORG $+11
??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??0?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_construct@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@QEAAXQEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z DB 04H
	DB	00H
	DB	00H
	DB	0a8H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z DB 08H
	DD	imagerel $stateUnwindMap$??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z
	DD	imagerel $ip2state$??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z DD 022311H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEAA@AEAW4FeatureListStrType@@AEAPEAU_iobuf@@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'F'
	DB	02H
	DB	'f'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$initializer_list@UListData@@@std@@QEAA@PEBUListData@@0@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z DB 08H
	DB	00H
	DB	00H
	DB	'b'
	DB	04H
	DB	'Y', 02H
	DB	02H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z
	DD	imagerel $ip2state$??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z DD 033111H
	DD	07016c21aH
	DD	06015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_4d8cc05983fd0010d774c5fc658865f4>@@QEBAHHUListData@@@Z DD 022701H
	DD	0700f5213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEBAPEBUListData@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@1@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'<'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UListData@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UListData@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEBAAEBV?$allocator@UListData@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEAUListData@@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >
	DB	053H
	DB	032H
	DB	030H
	DB	00H
	ORG $+11
??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >
	DD	01H
	DQ	FLAT:??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >
	DD	00H
	DQ	FLAT:??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	')', 02H
	DB	02H
	DB	090H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z
	DD	imagerel $ip2state$??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z DD 022e11H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z$rtcName$0 DB 024H ; std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >
	DB	053H
	DB	032H
	DB	031H
	DB	00H
	ORG $+3
??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z$rtcName$1 DB 05fH ; std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z$rtcVarDesc DD 058H ; std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >
	DD	010H
	DQ	FLAT:??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z$rtcName$0
	ORG $+96
??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z$rtcFrameData DD 02H ; std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >
	DD	00H
	DQ	FLAT:??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@UListData@@@std@@@std@@SA_KAEBV?$allocator@UListData@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UListData@@@std@@QEAAPEAUListData@@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UListData@@@std@@QEAAXQEAUListData@@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@UListData@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
CONST	SEGMENT
?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z$rtcName$0 DB 073H ; PrintListOptions
	DB	074H
	DB	072H
	DB	00H
?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z$rtcName$0 DB 073H ; PrintMultipleListOptions
	DB	074H
	DB	072H
	DB	00H
?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z$rtcName$1 DB 06cH ; PrintMultipleListOptions
	DB	069H
	DB	06eH
	DB	065H
	DB	00H
	ORG $+3
?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z$rtcVarDesc DD 038H ; PrintListOptions
	DD	028H
	DQ	FLAT:?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z$rtcName$0
	ORG $+48
?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z$rtcFrameData DD 01H ; PrintListOptions
	DD	00H
	DQ	FLAT:?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z$rtcVarDesc
?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z$rtcVarDesc DD 0e8H ; PrintMultipleListOptions
	DD	028H
	DQ	FLAT:?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z$rtcName$0
	ORG $+96
?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z$rtcFrameData DD 02H ; PrintMultipleListOptions
	DD	00H
	DQ	FLAT:?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z$rtcVarDesc
?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcName$0 DB 073H ; help
	DB	074H
	DB	072H
	DB	00H
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$0 DB 066H ; writeFeatureList
	DB	070H
	DB	00H
	ORG $+1
?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcFrameData DD 01H ; help
	DD	00H
	DQ	FLAT:?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcVarDesc
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$3 DB 06fH ; writeFeatureList
	DB	073H
	DB	076H
	DB	065H
	DB	072H
	DB	00H
	ORG $+2
?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcVarDesc DD 078H ; help
	DD	028H
	DQ	FLAT:?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcName$0
	ORG $+48
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$1 DB 070H ; writeFeatureList
	DB	072H
	DB	069H
	DB	06eH
	DB	074H
	DB	05fH
	DB	074H
	DB	073H
	DB	074H
	DB	072H
	DB	069H
	DB	06eH
	DB	067H
	DB	00H
	ORG $+2
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$2 DB 065H ; writeFeatureList
	DB	06eH
	DB	076H
	DB	069H
	DB	072H
	DB	06fH
	DB	06eH
	DB	06dH
	DB	065H
	DB	06eH
	DB	074H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$4 DB 06fH ; writeFeatureList
	DB	073H
	DB	076H
	DB	065H
	DB	072H
	DB	073H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	ORG $+2
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$5 DB 074H ; writeFeatureList
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+3
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$6 DB 06cH ; writeFeatureList
	DB	069H
	DB	062H
	DB	00H
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$7 DB 063H ; writeFeatureList
	DB	06fH
	DB	064H
	DB	065H
	DB	063H
	DB	05fH
	DB	066H
	DB	065H
	DB	061H
	DB	074H
	DB	075H
	DB	072H
	DB	065H
	DB	05fH
	DB	06cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+1
?parse_print_options@@YAHPEBD0@Z$rtcName$0 DB 06cH	; parse_print_options
	DB	069H
	DB	062H
	DB	00H
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$8 DB 063H ; writeFeatureList
	DB	06fH
	DB	064H
	DB	065H
	DB	063H
	DB	05fH
	DB	066H
	DB	065H
	DB	061H
	DB	074H
	DB	075H
	DB	072H
	DB	065H
	DB	00H
	ORG $+2
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$9 DB 076H ; writeFeatureList
	DB	070H
	DB	070H
	DB	048H
	DB	065H
	DB	061H
	DB	064H
	DB	065H
	DB	072H
	DB	00H
	ORG $+2
?parse_print_options@@YAHPEBD0@Z$rtcName$2 DB 06fH	; parse_print_options
	DB	075H
	DB	074H
	DB	070H
	DB	075H
	DB	074H
	DB	00H
	ORG $+1
?parse_print_options@@YAHPEBD0@Z$rtcName$4 DB 076H	; parse_print_options
	DB	065H
	DB	072H
	DB	00H
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$10 DB 076H ; writeFeatureList
	DB	070H
	DB	070H
	DB	046H
	DB	065H
	DB	061H
	DB	074H
	DB	075H
	DB	072H
	DB	065H
	DB	073H
	DB	00H
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$6 DB 076H ; run_benchmark
	DB	065H
	DB	072H
	DB	00H
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$11 DB 064H ; writeFeatureList
	DB	065H
	DB	063H
	DB	048H
	DB	065H
	DB	061H
	DB	064H
	DB	065H
	DB	072H
	DB	00H
	ORG $+2
?parse_print_options@@YAHPEBD0@Z$rtcName$3 DB 06fH	; parse_print_options
	DB	075H
	DB	074H
	DB	070H
	DB	075H
	DB	074H
	DB	00H
	ORG $+1
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$8 DB 073H ; run_benchmark
	DB	073H
	DB	00H
	ORG $+1
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$12 DB 064H ; writeFeatureList
	DB	065H
	DB	063H
	DB	046H
	DB	065H
	DB	061H
	DB	074H
	DB	075H
	DB	072H
	DB	065H
	DB	073H
	DB	00H
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$18 DB 073H ; run_benchmark
	DB	073H
	DB	00H
	ORG $+1
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$13 DB 065H ; writeFeatureList
	DB	078H
	DB	065H
	DB	050H
	DB	061H
	DB	074H
	DB	068H
	DB	00H
?parse_print_options@@YAHPEBD0@Z$rtcName$1 DB 074H	; parse_print_options
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+3
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcVarDesc DD 0430H ; writeFeatureList
	DD	0400H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$13
	DD	03e8H
	DD	028H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$12
	DD	03a8H
	DD	028H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$11
	DD	0368H
	DD	028H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$10
	DD	0328H
	DD	028H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$9
	DD	02e8H
	DD	028H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$8
	DD	0298H
	DD	020H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$7
	DD	0274H
	DD	04H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$6
	DD	0254H
	DD	04H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$5
	DD	0218H
	DD	028H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$4
	DD	0e0H
	DD	011cH
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$3
	DD	098H
	DD	028H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$2
	DD	068H
	DD	010H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcName$0
	ORG $+672
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcFrameData DD 0eH ; writeFeatureList
	DD	00H
	DQ	FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcVarDesc
?parse_print_options@@YAHPEBD0@Z$rtcName$5 DB 074H	; parse_print_options
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+3
?parse_print_options@@YAHPEBD0@Z$rtcName$6 DB 068H	; parse_print_options
	DB	077H
	DB	06cH
	DB	069H
	DB	062H
	DB	00H
	ORG $+2
?parse_print_options@@YAHPEBD0@Z$rtcName$7 DB 073H	; parse_print_options
	DB	077H
	DB	06cH
	DB	069H
	DB	062H
	DB	00H
	ORG $+2
?parse_print_options@@YAHPEBD0@Z$rtcFrameData DD 08H	; parse_print_options
	DD	00H
	DQ	FLAT:?parse_print_options@@YAHPEBD0@Z$rtcVarDesc
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$0 DB 062H ; run_benchmark
	DB	065H
	DB	06eH
	DB	063H
	DB	068H
	DB	06dH
	DB	061H
	DB	072H
	DB	06bH
	DB	04cH
	DB	06fH
	DB	067H
	DB	046H
	DB	069H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+7
?parse_print_options@@YAHPEBD0@Z$rtcVarDesc DD 01a4H	; parse_print_options
	DD	04H
	DQ	FLAT:?parse_print_options@@YAHPEBD0@Z$rtcName$7
	DD	0184H
	DD	04H
	DQ	FLAT:?parse_print_options@@YAHPEBD0@Z$rtcName$6
	DD	0164H
	DD	04H
	DQ	FLAT:?parse_print_options@@YAHPEBD0@Z$rtcName$5
	DD	0144H
	DD	04H
	DQ	FLAT:?parse_print_options@@YAHPEBD0@Z$rtcName$4
	DD	0108H
	DD	028H
	DQ	FLAT:?parse_print_options@@YAHPEBD0@Z$rtcName$3
	DD	0c8H
	DD	028H
	DQ	FLAT:?parse_print_options@@YAHPEBD0@Z$rtcName$2
	DD	0a4H
	DD	04H
	DQ	FLAT:?parse_print_options@@YAHPEBD0@Z$rtcName$1
	DD	084H
	DD	04H
	DQ	FLAT:?parse_print_options@@YAHPEBD0@Z$rtcName$0
	ORG $+384
?run_encode@@YAHPEAUsInputParams@@@Z$rtcName$0 DB 070H	; run_encode
	DB	050H
	DB	069H
	DB	070H
	DB	065H
	DB	06cH
	DB	069H
	DB	06eH
	DB	065H
	DB	00H
	ORG $+6
?run_encode@@YAHPEAUsInputParams@@@Z$rtcVarDesc DD 038H	; run_encode
	DD	08H
	DQ	FLAT:?run_encode@@YAHPEAUsInputParams@@@Z$rtcName$0
	ORG $+48
?run_encode@@YAHPEAUsInputParams@@@Z$rtcFrameData DD 01H ; run_encode
	DD	00H
	DQ	FLAT:?run_encode@@YAHPEAUsInputParams@@@Z$rtcVarDesc
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$1 DB 074H ; run_benchmark
	DB	065H
	DB	073H
	DB	074H
	DB	05fH
	DB	072H
	DB	065H
	DB	073H
	DB	06fH
	DB	06cH
	DB	075H
	DB	074H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$2 DB 070H ; run_benchmark
	DB	050H
	DB	069H
	DB	070H
	DB	065H
	DB	06cH
	DB	069H
	DB	06eH
	DB	065H
	DB	00H
	ORG $+2
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$17 DB 072H ; run_benchmark
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?run@@YAHHQEAPEAD@Z$rtcName$2 DB 065H			; run
	DB	072H
	DB	072H
	DB	00H
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$3 DB 063H ; run_benchmark
	DB	075H
	DB	072H
	DB	072H
	DB	065H
	DB	06eH
	DB	074H
	DB	05fH
	DB	074H
	DB	069H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+3
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$4 DB 065H ; run_benchmark
	DB	06eH
	DB	063H
	DB	06fH
	DB	064H
	DB	065H
	DB	05fH
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+4
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$5 DB 068H ; run_benchmark
	DB	061H
	DB	072H
	DB	064H
	DB	077H
	DB	061H
	DB	072H
	DB	065H
	DB	00H
	ORG $+7
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$7 DB 065H ; run_benchmark
	DB	06eH
	DB	076H
	DB	069H
	DB	072H
	DB	06fH
	DB	06dH
	DB	065H
	DB	06eH
	DB	074H
	DB	05fH
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$9 DB 066H ; run_benchmark
	DB	070H
	DB	05fH
	DB	062H
	DB	065H
	DB	06eH
	DB	063H
	DB	068H
	DB	00H
	ORG $+7
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$10 DB 062H ; run_benchmark
	DB	065H
	DB	06eH
	DB	063H
	DB	068H
	DB	06dH
	DB	061H
	DB	072H
	DB	06bH
	DB	05fH
	DB	06cH
	DB	06fH
	DB	067H
	DB	05fH
	DB	074H
	DB	065H
	DB	073H
	DB	074H
	DB	05fH
	DB	06fH
	DB	070H
	DB	065H
	DB	06eH
	DB	00H
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$11 DB 064H ; run_benchmark
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+3
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$12 DB 06cH ; run_benchmark
	DB	069H
	DB	073H
	DB	074H
	DB	05fH
	DB	074H
	DB	061H
	DB	072H
	DB	067H
	DB	065H
	DB	074H
	DB	05fH
	DB	071H
	DB	075H
	DB	061H
	DB	06cH
	DB	069H
	DB	074H
	DB	079H
	DB	00H
	ORG $+4
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$13 DB 062H ; run_benchmark
	DB	065H
	DB	06eH
	DB	063H
	DB	068H
	DB	06dH
	DB	061H
	DB	072H
	DB	06bH
	DB	05fH
	DB	072H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+7
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$14 DB 062H ; run_benchmark
	DB	065H
	DB	06eH
	DB	063H
	DB	068H
	DB	06dH
	DB	061H
	DB	072H
	DB	06bH
	DB	05fH
	DB	070H
	DB	065H
	DB	072H
	DB	05fH
	DB	074H
	DB	061H
	DB	072H
	DB	067H
	DB	065H
	DB	074H
	DB	05fH
	DB	075H
	DB	073H
	DB	061H
	DB	067H
	DB	065H
	DB	00H
	ORG $+5
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$15 DB 070H ; run_benchmark
	DB	050H
	DB	069H
	DB	070H
	DB	065H
	DB	06cH
	DB	069H
	DB	06eH
	DB	065H
	DB	00H
	ORG $+2
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$16 DB 064H ; run_benchmark
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+7
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$19 DB 06dH ; run_benchmark
	DB	061H
	DB	078H
	DB	04cH
	DB	065H
	DB	06eH
	DB	067H
	DB	074H
	DB	068H
	DB	04fH
	DB	066H
	DB	054H
	DB	061H
	DB	072H
	DB	067H
	DB	065H
	DB	074H
	DB	055H
	DB	073H
	DB	061H
	DB	067H
	DB	065H
	DB	044H
	DB	065H
	DB	073H
	DB	063H
	DB	00H
	ORG $+5
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$20 DB 066H ; run_benchmark
	DB	070H
	DB	05fH
	DB	062H
	DB	065H
	DB	06eH
	DB	063H
	DB	068H
	DB	00H
	ORG $+7
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcVarDesc DD 01938H ; run_benchmark
	DD	08H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$20
	DD	01914H
	DD	04H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$19
	DD	01800H
	DD	0f8H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$18
	DD	017b8H
	DD	028H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$17
	DD	016f0H
	DD	0b0H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$16
	DD	016c8H
	DD	08H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$15
	DD	01668H
	DD	020H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$14
	DD	01628H
	DD	020H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$13
	DD	015e8H
	DD	020H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$12
	DD	01520H
	DD	0b0H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$11
	DD	013d0H
	DD	0108H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$10
	DD	012e8H
	DD	08H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$9
	DD	011d0H
	DD	0f8H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$8
	DD	01188H
	DD	028H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$7
	DD	01164H
	DD	04H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$6
	DD	01144H
	DD	01H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$5
	DD	0130H
	DD	01000H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$4
	DD	0108H
	DD	08H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$3
	DD	0e8H
	DD	08H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$2
	DD	098H
	DD	020H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$1
	DD	058H
	DD	028H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcName$0
	ORG $+1008
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcFrameData DD 015H ; run_benchmark
	DD	00H
	DQ	FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcVarDesc
?run@@YAHHQEAPEAD@Z$rtcName$0 DB 050H			; run
	DB	061H
	DB	072H
	DB	061H
	DB	06dH
	DB	073H
	DB	00H
	ORG $+1
?run@@YAHHQEAPEAD@Z$rtcName$1 DB 061H			; run
	DB	072H
	DB	067H
	DB	076H
	DB	043H
	DB	06fH
	DB	070H
	DB	079H
	DB	00H
	ORG $+7
?run@@YAHHQEAPEAD@Z$rtcName$3 DB 070H			; run
	DB	050H
	DB	069H
	DB	070H
	DB	065H
	DB	06cH
	DB	069H
	DB	06eH
	DB	065H
	DB	00H
	ORG $+6
?run@@YAHHQEAPEAD@Z$rtcFrameData DD 04H			; run
	DD	00H
	DQ	FLAT:?run@@YAHHQEAPEAD@Z$rtcVarDesc
	ORG $+8
?run@@YAHHQEAPEAD@Z$rtcVarDesc DD 0fe8H			; run
	DD	08H
	DQ	FLAT:?run@@YAHHQEAPEAD@Z$rtcName$3
	DD	0f30H
	DD	0a0H
	DQ	FLAT:?run@@YAHHQEAPEAD@Z$rtcName$2
	DD	0ee8H
	DD	020H
	DQ	FLAT:?run@@YAHHQEAPEAD@Z$rtcName$1
	DD	060H
	DD	0e70H
	DQ	FLAT:?run@@YAHHQEAPEAD@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fversion@dtl@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eversion@dtl@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???1ParseCmdError@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???1ParseCmdError@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1ParseCmdError@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1ParseCmdError@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ParseCmdError@@QEAA@XZ DB 0aH
	DB	00H
	DB	00H
	DB	'<'
	DB	06H
	DB	'$'
	DB	04H
	DB	'$'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ParseCmdError@@QEAA@XZ DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1ParseCmdError@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1ParseCmdError@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1ParseCmdError@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???1ParseCmdError@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ParseCmdError@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1ParseCmdError@@QEAA@XZ
	DD	imagerel $ip2state$??1ParseCmdError@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ParseCmdError@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ParseCmdError@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???0ParseCmdError@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0ParseCmdError@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0ParseCmdError@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ParseCmdError@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ParseCmdError@@QEAA@XZ DB 0aH
	DB	00H
	DB	00H
	DB	'X'
	DB	02H
	DB	'$'
	DB	04H
	DB	'$'
	DB	06H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ParseCmdError@@QEAA@XZ DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0ParseCmdError@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0ParseCmdError@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0ParseCmdError@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0ParseCmdError@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ParseCmdError@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0ParseCmdError@@QEAA@XZ
	DD	imagerel $ip2state$??0ParseCmdError@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ParseCmdError@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ParseCmdError@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEBAAEBV?$allocator@I@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAAAEAV?$allocator@I@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@I@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEBAAEBV?$allocator@I@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
	DB	053H
	DB	032H
	DB	036H
	DB	00H
	ORG $+11
??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
	DD	01H
	DQ	FLAT:??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
	DD	00H
	DQ	FLAT:??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SA_KAEBV?$allocator@I@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@I@std@@QEAAPEAI_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@I@std@@QEAAXQEAI_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@I@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$max@H@std@@YAAEBHAEBH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$max@H@std@@YAAEBHAEBH0@Z DB 040H
	DD	imagerel $ip2state$??$max@H@std@@YAAEBHAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@H@std@@YAAEBHAEBH0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$max@H@std@@YAAEBHAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$max@I@std@@YAAEBIAEBI0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$max@I@std@@YAAEBIAEBI0@Z DB 040H
	DD	imagerel $ip2state$??$max@I@std@@YAAEBIAEBI0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@I@std@@YAAEBIAEBI0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$max@I@std@@YAAEBIAEBI0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__F_AtlWinModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E_AtlWinModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Term@CAtlWinModule@ATL@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1CAtlWinModule@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CAtlWinModule@ATL@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1CAtlWinModule@ATL@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1CAtlWinModule@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1CAtlWinModule@ATL@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1CAtlWinModule@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??1CAtlWinModule@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAtlWinModule@ATL@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CAtlWinModule@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CAtlWinModule@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CAtlWinModule@ATL@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'R'
	DB	02H
	DB	0e6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CAtlWinModule@ATL@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0CAtlWinModule@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0CAtlWinModule@ATL@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0CAtlWinModule@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??0CAtlWinModule@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAtlWinModule@ATL@@QEAA@XZ DD 021e11H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0CAtlWinModule@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__F_AtlComModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E_AtlComModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Term@CAtlComModule@ATL@@QEAAXXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1CAtlComModule@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CAtlComModule@ATL@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1CAtlComModule@ATL@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1CAtlComModule@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1CAtlComModule@ATL@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1CAtlComModule@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??1CAtlComModule@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAtlComModule@ATL@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CAtlComModule@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CAtlComModule@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CAtlComModule@ATL@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'R'
	DB	02H
	DB	0b1H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CAtlComModule@ATL@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0CAtlComModule@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0CAtlComModule@ATL@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0CAtlComModule@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??0CAtlComModule@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAtlComModule@ATL@@QEAA@XZ DD 021e11H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0CAtlComModule@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Term@CComCriticalSection@ATL@@QEAAJXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Init@CComCriticalSection@ATL@@QEAAJXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CComCriticalSection@ATL@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CComCriticalSection@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_AtlRaiseException@ATL@@YAXKK@Z DD 022001H
	DD	07009320dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0b0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ DB 08H
	DD	imagerel $stateUnwindMap$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ
	DD	imagerel $ip2state$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ DD 022f11H
	DD	07014d218H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ$rtcName$0 DB 070H ; ATL::CTraceFileAndLineInfo::operator()
	DB	06cH
	DB	065H
	DB	00H
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ$rtcName$1 DB 070H ; ATL::CTraceFileAndLineInfo::operator()
	DB	074H
	DB	072H
	DB	00H
	ORG $+8
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ$rtcVarDesc DD 058H ; ATL::CTraceFileAndLineInfo::operator()
	DD	08H
	DQ	FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ$rtcName$0
	ORG $+96
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ$rtcFrameData DD 02H ; ATL::CTraceFileAndLineInfo::operator()
	DD	00H
	DQ	FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CPreserveLastError@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1CPreserveLastError@ATL@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1CPreserveLastError@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CPreserveLastError@ATL@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CPreserveLastError@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CPreserveLastError@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcName$0 DB 06eH ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
	DB	042H
	DB	079H
	DB	074H
	DB	065H
	DB	073H
	DB	00H
	ORG $+9
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcVarDesc DD 028H ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
	DD	08H
	DQ	FLAT:?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcName$0
	ORG $+48
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcFrameData DD 01H ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
	DD	00H
	DQ	FLAT:?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEBAPEADXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcName$0 DB 06eH ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	DB	042H
	DB	079H
	DB	074H
	DB	065H
	DB	073H
	DB	00H
	ORG $+9
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcVarDesc DD 028H ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	DD	08H
	DQ	FLAT:?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcName$0
	ORG $+48
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcFrameData DD 01H ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	DD	00H
	DQ	FLAT:?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z DD 033a19H
	DD	02c0111H
	DD	0700aH
	DD	imagerel __GSHandlerCheck
	DD	0150H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z$rtcName$0 DB 062H ; ATL::CTrace::RegisterCategory
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+9
?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z$rtcVarDesc DD 040H ; ATL::CTrace::RegisterCategory
	DD	0100H
	DQ	FLAT:?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z$rtcName$0
	ORG $+48
?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z$rtcFrameData DD 01H ; ATL::CTrace::RegisterCategory
	DD	00H
	DQ	FLAT:?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z DB 01eH
	DB	00H
	DB	00H
	DB	0c4H
	DB	02H
	DB	'8'
	DB	00H
	DB	01eH
	DB	02H
	DB	0e2H
	DB	00H
	DB	01eH
	DB	02H
	DB	016H
	DB	04H
	DB	'8'
	DB	02H
	DB	016H
	DB	00H
	DB	01eH
	DB	04H
	DB	0e2H
	DB	02H
	DB	016H
	DB	00H
	DB	018H
	DB	04H
	DB	'h'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z DB 08H
	DD	imagerel $stateUnwindMap$?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z
	DD	imagerel $ip2state$?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z DD 033211H
	DD	014011bH
	DD	07014H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z$rtcName$0 DB 073H	; ATL::CTrace::TraceV
	DB	07aH
	DB	042H
	DB	075H
	DB	066H
	DB	00H
	ORG $+2
?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z$rtcName$1 DB 077H	; ATL::CTrace::TraceV
	DB	073H
	DB	07aH
	DB	042H
	DB	075H
	DB	066H
	DB	00H
	ORG $+1
?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z$rtcVarDesc DD 068H ; ATL::CTrace::TraceV
	DD	08H
	DQ	FLAT:?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z$rtcName$0
	ORG $+96
?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z$rtcFrameData DD 02H ; ATL::CTrace::TraceV
	DD	00H
	DQ	FLAT:?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z DB 012H
	DB	00H
	DB	00H
	DB	'%', 05H
	DB	02H
	DB	'>'
	DB	00H
	DB	'$'
	DB	02H
	DB	0d4H
	DB	00H
	DB	'$'
	DB	02H
	DB	't'
	DB	00H
	DB	01eH
	DB	02H
	DB	't'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z DB 08H
	DD	imagerel $stateUnwindMap$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z
	DD	imagerel $ip2state$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z DD 034419H
	DD	0158011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z
	DD	0abaH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$0 DB 077H	; ATL::CTrace::TraceV
	DB	073H
	DB	07aH
	DB	043H
	DB	061H
	DB	074H
	DB	065H
	DB	067H
	DB	06fH
	DB	072H
	DB	079H
	DB	00H
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$1 DB 077H	; ATL::CTrace::TraceV
	DB	073H
	DB	07aH
	DB	042H
	DB	075H
	DB	066H
	DB	00H
	ORG $+5
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$2 DB 066H	; ATL::CTrace::TraceV
	DB	069H
	DB	06cH
	DB	065H
	DB	04eH
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+15
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcVarDesc DD 0890H ; ATL::CTrace::TraceV
	DD	0208H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$2
	DD	0868H
	DD	08H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$1
	DD	040H
	DD	0800H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$0
	ORG $+144
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcFrameData DD 03H ; ATL::CTrace::TraceV
	DD	00H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z DD 021c01H
	DD	070051209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceISAPI@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceSync@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceSecurity@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceUtil@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceMap@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceString@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceStencil@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceCache@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceTime@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceException@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceAllocation@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceNotImpl@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceSnapin@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceDBProvider@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceDBClient@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceHosting@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceControls@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceWindowing@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceRefcount@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceRegistrar@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceQI@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceCOM@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceGeneral@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@CCRTAllocator@ATL@@SAXPEAX@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?4U?$pair@HH@std@@$0A@@?$pair@HH@std@@QEAAAEAU01@AEBU01@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH$0A@@?$pair@HH@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	0a0H
	DB	04H
	DB	01H, 02H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DD 023d19H
	DD	07010f217H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
	DD	072H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcName$0 DB 05fH ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DB	041H
	DB	06eH
	DB	073H
	DB	00H
	ORG $+11
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcVarDesc DD 028H ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DD	028H
	DQ	FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcName$0
	ORG $+48
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcFrameData DD 01H ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspColorprimList@@YAXXZ DD 042b19H
	DD	023010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD 033d19H
	DD	07016821aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspTransferList@@YAXXZ DD 042b19H
	DD	02b010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspMatrixList@@YAXXZ DD 042b19H
	DD	029010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_tcscmp DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$HRESULT_FROM_WIN32 DD 021c01H
	DD	070051209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD 033b19H
	DD	07011e215H
	DD	06010H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD 033b19H
	DD	07011e215H
	DD	06010H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
xdata	SEGMENT
$unwind$localtime DD 021e01H
	DD	07006320aH
$unwind$time DD	021e01H
	DD	07006320aH
$unwind$?show_version@@YAXXZ DD 022419H
	DD	07002d206H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?show_version@@YAXXZ
	DD	06aH
$cppxdata$?show_version@@YAXXZ DB 08H
	DD	imagerel $stateUnwindMap$?show_version@@YAXXZ
	DD	imagerel $ip2state$?show_version@@YAXXZ
$stateUnwindMap$?show_version@@YAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??show_version@@YAXXZ@4HA
$ip2state$?show_version@@YAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'z'
	DB	02H
	DB	'd'
	DB	00H
$cppxdata$?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z DB 08H
	DD	imagerel $stateUnwindMap$?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z
	DD	imagerel $ip2state$?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z
$cppxdata$?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z DB 08H
	DD	imagerel $stateUnwindMap$?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z
	DD	imagerel $ip2state$?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z
$unwind$?dtor$0@?0??show_version@@YAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z DD 034519H
	DD	030011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z
	DD	0172H
$stateUnwindMap$?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z DB 0cH
	DB	0eH
	DD	imagerel ?dtor$5@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
	DB	056H
	DD	imagerel ?dtor$2@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$3@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
	DB	0a6H
	DD	imagerel ?dtor$4@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA
$ip2state$?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z DB 016H
	DB	00H
	DB	00H
	DB	'1', 02H
	DB	04H
	DB	0b1H, 03H
	DB	06H
	DB	'&'
	DB	04H
	DB	08eH
	DB	08H
	DB	'&'
	DB	04H
	DB	0b2H
	DB	0aH
	DB	'&'
	DB	04H
	DB	05H, 02H
	DB	0cH
	DB	'&'
	DB	04H
	DB	'`'
	DB	02H
$stateUnwindMap$?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z DB 01aH
	DB	0eH
	DD	imagerel ?dtor$12@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$2@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$3@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DB	0ceH
	DD	imagerel ?dtor$5@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$7@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$8@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DB	0a6H
	DD	imagerel ?dtor$9@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DB	0ceH
	DD	imagerel ?dtor$10@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
	DB	0f6H
	DD	imagerel ?dtor$11@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA
$cppxdata$?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DB 08H
	DD	imagerel $stateUnwindMap$?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	imagerel $ip2state$?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
$unwind$?dtor$0@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z DD 034519H
	DD	066011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z
	DD	0322H
$ip2state$?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z DB '.'
	DB	00H
	DB	00H
	DB	0b6H
	DB	04H
	DB	0a6H
	DB	06H
	DB	'&'
	DB	04H
	DB	0c2H
	DB	08H
	DB	'&'
	DB	04H
	DB	0dcH
	DB	0aH
	DB	'Z'
	DB	04H
	DB	'-', 03H
	DB	0eH
	DB	084H
	DB	010H
	DB	','
	DB	0eH
	DB	0b5H, 04H
	DB	012H
	DB	'&'
	DB	0eH
	DB	0c2H
	DB	014H
	DB	','
	DB	0eH
	DB	08eH
	DB	016H
	DB	','
	DB	0eH
	DB	'E', 02H
	DB	018H
	DB	','
	DB	0eH
	DB	08cH
	DB	01aH
	DB	'&'
	DB	0eH
	DB	01cH
	DB	04H
	DB	'j'
	DB	02H
$stateUnwindMap$?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DB 038H
	DB	0eH
	DD	imagerel ?dtor$27@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	056H
	DD	imagerel ?dtor$2@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	07eH
	DD	imagerel ?dtor$3@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	0a6H
	DD	imagerel ?dtor$4@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	0ceH
	DD	imagerel ?dtor$5@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	0f6H
	DD	imagerel ?dtor$6@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	03dH
	DB	02H
	DD	imagerel ?dtor$7@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	09dH
	DB	02H
	DD	imagerel ?dtor$8@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	0fdH
	DB	02H
	DD	imagerel ?dtor$9@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	036H
	DD	imagerel ?dtor$10@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	0adH
	DB	03H
	DD	imagerel ?dtor$11@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	036H
	DD	imagerel ?dtor$12@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	05dH
	DB	04H
	DD	imagerel ?dtor$13@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	036H
	DD	imagerel ?dtor$14@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	0dH
	DB	05H
	DD	imagerel ?dtor$15@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	06dH
	DB	05H
	DD	imagerel ?dtor$16@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	0cdH
	DB	05H
	DD	imagerel ?dtor$17@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	02dH
	DB	06H
	DD	imagerel ?dtor$18@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	08dH
	DB	06H
	DD	imagerel ?dtor$19@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	0edH
	DB	06H
	DD	imagerel ?dtor$20@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	04dH
	DB	07H
	DD	imagerel ?dtor$21@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	0adH
	DB	07H
	DD	imagerel ?dtor$22@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	0dH
	DB	08H
	DD	imagerel ?dtor$23@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	06dH
	DB	08H
	DD	imagerel ?dtor$24@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	0cdH
	DB	08H
	DD	imagerel ?dtor$25@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	02dH
	DB	09H
	DD	imagerel ?dtor$26@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$unwind$?dtor$0@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$8@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$9@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$10@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$11@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$12@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 043719H
	DD	0f3010eH
	DD	060067007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	0782H
$ip2state$?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DB 'n'
	DB	00H
	DB	00H
	DB	09aH
	DB	04H
	DB	'X'
	DB	06H
	DB	'&'
	DB	04H
	DB	'r'
	DB	08H
	DB	'&'
	DB	04H
	DB	'r'
	DB	0aH
	DB	'&'
	DB	04H
	DB	'r'
	DB	0cH
	DB	'&'
	DB	04H
	DB	'r'
	DB	0eH
	DB	'&'
	DB	04H
	DB	'r'
	DB	010H
	DB	'&'
	DB	04H
	DB	'5', 02H
	DB	012H
	DB	'&'
	DB	04H
	DB	0deH
	DB	014H
	DB	'&'
	DB	04H
	DB	0cdH, 03H
	DB	016H
	DB	'v'
	DB	018H
	DB	'&'
	DB	016H
	DB	01cH
	DB	04H
	DB	0cdH, 03H
	DB	01aH
	DB	'v'
	DB	01cH
	DB	'&'
	DB	01aH
	DB	01cH
	DB	04H
	DB	085H, 02H
	DB	01eH
	DB	'v'
	DB	' '
	DB	'&'
	DB	01eH
	DB	01cH
	DB	04H
	DB	'r'
	DB	'"'
	DB	'&'
	DB	04H
	DB	086H
	DB	'$'
	DB	'&'
	DB	04H
	DB	086H
	DB	'&'
	DB	'&'
	DB	04H
	DB	086H
	DB	'('
	DB	'&'
	DB	04H
	DB	086H
	DB	'*'
	DB	'&'
	DB	04H
	DB	'r'
	DB	','
	DB	'&'
	DB	04H
	DB	0aaH
	DB	'.'
	DB	'&'
	DB	04H
	DB	08aH
	DB	'0'
	DB	'&'
	DB	04H
	DB	'r'
	DB	'2'
	DB	'&'
	DB	04H
	DB	'r'
	DB	'4'
	DB	'&'
	DB	04H
	DB	'r'
	DB	'6'
	DB	'&'
	DB	04H
	DB	0e8H
	DB	'8'
	DB	'&'
	DB	04H
	DB	'`'
	DB	02H
$cppxdata$?show_help@@YAXXZ DB 08H
	DD	imagerel $stateUnwindMap$?show_help@@YAXXZ
	DD	imagerel $ip2state$?show_help@@YAXXZ
$unwind$?dtor$0@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$8@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$9@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$10@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$11@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$12@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$13@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$14@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$15@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$16@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$17@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$18@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$19@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$20@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$21@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$22@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$23@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$24@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$25@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$26@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$27@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?show_help@@YAXXZ DD 022419H
	DD	07002d206H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?show_help@@YAXXZ
	DD	06aH
$stateUnwindMap$?show_help@@YAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??show_help@@YAXXZ@4HA
$ip2state$?show_help@@YAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'z'
	DB	02H
	DB	'd'
	DB	00H
$cppxdata$?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z
	DD	imagerel $ip2state$?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z
$ip2state$?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z DB '6'
	DB	00H
	DB	00H
	DB	094H
	DB	02H
	DB	0e0H
	DB	00H
	DB	'2'
	DB	02H
	DB	'!', 02H
	DB	06H
	DB	0e8H
	DB	0aH
	DB	'!', 0bH
	DB	010H
	DB	08aH
	DB	012H
	DB	'F'
	DB	0aH
	DB	'X'
	DB	014H
	DB	08eH
	DB	018H
	DB	'H'
	DB	01aH
	DB	'H'
	DB	01cH
	DB	095H, 08H
	DB	'&'
	DB	0beH
	DB	01cH
	DB	'n'
	DB	'*'
	DB	'*'
	DB	','
	DB	'%', 03H
	DB	'2'
	DB	'*'
	DB	'4'
	DB	0d5H, 02H
	DB	'2'
	DB	01cH
	DB	','
	DB	01cH
	DB	'*'
	DB	01cH
	DB	01cH
	DB	01cH
	DB	0aH
	DB	'm', 03H
	DB	06H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
$cppxdata$?parse_print_options@@YAHPEBD0@Z DB 08H
	DD	imagerel $stateUnwindMap$?parse_print_options@@YAHPEBD0@Z
	DD	imagerel $ip2state$?parse_print_options@@YAHPEBD0@Z
$unwind$?dtor$0@?0??show_help@@YAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z DD 033f19H
	DD	01900116H
	DD	0700fH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z
	DD	0c72H
$stateUnwindMap$?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z DB 038H
	DB	0eH
	DD	imagerel ?dtor$0@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$2@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$4@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$6@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$7@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$9@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	0ceH
	DD	imagerel ?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	0ddH
	DB	02H
	DD	imagerel ?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$11@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$12@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	086H
	DD	imagerel ?dtor$13@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	0aeH
	DD	imagerel ?dtor$14@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	0d6H
	DD	imagerel ?dtor$15@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$16@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	04dH
	DB	02H
	DD	imagerel ?dtor$17@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$18@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$19@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$20@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$21@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$22@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$23@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$24@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA
$cppxdata$?run_encode@@YAHPEAUsInputParams@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?run_encode@@YAHPEAUsInputParams@@@Z
	DD	imagerel $ip2state$?run_encode@@YAHPEAUsInputParams@@@Z
$unwind$?dtor$0@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$8@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$9@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$11@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$12@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$13@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$14@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$15@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$16@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$17@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$18@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$19@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$20@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$21@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$22@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$23@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$24@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?parse_print_options@@YAHPEBD0@Z DD 033b19H
	DD	0620112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?parse_print_options@@YAHPEBD0@Z
	DD	0302H
$stateUnwindMap$?parse_print_options@@YAHPEBD0@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$0@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DB	036H
	DD	imagerel ?dtor$1@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DB	0aeH
	DD	imagerel ?dtor$4@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DB	0d6H
	DD	imagerel ?dtor$5@?0??parse_print_options@@YAHPEBD0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??parse_print_options@@YAHPEBD0@Z@4HA
$ip2state$?parse_print_options@@YAHPEBD0@Z DB 012H
	DB	00H
	DB	00H
	DB	'=', 03H
	DB	02H
	DB	'v'
	DB	00H
	DB	0b2H
	DB	04H
	DB	'v'
	DB	00H
	DB	'U', 04H
	DB	06H
	DB	0b4H
	DB	00H
	DB	0d9H, 03H
	DB	0cH
	DB	0baH
	DB	00H
$ip2state$?run_encode@@YAHPEAUsInputParams@@@Z DB '"'
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'X'
	DB	00H
	DB	' '
	DB	04H
	DB	'2'
	DB	00H
	DB	'&'
	DB	04H
	DB	086H
	DB	00H
	DB	'&'
	DB	04H
	DB	0b9H, 02H
	DB	00H
	DB	'&'
	DB	04H
	DB	'M', 02H
	DB	00H
	DB	'&'
	DB	04H
	DB	086H
	DB	00H
	DB	' '
	DB	04H
	DB	','
	DB	00H
	DB	' '
	DB	04H
	DB	'n'
	DB	00H
$cppxdata$?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z
	DD	imagerel $ip2state$?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z
$unwind$?dtor$0@?0??parse_print_options@@YAHPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??parse_print_options@@YAHPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??parse_print_options@@YAHPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??parse_print_options@@YAHPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??parse_print_options@@YAHPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??parse_print_options@@YAHPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??parse_print_options@@YAHPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?sigcatch@@YAXH@Z DD 010501H
	DD	07005H
$unwind$?set_signal_handler@@YAHXZ DD 021501H
	DD	070025206H
$unwind$?run_encode@@YAHPEAUsInputParams@@@Z DD 032411H
	DD	018010dH
	DD	07006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?run_encode@@YAHPEAUsInputParams@@@Z
$stateUnwindMap$?run_encode@@YAHPEAUsInputParams@@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$1@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA
$stateUnwindMap$?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z DB 026H
	DB	0eH
	DD	imagerel ?dtor$0@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$3@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$7@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$8@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	0a6H
	DD	imagerel ?dtor$9@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	0f6H
	DD	imagerel ?dtor$11@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$12@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	0cdH
	DB	03H
	DD	imagerel ?dtor$13@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$14@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$15@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$16@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$17@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
	DB	0a6H
	DD	imagerel ?dtor$18@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA
$unwind$?dtor$0@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z DD 043d19H
	DD	038f0114H
	DD	060067007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z
	DD	01c62H
$ip2state$?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z DB 0acH
	DB	00H
	DB	00H
	DB	0c2H
	DB	02H
	DB	'E', 03H
	DB	04H
	DB	0c0H
	DB	06H
	DB	'|'
	DB	04H
	DB	','
	DB	08H
	DB	'>'
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	','
	DB	08H
	DB	092H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	','
	DB	08H
	DB	0f9H, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	','
	DB	08H
	DB	096H
	DB	0aH
	DB	096H
	DB	0cH
	DB	0dH, 02H
	DB	0aH
	DB	01cH
	DB	08H
	DB	01cH
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'6'
	DB	0cH
	DB	0bdH, 02H
	DB	0eH
	DB	'J'
	DB	0cH
	DB	0a8H
	DB	010H
	DB	'J'
	DB	0cH
	DB	080H
	DB	012H
	DB	'J'
	DB	0cH
	DB	0e6H
	DB	014H
	DB	0caH
	DB	016H
	DB	0b8H
	DB	014H
	DB	01cH
	DB	0cH
	DB	0acH
	DB	018H
	DB	0d4H
	DB	0cH
	DB	01cH
	DB	0aH
	DB	01cH
	DB	08H
	DB	01cH
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	','
	DB	018H
	DB	'Z'
	DB	01aH
	DB	','
	DB	018H
	DB	'!', 06H
	DB	0cH
	DB	01cH
	DB	0aH
	DB	01cH
	DB	08H
	DB	01cH
	DB	04H
	DB	'6'
	DB	01cH
	DB	'I', 03H
	DB	01eH
	DB	'e', 03H
	DB	' '
	DB	0ddH, 02H
	DB	'"'
	DB	'|'
	DB	' '
	DB	','
	DB	'$'
	DB	'>'
	DB	' '
	DB	01cH
	DB	01eH
	DB	01cH
	DB	01cH
	DB	01cH
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	','
	DB	'$'
	DB	'|'
	DB	' '
	DB	'$'
	DB	'$'
	DB	0faH
	DB	' '
	DB	01cH
	DB	01eH
	DB	01cH
	DB	01cH
	DB	01cH
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	','
	DB	'$'
	DB	099H, 08H
	DB	' '
	DB	'n'
	DB	01eH
	DB	098H
	DB	'&'
	DB	0e1H, 03H
	DB	01eH
	DB	01cH
	DB	01cH
	DB	01cH
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'6'
	DB	'&'
	DB	011H, 01cH
	DB	01eH
	DB	'\'
	DB	01cH
	DB	01cH
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
$unwind$?dtor$0@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$8@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$9@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$10@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$11@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$12@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$13@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$14@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$15@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$16@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$17@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$18@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?run@@YAHHQEAPEAD@Z DD 033f19H
	DD	02160117H
	DD	0700aH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?run@@YAHHQEAPEAD@Z
	DD	010aaH
$cppxdata$?run@@YAHHQEAPEAD@Z DB 08H
	DD	imagerel $stateUnwindMap$?run@@YAHHQEAPEAD@Z
	DD	imagerel $ip2state$?run@@YAHHQEAPEAD@Z
$stateUnwindMap$?run@@YAHHQEAPEAD@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0??run@@YAHHQEAPEAD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??run@@YAHHQEAPEAD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??run@@YAHHQEAPEAD@Z@4HA
	DB	056H
	DD	imagerel ?dtor$3@?0??run@@YAHHQEAPEAD@Z@4HA
$ip2state$?run@@YAHHQEAPEAD@Z DB 'N'
	DB	00H
	DB	00H
	DB	09dH, 0fH
	DB	02H
	DB	'|'
	DB	04H
	DB	0c2H
	DB	02H
	DB	01cH
	DB	00H
	DB	'2'
	DB	04H
	DB	'R'
	DB	02H
	DB	01cH
	DB	00H
	DB	'2'
	DB	04H
	DB	'$'
	DB	06H
	DB	'|'
	DB	04H
	DB	','
	DB	08H
	DB	'>'
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'2'
	DB	08H
	DB	098H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'2'
	DB	08H
	DB	019H, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'2'
	DB	08H
	DB	']', 03H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'2'
	DB	08H
	DB	09eH
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'2'
	DB	08H
	DB	'8'
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'2'
	DB	08H
	DB	01H, 02H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	ORG $+3
$unwind$?dtor$0@?0??run@@YAHHQEAPEAD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??run@@YAHHQEAPEAD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??run@@YAHHQEAPEAD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??run@@YAHHQEAPEAD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$main DD	022101H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Maklocwcs@std@@YAPEA_WPEB_W@Z DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD 032e01H
	DD	01a0117H
	DD	07010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$0 DB 05fH ; std::_Maklocstr<wchar_t>
	DB	057H
	DB	063H
	DB	00H
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$1 DB 05fH ; std::_Maklocstr<wchar_t>
	DB	04dH
	DB	062H
	DB	073H
	DB	074H
	DB	031H
	DB	00H
	ORG $+1
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$2 DB 05fH ; std::_Maklocstr<wchar_t>
	DB	04dH
	DB	062H
	DB	073H
	DB	074H
	DB	032H
	DB	00H
	ORG $+13
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcVarDesc DD 0b8H ; std::_Maklocstr<wchar_t>
	DD	08H
	DQ	FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$2
	DD	088H
	DD	08H
	DQ	FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$1
	DD	064H
	DD	02H
	DQ	FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$0
	ORG $+144
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcFrameData DD 03H ; std::_Maklocstr<wchar_t>
	DD	00H
	DQ	FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1locale@std@@QEAA@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_cast@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_cast@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_cast@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_cast@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_cast@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_cast@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_cast@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_cast@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_cast@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_cast@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_cast@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_cast@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_cast@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_cast@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_cast@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_cast@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'l'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_cast@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_cast@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_cast@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_cast@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_cast@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 040H
	DD	imagerel $ip2state$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 040H
	DD	imagerel $ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z DD 022201H
	DD	0700a720eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	0aeH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e11H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	034H
	DB	031H
	DB	00H
	ORG $+11
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 022901H
	DD	0700bf212H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	061H
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	00H
	ORG $+5
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DD	08H
	DQ	FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcName$0
	ORG $+48
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DD	00H
	DQ	FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 040H
	DD	imagerel $ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 040H
	DD	imagerel $ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	094H
	DB	02H
	DB	09cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'~'
	DB	04H
	DB	'Z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 022911H
	DD	0700bf212H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	034H
	DB	033H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'b'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0b2H
	DB	02H
	DB	'~'
	DB	04H
	DB	'@'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 022911H
	DD	0700bf212H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	034H
	DB	035H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 040H
	DD	imagerel $ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0d0H
	DB	02H
	DB	088H
	DB	00H
	DB	'>'
	DB	04H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
	DD	imagerel $ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 022619H
	DD	0700bd20fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc DD 054H ; std::_Iterator_base12::_Adopt
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0
	ORG $+96
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData DD 02H ; std::_Iterator_base12::_Adopt
	DD	00H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Iterator_base12@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'^'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1_Iterator_base12@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Iterator_base12@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1_Iterator_base12@std@@QEAA@XZ
	DD	imagerel $ip2state$??1_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iterator_base12@std@@QEAA@XZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1_Iterator_base12@std@@QEAA@XZ$rtcName$0 DB 05fH	; std::_Iterator_base12::~_Iterator_base12
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc DD 024H	; std::_Iterator_base12::~_Iterator_base12
	DD	04H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData DD 01H	; std::_Iterator_base12::~_Iterator_base12
	DD	00H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	0c0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	imagerel $ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0 DB 05fH ; std::_Container_base12::_Swap_proxy_and_iterators
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc DD 024H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	04H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0
	ORG $+48
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData DD 01H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	00H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemcpy DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscprintf DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscprintf_l DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsnprintf_s DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsnprintf_s_l DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
printf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
printf$rtcVarDesc DD 038H
	DD	08H
	DQ	FLAT:printf$rtcName$0
	ORG $+48
printf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:printf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fprintf DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
fprintf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
fprintf$rtcVarDesc DD 038H
	DD	08H
	DQ	FLAT:fprintf$rtcName$0
	ORG $+48
fprintf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:fprintf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$swprintf_s DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
swprintf_s$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
swprintf_s$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:swprintf_s$rtcName$0
	ORG $+48
swprintf_s$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:swprintf_s$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vswprintf_s_l DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
CRT$XCU	SEGMENT
?CspTransferList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspTransferList@@YAXXZ ; CspTransferList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?CspColorprimList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspColorprimList@@YAXXZ ; CspColorprimList$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceGeneral$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceGeneral@ATL@@YAXXZ ; ATL::atlTraceGeneral$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCOM$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceCOM@ATL@@YAXXZ ; ATL::atlTraceCOM$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceQI$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceQI@ATL@@YAXXZ ; ATL::atlTraceQI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRegistrar$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceRegistrar@ATL@@YAXXZ ; ATL::atlTraceRegistrar$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRefcount$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceRefcount@ATL@@YAXXZ ; ATL::atlTraceRefcount$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceWindowing$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceWindowing@ATL@@YAXXZ ; ATL::atlTraceWindowing$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceControls$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceControls@ATL@@YAXXZ ; ATL::atlTraceControls$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceHosting$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceHosting@ATL@@YAXXZ ; ATL::atlTraceHosting$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBClient$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceDBClient@ATL@@YAXXZ ; ATL::atlTraceDBClient$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBProvider$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceDBProvider@ATL@@YAXXZ ; ATL::atlTraceDBProvider$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSnapin$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceSnapin@ATL@@YAXXZ ; ATL::atlTraceSnapin$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceNotImpl$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceNotImpl@ATL@@YAXXZ ; ATL::atlTraceNotImpl$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceAllocation$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceAllocation@ATL@@YAXXZ ; ATL::atlTraceAllocation$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceTime$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceTime@ATL@@YAXXZ ; ATL::atlTraceTime$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCache$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceCache@ATL@@YAXXZ ; ATL::atlTraceCache$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceStencil$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceStencil@ATL@@YAXXZ ; ATL::atlTraceStencil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceMap$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceMap@ATL@@YAXXZ ; ATL::atlTraceMap$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceUtil$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceUtil@ATL@@YAXXZ ; ATL::atlTraceUtil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSecurity$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceSecurity@ATL@@YAXXZ ; ATL::atlTraceSecurity$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSync$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceSync@ATL@@YAXXZ ; ATL::atlTraceSync$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceISAPI$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceISAPI@ATL@@YAXXZ ; ATL::atlTraceISAPI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlComModule$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__E_AtlComModule@ATL@@YAXXZ ; ATL::_AtlComModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlWinModule$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__E_AtlWinModule@ATL@@YAXXZ ; ATL::_AtlWinModule$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
	ORG $-24
?version$initializer$@dtl@@3P6AXXZEA DQ FLAT:??__Eversion@dtl@@YAXXZ ; dtl::version$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor', COMDAT
  00000	48 63 41 fc	 movsxd	 rax, DWORD PTR [rcx-4]
  00004	48 2b c8	 sub	 rcx, rax
  00007	e9 00 00 00 00	 jmp	 ??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
??_E?$basic_ofstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
  00000	48 63 41 fc	 movsxd	 rax, DWORD PTR [rcx-4]
  00004	48 2b c8	 sub	 rcx, rax
  00007	e9 00 00 00 00	 jmp	 ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEBIPEAI@std@@YAPEAIPEBI0PEAI@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_Dest_ch$ = 48
_Count$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Copy_memmove@PEBIPEAI@std@@YAPEAIPEBI0PEAI@Z PROC	; std::_Copy_memmove<unsigned int const *,unsigned int *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR _First_ch$[rsp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  00032	48 8b 44 24 58	 mov	 rax, QWORD PTR _Last$[rsp]
  00037	48 89 44 24 28	 mov	 QWORD PTR _Last_ch$[rsp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  0003c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Dest$[rsp]
  00041	48 89 44 24 30	 mov	 QWORD PTR _Dest_ch$[rsp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR _First_ch$[rsp]
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Last_ch$[rsp]
  00050	48 2b c8	 sub	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 89 44 24 38	 mov	 QWORD PTR _Count$[rsp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  0005b	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00060	48 8b 54 24 20	 mov	 rdx, QWORD PTR _First_ch$[rsp]
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  0006a	e8 00 00 00 00	 call	 memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0006f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Count$[rsp]
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  00079	48 03 c8	 add	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx

; 1746 : }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$_Copy_memmove@PEBIPEAI@std@@YAPEAIPEBI0PEAI@Z ENDP	; std::_Copy_memmove<unsigned int const *,unsigned int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@I@std@@YAPEAIPEAI@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@I@std@@YAPEAIPEAI@Z PROC			; std::_Unfancy<unsigned int>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@I@std@@YAPEAIPEAI@Z ENDP			; std::_Unfancy<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU3?1??4@YA?AW45@1@Z@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU3?1??4@YA?AW45@1@Z@@Z PROC ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::construct<`run_benchmark'::`2'::benchmark_t,`run_benchmark'::`2'::benchmark_t &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 0e 00 00 00	 mov	 ecx, 14
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00029	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00033	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00038	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z ; std::forward<`run_benchmark'::`2'::benchmark_t &>
  00047	48 8b 7c 24 20	 mov	 rdi, QWORD PTR $T1[rsp]
  0004c	48 8b f0	 mov	 rsi, rax
  0004f	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00054	f3 a4		 rep movsb

; 759  :     }

  00056	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005a	5f		 pop	 rdi
  0005b	5e		 pop	 rsi
  0005c	c3		 ret	 0
??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU3?1??4@YA?AW45@1@Z@@Z ENDP ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::construct<`run_benchmark'::`2'::benchmark_t,`run_benchmark'::`2'::benchmark_t &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z PROC ; std::forward<`run_benchmark'::`2'::benchmark_t &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z ENDP ; std::forward<`run_benchmark'::`2'::benchmark_t &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@U?$pair@HH@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@HH@std@@@1@QEAU?$pair@HH@1@AEBU31@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@U?$pair@HH@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@HH@std@@@1@QEAU?$pair@HH@1@AEBU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::pair<int,int> > >::construct<std::pair<int,int>,std::pair<int,int> const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 08 00 00 00	 mov	 ecx, 8
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@AEBU?$pair@HH@std@@@std@@YAAEBU?$pair@HH@0@AEBU10@@Z ; std::forward<std::pair<int,int> const &>
  00046	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 759  :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$construct@U?$pair@HH@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@HH@std@@@1@QEAU?$pair@HH@1@AEBU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::pair<int,int> > >::construct<std::pair<int,int>,std::pair<int,int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBU?$pair@HH@std@@@std@@YAAEBU?$pair@HH@0@AEBU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBU?$pair@HH@std@@@std@@YAAEBU?$pair@HH@0@AEBU10@@Z PROC ; std::forward<std::pair<int,int> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBU?$pair@HH@std@@@std@@YAAEBU?$pair@HH@0@AEBU10@@Z ENDP ; std::forward<std::pair<int,int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U?$pair@HH@std@@@std@@YAPEAU?$pair@HH@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$pair@HH@std@@@std@@YAPEAU?$pair@HH@0@PEAU10@@Z PROC ; std::_Unfancy<std::pair<int,int> >, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U?$pair@HH@std@@@std@@YAPEAU?$pair@HH@0@PEAU10@@Z ENDP ; std::_Unfancy<std::pair<int,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEADPEAPEBD@std@@YAPEAPEBDPEAPEAD0PEAPEBD@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_Dest_ch$ = 48
_Count$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Copy_memmove@PEAPEADPEAPEBD@std@@YAPEAPEBDPEAPEAD0PEAPEBD@Z PROC ; std::_Copy_memmove<char * *,char const * *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR _First_ch$[rsp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  00032	48 8b 44 24 58	 mov	 rax, QWORD PTR _Last$[rsp]
  00037	48 89 44 24 28	 mov	 QWORD PTR _Last_ch$[rsp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  0003c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Dest$[rsp]
  00041	48 89 44 24 30	 mov	 QWORD PTR _Dest_ch$[rsp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR _First_ch$[rsp]
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Last_ch$[rsp]
  00050	48 2b c8	 sub	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 89 44 24 38	 mov	 QWORD PTR _Count$[rsp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  0005b	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00060	48 8b 54 24 20	 mov	 rdx, QWORD PTR _First_ch$[rsp]
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  0006a	e8 00 00 00 00	 call	 memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0006f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Count$[rsp]
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  00079	48 03 c8	 add	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx

; 1746 : }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$_Copy_memmove@PEAPEADPEAPEBD@std@@YAPEAPEBDPEAPEAD0PEAPEBD@Z ENDP ; std::_Copy_memmove<char * *,char const * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEBIV?$allocator@I@std@@@std@@YAPEAIQEBI0PEAIAEAV?$allocator@I@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_copy@PEBIV?$allocator@I@std@@@std@@YAPEAIQEBI0PEAIAEAV?$allocator@I@0@@Z PROC ; std::_Uninitialized_copy<unsigned int const *,std::allocator<unsigned int> >, COMDAT

; 1600 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1601 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1602 :     // note: only called internally from elsewhere in the STL
; 1603 :     using _Ptrval = typename _Alloc::value_type*;
; 1604 : 
; 1605 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBI@std@@YAPEBIQEBI@Z ; std::_Get_unwrapped<unsigned int const >
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1606 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBI@std@@YAPEBIQEBI@Z ; std::_Get_unwrapped<unsigned int const >
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1607 : 
; 1608 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1609 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1610 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00050	e8 00 00 00 00	 call	 ??$_Unfancy@I@std@@YAPEAIPEAI@Z ; std::_Unfancy<unsigned int>
  00055	4c 8b c0	 mov	 r8, rax
  00058	48 8b 54 24 28	 mov	 rdx, QWORD PTR _ULast$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00062	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEBIPEAI@std@@YAPEAIPEBI0PEAI@Z ; std::_Copy_memmove<unsigned int const *,unsigned int *>

; 1611 :         _Dest += _ULast - _UFirst;

  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _ULast$[rsp]
  00071	48 2b c8	 sub	 rcx, rax
  00074	48 8b c1	 mov	 rax, rcx
  00077	48 c1 f8 02	 sar	 rax, 2
  0007b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00080	48 8d 04 81	 lea	 rax, QWORD PTR [rcx+rax*4]
  00084	48 89 44 24 50	 mov	 QWORD PTR _Dest$[rsp], rax

; 1612 :         (void) _Al;
; 1613 :     } else {
; 1614 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1615 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1616 :             _Backout._Emplace_back(*_UFirst);
; 1617 :         }
; 1618 : 
; 1619 :         _Dest = _Backout._Release();
; 1620 :     }
; 1621 : 
; 1622 :     return _Dest;

  00089	48 8b 44 24 50	 mov	 rax, QWORD PTR _Dest$[rsp]

; 1623 : }

  0008e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00092	5f		 pop	 rdi
  00093	c3		 ret	 0
??$_Uninitialized_copy@PEBIV?$allocator@I@std@@@std@@YAPEAIQEBI0PEAIAEAV?$allocator@I@0@@Z ENDP ; std::_Uninitialized_copy<unsigned int const *,std::allocator<unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z PROC ; std::move<std::allocator<`run_benchmark'::`2'::benchmark_t> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z ENDP ; std::move<std::allocator<`run_benchmark'::`2'::benchmark_t> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_back<`run_benchmark'::`2'::benchmark_t &>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z ; std::forward<`run_benchmark'::`2'::benchmark_t &>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU1?1??2@YA?AW43@0@Z@@Z ; std::_Unfancy<`run_benchmark'::`2'::benchmark_t>
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU3?1??4@YA?AW45@1@Z@@Z ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::construct<`run_benchmark'::`2'::benchmark_t,`run_benchmark'::`2'::benchmark_t &>

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 28	 add	 rax, 40			; 00000028H
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_back<`run_benchmark'::`2'::benchmark_t &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@U1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@$$QEAU3?1??4@YA?AW45@1@Z@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@U1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@$$QEAU3?1??4@YA?AW45@1@Z@@Z PROC ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::construct<`run_benchmark'::`2'::benchmark_t,`run_benchmark'::`2'::benchmark_t>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 0e 00 00 00	 mov	 ecx, 14
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00029	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00033	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00038	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z ; std::forward<`run_benchmark'::`2'::benchmark_t>
  00047	48 8b 7c 24 20	 mov	 rdi, QWORD PTR $T1[rsp]
  0004c	48 8b f0	 mov	 rsi, rax
  0004f	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00054	f3 a4		 rep movsb

; 759  :     }

  00056	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005a	5f		 pop	 rdi
  0005b	5e		 pop	 rsi
  0005c	c3		 ret	 0
??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@U1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@$$QEAU3?1??4@YA?AW45@1@Z@@Z ENDP ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::construct<`run_benchmark'::`2'::benchmark_t,`run_benchmark'::`2'::benchmark_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z PROC ; std::forward<`run_benchmark'::`2'::benchmark_t>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z ENDP ; std::forward<`run_benchmark'::`2'::benchmark_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEBUListData@@PEAU1@@std@@YAPEAUListData@@PEBU1@0PEAU1@@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_Dest_ch$ = 48
_Count$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Copy_memmove@PEBUListData@@PEAU1@@std@@YAPEAUListData@@PEBU1@0PEAU1@@Z PROC ; std::_Copy_memmove<ListData const *,ListData *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR _First_ch$[rsp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  00032	48 8b 44 24 58	 mov	 rax, QWORD PTR _Last$[rsp]
  00037	48 89 44 24 28	 mov	 QWORD PTR _Last_ch$[rsp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  0003c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Dest$[rsp]
  00041	48 89 44 24 30	 mov	 QWORD PTR _Dest_ch$[rsp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR _First_ch$[rsp]
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Last_ch$[rsp]
  00050	48 2b c8	 sub	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 89 44 24 38	 mov	 QWORD PTR _Count$[rsp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  0005b	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00060	48 8b 54 24 20	 mov	 rdx, QWORD PTR _First_ch$[rsp]
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  0006a	e8 00 00 00 00	 call	 memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0006f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Count$[rsp]
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  00079	48 03 c8	 add	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx

; 1746 : }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$_Copy_memmove@PEBUListData@@PEAU1@@std@@YAPEAUListData@@PEBU1@0PEAU1@@Z ENDP ; std::_Copy_memmove<ListData const *,ListData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@$$CBUListData@@@std@@YAPEBUListData@@QEBU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@$$CBUListData@@@std@@YAPEBUListData@@QEBU1@@Z PROC ; std::_Get_unwrapped<ListData const >, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@$$CBUListData@@@std@@YAPEBUListData@@QEBU1@@Z ENDP ; std::_Get_unwrapped<ListData const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@AEBU?$pair@HH@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAXAEBU?$pair@HH@1@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@AEBU?$pair@HH@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAXAEBU?$pair@HH@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::_Emplace_back<std::pair<int,int> const &>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@AEBU?$pair@HH@std@@@std@@YAAEBU?$pair@HH@0@AEBU10@@Z ; std::forward<std::pair<int,int> const &>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@U?$pair@HH@std@@@std@@YAPEAU?$pair@HH@0@PEAU10@@Z ; std::_Unfancy<std::pair<int,int> >
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@U?$pair@HH@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@HH@std@@@1@QEAU?$pair@HH@1@AEBU31@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<int,int> > >::construct<std::pair<int,int>,std::pair<int,int> const &>

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@AEBU?$pair@HH@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAXAEBU?$pair@HH@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::_Emplace_back<std::pair<int,int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAPEAU?$pair@HH@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAPEAU?$pair@HH@2@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAPEAU?$pair@HH@2@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::~_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$pair@HH@std@@@std@@@std@@YAXPEAU?$pair@HH@0@QEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<int,int> > >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::~_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@PEAU?$pair@HH@1@AEAV?$allocator@U?$pair@HH@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@PEAU?$pair@HH@1@AEAV?$allocator@U?$pair@HH@std@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@PEAU?$pair@HH@1@AEAV?$allocator@U?$pair@HH@std@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@$$CBU?$pair@HH@std@@@std@@YAPEBU?$pair@HH@0@QEBU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@$$CBU?$pair@HH@std@@@std@@YAPEBU?$pair@HH@0@QEBU10@@Z PROC ; std::_Get_unwrapped<std::pair<int,int> const >, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@$$CBU?$pair@HH@std@@@std@@YAPEBU?$pair@HH@0@QEBU10@@Z ENDP ; std::_Get_unwrapped<std::pair<int,int> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEAPEADV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEAD0PEAPEBDAEAV?$allocator@PEBD@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_copy@PEAPEADV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEAD0PEAPEBDAEAV?$allocator@PEBD@0@@Z PROC ; std::_Uninitialized_copy<char * *,std::allocator<char const *> >, COMDAT

; 1600 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1601 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1602 :     // note: only called internally from elsewhere in the STL
; 1603 :     using _Ptrval = typename _Alloc::value_type*;
; 1604 : 
; 1605 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@PEAD@std@@YAPEAPEADQEAPEAD@Z ; std::_Get_unwrapped<char *>
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1606 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@PEAD@std@@YAPEAPEADQEAPEAD@Z ; std::_Get_unwrapped<char *>
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1607 : 
; 1608 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1609 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1610 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00050	e8 00 00 00 00	 call	 ??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z ; std::_Unfancy<char const *>
  00055	4c 8b c0	 mov	 r8, rax
  00058	48 8b 54 24 28	 mov	 rdx, QWORD PTR _ULast$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00062	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAPEADPEAPEBD@std@@YAPEAPEBDPEAPEAD0PEAPEBD@Z ; std::_Copy_memmove<char * *,char const * *>

; 1611 :         _Dest += _ULast - _UFirst;

  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _ULast$[rsp]
  00071	48 2b c8	 sub	 rcx, rax
  00074	48 8b c1	 mov	 rax, rcx
  00077	48 c1 f8 03	 sar	 rax, 3
  0007b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00080	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]
  00084	48 89 44 24 50	 mov	 QWORD PTR _Dest$[rsp], rax

; 1612 :         (void) _Al;
; 1613 :     } else {
; 1614 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1615 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1616 :             _Backout._Emplace_back(*_UFirst);
; 1617 :         }
; 1618 : 
; 1619 :         _Dest = _Backout._Release();
; 1620 :     }
; 1621 : 
; 1622 :     return _Dest;

  00089	48 8b 44 24 50	 mov	 rax, QWORD PTR _Dest$[rsp]

; 1623 : }

  0008e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00092	5f		 pop	 rdi
  00093	c3		 ret	 0
??$_Uninitialized_copy@PEAPEADV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEAD0PEAPEBDAEAV?$allocator@PEBD@0@@Z ENDP ; std::_Uninitialized_copy<char * *,std::allocator<char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Ucopy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAPEAIPEBI0PEAI@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Ucopy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAPEAIPEBI0PEAI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ucopy<unsigned int const *>, COMDAT

; 1543 :     pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) { // copy [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1544 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PEBIV?$allocator@I@std@@@std@@YAPEAIQEBI0PEAIAEAV?$allocator@I@0@@Z ; std::_Uninitialized_copy<unsigned int const *,std::allocator<unsigned int> >

; 1545 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Ucopy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAPEAIPEBI0PEAI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ucopy<unsigned int const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@IV?$allocator@I@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@IV?$allocator@I@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<unsigned int,std::allocator<unsigned int> > >::~_Tidy_guard<std::vector<unsigned int,std::allocator<unsigned int> > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3527 :         if (_Target) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Tidy
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@IV?$allocator@I@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<unsigned int,std::allocator<unsigned int> > >::~_Tidy_guard<std::vector<unsigned int,std::allocator<unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$distance@PEBI@std@@YA_JPEBI0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$distance@PEBI@std@@YA_JPEBI0@Z PROC			; std::distance<unsigned int const *>, COMDAT

; 781  : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) { // return distance between iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 782  :     if constexpr (_Is_random_iter_v<_InIt>) {
; 783  :         return _Last - _First; // assume the iterator will do debug checking

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _First$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Last$[rsp]
  00015	48 2b c8	 sub	 rcx, rax
  00018	48 8b c1	 mov	 rax, rcx
  0001b	48 c1 f8 02	 sar	 rax, 2

; 784  :     } else {
; 785  :         _Adl_verify_range(_First, _Last);
; 786  :         auto _UFirst             = _Get_unwrapped(_First);
; 787  :         const auto _ULast        = _Get_unwrapped(_Last);
; 788  :         _Iter_diff_t<_InIt> _Off = 0;
; 789  :         for (; _UFirst != _ULast; ++_UFirst) {
; 790  :             ++_Off;
; 791  :         }
; 792  : 
; 793  :         return _Off;
; 794  :     }
; 795  : }

  0001f	5f		 pop	 rdi
  00020	c3		 ret	 0
??$distance@PEBI@std@@YA_JPEBI0@Z ENDP			; std::distance<unsigned int const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Verify_range@I@std@@YAXQEBI0@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
??$_Verify_range@I@std@@YAXQEBI0@Z PROC			; std::_Verify_range<unsigned int>, COMDAT

; 191  :     const _Ty* const _First, const _Ty* const _Last) noexcept { // special case range verification for pointers

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@Verify_ran:

; 192  :     _STL_VERIFY(_First <= _Last, "transposed pointer range");

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Last$[rsp]
  00028	48 39 44 24 40	 cmp	 QWORD PTR _First$[rsp], rax
  0002d	77 02		 ja	 SHORT $LN7@Verify_ran
  0002f	eb 6d		 jmp	 SHORT $LN9@Verify_ran
$LN7@Verify_ran:
  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
  00038	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0003d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00044	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00049	45 33 c9	 xor	 r9d, r9d
  0004c	41 b8 c0 00 00
	00		 mov	 r8d, 192		; 000000c0H
  00052	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00059	b9 02 00 00 00	 mov	 ecx, 2
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00064	90		 npad	 1
  00065	83 f8 01	 cmp	 eax, 1
  00068	75 03		 jne	 SHORT $LN11@Verify_ran
  0006a	cc		 int	 3
  0006b	33 c0		 xor	 eax, eax
$LN11@Verify_ran:
  0006d	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00076	41 b9 c0 00 00
	00		 mov	 r9d, 192		; 000000c0H
  0007c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00083	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  0008a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
  00091	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00097	90		 npad	 1
  00098	33 c0		 xor	 eax, eax
  0009a	85 c0		 test	 eax, eax
  0009c	75 93		 jne	 SHORT $LN7@Verify_ran
$LN9@Verify_ran:
  0009e	33 c0		 xor	 eax, eax
  000a0	85 c0		 test	 eax, eax
  000a2	0f 85 7b ff ff
	ff		 jne	 $LN4@Verify_ran

; 193  : }

  000a8	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ac	5f		 pop	 rdi
  000ad	c3		 ret	 0
??$_Verify_range@I@std@@YAXQEBI0@Z ENDP			; std::_Verify_range<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@I@std@@@std@@YAAEBV?$allocator@I@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@I@std@@@std@@YAAEBV?$allocator@I@0@AEBV10@@Z PROC ; std::forward<std::allocator<unsigned int> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@I@std@@@std@@YAAEBV?$allocator@I@0@AEBV10@@Z ENDP ; std::forward<std::allocator<unsigned int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z PROC ; std::forward<std::_Facet_base * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ENDP ; std::forward<std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned __int64> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned __int64> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned __int64>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUCX_DESC@@PEAU1@@std@@YAPEAUCX_DESC@@PEAU1@00@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_Dest_ch$ = 48
_Count$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Copy_memmove@PEAUCX_DESC@@PEAU1@@std@@YAPEAUCX_DESC@@PEAU1@00@Z PROC ; std::_Copy_memmove<CX_DESC *,CX_DESC *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR _First_ch$[rsp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  00032	48 8b 44 24 58	 mov	 rax, QWORD PTR _Last$[rsp]
  00037	48 89 44 24 28	 mov	 QWORD PTR _Last_ch$[rsp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  0003c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Dest$[rsp]
  00041	48 89 44 24 30	 mov	 QWORD PTR _Dest_ch$[rsp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR _First_ch$[rsp]
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Last_ch$[rsp]
  00050	48 2b c8	 sub	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 89 44 24 38	 mov	 QWORD PTR _Count$[rsp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  0005b	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00060	48 8b 54 24 20	 mov	 rdx, QWORD PTR _First_ch$[rsp]
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  0006a	e8 00 00 00 00	 call	 memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0006f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Count$[rsp]
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  00079	48 03 c8	 add	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx

; 1746 : }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$_Copy_memmove@PEAUCX_DESC@@PEAU1@@std@@YAPEAUCX_DESC@@PEAU1@00@Z ENDP ; std::_Copy_memmove<CX_DESC *,CX_DESC *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@UCX_DESC@@@std@@YAPEAUCX_DESC@@QEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@UCX_DESC@@@std@@YAPEAUCX_DESC@@QEAU1@@Z PROC ; std::_Get_unwrapped<CX_DESC>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@UCX_DESC@@@std@@YAPEAUCX_DESC@@QEAU1@@Z ENDP ; std::_Get_unwrapped<CX_DESC>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z PROC ; std::_Uninitialized_copy<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >, COMDAT

; 1600 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1601 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1602 :     // note: only called internally from elsewhere in the STL
; 1603 :     using _Ptrval = typename _Alloc::value_type*;
; 1604 : 
; 1605 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@@Z ; std::_Get_unwrapped<`run_benchmark'::`2'::benchmark_t>
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1606 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@@Z ; std::_Get_unwrapped<`run_benchmark'::`2'::benchmark_t>
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1607 : 
; 1608 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1609 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1610 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1611 :         _Dest += _ULast - _UFirst;
; 1612 :         (void) _Al;
; 1613 :     } else {
; 1614 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >
  00065	90		 npad	 1

; 1615 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 28	 add	 rax, 40			; 00000028H
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 11		 je	 SHORT $LN3@Uninitiali

; 1616 :             _Backout._Emplace_back(*_UFirst);

  00082	48 8b 54 24 20	 mov	 rdx, QWORD PTR _UFirst$[rsp]
  00087	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  0008c	e8 00 00 00 00	 call	 ??$_Emplace_back@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_back<`run_benchmark'::`2'::benchmark_t &>

; 1617 :         }

  00091	eb d5		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1618 : 
; 1619 :         _Dest = _Backout._Release();

  00093	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00098	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Release
  0009d	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Dest$[rsp], rax

; 1620 :     }

  000a5	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000aa	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::~_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >

; 1621 : 
; 1622 :     return _Dest;

  000af	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Dest$[rsp]

; 1623 : }

  000b7	48 8b f8	 mov	 rdi, rax
  000ba	48 8b cc	 mov	 rcx, rsp
  000bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z$rtcFrameData
  000c4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c9	48 8b c7	 mov	 rax, rdi
  000cc	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d0	5f		 pop	 rdi
  000d1	c3		 ret	 0
??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z ENDP ; std::_Uninitialized_copy<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::~_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::~_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z PROC ; std::forward<std::allocator<`run_benchmark'::`2'::benchmark_t> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<`run_benchmark'::`2'::benchmark_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAX$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAX$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_back<`run_benchmark'::`2'::benchmark_t>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z ; std::forward<`run_benchmark'::`2'::benchmark_t>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU1?1??2@YA?AW43@0@Z@@Z ; std::_Unfancy<`run_benchmark'::`2'::benchmark_t>
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@U1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@$$QEAU3?1??4@YA?AW45@1@Z@@Z ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::construct<`run_benchmark'::`2'::benchmark_t,`run_benchmark'::`2'::benchmark_t>

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 28	 add	 rax, 40			; 00000028H
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAX$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_back<`run_benchmark'::`2'::benchmark_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::~_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z ; std::_Destroy_range<std::allocator<`run_benchmark'::`2'::benchmark_t> >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::~_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z PROC ; std::move<`run_benchmark'::`2'::benchmark_t &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z ENDP ; std::move<`run_benchmark'::`2'::benchmark_t &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@@Z PROC ; std::_Get_unwrapped<`run_benchmark'::`2'::benchmark_t>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@@Z ENDP ; std::_Get_unwrapped<`run_benchmark'::`2'::benchmark_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_Dest_ch$ = 48
_Count$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z PROC ; std::_Copy_memmove<char const * *,char const * *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR _First_ch$[rsp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  00032	48 8b 44 24 58	 mov	 rax, QWORD PTR _Last$[rsp]
  00037	48 89 44 24 28	 mov	 QWORD PTR _Last_ch$[rsp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  0003c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Dest$[rsp]
  00041	48 89 44 24 30	 mov	 QWORD PTR _Dest_ch$[rsp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR _First_ch$[rsp]
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Last_ch$[rsp]
  00050	48 2b c8	 sub	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 89 44 24 38	 mov	 QWORD PTR _Count$[rsp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  0005b	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00060	48 8b 54 24 20	 mov	 rdx, QWORD PTR _First_ch$[rsp]
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  0006a	e8 00 00 00 00	 call	 memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0006f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Count$[rsp]
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  00079	48 03 c8	 add	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx

; 1746 : }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z ENDP ; std::_Copy_memmove<char const * *,char const * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z PROC	; std::_Get_unwrapped<char const *>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z ENDP	; std::_Get_unwrapped<char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@$$QEAV31@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@$$QEAV31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::construct<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z ; std::forward<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@$$QEAV31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::construct<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z PROC ; std::forward<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEBUListData@@V?$allocator@UListData@@@std@@@std@@YAPEAUListData@@QEBU1@0PEAU1@AEAV?$allocator@UListData@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_copy@PEBUListData@@V?$allocator@UListData@@@std@@@std@@YAPEAUListData@@QEBU1@0PEAU1@AEAV?$allocator@UListData@@@0@@Z PROC ; std::_Uninitialized_copy<ListData const *,std::allocator<ListData> >, COMDAT

; 1600 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1601 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1602 :     // note: only called internally from elsewhere in the STL
; 1603 :     using _Ptrval = typename _Alloc::value_type*;
; 1604 : 
; 1605 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBUListData@@@std@@YAPEBUListData@@QEBU1@@Z ; std::_Get_unwrapped<ListData const >
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1606 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBUListData@@@std@@YAPEBUListData@@QEBU1@@Z ; std::_Get_unwrapped<ListData const >
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1607 : 
; 1608 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1609 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1610 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00050	e8 00 00 00 00	 call	 ??$_Unfancy@UListData@@@std@@YAPEAUListData@@PEAU1@@Z ; std::_Unfancy<ListData>
  00055	4c 8b c0	 mov	 r8, rax
  00058	48 8b 54 24 28	 mov	 rdx, QWORD PTR _ULast$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00062	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEBUListData@@PEAU1@@std@@YAPEAUListData@@PEBU1@0PEAU1@@Z ; std::_Copy_memmove<ListData const *,ListData *>

; 1611 :         _Dest += _ULast - _UFirst;

  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _ULast$[rsp]
  00071	48 2b c8	 sub	 rcx, rax
  00074	48 8b c1	 mov	 rax, rcx
  00077	48 99		 cdq
  00079	b9 18 00 00 00	 mov	 ecx, 24
  0007e	48 f7 f9	 idiv	 rcx
  00081	48 6b c0 18	 imul	 rax, rax, 24
  00085	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0008a	48 03 c8	 add	 rcx, rax
  0008d	48 8b c1	 mov	 rax, rcx
  00090	48 89 44 24 50	 mov	 QWORD PTR _Dest$[rsp], rax

; 1612 :         (void) _Al;
; 1613 :     } else {
; 1614 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1615 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1616 :             _Backout._Emplace_back(*_UFirst);
; 1617 :         }
; 1618 : 
; 1619 :         _Dest = _Backout._Release();
; 1620 :     }
; 1621 : 
; 1622 :     return _Dest;

  00095	48 8b 44 24 50	 mov	 rax, QWORD PTR _Dest$[rsp]

; 1623 : }

  0009a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009e	5f		 pop	 rdi
  0009f	c3		 ret	 0
??$_Uninitialized_copy@PEBUListData@@V?$allocator@UListData@@@std@@@std@@YAPEAUListData@@QEBU1@0PEAU1@AEAV?$allocator@UListData@@@0@@Z ENDP ; std::_Uninitialized_copy<ListData const *,std::allocator<ListData> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::pair<int,int> const *,std::allocator<std::pair<int,int> > >, COMDAT

; 1600 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1601 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1602 :     // note: only called internally from elsewhere in the STL
; 1603 :     using _Ptrval = typename _Alloc::value_type*;
; 1604 : 
; 1605 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBU?$pair@HH@std@@@std@@YAPEBU?$pair@HH@0@QEBU10@@Z ; std::_Get_unwrapped<std::pair<int,int> const >
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1606 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBU?$pair@HH@std@@@std@@YAPEBU?$pair@HH@0@QEBU10@@Z ; std::_Get_unwrapped<std::pair<int,int> const >
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1607 : 
; 1608 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1609 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1610 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1611 :         _Dest += _ULast - _UFirst;
; 1612 :         (void) _Al;
; 1613 :     } else {
; 1614 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@PEAU?$pair@HH@1@AEAV?$allocator@U?$pair@HH@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >
  00065	90		 npad	 1

; 1615 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 08	 add	 rax, 8
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 11		 je	 SHORT $LN3@Uninitiali

; 1616 :             _Backout._Emplace_back(*_UFirst);

  00082	48 8b 54 24 20	 mov	 rdx, QWORD PTR _UFirst$[rsp]
  00087	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  0008c	e8 00 00 00 00	 call	 ??$_Emplace_back@AEBU?$pair@HH@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAXAEBU?$pair@HH@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::_Emplace_back<std::pair<int,int> const &>

; 1617 :         }

  00091	eb d5		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1618 : 
; 1619 :         _Dest = _Backout._Release();

  00093	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00098	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAAPEAU?$pair@HH@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::_Release
  0009d	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Dest$[rsp], rax

; 1620 :     }

  000a5	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000aa	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::~_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >

; 1621 : 
; 1622 :     return _Dest;

  000af	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Dest$[rsp]

; 1623 : }

  000b7	48 8b f8	 mov	 rdi, rax
  000ba	48 8b cc	 mov	 rcx, rsp
  000bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z$rtcFrameData
  000c4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c9	48 8b c7	 mov	 rax, rdi
  000cc	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d0	5f		 pop	 rdi
  000d1	c3		 ret	 0
??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::pair<int,int> const *,std::allocator<std::pair<int,int> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::pair<int,int> const *,std::allocator<std::pair<int,int> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::~_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::pair<int,int> const *,std::allocator<std::pair<int,int> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::pair<int,int> const *,std::allocator<std::pair<int,int> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@HH@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >::~_Uninitialized_backout_al<std::allocator<std::pair<int,int> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::pair<int,int> const *,std::allocator<std::pair<int,int> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Ucopy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEAD0PEAPEBD@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Ucopy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEAD0PEAPEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Ucopy<char * *>, COMDAT

; 1543 :     pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) { // copy [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1544 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PEAPEADV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEAD0PEAPEBDAEAV?$allocator@PEBD@0@@Z ; std::_Uninitialized_copy<char * *,std::allocator<char const *> >

; 1545 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Ucopy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEAD0PEAPEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Ucopy<char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@PEBDV?$allocator@PEBD@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@PEBDV?$allocator@PEBD@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<char const *,std::allocator<char const *> > >::~_Tidy_guard<std::vector<char const *,std::allocator<char const *> > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3527 :         if (_Target) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ ; std::vector<char const *,std::allocator<char const *> >::_Tidy
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@PEBDV?$allocator@PEBD@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<char const *,std::allocator<char const *> > >::~_Tidy_guard<std::vector<char const *,std::allocator<char const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$distance@PEAPEAD@std@@YA_JPEAPEAD0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$distance@PEAPEAD@std@@YA_JPEAPEAD0@Z PROC		; std::distance<char * *>, COMDAT

; 781  : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) { // return distance between iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 782  :     if constexpr (_Is_random_iter_v<_InIt>) {
; 783  :         return _Last - _First; // assume the iterator will do debug checking

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _First$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Last$[rsp]
  00015	48 2b c8	 sub	 rcx, rax
  00018	48 8b c1	 mov	 rax, rcx
  0001b	48 c1 f8 03	 sar	 rax, 3

; 784  :     } else {
; 785  :         _Adl_verify_range(_First, _Last);
; 786  :         auto _UFirst             = _Get_unwrapped(_First);
; 787  :         const auto _ULast        = _Get_unwrapped(_Last);
; 788  :         _Iter_diff_t<_InIt> _Off = 0;
; 789  :         for (; _UFirst != _ULast; ++_UFirst) {
; 790  :             ++_Off;
; 791  :         }
; 792  : 
; 793  :         return _Off;
; 794  :     }
; 795  : }

  0001f	5f		 pop	 rdi
  00020	c3		 ret	 0
??$distance@PEAPEAD@std@@YA_JPEAPEAD0@Z ENDP		; std::distance<char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Verify_range@PEAD@std@@YAXQEBQEAD0@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
??$_Verify_range@PEAD@std@@YAXQEBQEAD0@Z PROC		; std::_Verify_range<char *>, COMDAT

; 191  :     const _Ty* const _First, const _Ty* const _Last) noexcept { // special case range verification for pointers

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@Verify_ran:

; 192  :     _STL_VERIFY(_First <= _Last, "transposed pointer range");

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Last$[rsp]
  00028	48 39 44 24 40	 cmp	 QWORD PTR _First$[rsp], rax
  0002d	77 02		 ja	 SHORT $LN7@Verify_ran
  0002f	eb 6d		 jmp	 SHORT $LN9@Verify_ran
$LN7@Verify_ran:
  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
  00038	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0003d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00044	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00049	45 33 c9	 xor	 r9d, r9d
  0004c	41 b8 c0 00 00
	00		 mov	 r8d, 192		; 000000c0H
  00052	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00059	b9 02 00 00 00	 mov	 ecx, 2
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00064	90		 npad	 1
  00065	83 f8 01	 cmp	 eax, 1
  00068	75 03		 jne	 SHORT $LN11@Verify_ran
  0006a	cc		 int	 3
  0006b	33 c0		 xor	 eax, eax
$LN11@Verify_ran:
  0006d	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00076	41 b9 c0 00 00
	00		 mov	 r9d, 192		; 000000c0H
  0007c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00083	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  0008a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
  00091	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00097	90		 npad	 1
  00098	33 c0		 xor	 eax, eax
  0009a	85 c0		 test	 eax, eax
  0009c	75 93		 jne	 SHORT $LN7@Verify_ran
$LN9@Verify_ran:
  0009e	33 c0		 xor	 eax, eax
  000a0	85 c0		 test	 eax, eax
  000a2	0f 85 7b ff ff
	ff		 jne	 $LN4@Verify_ran

; 193  : }

  000a8	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ac	5f		 pop	 rdi
  000ad	c3		 ret	 0
??$_Verify_range@PEAD@std@@YAXQEBQEAD0@Z ENDP		; std::_Verify_range<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@PEBD@std@@@std@@YAAEBV?$allocator@PEBD@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@PEBD@std@@@std@@YAAEBV?$allocator@PEBD@0@AEBV10@@Z PROC ; std::forward<std::allocator<char const *> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@PEBD@std@@@std@@YAAEBV?$allocator@PEBD@0@AEBV10@@Z ENDP ; std::forward<std::allocator<char const *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 16
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 130  :         explicit __CLR_OR_THIS_CALL operator bool() const { // test if stream state okay

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 131  :             return _Ok;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]

; 132  :         }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 115  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 116  : #if _HAS_EXCEPTIONS
; 117  :             if (!_STD uncaught_exception()) { // TRANSITION, OS#15518458

  0001e	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00023	90		 npad	 1
  00024	0f b6 c0	 movzx	 eax, al
  00027	85 c0		 test	 eax, eax
  00029	75 0f		 jne	 SHORT $LN2@sentry

; 118  :                 this->_Myostr._Osfx();

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00039	90		 npad	 1
$LN2@sentry:

; 119  :             }
; 120  : #else // _HAS_EXCEPTIONS
; 121  :             this->_Myostr._Osfx();
; 122  : #endif // _HAS_EXCEPTIONS
; 123  :         }

  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00044	90		 npad	 1
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Tied$ = 32
this$ = 64
_Ostr$ = 72
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 90   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr)

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 91   :             : _Sentry_base(_Ostr) { // construct locking and testing stream

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ostr$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  00032	90		 npad	 1

; 92   :             if (!_Ostr.good()) {

  00033	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00038	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003b	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00044	48 03 c8	 add	 rcx, rax
  00047	48 8b c1	 mov	 rax, rcx
  0004a	48 8b c8	 mov	 rcx, rax
  0004d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  00053	0f b6 c0	 movzx	 eax, al
  00056	85 c0		 test	 eax, eax
  00058	75 0b		 jne	 SHORT $LN2@sentry

; 93   :                 _Ok = false;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005f	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0

; 94   :                 return;

  00063	eb 77		 jmp	 SHORT $LN1@sentry
$LN2@sentry:

; 95   :             }
; 96   : 
; 97   :             const auto _Tied = _Ostr.tie();

  00065	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0006a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00071	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00076	48 03 c8	 add	 rcx, rax
  00079	48 8b c1	 mov	 rax, rcx
  0007c	48 8b c8	 mov	 rcx, rax
  0007f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  00085	48 89 44 24 20	 mov	 QWORD PTR _Tied$[rsp], rax

; 98   :             if (!_Tied || _Tied == &_Ostr) {

  0008a	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Tied$[rsp], 0
  00090	74 0c		 je	 SHORT $LN4@sentry
  00092	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00097	48 39 44 24 20	 cmp	 QWORD PTR _Tied$[rsp], rax
  0009c	75 0b		 jne	 SHORT $LN3@sentry
$LN4@sentry:

; 99   :                 _Ok = true;

  0009e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a3	c6 40 08 01	 mov	 BYTE PTR [rax+8], 1

; 100  :                 return;

  000a7	eb 33		 jmp	 SHORT $LN1@sentry
$LN3@sentry:

; 101  :             }
; 102  : 
; 103  : 
; 104  :             _Tied->flush();

  000a9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Tied$[rsp]
  000ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 105  :             _Ok = _Ostr.good(); // store test only after flushing tie

  000b4	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  000b9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bc	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000c0	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  000c5	48 03 c8	 add	 rcx, rax
  000c8	48 8b c1	 mov	 rax, rcx
  000cb	48 8b c8	 mov	 rcx, rax
  000ce	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  000d4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000d9	88 41 08	 mov	 BYTE PTR [rcx+8], al
$LN1@sentry:

; 106  :         }

  000dc	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000e1	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e5	5f		 pop	 rdi
  000e6	c3		 ret	 0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Rdbuf$ = 32
tv72 = 40
this$ = 64
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 76   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 77   :             const auto _Rdbuf = _Myostr.rdbuf();

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00026	48 89 44 24 28	 mov	 QWORD PTR tv72[rsp], rax
  0002b	48 8b 44 24 28	 mov	 rax, QWORD PTR tv72[rsp]
  00030	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00033	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00037	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv72[rsp]
  0003c	48 03 c8	 add	 rcx, rax
  0003f	48 8b c1	 mov	 rax, rcx
  00042	48 8b c8	 mov	 rcx, rax
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0004b	90		 npad	 1
  0004c	48 89 44 24 20	 mov	 QWORD PTR _Rdbuf$[rsp], rax

; 78   :             if (_Rdbuf) {

  00051	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Rdbuf$[rsp], 0
  00057	74 11		 je	 SHORT $LN2@Sentry_bas

; 79   :                 _Rdbuf->_Unlock();

  00059	48 8b 44 24 20	 mov	 rax, QWORD PTR _Rdbuf$[rsp]
  0005e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Rdbuf$[rsp]
  00066	ff 50 10	 call	 QWORD PTR [rax+16]
  00069	90		 npad	 1
$LN2@Sentry_bas:

; 80   :             }
; 81   :         }

  0006a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006e	5f		 pop	 rdi
  0006f	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Rdbuf$ = 32
tv73 = 40
this$ = 64
_Ostr$ = 72
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 69   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0002d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 70   :             const auto _Rdbuf = _Myostr.rdbuf();

  00030	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00038	48 89 44 24 28	 mov	 QWORD PTR tv73[rsp], rax
  0003d	48 8b 44 24 28	 mov	 rax, QWORD PTR tv73[rsp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00049	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv73[rsp]
  0004e	48 03 c8	 add	 rcx, rax
  00051	48 8b c1	 mov	 rax, rcx
  00054	48 8b c8	 mov	 rcx, rax
  00057	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0005d	48 89 44 24 20	 mov	 QWORD PTR _Rdbuf$[rsp], rax

; 71   :             if (_Rdbuf) {

  00062	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Rdbuf$[rsp], 0
  00068	74 10		 je	 SHORT $LN2@Sentry_bas

; 72   :                 _Rdbuf->_Lock();

  0006a	48 8b 44 24 20	 mov	 rax, QWORD PTR _Rdbuf$[rsp]
  0006f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00072	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Rdbuf$[rsp]
  00077	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Sentry_bas:

; 73   :             }
; 74   :         }

  0007a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z PROC ; std::forward<CQSVPipeline * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z ENDP ; std::forward<CQSVPipeline * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Range_construct_or_tidy<unsigned int const *>, COMDAT

; 435  :     void _Range_construct_or_tidy(_Iter _First, _Iter _Last, forward_iterator_tag) {

$LN5:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 436  :         // initialize with forward range [_First, _Last)
; 437  :         const auto _Count = _Convert_size<size_type>(static_cast<size_t>(_STD distance(_First, _Last)));

  0002d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00032	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00037	e8 00 00 00 00	 call	 ??$distance@PEBI@std@@YA_JPEBI0@Z ; std::distance<unsigned int const *>
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00044	48 89 44 24 20	 mov	 QWORD PTR _Count$[rsp], rax

; 438  :         if (_Count != 0) {

  00049	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  0004f	74 5c		 je	 SHORT $LN2@Range_cons

; 439  :             _Buy_nonzero(_Count);

  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Count$[rsp]
  00056	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Buy_nonzero

; 440  :             _Tidy_guard<vector> _Guard{this};

  00060	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 89 44 24 38	 mov	 QWORD PTR _Guard$4[rsp], rax

; 441  :             auto& _My_data   = _Mypair._Myval2;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0006f	48 89 44 24 48	 mov	 QWORD PTR _My_data$5[rsp], rax

; 442  :             _My_data._Mylast = _Ucopy(_First, _Last, _My_data._Myfirst);

  00074	48 8b 44 24 48	 mov	 rax, QWORD PTR _My_data$5[rsp]
  00079	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  0007d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Last$[rsp]
  00082	48 8b 54 24 68	 mov	 rdx, QWORD PTR _First$[rsp]
  00087	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008c	e8 00 00 00 00	 call	 ??$_Ucopy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAPEAIPEBI0PEAI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ucopy<unsigned int const *>
  00091	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _My_data$5[rsp]
  00096	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 443  :             _Guard._Target   = nullptr;

  0009a	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _Guard$4[rsp], 0

; 444  :         }

  000a3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Guard$4[rsp]
  000a8	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@IV?$allocator@I@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<unsigned int,std::allocator<unsigned int> > >::~_Tidy_guard<std::vector<unsigned int,std::allocator<unsigned int> > >
$LN2@Range_cons:

; 445  :     }

  000ad	48 8b cc	 mov	 rcx, rsp
  000b0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z$rtcFrameData
  000b7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000bc	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c0	5f		 pop	 rdi
  000c1	c3		 ret	 0
??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Range_construct_or_tidy<unsigned int const *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<unsigned int,std::allocator<unsigned int> >::_Range_construct_or_tidy<unsigned int const *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@IV?$allocator@I@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<unsigned int,std::allocator<unsigned int> > >::~_Tidy_guard<std::vector<unsigned int,std::allocator<unsigned int> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<unsigned int,std::allocator<unsigned int> >::_Range_construct_or_tidy<unsigned int const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<unsigned int,std::allocator<unsigned int> >::_Range_construct_or_tidy<unsigned int const *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@IV?$allocator@I@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<unsigned int,std::allocator<unsigned int> > >::~_Tidy_guard<std::vector<unsigned int,std::allocator<unsigned int> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<unsigned int,std::allocator<unsigned int> >::_Range_construct_or_tidy<unsigned int const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@$$CBI@std@@YAPEBIQEBI@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@$$CBI@std@@YAPEBIQEBI@Z PROC		; std::_Get_unwrapped<unsigned int const >, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@$$CBI@std@@YAPEBIQEBI@Z ENDP		; std::_Get_unwrapped<unsigned int const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@PEBIPEBI@std@@YAXAEBQEBI0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@PEBIPEBI@std@@YAXAEBQEBI0@Z PROC	; std::_Adl_verify_range<unsigned int const *,unsigned int const *>, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  00028	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  00030	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00033	e8 00 00 00 00	 call	 ??$_Verify_range@I@std@@YAXQEBI0@Z ; std::_Verify_range<unsigned int>

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??$_Adl_verify_range@PEBIPEBI@std@@YAXAEBQEBI0@Z ENDP	; std::_Adl_verify_range<unsigned int const *,unsigned int const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@I@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@I@1@@Z PROC ; std::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1><std::allocator<unsigned int> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@I@std@@@std@@YAAEBV?$allocator@I@0@AEBV10@@Z ; std::forward<std::allocator<unsigned int> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@I@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<unsigned int> >::_Vector_val<std::_Simple_types<unsigned int> >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0AEBV?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@I@1@@Z ENDP ; std::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1><std::allocator<unsigned int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
<_Val2_0>$ = 64
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ; std::forward<std::_Facet_base * &>
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<24>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 aa aa aa
	aa aa aa aa 0a	 mov	 rax, 768614336404564650	; 0aaaaaaaaaaaaaaaH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 aa aa aa
	aa aa aa aa 0a	 mov	 rax, 768614336404564650	; 0aaaaaaaaaaaaaaaH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	18		 imul	 rax, QWORD PTR _Count$[rsp], 24
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<24>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Old_size$ = 40
_New_size$ = 48
_Old_capacity$ = 56
_New_capacity$ = 64
_Al$ = 72
_New_ptr$ = 88
_Raw_new$ = 104
_Old_ptr$4 = 112
this$ = 144
_Size_increase$ = 152
_Fn$ = 160
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  0002e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00044	48 89 44 24 28	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  00049	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00051	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00056	48 2b 44 24 28	 sub	 rax, QWORD PTR _Old_size$[rsp]
  0005b	48 3b 84 24 98
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00063	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  00065	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006a	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00072	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00077	48 03 c8	 add	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	48 89 44 24 30	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00082	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00087	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0008b	48 89 44 24 38	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00090	48 8b 54 24 30	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00095	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009d	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a2	48 89 44 24 40	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000a7	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000af	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b4	48 89 44 24 48	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000b9	48 8b 44 24 40	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000be	48 ff c0	 inc	 rax
  000c1	48 8b d0	 mov	 rdx, rax
  000c4	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  000c9	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000ce	48 89 44 24 58	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d3	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000d8	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000dd	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000e7	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000eb	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000f5	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000f9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000fe	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00103	48 89 44 24 68	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  00108	48 83 7c 24 38
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  0010e	72 5c		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00110	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00115	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00119	48 89 44 24 70	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  0011e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  00123	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00128	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _Old_size$[rsp]
  0012d	4c 8b c0	 mov	 r8, rax
  00130	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00135	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  0013d	e8 00 00 00 00	 call	 ??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00142	48 8b 44 24 38	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  00147	48 ff c0	 inc	 rax
  0014a	4c 8b c0	 mov	 r8, rax
  0014d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  00152	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  00157	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  0015c	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00161	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00166	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  0016a	eb 39		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  0016c	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00171	48 83 c0 08	 add	 rax, 8
  00175	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _Old_size$[rsp]
  0017a	4c 8b c0	 mov	 r8, rax
  0017d	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00182	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  0018a	e8 00 00 00 00	 call	 ??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  0018f	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00194	48 83 c0 08	 add	 rax, 8
  00198	48 8d 54 24 58	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  0019d	48 8b c8	 mov	 rcx, rax
  001a0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001a5	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ad	48 8b f8	 mov	 rdi, rax
  001b0	48 8b cc	 mov	 rcx, rsp
  001b3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcFrameData
  001ba	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001bf	48 8b c7	 mov	 rax, rdi
  001c2	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  001c9	5f		 pop	 rdi
  001ca	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_New_ptr$ = 56
_Old_ptr$ = 64
_Old_size$ = 72
??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z PROC ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator(), COMDAT

; 3605 :                 _Newcap - _Old_size, [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3606 :                     _Traits::copy(_New_ptr, _Old_ptr, _Old_size + 1);

  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00032	48 ff c0	 inc	 rax
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00042	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 3607 :                 });

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ENDP ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@UListData@@@std@@YAPEAUListData@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@UListData@@@std@@YAPEAUListData@@PEAU1@@Z PROC ; std::_Unfancy<ListData>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@UListData@@@std@@YAPEAUListData@@PEAU1@@Z ENDP ; std::_Unfancy<ListData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@YAPEAUCX_DESC@@QEAU1@0PEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_move@PEAUCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@YAPEAUCX_DESC@@QEAU1@0PEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z PROC ; std::_Uninitialized_move<CX_DESC *,std::allocator<CX_DESC> >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@UCX_DESC@@@std@@YAPEAUCX_DESC@@QEAU1@@Z ; std::_Get_unwrapped<CX_DESC>
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@UCX_DESC@@@std@@YAPEAUCX_DESC@@QEAU1@@Z ; std::_Get_unwrapped<CX_DESC>
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00050	e8 00 00 00 00	 call	 ??$_Unfancy@UCX_DESC@@@std@@YAPEAUCX_DESC@@PEAU1@@Z ; std::_Unfancy<CX_DESC>
  00055	4c 8b c0	 mov	 r8, rax
  00058	48 8b 54 24 28	 mov	 rdx, QWORD PTR _ULast$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00062	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAUCX_DESC@@PEAU1@@std@@YAPEAUCX_DESC@@PEAU1@00@Z ; std::_Copy_memmove<CX_DESC *,CX_DESC *>

; 1738 :         return _Dest + (_ULast - _UFirst);

  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _ULast$[rsp]
  00071	48 2b c8	 sub	 rcx, rax
  00074	48 8b c1	 mov	 rax, rcx
  00077	48 c1 f8 04	 sar	 rax, 4
  0007b	48 6b c0 10	 imul	 rax, rax, 16
  0007f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00084	48 03 c8	 add	 rcx, rax
  00087	48 8b c1	 mov	 rax, rcx

; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1744 :         }
; 1745 : 
; 1746 :         return _Backout._Release();
; 1747 :     }
; 1748 : }

  0008a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008e	5f		 pop	 rdi
  0008f	c3		 ret	 0
??$_Uninitialized_move@PEAUCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@YAPEAUCX_DESC@@QEAU1@0PEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z ENDP ; std::_Uninitialized_move<CX_DESC *,std::allocator<CX_DESC> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<40>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 66 66 66
	66 66 66 66 06	 mov	 rax, 461168601842738790	; 0666666666666666H
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 66 66 66
	66 66 66 66 06	 mov	 rax, 461168601842738790	; 0666666666666666H
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Count$[rsp], 40 ; 00000028H
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<40>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Ucopy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU2?1??3@YA?AW44@0@Z@11@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Ucopy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU2?1??3@YA?AW44@0@Z@11@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Ucopy<`run_benchmark'::`2'::benchmark_t *>, COMDAT

; 1543 :     pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) { // copy [_First, _Last) to raw _Dest, using allocator

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1544 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z ; std::_Uninitialized_copy<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >

; 1545 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Ucopy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU2?1??3@YA?AW44@0@Z@11@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Ucopy<`run_benchmark'::`2'::benchmark_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::~_Tidy_guard<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >, COMDAT

; 3526 :     ~_Tidy_guard() {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3527 :         if (_Target) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Tidy
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::~_Tidy_guard<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z PROC ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1><std::allocator<`run_benchmark'::`2'::benchmark_t> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z ; std::forward<std::allocator<`run_benchmark'::`2'::benchmark_t> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1><std::allocator<`run_benchmark'::`2'::benchmark_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z PROC ; std::_Uninitialized_move<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@@Z ; std::_Get_unwrapped<`run_benchmark'::`2'::benchmark_t>
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@@Z ; std::_Get_unwrapped<`run_benchmark'::`2'::benchmark_t>
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1738 :         return _Dest + (_ULast - _UFirst);
; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >
  00065	90		 npad	 1

; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 28	 add	 rax, 40			; 00000028H
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 19		 je	 SHORT $LN3@Uninitiali

; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));

  00082	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00087	e8 00 00 00 00	 call	 ??$move@AEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YA$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEAU1?1??2@YA?AW43@0@Z@@Z ; std::move<`run_benchmark'::`2'::benchmark_t &>
  0008c	48 8b d0	 mov	 rdx, rax
  0008f	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00094	e8 00 00 00 00	 call	 ??$_Emplace_back@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAX$$QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_back<`run_benchmark'::`2'::benchmark_t>

; 1744 :         }

  00099	eb cd		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1745 : 
; 1746 :         return _Backout._Release();

  0009b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000a0	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Release
  000a5	48 89 44 24 58	 mov	 QWORD PTR $T5[rsp], rax
  000aa	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000af	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::~_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >
  000b4	48 8b 44 24 58	 mov	 rax, QWORD PTR $T5[rsp]

; 1747 :     }
; 1748 : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z ENDP ; std::_Uninitialized_move<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA PROC ; `std::_Uninitialized_move<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::~_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA PROC ; `std::_Uninitialized_move<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >::~_Uninitialized_backout_al<std::allocator<`run_benchmark'::`2'::benchmark_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z PROC ; std::_Uninitialized_move<char const * *,std::allocator<char const *> >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z ; std::_Get_unwrapped<char const *>
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z ; std::_Get_unwrapped<char const *>
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00050	e8 00 00 00 00	 call	 ??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z ; std::_Unfancy<char const *>
  00055	4c 8b c0	 mov	 r8, rax
  00058	48 8b 54 24 28	 mov	 rdx, QWORD PTR _ULast$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00062	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z ; std::_Copy_memmove<char const * *,char const * *>

; 1738 :         return _Dest + (_ULast - _UFirst);

  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _ULast$[rsp]
  00071	48 2b c8	 sub	 rcx, rax
  00074	48 8b c1	 mov	 rax, rcx
  00077	48 c1 f8 03	 sar	 rax, 3
  0007b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00080	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1744 :         }
; 1745 : 
; 1746 :         return _Backout._Release();
; 1747 :     }
; 1748 : }

  00084	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00088	5f		 pop	 rdi
  00089	c3		 ret	 0
??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z ENDP ; std::_Uninitialized_move<char const * *,std::allocator<char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z PROC ; std::exchange<std::_Facet_base *,std::_Facet_base *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z ENDP ; std::exchange<std::_Facet_base *,std::_Facet_base *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_back<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z ; std::forward<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@PEAV10@@Z ; std::_Unfancy<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::construct<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 20	 add	 rax, 32			; 00000020H
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_back<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z PROC ; std::move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z ENDP ; std::move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@@Z PROC ; std::_Get_unwrapped<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@@Z ENDP ; std::_Get_unwrapped<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z PROC ; std::forward<std::allocator<char> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ENDP ; std::forward<std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@QEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@QEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_G?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@QEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@YAPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@YAPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@PEAU10@@Z PROC ; std::_Unfancy<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@YAPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@PEAU10@@Z ENDP ; std::_Unfancy<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::destroy<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_G?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::destroy<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG203432
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG203433
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG203434
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG203435
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG203436
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG203437
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Ucopy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAPEAUListData@@PEBU2@0PEAU2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Ucopy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAPEAUListData@@PEBU2@0PEAU2@@Z PROC ; std::vector<ListData,std::allocator<ListData> >::_Ucopy<ListData const *>, COMDAT

; 1543 :     pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) { // copy [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1544 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PEBUListData@@V?$allocator@UListData@@@std@@@std@@YAPEAUListData@@QEBU1@0PEAU1@AEAV?$allocator@UListData@@@0@@Z ; std::_Uninitialized_copy<ListData const *,std::allocator<ListData> >

; 1545 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Ucopy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAPEAUListData@@PEBU2@0PEAU2@@Z ENDP ; std::vector<ListData,std::allocator<ListData> >::_Ucopy<ListData const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<ListData,std::allocator<ListData> > >::~_Tidy_guard<std::vector<ListData,std::allocator<ListData> > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3527 :         if (_Target) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ ; std::vector<ListData,std::allocator<ListData> >::_Tidy
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<ListData,std::allocator<ListData> > >::~_Tidy_guard<std::vector<ListData,std::allocator<ListData> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$distance@PEBUListData@@@std@@YA_JPEBUListData@@0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$distance@PEBUListData@@@std@@YA_JPEBUListData@@0@Z PROC ; std::distance<ListData const *>, COMDAT

; 781  : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) { // return distance between iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 782  :     if constexpr (_Is_random_iter_v<_InIt>) {
; 783  :         return _Last - _First; // assume the iterator will do debug checking

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _First$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Last$[rsp]
  00015	48 2b c8	 sub	 rcx, rax
  00018	48 8b c1	 mov	 rax, rcx
  0001b	48 99		 cdq
  0001d	b9 18 00 00 00	 mov	 ecx, 24
  00022	48 f7 f9	 idiv	 rcx

; 784  :     } else {
; 785  :         _Adl_verify_range(_First, _Last);
; 786  :         auto _UFirst             = _Get_unwrapped(_First);
; 787  :         const auto _ULast        = _Get_unwrapped(_Last);
; 788  :         _Iter_diff_t<_InIt> _Off = 0;
; 789  :         for (; _UFirst != _ULast; ++_UFirst) {
; 790  :             ++_Off;
; 791  :         }
; 792  : 
; 793  :         return _Off;
; 794  :     }
; 795  : }

  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
??$distance@PEBUListData@@@std@@YA_JPEBUListData@@0@Z ENDP ; std::distance<ListData const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@UListData@@@std@@@std@@YAAEBV?$allocator@UListData@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@UListData@@@std@@@std@@YAAEBV?$allocator@UListData@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<ListData> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@UListData@@@std@@@std@@YAAEBV?$allocator@UListData@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<ListData> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Ucopy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAPEAU?$pair@HH@1@PEBU21@0PEAU21@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Ucopy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAPEAU?$pair@HH@1@PEBU21@0PEAU21@@Z PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Ucopy<std::pair<int,int> const *>, COMDAT

; 1543 :     pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) { // copy [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1544 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PEBU?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@YAPEAU?$pair@HH@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z ; std::_Uninitialized_copy<std::pair<int,int> const *,std::allocator<std::pair<int,int> > >

; 1545 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Ucopy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAPEAU?$pair@HH@1@PEBU21@0PEAU21@@Z ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Ucopy<std::pair<int,int> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > > >::~_Tidy_guard<std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3527 :         if (_Target) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Tidy
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > > >::~_Tidy_guard<std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$distance@PEBU?$pair@HH@std@@@std@@YA_JPEBU?$pair@HH@0@0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$distance@PEBU?$pair@HH@std@@@std@@YA_JPEBU?$pair@HH@0@0@Z PROC ; std::distance<std::pair<int,int> const *>, COMDAT

; 781  : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) { // return distance between iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 782  :     if constexpr (_Is_random_iter_v<_InIt>) {
; 783  :         return _Last - _First; // assume the iterator will do debug checking

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _First$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Last$[rsp]
  00015	48 2b c8	 sub	 rcx, rax
  00018	48 8b c1	 mov	 rax, rcx
  0001b	48 c1 f8 03	 sar	 rax, 3

; 784  :     } else {
; 785  :         _Adl_verify_range(_First, _Last);
; 786  :         auto _UFirst             = _Get_unwrapped(_First);
; 787  :         const auto _ULast        = _Get_unwrapped(_Last);
; 788  :         _Iter_diff_t<_InIt> _Off = 0;
; 789  :         for (; _UFirst != _ULast; ++_UFirst) {
; 790  :             ++_Off;
; 791  :         }
; 792  : 
; 793  :         return _Off;
; 794  :     }
; 795  : }

  0001f	5f		 pop	 rdi
  00020	c3		 ret	 0
??$distance@PEBU?$pair@HH@std@@@std@@YA_JPEBU?$pair@HH@0@0@Z ENDP ; std::distance<std::pair<int,int> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$pair@HH@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@HH@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@U?$pair@HH@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@HH@std@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<std::pair<int,int> > const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@U?$pair@HH@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@HH@std@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<std::pair<int,int> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Range_construct_or_tidy<char * *>, COMDAT

; 435  :     void _Range_construct_or_tidy(_Iter _First, _Iter _Last, forward_iterator_tag) {

$LN5:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 436  :         // initialize with forward range [_First, _Last)
; 437  :         const auto _Count = _Convert_size<size_type>(static_cast<size_t>(_STD distance(_First, _Last)));

  0002d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00032	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00037	e8 00 00 00 00	 call	 ??$distance@PEAPEAD@std@@YA_JPEAPEAD0@Z ; std::distance<char * *>
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00044	48 89 44 24 20	 mov	 QWORD PTR _Count$[rsp], rax

; 438  :         if (_Count != 0) {

  00049	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  0004f	74 5c		 je	 SHORT $LN2@Range_cons

; 439  :             _Buy_nonzero(_Count);

  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Count$[rsp]
  00056	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z ; std::vector<char const *,std::allocator<char const *> >::_Buy_nonzero

; 440  :             _Tidy_guard<vector> _Guard{this};

  00060	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 89 44 24 38	 mov	 QWORD PTR _Guard$4[rsp], rax

; 441  :             auto& _My_data   = _Mypair._Myval2;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0006f	48 89 44 24 48	 mov	 QWORD PTR _My_data$5[rsp], rax

; 442  :             _My_data._Mylast = _Ucopy(_First, _Last, _My_data._Myfirst);

  00074	48 8b 44 24 48	 mov	 rax, QWORD PTR _My_data$5[rsp]
  00079	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  0007d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Last$[rsp]
  00082	48 8b 54 24 68	 mov	 rdx, QWORD PTR _First$[rsp]
  00087	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008c	e8 00 00 00 00	 call	 ??$_Ucopy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEAD0PEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Ucopy<char * *>
  00091	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _My_data$5[rsp]
  00096	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 443  :             _Guard._Target   = nullptr;

  0009a	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _Guard$4[rsp], 0

; 444  :         }

  000a3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Guard$4[rsp]
  000a8	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@PEBDV?$allocator@PEBD@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<char const *,std::allocator<char const *> > >::~_Tidy_guard<std::vector<char const *,std::allocator<char const *> > >
$LN2@Range_cons:

; 445  :     }

  000ad	48 8b cc	 mov	 rcx, rsp
  000b0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z$rtcFrameData
  000b7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000bc	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c0	5f		 pop	 rdi
  000c1	c3		 ret	 0
??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Range_construct_or_tidy<char * *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::_Range_construct_or_tidy<char * *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@PEBDV?$allocator@PEBD@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<char const *,std::allocator<char const *> > >::~_Tidy_guard<std::vector<char const *,std::allocator<char const *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::_Range_construct_or_tidy<char * *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::_Range_construct_or_tidy<char * *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@PEBDV?$allocator@PEBD@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<char const *,std::allocator<char const *> > >::~_Tidy_guard<std::vector<char const *,std::allocator<char const *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::_Range_construct_or_tidy<char * *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@PEAD@std@@YAPEAPEADQEAPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@PEAD@std@@YAPEAPEADQEAPEAD@Z PROC	; std::_Get_unwrapped<char *>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@PEAD@std@@YAPEAPEADQEAPEAD@Z ENDP	; std::_Get_unwrapped<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@PEAPEADPEAPEAD@std@@YAXAEBQEAPEAD0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@PEAPEADPEAPEAD@std@@YAXAEBQEAPEAD0@Z PROC ; std::_Adl_verify_range<char * *,char * *>, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  00028	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  00030	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00033	e8 00 00 00 00	 call	 ??$_Verify_range@PEAD@std@@YAXQEBQEAD0@Z ; std::_Verify_range<char *>

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??$_Adl_verify_range@PEAPEADPEAPEAD@std@@YAXAEBQEAPEAD0@Z ENDP ; std::_Adl_verify_range<char * *,char * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@PEBD@std@@$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEBD@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@PEBD@std@@$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEBD@1@@Z PROC ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1><std::allocator<char const *> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@PEBD@std@@@std@@YAAEBV?$allocator@PEBD@0@AEBV10@@Z ; std::forward<std::allocator<char const *> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<char const *> >::_Vector_val<std::_Simple_types<char const *> >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0AEBV?$allocator@PEBD@std@@$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEBD@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1><std::allocator<char const *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
_TEXT	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 88
$T6 = 92
$T7 = 96
$T8 = 104
tv281 = 112
tv279 = 113
_Ostr$ = 144
_Data$ = 152
_Size$ = 160
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z PROC ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>, COMDAT

; 433  :     const _SizeT _Size) { // insert a character-type sequence into _Ostr as if through a basic_string copy

$LN26:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 434  :     using _Ostr_t                    = basic_ostream<_Elem, _Traits>;
; 435  :     typename _Ostr_t::iostate _State = _Ostr_t::goodbit;

  0002e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _State$[rsp], 0

; 436  : 
; 437  :     _SizeT _Pad;
; 438  :     if (_Ostr.width() <= 0 || static_cast<_SizeT>(_Ostr.width()) <= _Size) {

  00036	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00045	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0004d	48 03 c8	 add	 rcx, rax
  00050	48 8b c1	 mov	 rax, rcx
  00053	48 8b c8	 mov	 rcx, rax
  00056	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  0005c	48 85 c0	 test	 rax, rax
  0005f	7e 30		 jle	 SHORT $LN10@Insert_str
  00061	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00069	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00070	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00078	48 03 c8	 add	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 8b c8	 mov	 rcx, rax
  00081	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  00087	48 3b 84 24 a0
	00 00 00	 cmp	 rax, QWORD PTR _Size$[rsp]
  0008f	77 0b		 ja	 SHORT $LN8@Insert_str
$LN10@Insert_str:

; 439  :         _Pad = 0;

  00091	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR _Pad$[rsp], 0

; 440  :     } else {

  0009a	eb 33		 jmp	 SHORT $LN9@Insert_str
$LN8@Insert_str:

; 441  :         _Pad = static_cast<_SizeT>(_Ostr.width()) - _Size;

  0009c	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  000a4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a7	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000ab	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  000b3	48 03 c8	 add	 rcx, rax
  000b6	48 8b c1	 mov	 rax, rcx
  000b9	48 8b c8	 mov	 rcx, rax
  000bc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000c2	48 2b 84 24 a0
	00 00 00	 sub	 rax, QWORD PTR _Size$[rsp]
  000ca	48 89 44 24 28	 mov	 QWORD PTR _Pad$[rsp], rax
$LN9@Insert_str:

; 442  :     }
; 443  : 
; 444  :     const typename _Ostr_t::sentry _Ok(_Ostr);

  000cf	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR _Ostr$[rsp]
  000d7	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Ok$[rsp]
  000dc	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  000e1	90		 npad	 1

; 445  : 
; 446  :     if (!_Ok) {

  000e2	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Ok$[rsp]
  000e7	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  000ec	0f b6 c0	 movzx	 eax, al
  000ef	85 c0		 test	 eax, eax
  000f1	75 10		 jne	 SHORT $LN11@Insert_str

; 447  :         _State |= _Ostr_t::badbit;

  000f3	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  000f7	83 c8 04	 or	 eax, 4
  000fa	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 448  :     } else { // state okay, insert characters

  000fe	e9 1b 02 00 00	 jmp	 $LN12@Insert_str
$LN11@Insert_str:

; 449  :         _TRY_IO_BEGIN
; 450  :         if ((_Ostr.flags() & _Ostr_t::adjustfield) != _Ostr_t::left) {

  00103	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0010b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0010e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00112	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0011a	48 03 c8	 add	 rcx, rax
  0011d	48 8b c1	 mov	 rax, rcx
  00120	48 8b c8	 mov	 rcx, rax
  00123	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
  00129	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  0012e	83 f8 40	 cmp	 eax, 64			; 00000040H
  00131	0f 84 ae 00 00
	00		 je	 $LN14@Insert_str

; 451  :             for (; 0 < _Pad; --_Pad) { // pad on left

  00137	eb 0d		 jmp	 SHORT $LN4@Insert_str
$LN2@Insert_str:
  00139	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pad$[rsp]
  0013e	48 ff c8	 dec	 rax
  00141	48 89 44 24 28	 mov	 QWORD PTR _Pad$[rsp], rax
$LN4@Insert_str:
  00146	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pad$[rsp], 0
  0014c	0f 86 93 00 00
	00		 jbe	 $LN14@Insert_str

; 452  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

  00152	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0015a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0015d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00161	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00169	48 03 c8	 add	 rcx, rax
  0016c	48 8b c1	 mov	 rax, rcx
  0016f	48 8b c8	 mov	 rcx, rax
  00172	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  00178	88 44 24 70	 mov	 BYTE PTR tv281[rsp], al
  0017c	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00184	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00187	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  0018b	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR _Ostr$[rsp]
  00193	48 03 d1	 add	 rdx, rcx
  00196	48 8b ca	 mov	 rcx, rdx
  00199	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0019f	0f b6 4c 24 70	 movzx	 ecx, BYTE PTR tv281[rsp]
  001a4	0f b6 d1	 movzx	 edx, cl
  001a7	48 8b c8	 mov	 rcx, rax
  001aa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  001b0	89 44 24 54	 mov	 DWORD PTR $T4[rsp], eax
  001b4	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  001b9	89 44 24 58	 mov	 DWORD PTR $T5[rsp], eax
  001bd	48 8d 54 24 54	 lea	 rdx, QWORD PTR $T4[rsp]
  001c2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T5[rsp]
  001c7	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  001cc	0f b6 c0	 movzx	 eax, al
  001cf	85 c0		 test	 eax, eax
  001d1	74 0d		 je	 SHORT $LN15@Insert_str

; 453  :                     _State |= _Ostr_t::badbit; // insertion failed, quit

  001d3	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  001d7	83 c8 04	 or	 eax, 4
  001da	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 454  :                     break;

  001de	eb 05		 jmp	 SHORT $LN14@Insert_str
$LN15@Insert_str:

; 455  :                 }
; 456  :             }

  001e0	e9 54 ff ff ff	 jmp	 $LN2@Insert_str
$LN14@Insert_str:

; 457  :         }
; 458  : 
; 459  :         if (_State == _Ostr_t::goodbit
; 460  :             && _Ostr.rdbuf()->sputn(_Data, static_cast<streamsize>(_Size)) != static_cast<streamsize>(_Size)) {

  001e5	83 7c 24 20 00	 cmp	 DWORD PTR _State$[rsp], 0
  001ea	75 59		 jne	 SHORT $LN16@Insert_str
  001ec	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  001f4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001f7	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  001fb	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00203	48 03 c8	 add	 rcx, rax
  00206	48 8b c1	 mov	 rax, rcx
  00209	48 8b c8	 mov	 rcx, rax
  0020c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00212	4c 8b 84 24 a0
	00 00 00	 mov	 r8, QWORD PTR _Size$[rsp]
  0021a	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Data$[rsp]
  00222	48 8b c8	 mov	 rcx, rax
  00225	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
  0022b	48 3b 84 24 a0
	00 00 00	 cmp	 rax, QWORD PTR _Size$[rsp]
  00233	74 10		 je	 SHORT $LN16@Insert_str

; 461  :             _State |= _Ostr_t::badbit;

  00235	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  00239	83 c8 04	 or	 eax, 4
  0023c	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 462  :         } else {

  00240	e9 ae 00 00 00	 jmp	 $LN17@Insert_str
$LN16@Insert_str:

; 463  :             for (; 0 < _Pad; --_Pad) { // pad on right

  00245	eb 0d		 jmp	 SHORT $LN7@Insert_str
$LN5@Insert_str:
  00247	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pad$[rsp]
  0024c	48 ff c8	 dec	 rax
  0024f	48 89 44 24 28	 mov	 QWORD PTR _Pad$[rsp], rax
$LN7@Insert_str:
  00254	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pad$[rsp], 0
  0025a	0f 86 93 00 00
	00		 jbe	 $LN17@Insert_str

; 464  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

  00260	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00268	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0026b	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0026f	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00277	48 03 c8	 add	 rcx, rax
  0027a	48 8b c1	 mov	 rax, rcx
  0027d	48 8b c8	 mov	 rcx, rax
  00280	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  00286	88 44 24 71	 mov	 BYTE PTR tv279[rsp], al
  0028a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00292	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00295	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  00299	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR _Ostr$[rsp]
  002a1	48 03 d1	 add	 rdx, rcx
  002a4	48 8b ca	 mov	 rcx, rdx
  002a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  002ad	0f b6 4c 24 71	 movzx	 ecx, BYTE PTR tv279[rsp]
  002b2	0f b6 d1	 movzx	 edx, cl
  002b5	48 8b c8	 mov	 rcx, rax
  002b8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  002be	89 44 24 5c	 mov	 DWORD PTR $T6[rsp], eax
  002c2	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  002c7	89 44 24 60	 mov	 DWORD PTR $T7[rsp], eax
  002cb	48 8d 54 24 5c	 lea	 rdx, QWORD PTR $T6[rsp]
  002d0	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T7[rsp]
  002d5	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  002da	0f b6 c0	 movzx	 eax, al
  002dd	85 c0		 test	 eax, eax
  002df	74 0d		 je	 SHORT $LN18@Insert_str

; 465  :                     _State |= _Ostr_t::badbit; // insertion failed, quit

  002e1	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  002e5	83 c8 04	 or	 eax, 4
  002e8	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 466  :                     break;

  002ec	eb 05		 jmp	 SHORT $LN17@Insert_str
$LN18@Insert_str:

; 467  :                 }
; 468  :             }

  002ee	e9 54 ff ff ff	 jmp	 $LN5@Insert_str
$LN17@Insert_str:

; 469  :         }
; 470  : 
; 471  :         _Ostr.width(0);

  002f3	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  002fb	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002fe	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00302	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0030a	48 03 c8	 add	 rcx, rax
  0030d	48 8b c1	 mov	 rax, rcx
  00310	33 d2		 xor	 edx, edx
  00312	48 8b c8	 mov	 rcx, rax
  00315	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
  0031b	90		 npad	 1
  0031c	eb 00		 jmp	 SHORT $LN12@Insert_str
$LN24@Insert_str:
$LN12@Insert_str:

; 472  :         _CATCH_IO_(_Ostr_t, _Ostr)
; 473  :     }
; 474  : 
; 475  :     _Ostr.setstate(_State);

  0031e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00326	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00329	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0032d	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00335	48 03 c8	 add	 rcx, rax
  00338	48 8b c1	 mov	 rax, rcx
  0033b	45 33 c0	 xor	 r8d, r8d
  0033e	8b 54 24 20	 mov	 edx, DWORD PTR _State$[rsp]
  00342	48 8b c8	 mov	 rcx, rax
  00345	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 476  :     return _Ostr;

  0034b	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00353	48 89 44 24 68	 mov	 QWORD PTR $T8[rsp], rax
  00358	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Ok$[rsp]
  0035d	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00362	48 8b 44 24 68	 mov	 rax, QWORD PTR $T8[rsp]

; 477  : }

  00367	48 8b f8	 mov	 rdi, rax
  0036a	48 8b cc	 mov	 rcx, rsp
  0036d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$rtcFrameData
  00374	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00379	48 8b c7	 mov	 rax, rdi
  0037c	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00383	5f		 pop	 rdi
  00384	c3		 ret	 0
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ENDP ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 88
$T6 = 92
$T7 = 96
$T8 = 104
tv281 = 112
tv279 = 113
_Ostr$ = 144
_Data$ = 152
_Size$ = 160
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00017	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 88
$T6 = 92
$T7 = 96
$T8 = 104
tv281 = 112
tv279 = 113
_Ostr$ = 144
_Data$ = 152
_Size$ = 160
?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$1

; 472  :         _CATCH_IO_(_Ostr_t, _Ostr)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
  00013	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00028	48 03 c8	 add	 rcx, rax
  0002b	48 8b c1	 mov	 rax, rcx
  0002e	41 b0 01	 mov	 r8b, 1
  00031	ba 04 00 00 00	 mov	 edx, 4
  00036	48 8b c8	 mov	 rcx, rax
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  0003f	90		 npad	 1
  00040	48 8d 05 00 00
	00 00		 lea	 rax, $LN24@catch$1
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
  0004e	cc		 int	 3
?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 88
$T6 = 92
$T7 = 96
$T8 = 104
tv281 = 112
tv279 = 113
_Ostr$ = 144
_Data$ = 152
_Size$ = 160
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00017	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Pad$ = 40
_Ok$ = 56
$T4 = 84
$T5 = 88
$T6 = 92
$T7 = 96
$T8 = 104
tv281 = 112
tv279 = 113
_Ostr$ = 144
_Data$ = 152
_Size$ = 160
?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$1

; 472  :         _CATCH_IO_(_Ostr_t, _Ostr)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
  00013	48 8b 85 90 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00028	48 03 c8	 add	 rcx, rax
  0002b	48 8b c1	 mov	 rax, rcx
  0002e	41 b0 01	 mov	 r8b, 1
  00031	ba 04 00 00 00	 mov	 edx, 4
  00036	48 8b c8	 mov	 rcx, rax
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  0003f	90		 npad	 1
  00040	48 8d 05 00 00
	00 00		 lea	 rax, $LN24@catch$1
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
  0004e	cc		 int	 3
?catch$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@H@std@@YA$$QEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@H@std@@YA$$QEAHAEAH@Z PROC			; std::forward<int>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@H@std@@YA$$QEAHAEAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEAPEAVCQSVPipeline@@@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCQSVPipeline@@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
<_Val2_0>$ = 64
??$?0AEAPEAVCQSVPipeline@@@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCQSVPipeline@@@Z PROC ; std::_Compressed_pair<std::default_delete<CQSVPipeline>,CQSVPipeline *,1>::_Compressed_pair<std::default_delete<CQSVPipeline>,CQSVPipeline *,1><CQSVPipeline * &>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::forward<CQSVPipeline * &>
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$?0AEAPEAVCQSVPipeline@@@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCQSVPipeline@@@Z ENDP ; std::_Compressed_pair<std::default_delete<CQSVPipeline>,CQSVPipeline *,1>::_Compressed_pair<std::default_delete<CQSVPipeline>,CQSVPipeline *,1><CQSVPipeline * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S52$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv91 = 120
this$ = 144
_First$ = 152
_Last$ = 160
_Al$ = 168
??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> ><unsigned int const *,void>, COMDAT

; 450  :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from [_First, _Last) with optional allocator

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00033	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	4c 8b 84 24 a8
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00043	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@I@std@@$$V@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@I@1@@Z ; std::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1><std::allocator<unsigned int> const &>

; 451  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00050	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00058	e8 00 00 00 00	 call	 ?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal
  0005d	48 8b d0	 mov	 rdx, rax
  00060	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S52$[rsp]
  00065	e8 00 00 00 00	 call	 ??$?0I@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@I@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned int>
  0006a	48 8d 44 24 34	 lea	 rax, QWORD PTR $S52$[rsp]
  0006f	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 452  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00074	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007c	4c 8b c0	 mov	 r8, rax
  0007f	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00084	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00089	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0008e	90		 npad	 1

; 453  :         _Adl_verify_range(_First, _Last);

  0008f	48 8d 94 24 a0
	00 00 00	 lea	 rdx, QWORD PTR _Last$[rsp]
  00097	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR _First$[rsp]
  0009f	e8 00 00 00 00	 call	 ??$_Adl_verify_range@PEBIPEBI@std@@YAXAEBQEBI0@Z ; std::_Adl_verify_range<unsigned int const *,unsigned int const *>

; 454  :         _Range_construct_or_tidy(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  000a4	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  000ac	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBI@std@@YAPEBIQEBI@Z ; std::_Get_unwrapped<unsigned int const >
  000b1	48 89 44 24 78	 mov	 QWORD PTR tv91[rsp], rax
  000b6	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000be	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBI@std@@YAPEBIQEBI@Z ; std::_Get_unwrapped<unsigned int const >
  000c3	44 0f b6 4c 24
	76		 movzx	 r9d, BYTE PTR $T6[rsp]
  000c9	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv91[rsp]
  000ce	4c 8b c1	 mov	 r8, rcx
  000d1	48 8b d0	 mov	 rdx, rax
  000d4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000dc	e8 00 00 00 00	 call	 ??$_Range_construct_or_tidy@PEBI@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEBI0Uforward_iterator_tag@1@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Range_construct_or_tidy<unsigned int const *>

; 455  :         _Proxy._Release();

  000e1	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000e6	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000eb	90		 npad	 1

; 456  :     }

  000ec	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000f1	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000f6	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000fe	48 8b f8	 mov	 rdi, rax
  00101	48 8b cc	 mov	 rcx, rsp
  00104	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z$rtcFrameData
  0010b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00110	48 8b c7	 mov	 rax, rdi
  00113	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0011a	5f		 pop	 rdi
  0011b	c3		 ret	 0
??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> ><unsigned int const *,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S52$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv91 = 120
this$ = 144
_First$ = 152
_Last$ = 160
_Al$ = 168
?dtor$0@?0???$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z@4HA PROC ; `std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> ><unsigned int const *,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z@4HA ENDP ; `std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> ><unsigned int const *,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S52$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv91 = 120
this$ = 144
_First$ = 152
_Last$ = 160
_Al$ = 168
?dtor$0@?0???$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z@4HA PROC ; `std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> ><unsigned int const *,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z@4HA ENDP ; `std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> ><unsigned int const *,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@$0A@@std@@YAPEBUListData@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@$0A@@std@@YAPEBUListData@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,0>, COMDAT

; 257  : _NODISCARD constexpr auto _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 258  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 259  :     return _It._Unwrapped();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEBAPEBUListData@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Unwrapped

; 260  : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@$0A@@std@@YAPEBUListData@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > > >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@1@0@Z ; std::_Verify_range

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale
;	COMDAT ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Count$ = 48
_Ptrdest$ = 56
_Ptrnext$1 = 64
_Ptr$ = 96
__formal$ = 104
__formal$ = 112
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT

; 564  : _Elem* __CRTDECL _Maklocstr(const char* _Ptr, _Elem*, const _Locinfo::_Cvtvec&) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 565  :     // convert C string to _Elem sequence using _Cvtvec
; 566  :     size_t _Count = _CSTD strlen(_Ptr) + 1;

  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002d	e8 00 00 00 00	 call	 strlen
  00032	48 ff c0	 inc	 rax
  00035	48 89 44 24 30	 mov	 QWORD PTR _Count$[rsp], rax

; 567  : 
; 568  :     _Elem* _Ptrdest = static_cast<_Elem*>(_calloc_dbg(_Count, sizeof(_Elem), _CRT_BLOCK, __FILE__, __LINE__));

  0003a	c7 44 24 20 38
	02 00 00	 mov	 DWORD PTR [rsp+32], 568	; 00000238H
  00042	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:$SG201489
  00049	41 b8 02 00 00
	00		 mov	 r8d, 2
  0004f	ba 01 00 00 00	 mov	 edx, 1
  00054	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Count$[rsp]
  00059	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__calloc_dbg
  0005f	48 89 44 24 38	 mov	 QWORD PTR _Ptrdest$[rsp], rax

; 569  : 
; 570  :     if (!_Ptrdest) {

  00064	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptrdest$[rsp], 0
  0006a	75 05		 jne	 SHORT $LN5@Maklocstr

; 571  :         _Xbad_alloc();

  0006c	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN5@Maklocstr:

; 572  :     }
; 573  : 
; 574  :     for (_Elem* _Ptrnext = _Ptrdest; 0 < _Count; --_Count, ++_Ptrnext, ++_Ptr) {

  00071	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptrdest$[rsp]
  00076	48 89 44 24 40	 mov	 QWORD PTR _Ptrnext$1[rsp], rax
  0007b	eb 27		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR _Count$[rsp]
  00082	48 ff c8	 dec	 rax
  00085	48 89 44 24 30	 mov	 QWORD PTR _Count$[rsp], rax
  0008a	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptrnext$1[rsp]
  0008f	48 ff c0	 inc	 rax
  00092	48 89 44 24 40	 mov	 QWORD PTR _Ptrnext$1[rsp], rax
  00097	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0009c	48 ff c0	 inc	 rax
  0009f	48 89 44 24 60	 mov	 QWORD PTR _Ptr$[rsp], rax
$LN4@Maklocstr:
  000a4	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  000aa	76 11		 jbe	 SHORT $LN3@Maklocstr

; 575  :         *_Ptrnext = static_cast<_Elem>(static_cast<unsigned char>(*_Ptr));

  000ac	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptrnext$1[rsp]
  000b1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000b6	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  000b9	88 08		 mov	 BYTE PTR [rax], cl

; 576  :     }

  000bb	eb c0		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 577  : 
; 578  :     return _Ptrdest;

  000bd	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptrdest$[rsp]
$LN6@Maklocstr:

; 579  : }

  000c2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c6	5f		 pop	 rdi
  000c7	c3		 ret	 0
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>, COMDAT

; 1820 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Ptr$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
  0003a	90		 npad	 1
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::_Facet_base *,std::_Facet_base *>
  00039	90		 npad	 1

; 1905 :     }

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1d		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ; std::default_delete<std::_Facet_base>::operator()
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z
_TEXT	SEGMENT
$T1 = 32
tv70 = 40
this$ = 64
_Ptr$ = 72
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z PROC ; std::default_delete<std::_Facet_base>::operator(), COMDAT

; 1765 :     void operator()(_Ty* _Ptr) const noexcept { // delete a pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1766 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1767 :         delete _Ptr;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0002d	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  00033	74 1b		 je	 SHORT $LN3@operator
  00035	48 8b 44 24 20	 mov	 rax, QWORD PTR $T1[rsp]
  0003a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003d	ba 01 00 00 00	 mov	 edx, 1
  00042	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00047	ff 10		 call	 QWORD PTR [rax]
  00049	48 89 44 24 28	 mov	 QWORD PTR tv70[rsp], rax
  0004e	eb 09		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv70[rsp], 0
$LN4@operator:

; 1768 :     }

  00059	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ENDP ; std::default_delete<std::_Facet_base>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0004d	48 c1 e0 03	 shl	 rax, 3
$LN3@Get_size_o:

; 36   : }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > *,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@@Z ; std::_Get_unwrapped<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@@Z ; std::_Get_unwrapped<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1738 :         return _Dest + (_ULast - _UFirst);
; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
  00065	90		 npad	 1

; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 20	 add	 rax, 32			; 00000020H
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 19		 je	 SHORT $LN3@Uninitiali

; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));

  00082	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00087	e8 00 00 00 00	 call	 ??$move@AEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YA$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEAV10@@Z ; std::move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > &>
  0008c	48 8b d0	 mov	 rdx, rax
  0008f	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00094	e8 00 00 00 00	 call	 ??$_Emplace_back@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_back<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >

; 1744 :         }

  00099	eb cd		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1745 : 
; 1746 :         return _Backout._Release();

  0009b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000a0	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Release
  000a5	48 89 44 24 58	 mov	 QWORD PTR $T5[rsp], rax
  000aa	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000af	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
  000b4	48 8b 44 24 58	 mov	 rax, QWORD PTR $T5[rsp]

; 1747 :     }
; 1748 : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > *,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > *,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > *,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > *,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~_Uninitialized_backout_al<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > *,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPEAIQEAIAEAV?$allocator@I@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPEAIQEAIAEAV?$allocator@I@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned int> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPEAIQEAIAEAV?$allocator@I@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$03@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$03@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<4>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 3f	 mov	 rax, 4611686018427387903 ; 3fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 3f	 mov	 rax, 4611686018427387903 ; 3fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0004d	48 c1 e0 02	 shl	 rax, 2
$LN3@Get_size_o:

; 36   : }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$_Get_size_of_n@$03@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UListData@@@std@@@std@@YAXPEAUListData@@QEAU1@AEAV?$allocator@UListData@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@UListData@@@std@@@std@@YAXPEAUListData@@QEAU1@AEAV?$allocator@UListData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<ListData> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@UListData@@@std@@@std@@YAXPEAUListData@@QEAU1@AEAV?$allocator@UListData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<ListData> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@QEAU10@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@QEAU10@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 48	 add	 rax, 72			; 00000048H
  00033	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  00038	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00044	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@YAPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@PEAU10@@Z ; std::_Unfancy<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0004e	90		 npad	 1
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$destroy@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@QEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0005c	90		 npad	 1

; 1039 :         }

  0005d	eb cb		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Destroy_range@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@QEAU10@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@HH@std@@@std@@@std@@YAXPEAU?$pair@HH@0@QEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$pair@HH@std@@@std@@@std@@YAXPEAU?$pair@HH@0@QEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<int,int> > >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@U?$pair@HH@std@@@std@@@std@@YAXPEAU?$pair@HH@0@QEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<int,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UCX_DESC@@@std@@@std@@YAXPEAUCX_DESC@@QEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@UCX_DESC@@@std@@@std@@YAXPEAUCX_DESC@@QEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CX_DESC> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@UCX_DESC@@@std@@@std@@YAXPEAUCX_DESC@@QEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CX_DESC> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<32>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	20		 imul	 rax, QWORD PTR _Count$[rsp], 32 ; 00000020H
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<32>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 20	 add	 rax, 32			; 00000020H
  00033	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  00038	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00044	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@PEAV10@@Z ; std::_Unfancy<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  0004e	90		 npad	 1
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$destroy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::destroy<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  0005c	90		 npad	 1

; 1039 :         }

  0005d	eb cb		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z PROC ; std::_Destroy_range<std::allocator<`run_benchmark'::`2'::benchmark_t> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z ENDP ; std::_Destroy_range<std::allocator<`run_benchmark'::`2'::benchmark_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z PROC ; std::_Destroy_range<std::allocator<char const *> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z ENDP ; std::_Destroy_range<std::allocator<char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 32
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 04 24 00	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 0

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 30   :             if (_Count > _Max_possible) {
; 31   :                 _Throw_bad_array_new_length(); // multiply overflow
; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00022	48 8b 44 24 20	 mov	 rax, QWORD PTR _Count$[rsp]

; 36   : }

  00027	48 83 c4 10	 add	 rsp, 16
  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 08 00 00 00	 mov	 ecx, 8
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
_TEXT	SEGMENT
_My_data$ = 48
_Old_size$ = 56
_New_size$ = 64
_Old_capacity$ = 72
_New_capacity$ = 80
_Al$ = 88
_New_ptr$ = 104
_Raw_new$ = 120
_Old_ptr$4 = 128
this$ = 160
_Size_increase$ = 168
_Fn$ = 176
<_Args_0>$ = 184
<_Args_1>$ = 192
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 38	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 38	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 40	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 48	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 40	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 50	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 58	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 68	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 44 24 78	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  0010d	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00113	72 7f		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0011a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00126	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00133	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0013b	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00140	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00148	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0014d	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00152	4c 8b c0	 mov	 r8, rax
  00155	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  0015a	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00162	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00167	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  0016c	48 ff c0	 inc	 rax
  0016f	4c 8b c0	 mov	 r8, rax
  00172	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  0017a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  0017f	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  00184	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00189	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0018e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  00192	eb 53		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  00194	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00199	48 83 c0 08	 add	 rax, 8
  0019d	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  001a5	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001aa	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001b2	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001b7	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001bc	4c 8b c0	 mov	 r8, rax
  001bf	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001c4	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001cc	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001d1	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  001d6	48 83 c0 08	 add	 rax, 8
  001da	48 8d 54 24 68	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  001df	48 8b c8	 mov	 rcx, rax
  001e2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001e7	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ef	48 8b f8	 mov	 rdi, rax
  001f2	48 8b cc	 mov	 rcx, rsp
  001f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData
  001fc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00201	48 8b c7	 mov	 rax, rdi
  00204	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  0020b	5f		 pop	 rdi
  0020c	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Ptr$ = 96
_Count$ = 104
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z PROC ; <lambda_65e615be2a453ca0576c979606f46740>::operator(), COMDAT

; 2748 :                 const size_type _Count) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  0002d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Old_size$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);

  00041	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	4c 8b 44 24 68	 mov	 r8, QWORD PTR _Count$[rsp]
  00056	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00063	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00068	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  0006d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00072	48 03 c8	 add	 rcx, rax
  00075	48 8b c1	 mov	 rax, rcx
  00078	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2752 :             },

  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ENDP ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 32
_New_capacity$ = 40
_Al$ = 48
_New_ptr$ = 72
this$ = 112
_New_size$ = 120
_Fn$ = 128
<_Args_0>$ = 136
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>, COMDAT

; 4082 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 4083 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4084 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4085 :         if (_New_size > max_size()) {

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00037	48 39 44 24 78	 cmp	 QWORD PTR _New_size$[rsp], rax
  0003c	76 05		 jbe	 SHORT $LN2@Reallocate

; 4086 :             _Xlen(); // result too long

  0003e	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4087 :         }
; 4088 : 
; 4089 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00043	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0004c	48 89 44 24 20	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4090 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00051	48 8b 54 24 78	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00056	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00060	48 89 44 24 28	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4091 :         auto& _Al                     = _Getal();

  00065	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0006f	48 89 44 24 30	 mov	 QWORD PTR _Al$[rsp], rax

; 4092 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  00079	48 ff c0	 inc	 rax
  0007c	48 8b d0	 mov	 rdx, rax
  0007f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00084	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00089	48 89 44 24 48	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4093 :         _Mypair._Myval2._Orphan_all();

  0008e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 8b c8	 mov	 rcx, rax
  00096	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4094 :         _Mypair._Myval2._Mysize = _New_size;

  0009b	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000a0	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000a5	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4095 :         _Mypair._Myval2._Myres  = _New_capacity;

  000a9	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000ae	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000b3	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4096 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000b7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000bc	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  000c1	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR <_Args_0>$[rsp]
  000c9	4c 8b 44 24 78	 mov	 r8, QWORD PTR _New_size$[rsp]
  000ce	48 8b d0	 mov	 rdx, rax
  000d1	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  000d9	e8 00 00 00 00	 call	 ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()

; 4097 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	48 83 7c 24 20
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  000e4	72 2e		 jb	 SHORT $LN3@Reallocate

; 4098 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e6	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  000eb	48 ff c0	 inc	 rax
  000ee	4c 8b c0	 mov	 r8, rax
  000f1	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000f6	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000fa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ff	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4099 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00104	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00109	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0010e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4100 :         } else {

  00112	eb 16		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4101 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00114	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00119	48 83 c0 08	 add	 rax, 8
  0011d	48 8d 54 24 48	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  00122	48 8b c8	 mov	 rcx, rax
  00125	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4102 :         }
; 4103 : 
; 4104 :         return *this;

  0012a	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4105 :     }

  0012f	48 8b f8	 mov	 rdi, rax
  00132	48 8b cc	 mov	 rcx, rsp
  00135	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData
  0013c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00141	48 8b c7	 mov	 rax, rdi
  00144	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00148	5f		 pop	 rdi
  00149	c3		 ret	 0
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Count$ = 80
_Ptr$ = 88
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z PROC ; <lambda_66f57f934f28d61049862f64df852ff0>::operator(), COMDAT

; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  0002d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00041	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00046	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  0004b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00050	48 03 c8	 add	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2856 :             },

  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ENDP ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Max_value<unsigned __int64>, COMDAT

; 32   :     _NOEXCEPT_COND(noexcept(_Left < _Right)) { // return larger of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 33   :     return _Left < _Right ? _Right : _Left;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Max_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Max_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 34   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Max_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 322  :     _Obj.~_Ty();
; 323  : }

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z PROC ; std::addressof<std::codecvt<char,char,_Mbstatet> const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z ENDP ; std::addressof<std::codecvt<char,char,_Mbstatet> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@D@std@@YAPEADAEAD@Z PROC			; std::addressof<char>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@D@std@@YAPEADAEAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z
_TEXT	SEGMENT
_My_data$ = 48
_Old_size$ = 56
_New_size$ = 64
_Old_capacity$ = 72
_New_capacity$ = 80
_Al$ = 88
_New_ptr$ = 104
_Raw_new$ = 120
_Old_ptr$4 = 128
this$ = 160
_Size_increase$ = 168
_Fn$ = 176
<_Args_0>$ = 184
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 38	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 38	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 40	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 48	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 40	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 50	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 58	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 68	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 44 24 78	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  0010d	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00113	72 71		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0011a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00126	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00133	0f b6 8c 24 b8
	00 00 00	 movzx	 ecx, BYTE PTR <_Args_0>$[rsp]
  0013b	88 4c 24 20	 mov	 BYTE PTR [rsp+32], cl
  0013f	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00144	4c 8b c0	 mov	 r8, rax
  00147	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  0014c	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00154	e8 00 00 00 00	 call	 ??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00159	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  0015e	48 ff c0	 inc	 rax
  00161	4c 8b c0	 mov	 r8, rax
  00164	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  0016c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  00171	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  00176	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0017b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00180	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  00184	eb 45		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  00186	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0018b	48 83 c0 08	 add	 rax, 8
  0018f	0f b6 8c 24 b8
	00 00 00	 movzx	 ecx, BYTE PTR <_Args_0>$[rsp]
  00197	88 4c 24 20	 mov	 BYTE PTR [rsp+32], cl
  0019b	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001a0	4c 8b c0	 mov	 r8, rax
  001a3	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001a8	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001b0	e8 00 00 00 00	 call	 ??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001b5	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  001ba	48 83 c0 08	 add	 rax, 8
  001be	48 8d 54 24 68	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  001c3	48 8b c8	 mov	 rcx, rax
  001c6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001cb	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001d3	48 8b f8	 mov	 rdi, rax
  001d6	48 8b cc	 mov	 rcx, rsp
  001d9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z$rtcFrameData
  001e0	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001e5	48 8b c7	 mov	 rax, rdi
  001e8	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  001ef	5f		 pop	 rdi
  001f0	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Ch$ = 96
??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z PROC ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator(), COMDAT

; 3500 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem _Ch) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3501 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  0002d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Old_size$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 3502 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  00041	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	48 8d 54 24 60	 lea	 rdx, QWORD PTR _Ch$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3503 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  0005e	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00063	48 8b 44 24 48	 mov	 rax, QWORD PTR _New_ptr$[rsp]
  00068	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0006d	48 8d 44 08 01	 lea	 rax, QWORD PTR [rax+rcx+1]
  00072	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00077	48 8b c8	 mov	 rcx, rax
  0007a	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3504 :             },

  0007f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z ENDP ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z
_TEXT	SEGMENT
ptResult$ = 48
tLeft$ = 56
tRight$ = 64
??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z PROC		; ATL::AtlMultiply<unsigned __int64>, COMDAT

; 99   : {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 100  : 	/* avoid divide 0 */
; 101  : 	if(tLeft==0)

  00028	48 83 7c 24 38
	00		 cmp	 QWORD PTR tLeft$[rsp], 0
  0002e	75 10		 jne	 SHORT $LN2@AtlMultipl

; 102  : 	{
; 103  : 		*ptResult=0;

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR ptResult$[rsp]
  00035	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 104  : 		return S_OK;

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 36		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 105  : 	}
; 106  : 	if(::ATL::AtlLimits<T>::_Max/tLeft < tRight)

  00040	33 d2		 xor	 edx, edx
  00042	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  00049	48 f7 74 24 38	 div	 QWORD PTR tLeft$[rsp]
  0004e	48 3b 44 24 40	 cmp	 rax, QWORD PTR tRight$[rsp]
  00053	73 0c		 jae	 SHORT $LN3@AtlMultipl

; 107  : 	{
; 108  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00055	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  0005a	e8 00 00 00 00	 call	 HRESULT_FROM_WIN32
  0005f	eb 15		 jmp	 SHORT $LN1@AtlMultipl
$LN3@AtlMultipl:

; 109  : 	}
; 110  : 	*ptResult= tLeft * tRight;

  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR tLeft$[rsp]
  00066	48 0f af 44 24
	40		 imul	 rax, QWORD PTR tRight$[rsp]
  0006c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptResult$[rsp]
  00071	48 89 01	 mov	 QWORD PTR [rcx], rax

; 111  : 	return S_OK;

  00074	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 112  : }

  00076	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007a	5f		 pop	 rdi
  0007b	c3		 ret	 0
??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z ENDP		; ATL::AtlMultiply<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0I@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@I@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0I@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@I@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned int>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0I@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@I@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z PROC ; std::vector<ListData,std::allocator<ListData> >::_Range_construct_or_tidy<ListData const *>, COMDAT

; 435  :     void _Range_construct_or_tidy(_Iter _First, _Iter _Last, forward_iterator_tag) {

$LN5:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 436  :         // initialize with forward range [_First, _Last)
; 437  :         const auto _Count = _Convert_size<size_type>(static_cast<size_t>(_STD distance(_First, _Last)));

  0002d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00032	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00037	e8 00 00 00 00	 call	 ??$distance@PEBUListData@@@std@@YA_JPEBUListData@@0@Z ; std::distance<ListData const *>
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00044	48 89 44 24 20	 mov	 QWORD PTR _Count$[rsp], rax

; 438  :         if (_Count != 0) {

  00049	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  0004f	74 5c		 je	 SHORT $LN2@Range_cons

; 439  :             _Buy_nonzero(_Count);

  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Count$[rsp]
  00056	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z ; std::vector<ListData,std::allocator<ListData> >::_Buy_nonzero

; 440  :             _Tidy_guard<vector> _Guard{this};

  00060	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 89 44 24 38	 mov	 QWORD PTR _Guard$4[rsp], rax

; 441  :             auto& _My_data   = _Mypair._Myval2;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0006f	48 89 44 24 48	 mov	 QWORD PTR _My_data$5[rsp], rax

; 442  :             _My_data._Mylast = _Ucopy(_First, _Last, _My_data._Myfirst);

  00074	48 8b 44 24 48	 mov	 rax, QWORD PTR _My_data$5[rsp]
  00079	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  0007d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Last$[rsp]
  00082	48 8b 54 24 68	 mov	 rdx, QWORD PTR _First$[rsp]
  00087	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008c	e8 00 00 00 00	 call	 ??$_Ucopy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAPEAUListData@@PEBU2@0PEAU2@@Z ; std::vector<ListData,std::allocator<ListData> >::_Ucopy<ListData const *>
  00091	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _My_data$5[rsp]
  00096	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 443  :             _Guard._Target   = nullptr;

  0009a	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _Guard$4[rsp], 0

; 444  :         }

  000a3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Guard$4[rsp]
  000a8	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<ListData,std::allocator<ListData> > >::~_Tidy_guard<std::vector<ListData,std::allocator<ListData> > >
$LN2@Range_cons:

; 445  :     }

  000ad	48 8b cc	 mov	 rcx, rsp
  000b0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z$rtcFrameData
  000b7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000bc	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c0	5f		 pop	 rdi
  000c1	c3		 ret	 0
??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z ENDP ; std::vector<ListData,std::allocator<ListData> >::_Range_construct_or_tidy<ListData const *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<ListData,std::allocator<ListData> >::_Range_construct_or_tidy<ListData const *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<ListData,std::allocator<ListData> > >::~_Tidy_guard<std::vector<ListData,std::allocator<ListData> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<ListData,std::allocator<ListData> >::_Range_construct_or_tidy<ListData const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<ListData,std::allocator<ListData> >::_Range_construct_or_tidy<ListData const *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<ListData,std::allocator<ListData> > >::~_Tidy_guard<std::vector<ListData,std::allocator<ListData> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<ListData,std::allocator<ListData> >::_Range_construct_or_tidy<ListData const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@UListData@@@std@@$$V@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@UListData@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@UListData@@@std@@$$V@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@UListData@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1>::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1><std::allocator<ListData> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@UListData@@@std@@@std@@YAAEBV?$allocator@UListData@@@0@AEBV10@@Z ; std::forward<std::allocator<ListData> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<ListData> >::_Vector_val<std::_Simple_types<ListData> >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0AEBV?$allocator@UListData@@@std@@$$V@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@UListData@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1>::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1><std::allocator<ListData> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0UListData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UListData@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0UListData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UListData@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><ListData>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0UListData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UListData@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><ListData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<ListData> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<ListData> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Compressed_pair<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1><std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z ; std::forward<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Compressed_pair<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1><std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z PROC ; std::move<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z ENDP ; std::move<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Range_construct_or_tidy<std::pair<int,int> const *>, COMDAT

; 435  :     void _Range_construct_or_tidy(_Iter _First, _Iter _Last, forward_iterator_tag) {

$LN5:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 436  :         // initialize with forward range [_First, _Last)
; 437  :         const auto _Count = _Convert_size<size_type>(static_cast<size_t>(_STD distance(_First, _Last)));

  0002d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00032	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00037	e8 00 00 00 00	 call	 ??$distance@PEBU?$pair@HH@std@@@std@@YA_JPEBU?$pair@HH@0@0@Z ; std::distance<std::pair<int,int> const *>
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00044	48 89 44 24 20	 mov	 QWORD PTR _Count$[rsp], rax

; 438  :         if (_Count != 0) {

  00049	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  0004f	74 5c		 je	 SHORT $LN2@Range_cons

; 439  :             _Buy_nonzero(_Count);

  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Count$[rsp]
  00056	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Buy_nonzero

; 440  :             _Tidy_guard<vector> _Guard{this};

  00060	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 89 44 24 38	 mov	 QWORD PTR _Guard$4[rsp], rax

; 441  :             auto& _My_data   = _Mypair._Myval2;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0006f	48 89 44 24 48	 mov	 QWORD PTR _My_data$5[rsp], rax

; 442  :             _My_data._Mylast = _Ucopy(_First, _Last, _My_data._Myfirst);

  00074	48 8b 44 24 48	 mov	 rax, QWORD PTR _My_data$5[rsp]
  00079	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  0007d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Last$[rsp]
  00082	48 8b 54 24 68	 mov	 rdx, QWORD PTR _First$[rsp]
  00087	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008c	e8 00 00 00 00	 call	 ??$_Ucopy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAPEAU?$pair@HH@1@PEBU21@0PEAU21@@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Ucopy<std::pair<int,int> const *>
  00091	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _My_data$5[rsp]
  00096	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 443  :             _Guard._Target   = nullptr;

  0009a	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _Guard$4[rsp], 0

; 444  :         }

  000a3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Guard$4[rsp]
  000a8	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > > >::~_Tidy_guard<std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > > >
$LN2@Range_cons:

; 445  :     }

  000ad	48 8b cc	 mov	 rcx, rsp
  000b0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z$rtcFrameData
  000b7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000bc	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c0	5f		 pop	 rdi
  000c1	c3		 ret	 0
??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Range_construct_or_tidy<std::pair<int,int> const *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Range_construct_or_tidy<std::pair<int,int> const *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > > >::~_Tidy_guard<std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Range_construct_or_tidy<std::pair<int,int> const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Range_construct_or_tidy<std::pair<int,int> const *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > > >::~_Tidy_guard<std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Range_construct_or_tidy<std::pair<int,int> const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1383 :         if (_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003a	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00032	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00040	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00052	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00055	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  0005a	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  0005f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00064	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  00076	48 8b 44 24 50	 mov	 rax, QWORD PTR _Mycont$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00083	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  00086	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$pair@HH@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@U?$pair@HH@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1>::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1><std::allocator<std::pair<int,int> > const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@U?$pair@HH@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@HH@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::pair<int,int> > const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::pair<int,int> > >::_Vector_val<std::_Simple_types<std::pair<int,int> > >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0AEBV?$allocator@U?$pair@HH@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1>::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1><std::allocator<std::pair<int,int> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$pair@HH@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@HH@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$pair@HH@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@HH@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<int,int> >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0U?$pair@HH@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@HH@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<int,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 48
?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z PROC ; std::pointer_traits<char *>::pointer_to, COMDAT

; 299  :     _NODISCARD static pointer pointer_to(_Reftype _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 300  :         return _STD addressof(_Val);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Val$[rsp]
  00023	e8 00 00 00 00	 call	 ??$addressof@D@std@@YAPEADAEAD@Z ; std::addressof<char>

; 301  :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ENDP ; std::pointer_traits<char *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z PROC	; std::_Max_value<char *>, COMDAT

; 32   :     _NOEXCEPT_COND(noexcept(_Left < _Right)) { // return larger of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 33   :     return _Left < _Right ? _Right : _Left;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Max_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Max_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 34   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z ENDP	; std::_Max_value<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\iosfwd
;	COMDAT ??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 16
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ PROC		; std::fpos<_Mbstatet>::operator __int64, COMDAT

; 66   :     operator streamoff() const { // return offset

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 67   :                                  // TRANSITION, ABI: We currently always set _Fpos to 0 but older .objs containing old
; 68   :                                  // basic_filebuf would set _Fpos.
; 69   :         return _Myoff + _Fpos;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0000e	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00013	48 03 41 08	 add	 rax, QWORD PTR [rcx+8]

; 70   :     }

  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ ENDP		; std::fpos<_Mbstatet>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\iosfwd
;	COMDAT ?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ
_TEXT	SEGMENT
this$ = 16
__$ReturnUdt$ = 24
?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ PROC ; std::fpos<_Mbstatet>::state, COMDAT

; 58   :     _NODISCARD _Statetype state() const { // return conversion state

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 59   :         return _Mystate;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00014	48 8b 4c 24 18	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax
  0001c	48 8b 44 24 18	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 60   :     }

  00021	5f		 pop	 rdi
  00022	c3		 ret	 0
?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ ENDP ; std::fpos<_Mbstatet>::state
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z
_TEXT	SEGMENT
this$ = 16
_State$ = 24
_Fileposition$ = 32
??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z PROC	; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT

; 55   :         : _Myoff(_Fileposition), _Fpos(0), _Mystate(_State) { // construct with conversion state and C file position

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Fileposition$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0002a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _State$[rsp]
  00034	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 56   :     }

  00038	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z ENDP	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z
_TEXT	SEGMENT
this$ = 16
_Off$ = 24
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z PROC		; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT

; 51   :     /* implicit */ fpos(streamoff _Off = 0) : _Myoff(_Off), _Fpos(0), _Mystate() { // construct with stream offset

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Off$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	48 83 c0 10	 add	 rax, 16
  0002e	48 8b f8	 mov	 rdi, rax
  00031	33 c0		 xor	 eax, eax
  00033	b9 08 00 00 00	 mov	 ecx, 8
  00038	f3 aa		 rep stosb

; 52   :     }

  0003a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ENDP		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale
;	COMDAT ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::codecvt<char,char,_Mbstatet> >, COMDAT

; 427  : const _Facet& __CRTDECL use_facet(const locale& _Loc) { // get facet reference from locale

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 428  :     _BEGIN_LOCK(_LOCK_LOCALE) // the thread lock, make get atomic

  00024	33 d2		 xor	 edx, edx
  00026	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  0002b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00031	90		 npad	 1

; 429  :     const locale::facet* _Psave = _Facetptr<_Facet>::_Psave; // static pointer to lazy facet

  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
  00039	48 89 44 24 48	 mov	 QWORD PTR _Psave$7[rsp], rax

; 430  : 
; 431  :     const size_t _Id         = _Facet::id;

  0003e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??Bid@locale@std@@QEAA_KXZ
  0004b	48 89 44 24 58	 mov	 QWORD PTR _Id$8[rsp], rax

; 432  :     const locale::facet* _Pf = _Loc._Getfacet(_Id);

  00050	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Id$8[rsp]
  00055	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Loc$[rsp]
  0005d	e8 00 00 00 00	 call	 ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet
  00062	48 89 44 24 60	 mov	 QWORD PTR _Pf$9[rsp], rax

; 433  : 
; 434  :     if (!_Pf) {

  00067	48 83 7c 24 60
	00		 cmp	 QWORD PTR _Pf$9[rsp], 0
  0006d	0f 85 97 00 00
	00		 jne	 $LN2@use_facet

; 435  :         if (_Psave) {

  00073	48 83 7c 24 48
	00		 cmp	 QWORD PTR _Psave$7[rsp], 0
  00079	74 0f		 je	 SHORT $LN3@use_facet

; 436  :             _Pf = _Psave; // lazy facet already allocated

  0007b	48 8b 44 24 48	 mov	 rax, QWORD PTR _Psave$7[rsp]
  00080	48 89 44 24 60	 mov	 QWORD PTR _Pf$9[rsp], rax
  00085	e9 80 00 00 00	 jmp	 $LN2@use_facet
$LN3@use_facet:

; 437  :         } else if (_Facet::_Getcat(&_Psave, &_Loc) == static_cast<size_t>(-1)) {

  0008a	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Loc$[rsp]
  00092	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Psave$7[rsp]
  00097	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
  0009d	48 83 f8 ff	 cmp	 rax, -1
  000a1	75 08		 jne	 SHORT $LN5@use_facet

; 438  : #if _HAS_EXCEPTIONS
; 439  :             _Throw_bad_cast(); // lazy disallowed

  000a3	e8 00 00 00 00	 call	 ?_Throw_bad_cast@std@@YAXXZ ; std::_Throw_bad_cast
  000a8	90		 npad	 1

; 440  : #else // _HAS_EXCEPTIONS
; 441  :             abort(); // lazy disallowed
; 442  : #endif // _HAS_EXCEPTIONS
; 443  :         } else { // queue up lazy facet for destruction

  000a9	eb 5f		 jmp	 SHORT $LN2@use_facet
$LN5@use_facet:

; 444  :             auto _Pfmod = const_cast<locale::facet*>(_Psave);

  000ab	48 8b 44 24 48	 mov	 rax, QWORD PTR _Psave$7[rsp]
  000b0	48 89 44 24 68	 mov	 QWORD PTR _Pfmod$10[rsp], rax

; 445  :             unique_ptr<_Facet_base> _Psave_guard(static_cast<_Facet_base*>(_Pfmod));

  000b5	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Pfmod$10[rsp]
  000ba	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Psave_guard$11[rsp]
  000bf	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
  000c4	90		 npad	 1

; 446  : 
; 447  : #if defined(_M_CEE)
; 448  :             _Facet_Register_m(_Pfmod);
; 449  : #else // defined(_M_CEE)
; 450  :             _Facet_Register(_Pfmod);

  000c5	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Pfmod$10[rsp]
  000ca	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register

; 451  : #endif // defined(_M_CEE)
; 452  : 
; 453  :             _Pfmod->_Incref();

  000cf	48 8b 44 24 68	 mov	 rax, QWORD PTR _Pfmod$10[rsp]
  000d4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d7	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Pfmod$10[rsp]
  000dc	ff 50 08	 call	 QWORD PTR [rax+8]

; 454  :             _Facetptr<_Facet>::_Psave = _Psave;

  000df	48 8b 44 24 48	 mov	 rax, QWORD PTR _Psave$7[rsp]
  000e4	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB, rax ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave

; 455  :             _Pf                       = _Psave;

  000eb	48 8b 44 24 48	 mov	 rax, QWORD PTR _Psave$7[rsp]
  000f0	48 89 44 24 60	 mov	 QWORD PTR _Pf$9[rsp], rax

; 456  : 
; 457  :             (void) _Psave_guard.release();

  000f5	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Psave_guard$11[rsp]
  000fa	e8 00 00 00 00	 call	 ?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
  000ff	90		 npad	 1

; 458  :         }

  00100	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Psave_guard$11[rsp]
  00105	e8 00 00 00 00	 call	 ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
$LN2@use_facet:

; 459  :     }
; 460  : 
; 461  :     return static_cast<const _Facet&>(*_Pf); // should be dynamic_cast

  0010a	48 8b 44 24 60	 mov	 rax, QWORD PTR _Pf$9[rsp]
  0010f	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR $T12[rsp], rax
  00117	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  0011c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00122	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR $T12[rsp]

; 462  :     _END_LOCK()
; 463  : } // end of use_facet body

  0012a	48 8b f8	 mov	 rdi, rax
  0012d	48 8b cc	 mov	 rcx, rsp
  00130	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcFrameData
  00137	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0013c	48 8b c7	 mov	 rax, rdi
  0013f	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00146	5f		 pop	 rdi
  00147	c3		 ret	 0
$LN10@use_facet:
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 78	 lea	 rcx, QWORD PTR _Psave_guard$11[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 78	 lea	 rcx, QWORD PTR _Psave_guard$11[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1>::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@UCX_DESC@@@std@@QEAA@XZ ; std::allocator<CX_DESC>::allocator<CX_DESC>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<CX_DESC> >::_Vector_val<std::_Simple_types<CX_DESC> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1>::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0UCX_DESC@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UCX_DESC@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0UCX_DESC@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UCX_DESC@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CX_DESC>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0UCX_DESC@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UCX_DESC@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CX_DESC>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Emplace_reallocate<CX_DESC const &>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 c1 f8 04	 sar	 rax, 4
  00083	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00088	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00092	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 2b c1	 sub	 rax, rcx
  0009b	48 c1 f8 04	 sar	 rax, 4
  0009f	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?max_size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::max_size
  000b1	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000b6	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000b8	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@CAXXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000bd	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000c2	48 ff c0	 inc	 rax
  000c5	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000ca	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000cf	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d7	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBA_K_K@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Calculate_growth
  000dc	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000e1	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000e6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000eb	e8 00 00 00 00	 call	 ?allocate@?$allocator@UCX_DESC@@@std@@QEAAPEAUCX_DESC@@_K@Z ; std::allocator<CX_DESC>::allocate
  000f0	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000f5	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Whereoff$[rsp], 16
  000fb	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00100	48 8d 44 01 10	 lea	 rax, QWORD PTR [rcx+rax+16]
  00105	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  0010a	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0010f	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00114	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0011c	e8 00 00 00 00	 call	 ??$forward@AEBUCX_DESC@@@std@@YAAEBUCX_DESC@@AEBU1@@Z ; std::forward<CX_DESC const &>
  00121	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00126	48 6b 4c 24 40
	10		 imul	 rcx, QWORD PTR _Whereoff$[rsp], 16
  0012c	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00131	48 03 d1	 add	 rdx, rcx
  00134	48 8b ca	 mov	 rcx, rdx
  00137	e8 00 00 00 00	 call	 ??$_Unfancy@UCX_DESC@@@std@@YAPEAUCX_DESC@@PEAU1@@Z ; std::_Unfancy<CX_DESC>
  0013c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  00141	4c 8b c1	 mov	 r8, rcx
  00144	48 8b d0	 mov	 rdx, rax
  00147	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  0014c	e8 00 00 00 00	 call	 ??$construct@UCX_DESC@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SAXAEAV?$allocator@UCX_DESC@@@1@QEAUCX_DESC@@AEBU3@@Z ; std::_Default_allocator_traits<std::allocator<CX_DESC> >::construct<CX_DESC,CX_DESC const &>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  00151	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Whereoff$[rsp], 16
  00157	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0015c	48 03 c8	 add	 rcx, rax
  0015f	48 8b c1	 mov	 rax, rcx
  00162	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00167	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0016c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0016f	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00177	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00179	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0017e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00183	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00186	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0018b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0018e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00196	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  0019b	eb 5d		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  0019d	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  001a2	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001aa	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001af	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001b2	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ba	e8 00 00 00 00	 call	 ?_Umove@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAPEAUCX_DESC@@PEAU3@00@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001bf	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001c4	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001c9	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Whereoff$[rsp], 16
  001cf	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  001d4	48 8d 44 01 10	 lea	 rax, QWORD PTR [rcx+rax+16]
  001d9	4c 8b c8	 mov	 r9, rax
  001dc	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001e1	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001e4	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001ec	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001f4	e8 00 00 00 00	 call	 ?_Umove@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAPEAUCX_DESC@@PEAU3@00@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove
  001f9	90		 npad	 1
$LN5@Emplace_re:
  001fa	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001fc	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  00201	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  00206	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  0020b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00213	e8 00 00 00 00	 call	 ?_Change_array@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXQEAUCX_DESC@@_K1@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00218	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Whereoff$[rsp], 16
  0021e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00223	48 03 c8	 add	 rcx, rax
  00226	48 8b c1	 mov	 rax, rcx

; 718  :     }

  00229	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00230	5f		 pop	 rdi
  00231	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Emplace_reallocate<CX_DESC const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z@4HA PROC ; `std::vector<CX_DESC,std::allocator<CX_DESC> >::_Emplace_reallocate<CX_DESC const &>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@0@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UCX_DESC@@@std@@QEAAXQEAUCX_DESC@@_K@Z ; std::allocator<CX_DESC>::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z@4HA ENDP ; `std::vector<CX_DESC,std::allocator<CX_DESC> >::_Emplace_reallocate<CX_DESC const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z@4HA PROC ; `std::vector<CX_DESC,std::allocator<CX_DESC> >::_Emplace_reallocate<CX_DESC const &>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@0@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UCX_DESC@@@std@@QEAAXQEAUCX_DESC@@_K@Z ; std::allocator<CX_DESC>::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z@4HA ENDP ; `std::vector<CX_DESC,std::allocator<CX_DESC> >::_Emplace_reallocate<CX_DESC const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@UCX_DESC@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SAXAEAV?$allocator@UCX_DESC@@@1@QEAUCX_DESC@@AEBU3@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@UCX_DESC@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SAXAEAV?$allocator@UCX_DESC@@@1@QEAUCX_DESC@@AEBU3@@Z PROC ; std::_Default_allocator_traits<std::allocator<CX_DESC> >::construct<CX_DESC,CX_DESC const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 0e 00 00 00	 mov	 ecx, 14
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00029	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	b9 10 00 00 00	 mov	 ecx, 16
  00033	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00038	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEBUCX_DESC@@@std@@YAAEBUCX_DESC@@AEBU1@@Z ; std::forward<CX_DESC const &>
  00047	48 8b 7c 24 20	 mov	 rdi, QWORD PTR $T1[rsp]
  0004c	48 8b f0	 mov	 rsi, rax
  0004f	b9 10 00 00 00	 mov	 ecx, 16
  00054	f3 a4		 rep movsb

; 759  :     }

  00056	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005a	5f		 pop	 rdi
  0005b	5e		 pop	 rsi
  0005c	c3		 ret	 0
??$construct@UCX_DESC@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SAXAEAV?$allocator@UCX_DESC@@@1@QEAUCX_DESC@@AEBU3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<CX_DESC> >::construct<CX_DESC,CX_DESC const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@UCX_DESC@@@std@@YAPEAUCX_DESC@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@UCX_DESC@@@std@@YAPEAUCX_DESC@@PEAU1@@Z PROC ; std::_Unfancy<CX_DESC>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@UCX_DESC@@@std@@YAPEAUCX_DESC@@PEAU1@@Z ENDP ; std::_Unfancy<CX_DESC>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXAEBUCX_DESC@@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXAEBUCX_DESC@@@Z PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Emplace_back_with_unused_capacity<CX_DESC const &>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEBUCX_DESC@@@std@@YAAEBUCX_DESC@@AEBU1@@Z ; std::forward<CX_DESC const &>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@UCX_DESC@@@std@@YAPEAUCX_DESC@@PEAU1@@Z ; std::_Unfancy<CX_DESC>
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@UCX_DESC@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SAXAEAV?$allocator@UCX_DESC@@@1@QEAUCX_DESC@@AEBU3@@Z ; std::_Default_allocator_traits<std::allocator<CX_DESC> >::construct<CX_DESC,CX_DESC const &>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 10	 add	 rax, 16
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXAEBUCX_DESC@@@Z ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Emplace_back_with_unused_capacity<CX_DESC const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBUCX_DESC@@@std@@YAAEBUCX_DESC@@AEBU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBUCX_DESC@@@std@@YAAEBUCX_DESC@@AEBU1@@Z PROC ; std::forward<CX_DESC const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBUCX_DESC@@@std@@YAAEBUCX_DESC@@AEBU1@@Z ENDP ; std::forward<CX_DESC const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::emplace_back<CX_DESC const &>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@AEBUCX_DESC@@@std@@YAAEBUCX_DESC@@AEBU1@@Z ; std::forward<CX_DESC const &>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXAEBUCX_DESC@@@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Emplace_back_with_unused_capacity<CX_DESC const &>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@AEBUCX_DESC@@@std@@YAAEBUCX_DESC@@AEBU1@@Z ; std::forward<CX_DESC const &>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAPEAUCX_DESC@@QEAU2@AEBU2@@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Emplace_reallocate<CX_DESC const &>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::emplace_back<CX_DESC const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >,std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >,1>::_Compressed_pair<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >,std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >,std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >,1>::_Compressed_pair<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >,std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_reallocate<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 c1 f8 05	 sar	 rax, 5
  00083	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00088	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00092	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 2b c1	 sub	 rax, rcx
  0009b	48 c1 f8 05	 sar	 rax, 5
  0009f	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::max_size
  000b1	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000b6	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000b8	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000bd	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000c2	48 ff c0	 inc	 rax
  000c5	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000ca	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000cf	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d7	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Calculate_growth
  000dc	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000e1	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000e6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000eb	e8 00 00 00 00	 call	 ?allocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::allocate
  000f0	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000f5	48 6b 44 24 40
	20		 imul	 rax, QWORD PTR _Whereoff$[rsp], 32 ; 00000020H
  000fb	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00100	48 8d 44 01 20	 lea	 rax, QWORD PTR [rcx+rax+32]
  00105	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  0010a	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0010f	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00114	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0011c	e8 00 00 00 00	 call	 ??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z ; std::forward<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>
  00121	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00126	48 6b 4c 24 40
	20		 imul	 rcx, QWORD PTR _Whereoff$[rsp], 32 ; 00000020H
  0012c	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00131	48 03 d1	 add	 rdx, rcx
  00134	48 8b ca	 mov	 rcx, rdx
  00137	e8 00 00 00 00	 call	 ??$_Unfancy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@PEAV10@@Z ; std::_Unfancy<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  0013c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  00141	4c 8b c1	 mov	 r8, rcx
  00144	48 8b d0	 mov	 rdx, rax
  00147	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  0014c	e8 00 00 00 00	 call	 ??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEBV31@@Z ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::construct<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  00151	48 6b 44 24 40
	20		 imul	 rax, QWORD PTR _Whereoff$[rsp], 32 ; 00000020H
  00157	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0015c	48 03 c8	 add	 rcx, rax
  0015f	48 8b c1	 mov	 rax, rcx
  00162	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00167	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0016c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0016f	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00177	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00179	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0017e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00183	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00186	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0018b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0018e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00196	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  0019b	eb 5d		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  0019d	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  001a2	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001aa	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001af	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001b2	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ba	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@PEAV32@00@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001bf	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001c4	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001c9	48 6b 44 24 40
	20		 imul	 rax, QWORD PTR _Whereoff$[rsp], 32 ; 00000020H
  001cf	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  001d4	48 8d 44 01 20	 lea	 rax, QWORD PTR [rcx+rax+32]
  001d9	4c 8b c8	 mov	 r9, rax
  001dc	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001e1	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001e4	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001ec	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001f4	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@PEAV32@00@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Umove
  001f9	90		 npad	 1
$LN5@Emplace_re:
  001fa	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001fc	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  00201	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  00206	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  0020b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00213	e8 00 00 00 00	 call	 ?_Change_array@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K1@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00218	48 6b 44 24 40
	20		 imul	 rax, QWORD PTR _Whereoff$[rsp], 32 ; 00000020H
  0021e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00223	48 03 c8	 add	 rcx, rax
  00226	48 8b c1	 mov	 rax, rcx

; 718  :     }

  00229	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00230	5f		 pop	 rdi
  00231	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_reallocate<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z@4HA PROC ; `std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_reallocate<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z@4HA ENDP ; `std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_reallocate<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z@4HA PROC ; `std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_reallocate<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z@4HA ENDP ; `std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_reallocate<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEBV31@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEBV31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::construct<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z ; std::forward<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEBV31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::construct<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@PEAV10@@Z PROC ; std::_Unfancy<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@PEAV10@@Z ENDP ; std::_Unfancy<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_back_with_unused_capacity<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z ; std::forward<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@PEAV10@@Z ; std::_Unfancy<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@QEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@AEBV31@@Z ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::construct<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 20	 add	 rax, 32			; 00000020H
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_back_with_unused_capacity<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z PROC ; std::forward<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z ENDP ; std::forward<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::emplace_back<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z ; std::forward<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_back_with_unused_capacity<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@YAAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@AEBV10@@Z ; std::forward<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@QEAV21@AEBV21@@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Emplace_reallocate<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::emplace_back<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0003a	48 89 44 24 20	 mov	 QWORD PTR _New_proxy$[rsp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR _New_proxy$[rsp]
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1189 :     }

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAA@XZ ; std::allocator<`run_benchmark'::`2'::benchmark_t>::allocator<`run_benchmark'::`2'::benchmark_t>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><`run_benchmark'::`2'::benchmark_t>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><`run_benchmark'::`2'::benchmark_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_reallocate<`run_benchmark'::`2'::benchmark_t const &>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 99		 cdq
  00081	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00086	48 f7 f9	 idiv	 rcx
  00089	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0008e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00098	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009e	48 2b c1	 sub	 rax, rcx
  000a1	48 99		 cdq
  000a3	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000a8	48 f7 f9	 idiv	 rcx
  000ab	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000b0	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b8	e8 00 00 00 00	 call	 ?max_size@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::max_size
  000bd	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000c2	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000c4	e8 00 00 00 00	 call	 ?_Xlength@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@CAXXZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000c9	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000ce	48 ff c0	 inc	 rax
  000d1	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000d6	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000db	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000e3	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBA_K_K@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Calculate_growth
  000e8	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000ed	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000f2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000f7	e8 00 00 00 00	 call	 ?allocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z ; std::allocator<`run_benchmark'::`2'::benchmark_t>::allocate
  000fc	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  00101	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00107	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0010c	48 8d 44 01 28	 lea	 rax, QWORD PTR [rcx+rax+40]
  00111	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00116	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0011b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00120	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00128	e8 00 00 00 00	 call	 ??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z ; std::forward<`run_benchmark'::`2'::benchmark_t const &>
  0012d	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00132	48 6b 4c 24 40
	28		 imul	 rcx, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00138	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  0013d	48 03 d1	 add	 rdx, rcx
  00140	48 8b ca	 mov	 rcx, rdx
  00143	e8 00 00 00 00	 call	 ??$_Unfancy@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU1?1??2@YA?AW43@0@Z@@Z ; std::_Unfancy<`run_benchmark'::`2'::benchmark_t>
  00148	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0014d	4c 8b c1	 mov	 r8, rcx
  00150	48 8b d0	 mov	 rdx, rax
  00153	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00158	e8 00 00 00 00	 call	 ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU3?1??4@YA?AW45@1@Z@@Z ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::construct<`run_benchmark'::`2'::benchmark_t,`run_benchmark'::`2'::benchmark_t const &>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0015d	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00163	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00168	48 03 c8	 add	 rcx, rax
  0016b	48 8b c1	 mov	 rax, rcx
  0016e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00173	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00178	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0017b	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00183	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00185	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0018a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0018f	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00192	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00197	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0019a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001a2	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  001a7	eb 5d		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  001a9	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  001ae	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001b6	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001bb	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001be	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001c6	e8 00 00 00 00	 call	 ?_Umove@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU3?1??4@YA?AW45@0@Z@11@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001cb	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001d0	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001d5	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  001db	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  001e0	48 8d 44 01 28	 lea	 rax, QWORD PTR [rcx+rax+40]
  001e5	4c 8b c8	 mov	 r9, rax
  001e8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001ed	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001f0	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001f8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00200	e8 00 00 00 00	 call	 ?_Umove@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU3?1??4@YA?AW45@0@Z@11@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Umove
  00205	90		 npad	 1
$LN5@Emplace_re:
  00206	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  00208	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  0020d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  00212	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00217	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0021f	e8 00 00 00 00	 call	 ?_Change_array@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K2@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00224	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  0022a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0022f	48 03 c8	 add	 rcx, rax
  00232	48 8b c1	 mov	 rax, rcx

; 718  :     }

  00235	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0023c	5f		 pop	 rdi
  0023d	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_reallocate<`run_benchmark'::`2'::benchmark_t const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z@4HA PROC ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_reallocate<`run_benchmark'::`2'::benchmark_t const &>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z ; std::allocator<`run_benchmark'::`2'::benchmark_t>::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z@4HA ENDP ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_reallocate<`run_benchmark'::`2'::benchmark_t const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z@4HA PROC ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_reallocate<`run_benchmark'::`2'::benchmark_t const &>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z ; std::allocator<`run_benchmark'::`2'::benchmark_t>::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z@4HA ENDP ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_reallocate<`run_benchmark'::`2'::benchmark_t const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU3?1??4@YA?AW45@1@Z@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU3?1??4@YA?AW45@1@Z@@Z PROC ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::construct<`run_benchmark'::`2'::benchmark_t,`run_benchmark'::`2'::benchmark_t const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 0e 00 00 00	 mov	 ecx, 14
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00029	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00033	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00038	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z ; std::forward<`run_benchmark'::`2'::benchmark_t const &>
  00047	48 8b 7c 24 20	 mov	 rdi, QWORD PTR $T1[rsp]
  0004c	48 8b f0	 mov	 rsi, rax
  0004f	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00054	f3 a4		 rep movsb

; 759  :     }

  00056	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005a	5f		 pop	 rdi
  0005b	5e		 pop	 rsi
  0005c	c3		 ret	 0
??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU3?1??4@YA?AW45@1@Z@@Z ENDP ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::construct<`run_benchmark'::`2'::benchmark_t,`run_benchmark'::`2'::benchmark_t const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU1?1??2@YA?AW43@0@Z@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU1?1??2@YA?AW43@0@Z@@Z PROC ; std::_Unfancy<`run_benchmark'::`2'::benchmark_t>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU1?1??2@YA?AW43@0@Z@@Z ENDP ; std::_Unfancy<`run_benchmark'::`2'::benchmark_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_back_with_unused_capacity<`run_benchmark'::`2'::benchmark_t const &>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z ; std::forward<`run_benchmark'::`2'::benchmark_t const &>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU1?1??2@YA?AW43@0@Z@@Z ; std::_Unfancy<`run_benchmark'::`2'::benchmark_t>
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SAXAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@QEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU3?1??4@YA?AW45@1@Z@@Z ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::construct<`run_benchmark'::`2'::benchmark_t,`run_benchmark'::`2'::benchmark_t const &>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 28	 add	 rax, 40			; 00000028H
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_back_with_unused_capacity<`run_benchmark'::`2'::benchmark_t const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z PROC ; std::forward<`run_benchmark'::`2'::benchmark_t const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z ENDP ; std::forward<`run_benchmark'::`2'::benchmark_t const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::emplace_back<`run_benchmark'::`2'::benchmark_t const &>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z ; std::forward<`run_benchmark'::`2'::benchmark_t const &>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_back_with_unused_capacity<`run_benchmark'::`2'::benchmark_t const &>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@YAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@AEBU1?1??2@YA?AW43@0@Z@@Z ; std::forward<`run_benchmark'::`2'::benchmark_t const &>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU2?1??3@YA?AW44@0@Z@AEBU2?1??3@YA?AW44@0@Z@@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Emplace_reallocate<`run_benchmark'::`2'::benchmark_t const &>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::emplace_back<`run_benchmark'::`2'::benchmark_t const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char const *>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 c1 f8 03	 sar	 rax, 3
  00083	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00088	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00092	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 2b c1	 sub	 rax, rcx
  0009b	48 c1 f8 03	 sar	 rax, 3
  0009f	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ; std::vector<char const *,std::allocator<char const *> >::max_size
  000b1	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000b6	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000b8	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ ; std::vector<char const *,std::allocator<char const *> >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000bd	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000c2	48 ff c0	 inc	 rax
  000c5	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000ca	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000cf	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d7	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z ; std::vector<char const *,std::allocator<char const *> >::_Calculate_growth
  000dc	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000e1	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000e6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000eb	e8 00 00 00 00	 call	 ?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z ; std::allocator<char const *>::allocate
  000f0	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000f5	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000fa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  000ff	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  00104	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00109	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0010e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00113	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0011b	e8 00 00 00 00	 call	 ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ; std::forward<char const * const &>
  00120	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00125	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0012a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Whereoff$[rsp]
  0012f	48 8d 0c d1	 lea	 rcx, QWORD PTR [rcx+rdx*8]
  00133	e8 00 00 00 00	 call	 ??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z ; std::_Unfancy<char const *>
  00138	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0013d	4c 8b c1	 mov	 r8, rcx
  00140	48 8b d0	 mov	 rdx, rax
  00143	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00148	e8 00 00 00 00	 call	 ??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const * const &>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0014d	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00152	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  00157	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  0015b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00160	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00165	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00168	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00170	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00172	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  00177	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0017c	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0017f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00184	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00187	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0018f	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  00194	eb 5c		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  00196	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0019b	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001a3	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001a8	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001ab	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001b3	e8 00 00 00 00	 call	 ?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001b8	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001bd	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001c2	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001c7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  001cc	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  001d1	4c 8b c8	 mov	 r9, rax
  001d4	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001d9	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001dc	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001e4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ec	e8 00 00 00 00	 call	 ?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove
  001f1	90		 npad	 1
$LN5@Emplace_re:
  001f2	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001f4	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  001f9	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  001fe	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00203	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0020b	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z ; std::vector<char const *,std::allocator<char const *> >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00210	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00215	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  0021a	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 718  :     }

  0021e	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00225	5f		 pop	 rdi
  00226	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ; std::allocator<char const *>::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ; std::allocator<char const *>::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z PROC ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const * const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 08 00 00 00	 mov	 ecx, 8
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ; std::forward<char const * const &>
  00046	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 759  :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z ENDP ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z PROC		; std::_Unfancy<char const *>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z ENDP		; std::_Unfancy<char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Emplace_back_with_unused_capacity<char const * const &>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ; std::forward<char const * const &>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z ; std::_Unfancy<char const *>
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const * const &>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Emplace_back_with_unused_capacity<char const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z PROC		; std::forward<char const * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ENDP		; std::forward<char const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::emplace_back<char const * const &>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ; std::forward<char const * const &>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Emplace_back_with_unused_capacity<char const * const &>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ; std::forward<char const * const &>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::emplace_back<char const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Unfancy_maybe_null@PEBD@std@@YAPEAPEBDPEAPEBD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy_maybe_null@PEBD@std@@YAPEAPEBDPEAPEBD@Z PROC ; std::_Unfancy_maybe_null<char const *>, COMDAT

; 347  : _Ty* _Unfancy_maybe_null(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 348  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 349  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy_maybe_null@PEBD@std@@YAPEAPEBDPEAPEBD@Z ENDP ; std::_Unfancy_maybe_null<char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
ret$ = 32
argc$ = 64
argv$ = 72
main	PROC

; 1120 : int _tmain(int argc, TCHAR *argv[]) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	8b 4c 24 40	 mov	 ecx, DWORD PTR [rsp+64]

; 1121 :     int ret = 0;

  00021	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR ret$[rsp], 0

; 1122 : 	printf("----------------------------------------->_tmain start.\r\n");

  00029	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG181708
  00030	e8 00 00 00 00	 call	 printf

; 1123 : 
; 1124 :     if (0 != (ret = run(argc, argv))) {

  00035	48 8b 54 24 48	 mov	 rdx, QWORD PTR argv$[rsp]
  0003a	8b 4c 24 40	 mov	 ecx, DWORD PTR argc$[rsp]
  0003e	e8 00 00 00 00	 call	 ?run@@YAHHQEAPEAD@Z	; run
  00043	89 44 24 20	 mov	 DWORD PTR ret$[rsp], eax
  00047	83 7c 24 20 00	 cmp	 DWORD PTR ret$[rsp], 0
  0004c	74 14		 je	 SHORT $LN2@main

; 1125 :         rgy_print_stderr(RGY_LOG_ERROR, _T("QSVEncC.exe finished with error!\n"));

  0004e	45 33 c0	 xor	 r8d, r8d
  00051	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181710
  00058	b9 02 00 00 00	 mov	 ecx, 2
  0005d	e8 00 00 00 00	 call	 ?rgy_print_stderr@@YAHHPEBDPEAX@Z ; rgy_print_stderr
$LN2@main:

; 1126 :     }
; 1127 :     return ret;

  00062	8b 44 24 20	 mov	 eax, DWORD PTR ret$[rsp]

; 1128 : }

  00066	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006a	5f		 pop	 rdi
  0006b	c3		 ret	 0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S48$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv91 = 120
this$ = 144
_First$ = 152
_Last$ = 160
_Al$ = 168
??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z PROC ; std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> ><char * * const,void>, COMDAT

; 450  :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from [_First, _Last) with optional allocator

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00033	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	4c 8b 84 24 a8
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00043	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@PEBD@std@@$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEBD@1@@Z ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1><std::allocator<char const *> const &>

; 451  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00050	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00058	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  0005d	48 8b d0	 mov	 rdx, rax
  00060	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S48$[rsp]
  00065	e8 00 00 00 00	 call	 ??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char const *>
  0006a	48 8d 44 24 34	 lea	 rax, QWORD PTR $S48$[rsp]
  0006f	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 452  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00074	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007c	4c 8b c0	 mov	 r8, rax
  0007f	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00084	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00089	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0008e	90		 npad	 1

; 453  :         _Adl_verify_range(_First, _Last);

  0008f	48 8d 94 24 a0
	00 00 00	 lea	 rdx, QWORD PTR _Last$[rsp]
  00097	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR _First$[rsp]
  0009f	e8 00 00 00 00	 call	 ??$_Adl_verify_range@PEAPEADPEAPEAD@std@@YAXAEBQEAPEAD0@Z ; std::_Adl_verify_range<char * *,char * *>

; 454  :         _Range_construct_or_tidy(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  000a4	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  000ac	e8 00 00 00 00	 call	 ??$_Get_unwrapped@PEAD@std@@YAPEAPEADQEAPEAD@Z ; std::_Get_unwrapped<char *>
  000b1	48 89 44 24 78	 mov	 QWORD PTR tv91[rsp], rax
  000b6	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000be	e8 00 00 00 00	 call	 ??$_Get_unwrapped@PEAD@std@@YAPEAPEADQEAPEAD@Z ; std::_Get_unwrapped<char *>
  000c3	44 0f b6 4c 24
	76		 movzx	 r9d, BYTE PTR $T6[rsp]
  000c9	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv91[rsp]
  000ce	4c 8b c1	 mov	 r8, rcx
  000d1	48 8b d0	 mov	 rdx, rax
  000d4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000dc	e8 00 00 00 00	 call	 ??$_Range_construct_or_tidy@PEAPEAD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEAD0Uforward_iterator_tag@1@@Z ; std::vector<char const *,std::allocator<char const *> >::_Range_construct_or_tidy<char * *>

; 455  :         _Proxy._Release();

  000e1	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000e6	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000eb	90		 npad	 1

; 456  :     }

  000ec	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000f1	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000f6	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000fe	48 8b f8	 mov	 rdi, rax
  00101	48 8b cc	 mov	 rcx, rsp
  00104	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z$rtcFrameData
  0010b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00110	48 8b c7	 mov	 rax, rdi
  00113	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0011a	5f		 pop	 rdi
  0011b	c3		 ret	 0
??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> ><char * * const,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S48$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv91 = 120
this$ = 144
_First$ = 152
_Last$ = 160
_Al$ = 168
?dtor$0@?0???$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> ><char * * const,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> ><char * * const,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S48$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv91 = 120
this$ = 144
_First$ = 152
_Last$ = 160
_Al$ = 168
?dtor$0@?0???$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> ><char * * const,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> ><char * * const,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ PROC ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ PROC ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<char const *> >::_Vector_val<std::_Simple_types<char const *> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<char const *> >::_Vector_val<std::_Simple_types<char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ PROC ; std::vector<char const *,std::allocator<char const *> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ ENDP ; std::vector<char const *,std::allocator<char const *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ PROC ; std::vector<char const *,std::allocator<char const *> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ENDP ; std::vector<char const *,std::allocator<char const *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ PROC ; std::vector<char const *,std::allocator<char const *> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ ENDP ; std::vector<char const *,std::allocator<char const *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ PROC ; std::vector<char const *,std::allocator<char const *> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 03	 sar	 rax, 3
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ; std::allocator<char const *>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ ENDP ; std::vector<char const *,std::allocator<char const *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 58		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 c1 f8 03	 sar	 rax, 3
  000a7	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000ac	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b1	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000bb	4c 8b c1	 mov	 r8, rcx
  000be	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c6	48 8b c8	 mov	 rcx, rax
  000c9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ; std::allocator<char const *>::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000ce	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000d8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000db	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000e0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  000e5	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000e9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000ee	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000f1	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000f6	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Newcapacity$[rsp]
  000fb	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000ff	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  00104	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00107	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010b	5f		 pop	 rdi
  0010c	c3		 ret	 0
?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Buy_nonzero, COMDAT

; 1605 :     void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1606 :         // allocate array with _Newcapacity elements
; 1607 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1608 :         auto& _My_data    = _Mypair._Myval2;
; 1609 :         pointer& _Myfirst = _My_data._Myfirst;
; 1610 :         pointer& _Mylast  = _My_data._Mylast;
; 1611 :         pointer& _Myend   = _My_data._Myend;
; 1612 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1613 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1614 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1615 : 
; 1616 :         if (_Newcapacity > max_size()) {

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ; std::vector<char const *,std::allocator<char const *> >::max_size
  0002d	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00032	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 1617 :             _Xlength();

  00034	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ ; std::vector<char const *,std::allocator<char const *> >::_Xlength
$LN2@Buy_nonzer:

; 1618 :         }
; 1619 : 
; 1620 :         _Buy_raw(_Newcapacity);

  00039	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z ; std::vector<char const *,std::allocator<char const *> >::_Buy_raw
$LN3@Buy_nonzer:

; 1621 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Buy_nonzero@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z ; std::allocator<char const *>::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 8b 44 24 40	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00092	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newcapacity$[rsp]
  00097	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  0009b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a0	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000a7	5f		 pop	 rdi
  000a8	c3		 ret	 0
?_Buy_raw@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX_K@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ; std::vector<char const *,std::allocator<char const *> >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ; std::vector<char const *,std::allocator<char const *> >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z ; std::_Destroy_range<std::allocator<char const *> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z ; std::_Uninitialized_move<char const * *,std::allocator<char const *> >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z ; std::_Uninitialized_move<char const * *,std::allocator<char const *> >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ PROC ; std::vector<char const *,std::allocator<char const *> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 03	 sar	 rax, 3

; 1449 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ENDP ; std::vector<char const *,std::allocator<char const *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ PROC ; std::vector<char const *,std::allocator<char const *> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ENDP ; std::vector<char const *,std::allocator<char const *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?data@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?data@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDXZ PROC ; std::vector<char const *,std::allocator<char const *> >::data, COMDAT

; 1352 :     _NODISCARD _Ty* data() noexcept { // return address of first element

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1353 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy_maybe_null@PEBD@std@@YAPEAPEBDPEAPEBD@Z ; std::_Unfancy_maybe_null<char const *>
  0002c	90		 npad	 1

; 1354 :     }

  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
?data@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDXZ ENDP ; std::vector<char const *,std::allocator<char const *> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::push_back, COMDAT

; 667  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 668  :         emplace_back(_Val);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Val$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::emplace_back<char const * const &>

; 669  :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S13$ = 52
$T4 = 68
this$ = 96
??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ PROC ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ ; std::vector<char const *,std::allocator<char const *> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S13$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char const *>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S13$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ENDP ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char const *> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char const *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z PROC	; std::allocator<char const *>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YA_K_K@Z ; std::_Get_size_of_n<8>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z ENDP	; std::allocator<char const *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z PROC	; std::allocator<char const *>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 03	 shl	 rax, 3
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ENDP	; std::allocator<char const *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@PEBD@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@PEBD@std@@QEAA@XZ PROC			; std::allocator<char const *>::allocator<char const *>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@PEBD@std@@QEAA@XZ ENDP			; std::allocator<char const *>::allocator<char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
iarg$7 = 48
option_name$8 = 56
ret$9 = 64
Params$ = 96
argvCopy$ = 3816
err$ = 3888
ret$ = 4052
pPipeline$ = 4072
sts$ = 4084
$T10 = 4096
$T11 = 4104
$T12 = 4112
$T13 = 4116
$T14 = 4120
$T15 = 4128
$T16 = 4136
$T17 = 4140
$T18 = 4144
$T19 = 4148
$T20 = 4152
$T21 = 4156
$T22 = 4160
tv149 = 4168
tv154 = 4176
tv253 = 4180
tv310 = 4184
tv319 = 4192
tv328 = 4200
tv335 = 4208
tv346 = 4216
tv355 = 4224
tv363 = 4232
tv371 = 4240
tv381 = 4248
tv388 = 4256
__$ArrayPad$ = 4264
argc$ = 4288
argv$ = 4296
?run@@YAHHQEAPEAD@Z PROC				; run

; 1034 : int run(int argc, TCHAR *argv[]) {

$LN40:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00009	57		 push	 rdi
  0000a	b8 b0 10 00 00	 mov	 eax, 4272		; 000010b0H
  0000f	e8 00 00 00 00	 call	 __chkstk
  00014	48 2b e0	 sub	 rsp, rax
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 2c 04 00 00	 mov	 ecx, 1068		; 0000042cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	8b 8c 24 c0 10
	00 00		 mov	 ecx, DWORD PTR [rsp+4288]
  0002d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00034	48 33 c4	 xor	 rax, rsp
  00037	48 89 84 24 a8
	10 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1035 : 	printf("-----------------------------------------> run start\r\n");

  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG181659
  00046	e8 00 00 00 00	 call	 printf

; 1036 : 
; 1037 :     if (argc == 1) {

  0004b	83 bc 24 c0 10
	00 00 01	 cmp	 DWORD PTR argc$[rsp], 1
  00053	75 14		 jne	 SHORT $LN8@run

; 1038 :         show_version();

  00055	e8 00 00 00 00	 call	 ?show_version@@YAXXZ	; show_version

; 1039 :         show_help();

  0005a	e8 00 00 00 00	 call	 ?show_help@@YAXXZ	; show_help

; 1040 :         return 1;

  0005f	b8 01 00 00 00	 mov	 eax, 1
  00064	e9 1b 09 00 00	 jmp	 $LN1@run
$LN8@run:

; 1041 :     }
; 1042 : 
; 1043 :     for (int iarg = 1; iarg < argc; iarg++) {

  00069	c7 44 24 30 01
	00 00 00	 mov	 DWORD PTR iarg$7[rsp], 1
  00071	eb 0a		 jmp	 SHORT $LN4@run
$LN2@run:
  00073	8b 44 24 30	 mov	 eax, DWORD PTR iarg$7[rsp]
  00077	ff c0		 inc	 eax
  00079	89 44 24 30	 mov	 DWORD PTR iarg$7[rsp], eax
$LN4@run:
  0007d	8b 84 24 c0 10
	00 00		 mov	 eax, DWORD PTR argc$[rsp]
  00084	39 44 24 30	 cmp	 DWORD PTR iarg$7[rsp], eax
  00088	0f 8d 8c 01 00
	00		 jge	 $LN3@run

; 1044 :         const TCHAR *option_name = nullptr;

  0008e	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR option_name$8[rsp], 0

; 1045 :         if (argv[iarg][0] == _T('-')) {

  00097	48 63 44 24 30	 movsxd	 rax, DWORD PTR iarg$7[rsp]
  0009c	b9 01 00 00 00	 mov	 ecx, 1
  000a1	48 6b c9 00	 imul	 rcx, rcx, 0
  000a5	48 8b 94 24 c8
	10 00 00	 mov	 rdx, QWORD PTR argv$[rsp]
  000ad	48 8b 04 c2	 mov	 rax, QWORD PTR [rdx+rax*8]
  000b1	0f be 04 08	 movsx	 eax, BYTE PTR [rax+rcx]
  000b5	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  000b8	0f 85 c7 00 00
	00		 jne	 $LN9@run

; 1046 :             if (argv[iarg][1] == _T('\0')) {

  000be	48 63 44 24 30	 movsxd	 rax, DWORD PTR iarg$7[rsp]
  000c3	b9 01 00 00 00	 mov	 ecx, 1
  000c8	48 6b c9 01	 imul	 rcx, rcx, 1
  000cc	48 8b 94 24 c8
	10 00 00	 mov	 rdx, QWORD PTR argv$[rsp]
  000d4	48 8b 04 c2	 mov	 rax, QWORD PTR [rdx+rax*8]
  000d8	0f be 04 08	 movsx	 eax, BYTE PTR [rax+rcx]
  000dc	85 c0		 test	 eax, eax
  000de	75 07		 jne	 SHORT $LN10@run

; 1047 :                 continue;

  000e0	eb 91		 jmp	 SHORT $LN2@run
  000e2	e9 9e 00 00 00	 jmp	 $LN9@run
$LN10@run:

; 1048 :             } else if (argv[iarg][1] == _T('-')) {

  000e7	48 63 44 24 30	 movsxd	 rax, DWORD PTR iarg$7[rsp]
  000ec	b9 01 00 00 00	 mov	 ecx, 1
  000f1	48 6b c9 01	 imul	 rcx, rcx, 1
  000f5	48 8b 94 24 c8
	10 00 00	 mov	 rdx, QWORD PTR argv$[rsp]
  000fd	48 8b 04 c2	 mov	 rax, QWORD PTR [rdx+rax*8]
  00101	0f be 04 08	 movsx	 eax, BYTE PTR [rax+rcx]
  00105	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00108	75 24		 jne	 SHORT $LN12@run

; 1049 :                 option_name = &argv[iarg][2];

  0010a	48 63 44 24 30	 movsxd	 rax, DWORD PTR iarg$7[rsp]
  0010f	b9 01 00 00 00	 mov	 ecx, 1
  00114	48 6b c9 02	 imul	 rcx, rcx, 2
  00118	48 8b 94 24 c8
	10 00 00	 mov	 rdx, QWORD PTR argv$[rsp]
  00120	48 03 0c c2	 add	 rcx, QWORD PTR [rdx+rax*8]
  00124	48 8b c1	 mov	 rax, rcx
  00127	48 89 44 24 38	 mov	 QWORD PTR option_name$8[rsp], rax
  0012c	eb 57		 jmp	 SHORT $LN9@run
$LN12@run:

; 1050 :             } else if (argv[iarg][2] == _T('\0')) {

  0012e	48 63 44 24 30	 movsxd	 rax, DWORD PTR iarg$7[rsp]
  00133	b9 01 00 00 00	 mov	 ecx, 1
  00138	48 6b c9 02	 imul	 rcx, rcx, 2
  0013c	48 8b 94 24 c8
	10 00 00	 mov	 rdx, QWORD PTR argv$[rsp]
  00144	48 8b 04 c2	 mov	 rax, QWORD PTR [rdx+rax*8]
  00148	0f be 04 08	 movsx	 eax, BYTE PTR [rax+rcx]
  0014c	85 c0		 test	 eax, eax
  0014e	75 35		 jne	 SHORT $LN9@run

; 1051 :                 if (nullptr == (option_name = cmd_short_opt_to_long(argv[iarg][1]))) {

  00150	48 63 44 24 30	 movsxd	 rax, DWORD PTR iarg$7[rsp]
  00155	b9 01 00 00 00	 mov	 ecx, 1
  0015a	48 6b c9 01	 imul	 rcx, rcx, 1
  0015e	48 8b 94 24 c8
	10 00 00	 mov	 rdx, QWORD PTR argv$[rsp]
  00166	48 8b 04 c2	 mov	 rax, QWORD PTR [rdx+rax*8]
  0016a	0f b6 0c 08	 movzx	 ecx, BYTE PTR [rax+rcx]
  0016e	e8 00 00 00 00	 call	 ?cmd_short_opt_to_long@@YAPEBDD@Z ; cmd_short_opt_to_long
  00173	48 89 44 24 38	 mov	 QWORD PTR option_name$8[rsp], rax
  00178	48 83 7c 24 38
	00		 cmp	 QWORD PTR option_name$8[rsp], 0
  0017e	75 05		 jne	 SHORT $LN9@run

; 1052 :                     continue;

  00180	e9 ee fe ff ff	 jmp	 $LN2@run
$LN9@run:

; 1053 :                 }
; 1054 :             }
; 1055 :         }
; 1056 :         if (option_name != nullptr) {

  00185	48 83 7c 24 38
	00		 cmp	 QWORD PTR option_name$8[rsp], 0
  0018b	0f 84 84 00 00
	00		 je	 $LN16@run

; 1057 :             int ret = parse_print_options(option_name, (iarg+1 < argc) ? argv[iarg+1] : _T(""));

  00191	8b 44 24 30	 mov	 eax, DWORD PTR iarg$7[rsp]
  00195	ff c0		 inc	 eax
  00197	3b 84 24 c0 10
	00 00		 cmp	 eax, DWORD PTR argc$[rsp]
  0019e	7d 1e		 jge	 SHORT $LN30@run
  001a0	8b 44 24 30	 mov	 eax, DWORD PTR iarg$7[rsp]
  001a4	ff c0		 inc	 eax
  001a6	48 98		 cdqe
  001a8	48 8b 8c 24 c8
	10 00 00	 mov	 rcx, QWORD PTR argv$[rsp]
  001b0	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]
  001b4	48 89 84 24 48
	10 00 00	 mov	 QWORD PTR tv149[rsp], rax
  001bc	eb 0f		 jmp	 SHORT $LN31@run
$LN30@run:
  001be	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG181669
  001c5	48 89 84 24 48
	10 00 00	 mov	 QWORD PTR tv149[rsp], rax
$LN31@run:
  001cd	48 8b 94 24 48
	10 00 00	 mov	 rdx, QWORD PTR tv149[rsp]
  001d5	48 8b 4c 24 38	 mov	 rcx, QWORD PTR option_name$8[rsp]
  001da	e8 00 00 00 00	 call	 ?parse_print_options@@YAHPEBD0@Z ; parse_print_options
  001df	89 44 24 40	 mov	 DWORD PTR ret$9[rsp], eax

; 1058 :             if (ret != 0) {

  001e3	83 7c 24 40 00	 cmp	 DWORD PTR ret$9[rsp], 0
  001e8	74 2b		 je	 SHORT $LN16@run

; 1059 :                 return ret == 1 ? 0 : 1;

  001ea	83 7c 24 40 01	 cmp	 DWORD PTR ret$9[rsp], 1
  001ef	75 0d		 jne	 SHORT $LN32@run
  001f1	c7 84 24 50 10
	00 00 00 00 00
	00		 mov	 DWORD PTR tv154[rsp], 0
  001fc	eb 0b		 jmp	 SHORT $LN33@run
$LN32@run:
  001fe	c7 84 24 50 10
	00 00 01 00 00
	00		 mov	 DWORD PTR tv154[rsp], 1
$LN33@run:
  00209	8b 84 24 50 10
	00 00		 mov	 eax, DWORD PTR tv154[rsp]
  00210	e9 6f 07 00 00	 jmp	 $LN1@run
$LN16@run:

; 1060 :             }
; 1061 :         }
; 1062 :     }

  00215	e9 59 fe ff ff	 jmp	 $LN2@run
$LN3@run:

; 1063 : 
; 1064 :     sInputParams Params = { 0 };

  0021a	48 8d 44 24 60	 lea	 rax, QWORD PTR Params$[rsp]
  0021f	48 8b f8	 mov	 rdi, rax
  00222	33 c0		 xor	 eax, eax
  00224	b9 60 00 00 00	 mov	 ecx, 96			; 00000060H
  00229	f3 aa		 rep stosb
  0022b	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR Params$[rsp+96]
  00233	48 8b f8	 mov	 rdi, rax
  00236	33 c0		 xor	 eax, eax
  00238	b9 08 00 00 00	 mov	 ecx, 8
  0023d	f3 aa		 rep stosb
  0023f	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR Params$[rsp+104]
  00247	48 8b f8	 mov	 rdi, rax
  0024a	33 c0		 xor	 eax, eax
  0024c	b9 1c 00 00 00	 mov	 ecx, 28
  00251	f3 aa		 rep stosb
  00253	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR Params$[rsp+132]
  0025b	48 8b f8	 mov	 rdi, rax
  0025e	33 c0		 xor	 eax, eax
  00260	b9 04 00 00 00	 mov	 ecx, 4
  00265	f3 aa		 rep stosb
  00267	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR Params$[rsp+136]
  0026f	48 8b f8	 mov	 rdi, rax
  00272	33 c0		 xor	 eax, eax
  00274	b9 2a 00 00 00	 mov	 ecx, 42			; 0000002aH
  00279	f3 aa		 rep stosb
  0027b	48 8d 84 24 12
	01 00 00	 lea	 rax, QWORD PTR Params$[rsp+178]
  00283	48 8b f8	 mov	 rdi, rax
  00286	33 c0		 xor	 eax, eax
  00288	b9 03 00 00 00	 mov	 ecx, 3
  0028d	f3 aa		 rep stosb
  0028f	48 8d 84 24 15
	01 00 00	 lea	 rax, QWORD PTR Params$[rsp+181]
  00297	48 8b f8	 mov	 rdi, rax
  0029a	33 c0		 xor	 eax, eax
  0029c	b9 03 00 00 00	 mov	 ecx, 3
  002a1	f3 aa		 rep stosb
  002a3	48 8d 84 24 18
	01 00 00	 lea	 rax, QWORD PTR Params$[rsp+184]
  002ab	48 8b f8	 mov	 rdi, rax
  002ae	33 c0		 xor	 eax, eax
  002b0	b9 ec 00 00 00	 mov	 ecx, 236		; 000000ecH
  002b5	f3 aa		 rep stosb
  002b7	48 8d 84 24 04
	02 00 00	 lea	 rax, QWORD PTR Params$[rsp+420]
  002bf	48 8b f8	 mov	 rdi, rax
  002c2	33 c0		 xor	 eax, eax
  002c4	b9 10 00 00 00	 mov	 ecx, 16
  002c9	f3 aa		 rep stosb
  002cb	48 8d 84 24 18
	02 00 00	 lea	 rax, QWORD PTR Params$[rsp+440]
  002d3	48 8b f8	 mov	 rdi, rax
  002d6	33 c0		 xor	 eax, eax
  002d8	b9 2a 00 00 00	 mov	 ecx, 42			; 0000002aH
  002dd	f3 aa		 rep stosb
  002df	48 8d 84 24 42
	02 00 00	 lea	 rax, QWORD PTR Params$[rsp+482]
  002e7	48 8b f8	 mov	 rdi, rax
  002ea	33 c0		 xor	 eax, eax
  002ec	b9 02 00 00 00	 mov	 ecx, 2
  002f1	f3 aa		 rep stosb
  002f3	48 8d 84 24 48
	02 00 00	 lea	 rax, QWORD PTR Params$[rsp+488]
  002fb	48 8b f8	 mov	 rdi, rax
  002fe	33 c0		 xor	 eax, eax
  00300	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00305	f3 aa		 rep stosb
  00307	48 8d 84 24 68
	02 00 00	 lea	 rax, QWORD PTR Params$[rsp+520]
  0030f	48 8b f8	 mov	 rdi, rax
  00312	33 c0		 xor	 eax, eax
  00314	b9 d4 03 00 00	 mov	 ecx, 980		; 000003d4H
  00319	f3 aa		 rep stosb
  0031b	48 8d 84 24 3c
	06 00 00	 lea	 rax, QWORD PTR Params$[rsp+1500]
  00323	48 8b f8	 mov	 rdi, rax
  00326	33 c0		 xor	 eax, eax
  00328	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  0032d	f3 aa		 rep stosb
  0032f	48 8d 84 24 3c
	0a 00 00	 lea	 rax, QWORD PTR Params$[rsp+2524]
  00337	48 8b f8	 mov	 rdi, rax
  0033a	33 c0		 xor	 eax, eax
  0033c	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  00341	f3 aa		 rep stosb
  00343	48 8d 84 24 3c
	0e 00 00	 lea	 rax, QWORD PTR Params$[rsp+3548]
  0034b	48 8b f8	 mov	 rdi, rax
  0034e	33 c0		 xor	 eax, eax
  00350	b9 04 00 00 00	 mov	 ecx, 4
  00355	f3 aa		 rep stosb
  00357	48 8d 84 24 40
	0e 00 00	 lea	 rax, QWORD PTR Params$[rsp+3552]
  0035f	48 8b f8	 mov	 rdi, rax
  00362	33 c0		 xor	 eax, eax
  00364	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00369	f3 aa		 rep stosb
  0036b	48 8d 84 24 80
	0e 00 00	 lea	 rax, QWORD PTR Params$[rsp+3616]
  00373	48 8b f8	 mov	 rdi, rax
  00376	33 c0		 xor	 eax, eax
  00378	b9 10 00 00 00	 mov	 ecx, 16
  0037d	f3 aa		 rep stosb
  0037f	48 8d 8c 24 90
	0e 00 00	 lea	 rcx, QWORD PTR Params$[rsp+3632]
  00387	e8 00 00 00 00	 call	 ??$?0HH$0A@@?$pair@HH@std@@QEAA@XZ ; std::pair<int,int>::pair<int,int><int,int,0>
  0038c	48 8d 84 24 98
	0e 00 00	 lea	 rax, QWORD PTR Params$[rsp+3640]
  00394	48 8b f8	 mov	 rdi, rax
  00397	33 c0		 xor	 eax, eax
  00399	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0039e	f3 aa		 rep stosb

; 1065 :     init_qsvp_prm(&Params);

  003a0	48 8d 4c 24 60	 lea	 rcx, QWORD PTR Params$[rsp]
  003a5	e8 00 00 00 00	 call	 ?init_qsvp_prm@@YAXPEAUsInputParams@@@Z ; init_qsvp_prm

; 1066 : 
; 1067 :     vector<const TCHAR *> argvCopy(argv, argv + argc);

  003aa	48 8d 8c 24 00
	10 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  003b2	e8 00 00 00 00	 call	 ??0?$allocator@PEBD@std@@QEAA@XZ ; std::allocator<char const *>::allocator<char const *>
  003b7	48 63 8c 24 c0
	10 00 00	 movsxd	 rcx, DWORD PTR argc$[rsp]
  003bf	48 8b 94 24 c8
	10 00 00	 mov	 rdx, QWORD PTR argv$[rsp]
  003c7	48 8d 0c ca	 lea	 rcx, QWORD PTR [rdx+rcx*8]
  003cb	4c 8b c8	 mov	 r9, rax
  003ce	4c 8b c1	 mov	 r8, rcx
  003d1	48 8b 94 24 c8
	10 00 00	 mov	 rdx, QWORD PTR argv$[rsp]
  003d9	48 8d 8c 24 e8
	0e 00 00	 lea	 rcx, QWORD PTR argvCopy$[rsp]
  003e1	e8 00 00 00 00	 call	 ??$?0QEAPEADX@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@PEAPEAD0AEBV?$allocator@PEBD@1@@Z ; std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> ><char * * const,void>
  003e6	90		 npad	 1

; 1068 :     argvCopy.push_back(_T(""));

  003e7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG181671
  003ee	48 89 84 24 08
	10 00 00	 mov	 QWORD PTR $T11[rsp], rax
  003f6	48 8d 94 24 08
	10 00 00	 lea	 rdx, QWORD PTR $T11[rsp]
  003fe	48 8d 8c 24 e8
	0e 00 00	 lea	 rcx, QWORD PTR argvCopy$[rsp]
  00406	e8 00 00 00 00	 call	 ?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::push_back

; 1069 : 
; 1070 : 	printf("----------------------------------------->parse_cmd start.\r\n");

  0040b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG181672
  00412	e8 00 00 00 00	 call	 printf

; 1071 :     ParseCmdError err;

  00417	48 8d 8c 24 30
	0f 00 00	 lea	 rcx, QWORD PTR err$[rsp]
  0041f	e8 00 00 00 00	 call	 ??0ParseCmdError@@QEAA@XZ
  00424	90		 npad	 1

; 1072 :     int ret = parse_cmd(&Params, argvCopy.data(), (mfxU8)argc, err);

  00425	0f b6 84 24 c0
	10 00 00	 movzx	 eax, BYTE PTR argc$[rsp]
  0042d	89 84 24 54 10
	00 00		 mov	 DWORD PTR tv253[rsp], eax
  00434	48 8d 8c 24 e8
	0e 00 00	 lea	 rcx, QWORD PTR argvCopy$[rsp]
  0043c	e8 00 00 00 00	 call	 ?data@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDXZ ; std::vector<char const *,std::allocator<char const *> >::data
  00441	c6 44 24 20 00	 mov	 BYTE PTR [rsp+32], 0
  00446	4c 8d 8c 24 30
	0f 00 00	 lea	 r9, QWORD PTR err$[rsp]
  0044e	8b 8c 24 54 10
	00 00		 mov	 ecx, DWORD PTR tv253[rsp]
  00455	44 8b c1	 mov	 r8d, ecx
  00458	48 8b d0	 mov	 rdx, rax
  0045b	48 8d 4c 24 60	 lea	 rcx, QWORD PTR Params$[rsp]
  00460	e8 00 00 00 00	 call	 ?parse_cmd@@YAHPEAUsInputParams@@QEAPEBDHAEAUParseCmdError@@_N@Z ; parse_cmd
  00465	89 84 24 d4 0f
	00 00		 mov	 DWORD PTR ret$[rsp], eax

; 1073 :     if (ret >= 1) {

  0046c	83 bc 24 d4 0f
	00 00 01	 cmp	 DWORD PTR ret$[rsp], 1
  00474	7c 37		 jl	 SHORT $LN18@run

; 1074 :         show_help();

  00476	e8 00 00 00 00	 call	 ?show_help@@YAXXZ	; show_help

; 1075 :         return 0;

  0047b	c7 84 24 10 10
	00 00 00 00 00
	00		 mov	 DWORD PTR $T12[rsp], 0
  00486	48 8d 8c 24 30
	0f 00 00	 lea	 rcx, QWORD PTR err$[rsp]
  0048e	e8 00 00 00 00	 call	 ??1ParseCmdError@@QEAA@XZ
  00493	90		 npad	 1
  00494	48 8d 8c 24 e8
	0e 00 00	 lea	 rcx, QWORD PTR argvCopy$[rsp]
  0049c	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  004a1	8b 84 24 10 10
	00 00		 mov	 eax, DWORD PTR $T12[rsp]
  004a8	e9 d7 04 00 00	 jmp	 $LN1@run
$LN18@run:

; 1076 :     }
; 1077 : 	printf("\r\n----------------------------------------->parse_cmd end.\r\n");

  004ad	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG181675
  004b4	e8 00 00 00 00	 call	 printf

; 1078 : 
; 1079 :     if (Params.bBenchmark) {

  004b9	0f b6 84 24 0c
	01 00 00	 movzx	 eax, BYTE PTR Params$[rsp+172]
  004c1	85 c0		 test	 eax, eax
  004c3	74 38		 je	 SHORT $LN19@run

; 1080 :         return run_benchmark(&Params);

  004c5	48 8d 4c 24 60	 lea	 rcx, QWORD PTR Params$[rsp]
  004ca	e8 00 00 00 00	 call	 ?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z ; run_benchmark
  004cf	89 84 24 14 10
	00 00		 mov	 DWORD PTR $T13[rsp], eax
  004d6	48 8d 8c 24 30
	0f 00 00	 lea	 rcx, QWORD PTR err$[rsp]
  004de	e8 00 00 00 00	 call	 ??1ParseCmdError@@QEAA@XZ
  004e3	90		 npad	 1
  004e4	48 8d 8c 24 e8
	0e 00 00	 lea	 rcx, QWORD PTR argvCopy$[rsp]
  004ec	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  004f1	8b 84 24 14 10
	00 00		 mov	 eax, DWORD PTR $T13[rsp]
  004f8	e9 87 04 00 00	 jmp	 $LN1@run
$LN19@run:

; 1081 :     }
; 1082 :     unique_ptr<CQSVPipeline> pPipeline(new CQSVPipeline);

  004fd	b9 08 14 00 00	 mov	 ecx, 5128		; 00001408H
  00502	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00507	48 89 84 24 20
	10 00 00	 mov	 QWORD PTR $T15[rsp], rax
  0050f	48 83 bc 24 20
	10 00 00 00	 cmp	 QWORD PTR $T15[rsp], 0
  00518	74 17		 je	 SHORT $LN34@run
  0051a	48 8b 8c 24 20
	10 00 00	 mov	 rcx, QWORD PTR $T15[rsp]
  00522	e8 00 00 00 00	 call	 ??0CQSVPipeline@@QEAA@XZ ; CQSVPipeline::CQSVPipeline
  00527	48 89 84 24 58
	10 00 00	 mov	 QWORD PTR tv310[rsp], rax
  0052f	eb 0c		 jmp	 SHORT $LN35@run
$LN34@run:
  00531	48 c7 84 24 58
	10 00 00 00 00
	00 00		 mov	 QWORD PTR tv310[rsp], 0
$LN35@run:
  0053d	48 8b 84 24 58
	10 00 00	 mov	 rax, QWORD PTR tv310[rsp]
  00545	48 89 84 24 18
	10 00 00	 mov	 QWORD PTR $T14[rsp], rax
  0054d	48 8b 94 24 18
	10 00 00	 mov	 rdx, QWORD PTR $T14[rsp]
  00555	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  0055d	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> ><std::default_delete<CQSVPipeline>,0>
  00562	90		 npad	 1

; 1083 :     if (!pPipeline) {

  00563	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  0056b	e8 00 00 00 00	 call	 ??B?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBA_NXZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator bool
  00570	0f b6 c0	 movzx	 eax, al
  00573	85 c0		 test	 eax, eax
  00575	75 40		 jne	 SHORT $LN20@run

; 1084 :         return MFX_ERR_MEMORY_ALLOC;

  00577	c7 84 24 28 10
	00 00 fc ff ff
	ff		 mov	 DWORD PTR $T16[rsp], -4
  00582	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  0058a	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  0058f	90		 npad	 1
  00590	48 8d 8c 24 30
	0f 00 00	 lea	 rcx, QWORD PTR err$[rsp]
  00598	e8 00 00 00 00	 call	 ??1ParseCmdError@@QEAA@XZ
  0059d	90		 npad	 1
  0059e	48 8d 8c 24 e8
	0e 00 00	 lea	 rcx, QWORD PTR argvCopy$[rsp]
  005a6	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  005ab	8b 84 24 28 10
	00 00		 mov	 eax, DWORD PTR $T16[rsp]
  005b2	e9 cd 03 00 00	 jmp	 $LN1@run
$LN20@run:

; 1085 :     }
; 1086 : 
; 1087 :     auto sts = pPipeline->Init(&Params);

  005b7	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  005bf	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  005c4	48 89 84 24 60
	10 00 00	 mov	 QWORD PTR tv319[rsp], rax
  005cc	48 8b 84 24 60
	10 00 00	 mov	 rax, QWORD PTR tv319[rsp]
  005d4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  005d7	48 8d 54 24 60	 lea	 rdx, QWORD PTR Params$[rsp]
  005dc	48 8b 8c 24 60
	10 00 00	 mov	 rcx, QWORD PTR tv319[rsp]
  005e4	ff 50 10	 call	 QWORD PTR [rax+16]
  005e7	89 84 24 f4 0f
	00 00		 mov	 DWORD PTR sts$[rsp], eax

; 1088 :     if (sts < MFX_ERR_NONE) return 1;

  005ee	83 bc 24 f4 0f
	00 00 00	 cmp	 DWORD PTR sts$[rsp], 0
  005f6	7d 40		 jge	 SHORT $LN21@run
  005f8	c7 84 24 2c 10
	00 00 01 00 00
	00		 mov	 DWORD PTR $T17[rsp], 1
  00603	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  0060b	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00610	90		 npad	 1
  00611	48 8d 8c 24 30
	0f 00 00	 lea	 rcx, QWORD PTR err$[rsp]
  00619	e8 00 00 00 00	 call	 ??1ParseCmdError@@QEAA@XZ
  0061e	90		 npad	 1
  0061f	48 8d 8c 24 e8
	0e 00 00	 lea	 rcx, QWORD PTR argvCopy$[rsp]
  00627	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  0062c	8b 84 24 2c 10
	00 00		 mov	 eax, DWORD PTR $T17[rsp]
  00633	e9 4c 03 00 00	 jmp	 $LN1@run
$LN21@run:

; 1089 : 
; 1090 :     pPipeline->SetAbortFlagPointer(&g_signal_abort);

  00638	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00640	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00645	48 89 84 24 68
	10 00 00	 mov	 QWORD PTR tv328[rsp], rax
  0064d	48 8b 84 24 68
	10 00 00	 mov	 rax, QWORD PTR tv328[rsp]
  00655	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00658	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?g_signal_abort@@3_NA
  0065f	48 8b 8c 24 68
	10 00 00	 mov	 rcx, QWORD PTR tv328[rsp]
  00667	ff 50 48	 call	 QWORD PTR [rax+72]

; 1091 :     set_signal_handler();

  0066a	e8 00 00 00 00	 call	 ?set_signal_handler@@YAHXZ ; set_signal_handler

; 1092 : 
; 1093 :     if (MFX_ERR_NONE != (sts = pPipeline->CheckCurrentVideoParam())) {

  0066f	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00677	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  0067c	48 89 84 24 70
	10 00 00	 mov	 QWORD PTR tv335[rsp], rax
  00684	48 8b 84 24 70
	10 00 00	 mov	 rax, QWORD PTR tv335[rsp]
  0068c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0068f	45 33 c0	 xor	 r8d, r8d
  00692	33 d2		 xor	 edx, edx
  00694	48 8b 8c 24 70
	10 00 00	 mov	 rcx, QWORD PTR tv335[rsp]
  0069c	ff 50 40	 call	 QWORD PTR [rax+64]
  0069f	89 84 24 f4 0f
	00 00		 mov	 DWORD PTR sts$[rsp], eax
  006a6	83 bc 24 f4 0f
	00 00 00	 cmp	 DWORD PTR sts$[rsp], 0
  006ae	74 43		 je	 SHORT $LN22@run

; 1094 :         return sts;

  006b0	8b 84 24 f4 0f
	00 00		 mov	 eax, DWORD PTR sts$[rsp]
  006b7	89 84 24 30 10
	00 00		 mov	 DWORD PTR $T18[rsp], eax
  006be	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  006c6	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  006cb	90		 npad	 1
  006cc	48 8d 8c 24 30
	0f 00 00	 lea	 rcx, QWORD PTR err$[rsp]
  006d4	e8 00 00 00 00	 call	 ??1ParseCmdError@@QEAA@XZ
  006d9	90		 npad	 1
  006da	48 8d 8c 24 e8
	0e 00 00	 lea	 rcx, QWORD PTR argvCopy$[rsp]
  006e2	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  006e7	8b 84 24 30 10
	00 00		 mov	 eax, DWORD PTR $T18[rsp]
  006ee	e9 91 02 00 00	 jmp	 $LN1@run
$LN22@run:

; 1095 :     }
; 1096 : 	printf("----------------------------------------->loop start.\r\n");

  006f3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG181685
  006fa	e8 00 00 00 00	 call	 printf
$LN5@run:

; 1097 :     for (;;) {
; 1098 :         sts = pPipeline->Run();

  006ff	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00707	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  0070c	48 89 84 24 78
	10 00 00	 mov	 QWORD PTR tv346[rsp], rax
  00714	48 8b 84 24 78
	10 00 00	 mov	 rax, QWORD PTR tv346[rsp]
  0071c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0071f	48 8b 8c 24 78
	10 00 00	 mov	 rcx, QWORD PTR tv346[rsp]
  00727	ff 50 20	 call	 QWORD PTR [rax+32]
  0072a	89 84 24 f4 0f
	00 00		 mov	 DWORD PTR sts$[rsp], eax

; 1099 : 
; 1100 :         if (MFX_ERR_DEVICE_LOST == sts || MFX_ERR_DEVICE_FAILED == sts) {

  00731	83 bc 24 f4 0f
	00 00 f3	 cmp	 DWORD PTR sts$[rsp], -13
  00739	74 0e		 je	 SHORT $LN25@run
  0073b	83 bc 24 f4 0f
	00 00 ef	 cmp	 DWORD PTR sts$[rsp], -17
  00743	0f 85 41 01 00
	00		 jne	 $LN23@run
$LN25@run:

; 1101 :             pPipeline->PrintMes(RGY_LOG_ERROR, _T("\nERROR: Hardware device was lost or returned an unexpected error. Recovering...\n"));

  00749	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00751	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00756	48 89 84 24 80
	10 00 00	 mov	 QWORD PTR tv355[rsp], rax
  0075e	48 8b 84 24 80
	10 00 00	 mov	 rax, QWORD PTR tv355[rsp]
  00766	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00769	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG181689
  00770	ba 02 00 00 00	 mov	 edx, 2
  00775	48 8b 8c 24 80
	10 00 00	 mov	 rcx, QWORD PTR tv355[rsp]
  0077d	ff 50 70	 call	 QWORD PTR [rax+112]

; 1102 :             sts = pPipeline->ResetDevice();

  00780	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00788	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  0078d	48 89 84 24 88
	10 00 00	 mov	 QWORD PTR tv363[rsp], rax
  00795	48 8b 84 24 88
	10 00 00	 mov	 rax, QWORD PTR tv363[rsp]
  0079d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  007a0	48 8b 8c 24 88
	10 00 00	 mov	 rcx, QWORD PTR tv363[rsp]
  007a8	ff 50 38	 call	 QWORD PTR [rax+56]
  007ab	89 84 24 f4 0f
	00 00		 mov	 DWORD PTR sts$[rsp], eax

; 1103 :             if (sts < MFX_ERR_NONE) return sts;

  007b2	83 bc 24 f4 0f
	00 00 00	 cmp	 DWORD PTR sts$[rsp], 0
  007ba	7d 43		 jge	 SHORT $LN26@run
  007bc	8b 84 24 f4 0f
	00 00		 mov	 eax, DWORD PTR sts$[rsp]
  007c3	89 84 24 34 10
	00 00		 mov	 DWORD PTR $T19[rsp], eax
  007ca	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  007d2	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  007d7	90		 npad	 1
  007d8	48 8d 8c 24 30
	0f 00 00	 lea	 rcx, QWORD PTR err$[rsp]
  007e0	e8 00 00 00 00	 call	 ??1ParseCmdError@@QEAA@XZ
  007e5	90		 npad	 1
  007e6	48 8d 8c 24 e8
	0e 00 00	 lea	 rcx, QWORD PTR argvCopy$[rsp]
  007ee	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  007f3	8b 84 24 34 10
	00 00		 mov	 eax, DWORD PTR $T19[rsp]
  007fa	e9 85 01 00 00	 jmp	 $LN1@run
$LN26@run:

; 1104 : 
; 1105 :             sts = pPipeline->ResetMFXComponents(&Params);

  007ff	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00807	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  0080c	48 89 84 24 90
	10 00 00	 mov	 QWORD PTR tv371[rsp], rax
  00814	48 8b 84 24 90
	10 00 00	 mov	 rax, QWORD PTR tv371[rsp]
  0081c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0081f	48 8d 54 24 60	 lea	 rdx, QWORD PTR Params$[rsp]
  00824	48 8b 8c 24 90
	10 00 00	 mov	 rcx, QWORD PTR tv371[rsp]
  0082c	ff 50 30	 call	 QWORD PTR [rax+48]
  0082f	89 84 24 f4 0f
	00 00		 mov	 DWORD PTR sts$[rsp], eax

; 1106 :             if (sts < MFX_ERR_NONE) return sts;

  00836	83 bc 24 f4 0f
	00 00 00	 cmp	 DWORD PTR sts$[rsp], 0
  0083e	7d 43		 jge	 SHORT $LN27@run
  00840	8b 84 24 f4 0f
	00 00		 mov	 eax, DWORD PTR sts$[rsp]
  00847	89 84 24 38 10
	00 00		 mov	 DWORD PTR $T20[rsp], eax
  0084e	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00856	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  0085b	90		 npad	 1
  0085c	48 8d 8c 24 30
	0f 00 00	 lea	 rcx, QWORD PTR err$[rsp]
  00864	e8 00 00 00 00	 call	 ??1ParseCmdError@@QEAA@XZ
  00869	90		 npad	 1
  0086a	48 8d 8c 24 e8
	0e 00 00	 lea	 rcx, QWORD PTR argvCopy$[rsp]
  00872	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  00877	8b 84 24 38 10
	00 00		 mov	 eax, DWORD PTR $T20[rsp]
  0087e	e9 01 01 00 00	 jmp	 $LN1@run
$LN27@run:

; 1107 :             continue;

  00883	e9 77 fe ff ff	 jmp	 $LN5@run

; 1108 :         } else {

  00888	eb 4c		 jmp	 SHORT $LN24@run
$LN23@run:

; 1109 :             if (sts < MFX_ERR_NONE) return 1;

  0088a	83 bc 24 f4 0f
	00 00 00	 cmp	 DWORD PTR sts$[rsp], 0
  00892	7d 40		 jge	 SHORT $LN28@run
  00894	c7 84 24 3c 10
	00 00 01 00 00
	00		 mov	 DWORD PTR $T21[rsp], 1
  0089f	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  008a7	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  008ac	90		 npad	 1
  008ad	48 8d 8c 24 30
	0f 00 00	 lea	 rcx, QWORD PTR err$[rsp]
  008b5	e8 00 00 00 00	 call	 ??1ParseCmdError@@QEAA@XZ
  008ba	90		 npad	 1
  008bb	48 8d 8c 24 e8
	0e 00 00	 lea	 rcx, QWORD PTR argvCopy$[rsp]
  008c3	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  008c8	8b 84 24 3c 10
	00 00		 mov	 eax, DWORD PTR $T21[rsp]
  008cf	e9 b0 00 00 00	 jmp	 $LN1@run
$LN28@run:

; 1110 :             break;

  008d4	eb 05		 jmp	 SHORT $LN6@run
$LN24@run:

; 1111 :         }
; 1112 :     }

  008d6	e9 24 fe ff ff	 jmp	 $LN5@run
$LN6@run:

; 1113 : 
; 1114 :     pPipeline->Close();

  008db	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  008e3	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  008e8	48 89 84 24 98
	10 00 00	 mov	 QWORD PTR tv381[rsp], rax
  008f0	48 8b 84 24 98
	10 00 00	 mov	 rax, QWORD PTR tv381[rsp]
  008f8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  008fb	48 8b 8c 24 98
	10 00 00	 mov	 rcx, QWORD PTR tv381[rsp]
  00903	ff 50 28	 call	 QWORD PTR [rax+40]

; 1115 : 	printf("----------------------------------------->loop end.\r\n");

  00906	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG181696
  0090d	e8 00 00 00 00	 call	 printf

; 1116 :     pPipeline->PrintMes(RGY_LOG_INFO, _T("\nProcessing finished\n"));

  00912	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  0091a	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  0091f	48 89 84 24 a0
	10 00 00	 mov	 QWORD PTR tv388[rsp], rax
  00927	48 8b 84 24 a0
	10 00 00	 mov	 rax, QWORD PTR tv388[rsp]
  0092f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00932	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG181697
  00939	33 d2		 xor	 edx, edx
  0093b	48 8b 8c 24 a0
	10 00 00	 mov	 rcx, QWORD PTR tv388[rsp]
  00943	ff 50 70	 call	 QWORD PTR [rax+112]

; 1117 :     return sts;

  00946	8b 84 24 f4 0f
	00 00		 mov	 eax, DWORD PTR sts$[rsp]
  0094d	89 84 24 40 10
	00 00		 mov	 DWORD PTR $T22[rsp], eax
  00954	48 8d 8c 24 e8
	0f 00 00	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  0095c	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00961	90		 npad	 1
  00962	48 8d 8c 24 30
	0f 00 00	 lea	 rcx, QWORD PTR err$[rsp]
  0096a	e8 00 00 00 00	 call	 ??1ParseCmdError@@QEAA@XZ
  0096f	90		 npad	 1
  00970	48 8d 8c 24 e8
	0e 00 00	 lea	 rcx, QWORD PTR argvCopy$[rsp]
  00978	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  0097d	8b 84 24 40 10
	00 00		 mov	 eax, DWORD PTR $T22[rsp]
$LN1@run:

; 1118 : }

  00984	48 8b f8	 mov	 rdi, rax
  00987	48 8b cc	 mov	 rcx, rsp
  0098a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?run@@YAHHQEAPEAD@Z$rtcFrameData
  00991	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00996	48 8b c7	 mov	 rax, rdi
  00999	48 8b 8c 24 a8
	10 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  009a1	48 33 cc	 xor	 rcx, rsp
  009a4	e8 00 00 00 00	 call	 __security_check_cookie
  009a9	48 81 c4 b0 10
	00 00		 add	 rsp, 4272		; 000010b0H
  009b0	5f		 pop	 rdi
  009b1	c3		 ret	 0
?run@@YAHHQEAPEAD@Z ENDP				; run
_TEXT	ENDS
text$x	SEGMENT
iarg$7 = 48
option_name$8 = 56
ret$9 = 64
Params$ = 96
argvCopy$ = 3816
err$ = 3888
ret$ = 4052
pPipeline$ = 4072
sts$ = 4084
$T10 = 4096
$T11 = 4104
$T12 = 4112
$T13 = 4116
$T14 = 4120
$T15 = 4128
$T16 = 4136
$T17 = 4140
$T18 = 4144
$T19 = 4148
$T20 = 4152
$T21 = 4156
$T22 = 4160
tv149 = 4168
tv154 = 4176
tv253 = 4180
tv310 = 4184
tv319 = 4192
tv328 = 4200
tv335 = 4208
tv346 = 4216
tv355 = 4224
tv363 = 4232
tv371 = 4240
tv381 = 4248
tv388 = 4256
__$ArrayPad$ = 4264
argc$ = 4288
argv$ = 4296
?dtor$0@?0??run@@YAHHQEAPEAD@Z@4HA PROC			; `run'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d e8 0e
	00 00		 lea	 rcx, QWORD PTR argvCopy$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??run@@YAHHQEAPEAD@Z@4HA ENDP			; `run'::`1'::dtor$0
iarg$7 = 48
option_name$8 = 56
ret$9 = 64
Params$ = 96
argvCopy$ = 3816
err$ = 3888
ret$ = 4052
pPipeline$ = 4072
sts$ = 4084
$T10 = 4096
$T11 = 4104
$T12 = 4112
$T13 = 4116
$T14 = 4120
$T15 = 4128
$T16 = 4136
$T17 = 4140
$T18 = 4144
$T19 = 4148
$T20 = 4152
$T21 = 4156
$T22 = 4160
tv149 = 4168
tv154 = 4176
tv253 = 4180
tv310 = 4184
tv319 = 4192
tv328 = 4200
tv335 = 4208
tv346 = 4216
tv355 = 4224
tv363 = 4232
tv371 = 4240
tv381 = 4248
tv388 = 4256
__$ArrayPad$ = 4264
argc$ = 4288
argv$ = 4296
?dtor$1@?0??run@@YAHHQEAPEAD@Z@4HA PROC			; `run'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8d 8d 30 0f
	00 00		 lea	 rcx, QWORD PTR err$[rbp]
  00040	e8 00 00 00 00	 call	 ??1ParseCmdError@@QEAA@XZ
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??run@@YAHHQEAPEAD@Z@4HA ENDP			; `run'::`1'::dtor$1
iarg$7 = 48
option_name$8 = 56
ret$9 = 64
Params$ = 96
argvCopy$ = 3816
err$ = 3888
ret$ = 4052
pPipeline$ = 4072
sts$ = 4084
$T10 = 4096
$T11 = 4104
$T12 = 4112
$T13 = 4116
$T14 = 4120
$T15 = 4128
$T16 = 4136
$T17 = 4140
$T18 = 4144
$T19 = 4148
$T20 = 4152
$T21 = 4156
$T22 = 4160
tv149 = 4168
tv154 = 4176
tv253 = 4180
tv310 = 4184
tv319 = 4192
tv328 = 4200
tv335 = 4208
tv346 = 4216
tv355 = 4224
tv363 = 4232
tv371 = 4240
tv381 = 4248
tv388 = 4256
__$ArrayPad$ = 4264
argc$ = 4288
argv$ = 4296
?dtor$2@?0??run@@YAHHQEAPEAD@Z@4HA PROC			; `run'::`1'::dtor$2
  0004c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00051	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00056	55		 push	 rbp
  00057	57		 push	 rdi
  00058	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005c	48 8b ea	 mov	 rbp, rdx
  0005f	ba 08 14 00 00	 mov	 edx, 5128		; 00001408H
  00064	48 8b 8d 20 10
	00 00		 mov	 rcx, QWORD PTR $T15[rbp]
  0006b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00070	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?dtor$2@?0??run@@YAHHQEAPEAD@Z@4HA ENDP			; `run'::`1'::dtor$2
iarg$7 = 48
option_name$8 = 56
ret$9 = 64
Params$ = 96
argvCopy$ = 3816
err$ = 3888
ret$ = 4052
pPipeline$ = 4072
sts$ = 4084
$T10 = 4096
$T11 = 4104
$T12 = 4112
$T13 = 4116
$T14 = 4120
$T15 = 4128
$T16 = 4136
$T17 = 4140
$T18 = 4144
$T19 = 4148
$T20 = 4152
$T21 = 4156
$T22 = 4160
tv149 = 4168
tv154 = 4176
tv253 = 4180
tv310 = 4184
tv319 = 4192
tv328 = 4200
tv335 = 4208
tv346 = 4216
tv355 = 4224
tv363 = 4232
tv371 = 4240
tv381 = 4248
tv388 = 4256
__$ArrayPad$ = 4264
argc$ = 4288
argv$ = 4296
?dtor$3@?0??run@@YAHHQEAPEAD@Z@4HA PROC			; `run'::`1'::dtor$3
  00077	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0007c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00081	55		 push	 rbp
  00082	57		 push	 rdi
  00083	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00087	48 8b ea	 mov	 rbp, rdx
  0008a	48 8d 8d e8 0f
	00 00		 lea	 rcx, QWORD PTR pPipeline$[rbp]
  00091	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00096	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0009a	5f		 pop	 rdi
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
?dtor$3@?0??run@@YAHHQEAPEAD@Z@4HA ENDP			; `run'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
iarg$7 = 48
option_name$8 = 56
ret$9 = 64
Params$ = 96
argvCopy$ = 3816
err$ = 3888
ret$ = 4052
pPipeline$ = 4072
sts$ = 4084
$T10 = 4096
$T11 = 4104
$T12 = 4112
$T13 = 4116
$T14 = 4120
$T15 = 4128
$T16 = 4136
$T17 = 4140
$T18 = 4144
$T19 = 4148
$T20 = 4152
$T21 = 4156
$T22 = 4160
tv149 = 4168
tv154 = 4176
tv253 = 4180
tv310 = 4184
tv319 = 4192
tv328 = 4200
tv335 = 4208
tv346 = 4216
tv355 = 4224
tv363 = 4232
tv371 = 4240
tv381 = 4248
tv388 = 4256
__$ArrayPad$ = 4264
argc$ = 4288
argv$ = 4296
?dtor$0@?0??run@@YAHHQEAPEAD@Z@4HA PROC			; `run'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d e8 0e
	00 00		 lea	 rcx, QWORD PTR argvCopy$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??run@@YAHHQEAPEAD@Z@4HA ENDP			; `run'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
iarg$7 = 48
option_name$8 = 56
ret$9 = 64
Params$ = 96
argvCopy$ = 3816
err$ = 3888
ret$ = 4052
pPipeline$ = 4072
sts$ = 4084
$T10 = 4096
$T11 = 4104
$T12 = 4112
$T13 = 4116
$T14 = 4120
$T15 = 4128
$T16 = 4136
$T17 = 4140
$T18 = 4144
$T19 = 4148
$T20 = 4152
$T21 = 4156
$T22 = 4160
tv149 = 4168
tv154 = 4176
tv253 = 4180
tv310 = 4184
tv319 = 4192
tv328 = 4200
tv335 = 4208
tv346 = 4216
tv355 = 4224
tv363 = 4232
tv371 = 4240
tv381 = 4248
tv388 = 4256
__$ArrayPad$ = 4264
argc$ = 4288
argv$ = 4296
?dtor$1@?0??run@@YAHHQEAPEAD@Z@4HA PROC			; `run'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8d 8d 30 0f
	00 00		 lea	 rcx, QWORD PTR err$[rbp]
  00040	e8 00 00 00 00	 call	 ??1ParseCmdError@@QEAA@XZ
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??run@@YAHHQEAPEAD@Z@4HA ENDP			; `run'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
iarg$7 = 48
option_name$8 = 56
ret$9 = 64
Params$ = 96
argvCopy$ = 3816
err$ = 3888
ret$ = 4052
pPipeline$ = 4072
sts$ = 4084
$T10 = 4096
$T11 = 4104
$T12 = 4112
$T13 = 4116
$T14 = 4120
$T15 = 4128
$T16 = 4136
$T17 = 4140
$T18 = 4144
$T19 = 4148
$T20 = 4152
$T21 = 4156
$T22 = 4160
tv149 = 4168
tv154 = 4176
tv253 = 4180
tv310 = 4184
tv319 = 4192
tv328 = 4200
tv335 = 4208
tv346 = 4216
tv355 = 4224
tv363 = 4232
tv371 = 4240
tv381 = 4248
tv388 = 4256
__$ArrayPad$ = 4264
argc$ = 4288
argv$ = 4296
?dtor$2@?0??run@@YAHHQEAPEAD@Z@4HA PROC			; `run'::`1'::dtor$2
  0004c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00051	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00056	55		 push	 rbp
  00057	57		 push	 rdi
  00058	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005c	48 8b ea	 mov	 rbp, rdx
  0005f	ba 08 14 00 00	 mov	 edx, 5128		; 00001408H
  00064	48 8b 8d 20 10
	00 00		 mov	 rcx, QWORD PTR $T15[rbp]
  0006b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00070	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?dtor$2@?0??run@@YAHHQEAPEAD@Z@4HA ENDP			; `run'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
iarg$7 = 48
option_name$8 = 56
ret$9 = 64
Params$ = 96
argvCopy$ = 3816
err$ = 3888
ret$ = 4052
pPipeline$ = 4072
sts$ = 4084
$T10 = 4096
$T11 = 4104
$T12 = 4112
$T13 = 4116
$T14 = 4120
$T15 = 4128
$T16 = 4136
$T17 = 4140
$T18 = 4144
$T19 = 4148
$T20 = 4152
$T21 = 4156
$T22 = 4160
tv149 = 4168
tv154 = 4176
tv253 = 4180
tv310 = 4184
tv319 = 4192
tv328 = 4200
tv335 = 4208
tv346 = 4216
tv355 = 4224
tv363 = 4232
tv371 = 4240
tv381 = 4248
tv388 = 4256
__$ArrayPad$ = 4264
argc$ = 4288
argv$ = 4296
?dtor$3@?0??run@@YAHHQEAPEAD@Z@4HA PROC			; `run'::`1'::dtor$3
  00077	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0007c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00081	55		 push	 rbp
  00082	57		 push	 rdi
  00083	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00087	48 8b ea	 mov	 rbp, rdx
  0008a	48 8d 8d e8 0f
	00 00		 lea	 rcx, QWORD PTR pPipeline$[rbp]
  00091	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00096	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0009a	5f		 pop	 rdi
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
?dtor$3@?0??run@@YAHHQEAPEAD@Z@4HA ENDP			; `run'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAXI@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::`scalar deleting destructor', COMDAT
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::~vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAPEAXI@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ PROC ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ PROC ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Take_contents@?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Take_contents@?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >::_Take_contents, COMDAT

; 324  :     void _Take_contents(_Vector_val& _Right) noexcept {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 325  :         this->_Swap_proxy_and_iterators(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 326  :         _Myfirst = _Right._Myfirst;

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00040	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 327  :         _Mylast  = _Right._Mylast;

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00052	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 328  :         _Myend   = _Right._Myend;

  00056	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00060	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00064	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 329  : 
; 330  :         _Right._Myfirst = pointer();

  00068	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0006d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 331  :         _Right._Mylast  = pointer();

  00075	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0007a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 332  :         _Right._Myend   = pointer();

  00082	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00087	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 333  :     }

  0008f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00093	5f		 pop	 rdi
  00094	c3		 ret	 0
?_Take_contents@?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z@4HA PROC ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z@4HA ENDP ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z@4HA PROC ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z@4HA ENDP ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@CAXXZ PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@CAXXZ ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	0f 84 85 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00071	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Destroy
  00086	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 99		 cdq
  0009c	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000a1	48 f7 f9	 idiv	 rcx
  000a4	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  000b3	90		 npad	 1
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000b9	4c 8b c1	 mov	 r8, rcx
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z ; std::allocator<`run_benchmark'::`2'::benchmark_t>::deallocate
  000cc	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d2	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000de	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ea	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000f1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f5	5f		 pop	 rdi
  000f6	c3		 ret	 0
?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K2@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K2@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 5e		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 99		 cdq
  000a5	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000aa	48 f7 f9	 idiv	 rcx
  000ad	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000b2	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b7	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  000bc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000c1	4c 8b c1	 mov	 r8, rcx
  000c4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c9	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000cc	48 8b c8	 mov	 rcx, rax
  000cf	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z ; std::allocator<`run_benchmark'::`2'::benchmark_t>::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000d4	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d9	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000de	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000e1	48 6b 44 24 70
	28		 imul	 rax, QWORD PTR _Newsize$[rsp], 40 ; 00000028H
  000e7	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000ec	48 03 c8	 add	 rcx, rax
  000ef	48 8b c1	 mov	 rax, rcx
  000f2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000f7	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000fa	48 6b 44 24 78
	28		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 40 ; 00000028H
  00100	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00105	48 03 c8	 add	 rcx, rax
  00108	48 8b c1	 mov	 rax, rcx
  0010b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  00110	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00113	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00117	5f		 pop	 rdi
  00118	c3		 ret	 0
?_Change_array@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K2@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAX_K@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z ; std::allocator<`run_benchmark'::`2'::benchmark_t>::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 6b 44 24 68
	28		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 40 ; 00000028H
  00093	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00098	48 03 c8	 add	 rcx, rax
  0009b	48 8b c1	 mov	 rax, rcx
  0009e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a3	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a6	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
?_Buy_raw@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z ; std::_Destroy_range<std::allocator<`run_benchmark'::`2'::benchmark_t> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@1@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11U?$integral_constant@_N$00@2@@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11U?$integral_constant@_N$00@2@@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z ; std::_Uninitialized_move<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@11U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU3?1??4@YA?AW45@0@Z@11@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU3?1??4@YA?AW45@0@Z@11@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAU1?1??2@YA?AW43@0@Z@1PEAU1?1??2@YA?AW43@0@Z@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@@Z ; std::_Uninitialized_move<`run_benchmark'::`2'::benchmark_t *,std::allocator<`run_benchmark'::`2'::benchmark_t> >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU3?1??4@YA?AW45@0@Z@11@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::operator[], COMDAT

; 1461 :     _NODISCARD const _Ty& operator[](const size_type _Pos) const noexcept { // strengthened

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1462 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1463 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1464 :         _STL_VERIFY(

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003f	48 2b c1	 sub	 rax, rcx
  00042	48 99		 cdq
  00044	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00049	48 f7 f9	 idiv	 rcx
  0004c	48 39 44 24 58	 cmp	 QWORD PTR _Pos$[rsp], rax
  00051	73 02		 jae	 SHORT $LN7@operator
  00053	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  00055	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  0005c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00061	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00068	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006d	45 33 c9	 xor	 r9d, r9d
  00070	41 b8 b9 05 00
	00		 mov	 r8d, 1465		; 000005b9H
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0007d	b9 02 00 00 00	 mov	 ecx, 2
  00082	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00088	90		 npad	 1
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN11@operator
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN11@operator:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 b9 05 00
	00		 mov	 r9d, 1465		; 000005b9H
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BLO@LPKJDEKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	90		 npad	 1

; 1465 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");

  000bc	33 c0		 xor	 eax, eax
  000be	85 c0		 test	 eax, eax
  000c0	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000c2	33 c0		 xor	 eax, eax
  000c4	85 c0		 test	 eax, eax
  000c6	0f 85 61 ff ff
	ff		 jne	 $LN4@operator

; 1466 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1467 : 
; 1468 :         return _My_data._Myfirst[_Pos];

  000cc	48 6b 44 24 58
	28		 imul	 rax, QWORD PTR _Pos$[rsp], 40 ; 00000028H
  000d2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000d7	48 03 41 08	 add	 rax, QWORD PTR [rcx+8]

; 1469 :     }

  000db	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000df	5f		 pop	 rdi
  000e0	c3		 ret	 0
??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 99		 cdq
  0003c	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00041	48 f7 f9	 idiv	 rcx

; 1449 :     }

  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?capacity@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA_KAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@@Z ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBA_KXZ ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Unchecked_end, COMDAT

; 1427 :     const_pointer _Unchecked_end() const noexcept { // return pointer for end of nonmutable sequence

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1428 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1429 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Unchecked_begin, COMDAT

; 1419 :     const_pointer _Unchecked_begin() const noexcept { // return pointer for beginning of nonmutable sequence

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1420 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1421 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::push_back, COMDAT

; 667  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 668  :         emplace_back(_Val);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Val$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$emplace_back@AEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::emplace_back<`run_benchmark'::`2'::benchmark_t const &>

; 669  :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?push_back@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S14$ = 52
$T4 = 68
this$ = 96
??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::~vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >, COMDAT

; 623  :     ~vector() noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXXZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S14$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><`run_benchmark'::`2'::benchmark_t>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S14$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::~vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >, COMDAT

; 531  :     vector(vector&& _Right) noexcept

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 532  :         : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) { // construct by moving _Right

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@YA$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@0@AEAV10@@Z ; std::move<std::allocator<`run_benchmark'::`2'::benchmark_t> &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1><std::allocator<`run_benchmark'::`2'::benchmark_t> >
  00049	90		 npad	 1

; 533  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><`run_benchmark'::`2'::benchmark_t>
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 534  :         _Move_construct(_Right, true_type{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Move_construct@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Move_construct
  00097	90		 npad	 1

; 535  :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Move_construct@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Move_construct@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Move_construct, COMDAT

; 505  :     void _Move_construct(vector& _Right, true_type) noexcept { // move from _Right, stealing its contents

  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 506  :         _Mypair._Myval2._Take_contents(_Right._Mypair._Myval2);

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 8b d0	 mov	 rdx, rax
  00035	e8 00 00 00 00	 call	 ?_Take_contents@?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >::_Take_contents

; 507  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?_Move_construct@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Move_construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S49$ = 52
_My_data$ = 72
_Right_data$ = 80
_Rightfirst$ = 88
_Rightlast$ = 96
_Proxy$ = 120
_Guard$6 = 168
$T7 = 180
$T8 = 181
this$ = 208
_Right$ = 216
??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >, COMDAT

; 468  :             _Alty_traits::select_on_container_copy_construction(_Right._Getal())) { // construct by copying _Right

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+208]

; 467  :         : _Mypair(_One_then_variadic_args_t(),

  00029	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR _Right$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEBAAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  00036	48 8b d0	 mov	 rdx, rax
  00039	48 8d 8c 24 b4
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  00041	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA?AV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::select_on_container_copy_construction
  00046	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0004e	4c 8b c0	 mov	 r8, rax
  00051	0f b6 94 24 b5
	00 00 00	 movzx	 edx, BYTE PTR $T8[rsp]
  00059	e8 00 00 00 00	 call	 ??$?0V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1><std::allocator<`run_benchmark'::`2'::benchmark_t> >

; 469  :         auto&& _Alproxy           = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0005e	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  0006b	48 8b d0	 mov	 rdx, rax
  0006e	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S49$[rsp]
  00073	e8 00 00 00 00	 call	 ??$?0Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><`run_benchmark'::`2'::benchmark_t>
  00078	48 8d 44 24 34	 lea	 rax, QWORD PTR $S49$[rsp]
  0007d	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 470  :         auto& _My_data            = _Mypair._Myval2;

  00082	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0008a	48 89 44 24 48	 mov	 QWORD PTR _My_data$[rsp], rax

; 471  :         const auto& _Right_data   = _Right._Mypair._Myval2;

  0008f	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR _Right$[rsp]
  00097	48 89 44 24 50	 mov	 QWORD PTR _Right_data$[rsp], rax

; 472  :         const pointer _Rightfirst = _Right_data._Myfirst;

  0009c	48 8b 44 24 50	 mov	 rax, QWORD PTR _Right_data$[rsp]
  000a1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000a5	48 89 44 24 58	 mov	 QWORD PTR _Rightfirst$[rsp], rax

; 473  :         const pointer _Rightlast  = _Right_data._Mylast;

  000aa	48 8b 44 24 50	 mov	 rax, QWORD PTR _Right_data$[rsp]
  000af	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000b3	48 89 44 24 60	 mov	 QWORD PTR _Rightlast$[rsp], rax

; 474  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  000b8	4c 8b 44 24 48	 mov	 r8, QWORD PTR _My_data$[rsp]
  000bd	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  000c2	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000c7	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000cc	90		 npad	 1

; 475  :         if (_Rightfirst != _Rightlast) {

  000cd	48 8b 44 24 60	 mov	 rax, QWORD PTR _Rightlast$[rsp]
  000d2	48 39 44 24 58	 cmp	 QWORD PTR _Rightfirst$[rsp], rax
  000d7	74 7c		 je	 SHORT $LN2@vector

; 476  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

  000d9	48 8b 44 24 58	 mov	 rax, QWORD PTR _Rightfirst$[rsp]
  000de	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Rightlast$[rsp]
  000e3	48 2b c8	 sub	 rcx, rax
  000e6	48 8b c1	 mov	 rax, rcx
  000e9	48 99		 cdq
  000eb	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000f0	48 f7 f9	 idiv	 rcx
  000f3	48 8b d0	 mov	 rdx, rax
  000f6	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000fe	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAX_K@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Buy_raw

; 477  :             _Tidy_guard<vector> _Guard{this};

  00103	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0010b	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR _Guard$6[rsp], rax

; 478  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

  00113	48 8b 44 24 48	 mov	 rax, QWORD PTR _My_data$[rsp]
  00118	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  0011c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Rightlast$[rsp]
  00121	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Rightfirst$[rsp]
  00126	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Ucopy@PEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@PEAU2?1??3@YA?AW44@0@Z@11@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Ucopy<`run_benchmark'::`2'::benchmark_t *>
  00133	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00138	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 479  :             _Guard._Target   = nullptr;

  0013c	48 c7 84 24 a8
	00 00 00 00 00
	00 00		 mov	 QWORD PTR _Guard$6[rsp], 0

; 480  :         }

  00148	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR _Guard$6[rsp]
  00150	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::~_Tidy_guard<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
$LN2@vector:

; 481  : 
; 482  :         _Proxy._Release();

  00155	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  0015a	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  0015f	90		 npad	 1

; 483  :     }

  00160	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00165	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0016a	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00172	48 8b f8	 mov	 rdi, rax
  00175	48 8b cc	 mov	 rcx, rsp
  00178	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z$rtcFrameData
  0017f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00184	48 8b c7	 mov	 rax, rdi
  00187	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  0018e	5f		 pop	 rdi
  0018f	c3		 ret	 0
??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S49$ = 52
_My_data$ = 72
_Right_data$ = 80
_Rightfirst$ = 88
_Rightlast$ = 96
_Proxy$ = 120
_Guard$6 = 168
$T7 = 180
$T8 = 181
this$ = 208
_Right$ = 216
?dtor$0@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 78	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S49$ = 52
_My_data$ = 72
_Right_data$ = 80
_Rightfirst$ = 88
_Rightlast$ = 96
_Proxy$ = 120
_Guard$6 = 168
$T7 = 180
$T8 = 181
this$ = 208
_Right$ = 216
?dtor$1@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d a8 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::~_Tidy_guard<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S49$ = 52
_My_data$ = 72
_Right_data$ = 80
_Rightfirst$ = 88
_Rightlast$ = 96
_Proxy$ = 120
_Guard$6 = 168
$T7 = 180
$T8 = 181
this$ = 208
_Right$ = 216
?dtor$0@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 78	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S49$ = 52
_My_data$ = 72
_Right_data$ = 80
_Rightfirst$ = 88
_Rightlast$ = 96
_Proxy$ = 120
_Guard$6 = 168
$T7 = 180
$T8 = 181
this$ = 208
_Right$ = 216
?dtor$1@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d a8 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::~_Tidy_guard<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ PROC ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@V?$_Vector_val@U?$_Simple_types@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1>::_Compressed_pair<std::allocator<`run_benchmark'::`2'::benchmark_t>,std::_Vector_val<std::_Simple_types<`run_benchmark'::`2'::benchmark_t> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@AEAAAEAV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><`run_benchmark'::`2'::benchmark_t>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ENDP ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA?AV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 16
_Al$ = 24
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA?AV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::select_on_container_copy_construction, COMDAT

; 770  :     _NODISCARD static _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 771  :         return _Al;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 772  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA?AV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA_KAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA_KAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 66 66 66
	66 66 66 66 06	 mov	 rax, 461168601842738790	; 0666666666666666H

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@SA_KAEBV?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<`run_benchmark'::`2'::benchmark_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z PROC ; std::allocator<`run_benchmark'::`2'::benchmark_t>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z ; std::_Get_size_of_n<40>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAPEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z ENDP ; std::allocator<`run_benchmark'::`2'::benchmark_t>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z PROC ; std::allocator<`run_benchmark'::`2'::benchmark_t>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Count$[rsp], 40 ; 00000028H
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAAXQEAUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z ENDP ; std::allocator<`run_benchmark'::`2'::benchmark_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAA@XZ PROC ; std::allocator<`run_benchmark'::`2'::benchmark_t>::allocator<`run_benchmark'::`2'::benchmark_t>, COMDAT

; 859  :     constexpr allocator() noexcept {}

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@QEAA@XZ ENDP ; std::allocator<`run_benchmark'::`2'::benchmark_t>::allocator<`run_benchmark'::`2'::benchmark_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >,std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >,std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >,std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >,std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >,std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >,std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z@4HA PROC ; `std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z@4HA ENDP ; `std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z@4HA PROC ; `std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z@4HA ENDP ; `std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 05	 sar	 rax, 5
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K1@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 58		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 c1 f8 05	 sar	 rax, 5
  000a7	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000ac	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b1	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000bb	4c 8b c1	 mov	 r8, rcx
  000be	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c6	48 8b c8	 mov	 rcx, rax
  000c9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000ce	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000d8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000db	48 6b 44 24 70
	20		 imul	 rax, QWORD PTR _Newsize$[rsp], 32 ; 00000020H
  000e1	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000e6	48 03 c8	 add	 rcx, rax
  000e9	48 8b c1	 mov	 rax, rcx
  000ec	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000f1	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000f4	48 6b 44 24 78
	20		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 32 ; 00000020H
  000fa	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000ff	48 03 c8	 add	 rcx, rax
  00102	48 8b c1	 mov	 rax, rcx
  00105	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  0010a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  0010d	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00111	5f		 pop	 rdi
  00112	c3		 ret	 0
?_Change_array@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K1@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBA_K_K@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBA_K_K@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@YAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@0@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > *,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@PEAV32@00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@PEAV32@00@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@YAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > *,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@PEAV32@00@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 05	 sar	 rax, 5

; 1449 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?capacity@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 05	 sar	 rax, 5

; 1439 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Unchecked_end, COMDAT

; 1423 :     pointer _Unchecked_end() noexcept { // return pointer for end of mutable sequence

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1424 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1425 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Unchecked_begin, COMDAT

; 1415 :     pointer _Unchecked_begin() noexcept { // return pointer for beginning of mutable sequence

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1416 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1417 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?reserve@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?reserve@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAX_K@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::reserve, COMDAT

; 1255 :     void reserve(_CRT_GUARDOVERFLOW const size_type _Newcapacity) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1256 :         // increase capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1257 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::capacity
  0002d	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00032	76 25		 jbe	 SHORT $LN2@reserve

; 1258 :             if (_Newcapacity > max_size()) {

  00034	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00039	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::max_size
  0003e	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00043	76 05		 jbe	 SHORT $LN3@reserve

; 1259 :                 _Xlength();

  00045	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Xlength
$LN3@reserve:

; 1260 :             }
; 1261 : 
; 1262 :             _Reallocate_exactly(_Newcapacity);

  0004a	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  0004f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Reallocate_exactly
$LN2@reserve:
$LN4@reserve:

; 1263 :         }
; 1264 :     }

  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
?reserve@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAX_K@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Size$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Reallocate_exactly, COMDAT

; 1202 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1203 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1204 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1205 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1206 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1207 : 
; 1208 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0004e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00053	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00056	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00059	48 2b c1	 sub	 rax, rcx
  0005c	48 c1 f8 05	 sar	 rax, 5
  00060	48 89 44 24 38	 mov	 QWORD PTR _Size$[rsp], rax

; 1209 : 
; 1210 :         const pointer _Newvec = _Getal().allocate(_Newcapacity);

  00065	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  0006f	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00074	48 8b c8	 mov	 rcx, rax
  00077	e8 00 00 00 00	 call	 ?allocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::allocate
  0007c	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1211 : 
; 1212 :         _TRY_BEGIN
; 1213 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00081	4c 8b 4c 24 40	 mov	 r9, QWORD PTR _Newvec$[rsp]
  00086	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0008e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00093	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00096	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@00@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Umove_if_noexcept
  000a0	90		 npad	 1
  000a1	eb 00		 jmp	 SHORT $LN6@Reallocate
$LN7@Reallocate:
$LN6@Reallocate:

; 1214 :         _CATCH_ALL
; 1215 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1216 :         _RERAISE;
; 1217 :         _CATCH_END
; 1218 : 
; 1219 :         _Change_array(_Newvec, _Size, _Newcapacity);

  000a3	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  000a8	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Size$[rsp]
  000ad	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  000b2	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b7	e8 00 00 00 00	 call	 ?_Change_array@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K1@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Change_array

; 1220 :     }

  000bc	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c0	5f		 pop	 rdi
  000c1	c3		 ret	 0
$LN8@Reallocate:
?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Reallocate_exactly
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Size$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?catch$0@?0??_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Reallocate_exactly'::`1'::catch$0

; 1214 :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z$0:

; 1214 :         _CATCH_ALL
; 1215 :         _Getal().deallocate(_Newvec, _Newcapacity);

  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  0001c	4c 8b 45 68	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00020	48 8b 55 40	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::deallocate

; 1214 :         _CATCH_ALL
; 1215 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1216 :         _RERAISE;

  0002c	33 d2		 xor	 edx, edx
  0002e	33 c9		 xor	 ecx, ecx
  00030	e8 00 00 00 00	 call	 _CxxThrowException
  00035	90		 npad	 1

; 1214 :         _CATCH_ALL
; 1215 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1216 :         _RERAISE;
; 1217 :         _CATCH_END

  00036	48 8d 05 00 00
	00 00		 lea	 rax, $LN7@catch$0
  0003d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00041	5f		 pop	 rdi
  00042	5d		 pop	 rbp
  00043	c3		 ret	 0
  00044	cc		 int	 3
?catch$0@?0??_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Reallocate_exactly'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Size$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?catch$0@?0??_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Reallocate_exactly'::`1'::catch$0

; 1214 :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$?_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z$0:

; 1215 :         _Getal().deallocate(_Newvec, _Newcapacity);

  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  0001c	4c 8b 45 68	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00020	48 8b 55 40	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  00024	48 8b c8	 mov	 rcx, rax
  00027	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::deallocate

; 1216 :         _RERAISE;

  0002c	33 d2		 xor	 edx, edx
  0002e	33 c9		 xor	 ecx, ecx
  00030	e8 00 00 00 00	 call	 _CxxThrowException
  00035	90		 npad	 1

; 1217 :         _CATCH_END

  00036	48 8d 05 00 00
	00 00		 lea	 rax, $LN7@catch$0
  0003d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00041	5f		 pop	 rdi
  00042	5d		 pop	 rbp
  00043	c3		 ret	 0
  00044	cc		 int	 3
?catch$0@?0??_Reallocate_exactly@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Reallocate_exactly'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@@Z PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::push_back, COMDAT

; 667  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 668  :         emplace_back(_Val);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Val$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$emplace_back@AEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@1@@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::emplace_back<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > const &>

; 669  :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?push_back@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@@Z ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S15$ = 52
$T4 = 68
this$ = 96
??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >, COMDAT

; 623  :     ~vector() noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAXXZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S15$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S15$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >,std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >,1>::_Compressed_pair<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >,std::_Vector_val<std::_Simple_types<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z PROC ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z ; std::_Get_size_of_n<32>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z ENDP ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z PROC ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	20		 imul	 rax, QWORD PTR _Count$[rsp], 32 ; 00000020H
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAAXQEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@_K@Z ENDP ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ PROC ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >, COMDAT

; 859  :     constexpr allocator() noexcept {}

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UCX_DESC@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UCX_DESC@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UCX_DESC@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UCX_DESC@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UCX_DESC@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UCX_DESC@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<CX_DESC> >::_Vector_val<std::_Simple_types<CX_DESC> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<CX_DESC> >::_Vector_val<std::_Simple_types<CX_DESC> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAAEBV?$allocator@UCX_DESC@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAAEBV?$allocator@UCX_DESC@@@2@XZ PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UCX_DESC@@@2@XZ ; std::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAAEBV?$allocator@UCX_DESC@@@2@XZ ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UCX_DESC@@@2@XZ ; std::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z@4HA PROC ; `std::vector<CX_DESC,std::allocator<CX_DESC> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z@4HA ENDP ; `std::vector<CX_DESC,std::allocator<CX_DESC> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z@4HA PROC ; `std::vector<CX_DESC,std::allocator<CX_DESC> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAXPEAUCX_DESC@@0@Z@4HA ENDP ; `std::vector<CX_DESC,std::allocator<CX_DESC> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@CAXXZ PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@CAXXZ ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXXZ PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@0@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 04	 sar	 rax, 4
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UCX_DESC@@@std@@QEAAXQEAUCX_DESC@@_K@Z ; std::allocator<CX_DESC>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXXZ ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXQEAUCX_DESC@@_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXQEAUCX_DESC@@_K1@Z PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 58		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@0@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 c1 f8 04	 sar	 rax, 4
  000a7	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000ac	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b1	e8 00 00 00 00	 call	 ?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000bb	4c 8b c1	 mov	 r8, rcx
  000be	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c6	48 8b c8	 mov	 rcx, rax
  000c9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UCX_DESC@@@std@@QEAAXQEAUCX_DESC@@_K@Z ; std::allocator<CX_DESC>::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000ce	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000d8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000db	48 6b 44 24 70
	10		 imul	 rax, QWORD PTR _Newsize$[rsp], 16
  000e1	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000e6	48 03 c8	 add	 rcx, rax
  000e9	48 8b c1	 mov	 rax, rcx
  000ec	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000f1	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000f4	48 6b 44 24 78
	10		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 16
  000fa	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000ff	48 03 c8	 add	 rcx, rax
  00102	48 8b c1	 mov	 rax, rcx
  00105	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  0010a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  0010d	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00111	5f		 pop	 rdi
  00112	c3		 ret	 0
?_Change_array@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXQEAUCX_DESC@@_K1@Z ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@0@Z PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UCX_DESC@@@std@@@std@@YAXPEAUCX_DESC@@QEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z ; std::_Destroy_range<std::allocator<CX_DESC> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@0@Z ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00@Z PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00U?$integral_constant@_N$00@2@@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00@Z ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAUCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@YAPEAUCX_DESC@@QEAU1@0PEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z ; std::_Uninitialized_move<CX_DESC *,std::allocator<CX_DESC> >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXPEAUCX_DESC@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAPEAUCX_DESC@@PEAU3@00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAPEAUCX_DESC@@PEAU3@00@Z PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAUCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@YAPEAUCX_DESC@@QEAU1@0PEAU1@AEAV?$allocator@UCX_DESC@@@0@@Z ; std::_Uninitialized_move<CX_DESC *,std::allocator<CX_DESC> >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAPEAUCX_DESC@@PEAU3@00@Z ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::operator[], COMDAT

; 1451 :     _NODISCARD _Ty& operator[](const size_type _Pos) noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1452 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1453 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1454 :         _STL_VERIFY(

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003f	48 2b c1	 sub	 rax, rcx
  00042	48 c1 f8 04	 sar	 rax, 4
  00046	48 39 44 24 58	 cmp	 QWORD PTR _Pos$[rsp], rax
  0004b	73 02		 jae	 SHORT $LN7@operator
  0004d	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  00056	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00062	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00067	45 33 c9	 xor	 r9d, r9d
  0006a	41 b8 af 05 00
	00		 mov	 r8d, 1455		; 000005afH
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00082	90		 npad	 1
  00083	83 f8 01	 cmp	 eax, 1
  00086	75 03		 jne	 SHORT $LN11@operator
  00088	cc		 int	 3
  00089	33 c0		 xor	 eax, eax
$LN11@operator:
  0008b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00094	41 b9 af 05 00
	00		 mov	 r9d, 1455		; 000005afH
  0009a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1JO@DHPHBBCK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
  000a8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000af	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b5	90		 npad	 1

; 1455 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");

  000b6	33 c0		 xor	 eax, eax
  000b8	85 c0		 test	 eax, eax
  000ba	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000bc	33 c0		 xor	 eax, eax
  000be	85 c0		 test	 eax, eax
  000c0	0f 85 67 ff ff
	ff		 jne	 $LN4@operator

; 1456 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1457 : 
; 1458 :         return _My_data._Myfirst[_Pos];

  000c6	48 6b 44 24 58
	10		 imul	 rax, QWORD PTR _Pos$[rsp], 16
  000cc	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000d1	48 03 41 08	 add	 rax, QWORD PTR [rcx+8]

; 1459 :     }

  000d5	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d9	5f		 pop	 rdi
  000da	c3		 ret	 0
??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 04	 sar	 rax, 4

; 1449 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?capacity@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEBAAEBV?$allocator@UCX_DESC@@@2@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SA_KAEBV?$allocator@UCX_DESC@@@2@@Z ; std::_Default_allocator_traits<std::allocator<CX_DESC> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 04	 sar	 rax, 4

; 1439 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::push_back, COMDAT

; 667  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 668  :         emplace_back(_Val);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Val$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$emplace_back@AEBUCX_DESC@@@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::emplace_back<CX_DESC const &>

; 669  :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?push_back@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S16$ = 52
$T4 = 68
this$ = 96
??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::~vector<CX_DESC,std::allocator<CX_DESC> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAXXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S16$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0UCX_DESC@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UCX_DESC@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CX_DESC>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S16$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::~vector<CX_DESC,std::allocator<CX_DESC> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ PROC ; std::vector<CX_DESC,std::allocator<CX_DESC> >::vector<CX_DESC,std::allocator<CX_DESC> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@UCX_DESC@@@std@@V?$_Vector_val@U?$_Simple_types@UCX_DESC@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1>::_Compressed_pair<std::allocator<CX_DESC>,std::_Vector_val<std::_Simple_types<CX_DESC> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@AEAAAEAV?$allocator@UCX_DESC@@@2@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0UCX_DESC@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UCX_DESC@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><CX_DESC>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ ENDP ; std::vector<CX_DESC,std::allocator<CX_DESC> >::vector<CX_DESC,std::allocator<CX_DESC> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SA_KAEBV?$allocator@UCX_DESC@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SA_KAEBV?$allocator@UCX_DESC@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<CX_DESC> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@UCX_DESC@@@std@@@std@@SA_KAEBV?$allocator@UCX_DESC@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<CX_DESC> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@UCX_DESC@@@std@@QEAAPEAUCX_DESC@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@UCX_DESC@@@std@@QEAAPEAUCX_DESC@@_K@Z PROC ; std::allocator<CX_DESC>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@UCX_DESC@@@std@@QEAAPEAUCX_DESC@@_K@Z ENDP ; std::allocator<CX_DESC>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@UCX_DESC@@@std@@QEAAXQEAUCX_DESC@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UCX_DESC@@@std@@QEAAXQEAUCX_DESC@@_K@Z PROC ; std::allocator<CX_DESC>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@UCX_DESC@@@std@@QEAAXQEAUCX_DESC@@_K@Z ENDP ; std::allocator<CX_DESC>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@UCX_DESC@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@UCX_DESC@@@std@@QEAA@XZ PROC		; std::allocator<CX_DESC>::allocator<CX_DESC>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@UCX_DESC@@@std@@QEAA@XZ ENDP		; std::allocator<CX_DESC>::allocator<CX_DESC>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0benchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0benchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAA@XZ PROC ; `run_benchmark'::`2'::benchmark_t::benchmark_t, COMDAT
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??$?0HH$0A@@?$pair@HH@std@@QEAA@XZ ; std::pair<int,int>::pair<int,int><int,int,0>
  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??0benchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAA@XZ ENDP ; `run_benchmark'::`2'::benchmark_t::benchmark_t
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
tv66 = 32
_Ostr$ = 64
_Str$ = 72
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4518 :     basic_ostream<_Elem, _Traits>& _Ostr, const basic_string<_Elem, _Traits, _Alloc>& _Str) { // insert a string

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4519 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Str$[rsp]
  00028	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00032	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Str$[rsp]
  00037	e8 00 00 00 00	 call	 ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
  0003c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00041	4c 8b c1	 mov	 r8, rcx
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0004c	e8 00 00 00 00	 call	 ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>

; 4520 : }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 2d a8 00 00
	00		 sub	 rax, 168		; 000000a8H
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00035	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 18		 je	 SHORT $LN2@scalar
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 2d a8 00 00
	00		 sub	 rax, 168		; 000000a8H
  0004b	ba 08 01 00 00	 mov	 edx, 264		; 00000108H
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 2d a8 00 00
	00		 sub	 rax, 168		; 000000a8H
  00063	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??_G?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 98 00 00 00	 mov	 edx, 152		; 00000098H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back, COMDAT

; 775  :     void _Set_back() { // set up putback area

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 776  :         if (_Mysb::eback() != &_Mychar) { // save current get buffer

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00032	48 3b c1	 cmp	 rax, rcx
  00035	74 2e		 je	 SHORT $LN2@Set_back

; 777  :             _Set_eback = _Mysb::eback();

  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	48 89 81 88 00
	00 00		 mov	 QWORD PTR [rcx+136], rax

; 778  :             _Set_egptr = _Mysb::egptr();

  0004e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00053	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00059	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005e	48 89 81 90 00
	00 00		 mov	 QWORD PTR [rcx+144], rax
$LN2@Set_back:

; 779  :         }
; 780  :         _Mysb::setg(&_Mychar, &_Mychar, &_Mychar + 1);

  00065	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0006a	48 83 c0 71	 add	 rax, 113		; 00000071H
  0006e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00073	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00077	48 8b 54 24 30	 mov	 rdx, QWORD PTR this$[rsp]
  0007c	48 83 c2 70	 add	 rdx, 112		; 00000070H
  00080	4c 8b c8	 mov	 r9, rax
  00083	4c 8b c1	 mov	 r8, rcx
  00086	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z

; 781  :     }

  00091	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00095	5f		 pop	 rdi
  00096	c3		 ret	 0
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back, COMDAT

; 769  :     void _Reset_back() { // restore buffer after putback

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 770  :         if (_Mysb::eback() == &_Mychar) {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00032	48 3b c1	 cmp	 rax, rcx
  00035	75 2f		 jne	 SHORT $LN2@Reset_back

; 771  :             _Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

  00037	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003c	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  00043	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00048	4c 8b 80 88 00
	00 00		 mov	 r8, QWORD PTR [rax+136]
  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 8b 90 88 00
	00 00		 mov	 rdx, QWORD PTR [rax+136]
  0005b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00060	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN2@Reset_back:

; 772  :         }
; 773  :     }

  00066	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006a	5f		 pop	 rdi
  0006b	c3		 ret	 0
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Newcvt$ = 56
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt, COMDAT

; 752  :     void _Initcvt(const _Cvt& _Newcvt) { // initialize codecvt pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 753  :         if (_Newcvt.always_noconv()) {

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Newcvt$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?always_noconv@codecvt_base@std@@QEBA_NXZ
  0002e	0f b6 c0	 movzx	 eax, al
  00031	85 c0		 test	 eax, eax
  00033	74 0f		 je	 SHORT $LN2@Initcvt

; 754  :             _Pcvt = nullptr; // nothing to do

  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 68 00
	00 00 00	 mov	 QWORD PTR [rax+104], 0

; 755  :         } else { // set up for nontrivial codecvt facet

  00042	eb 1e		 jmp	 SHORT $LN3@Initcvt
$LN2@Initcvt:

; 756  :             _Pcvt = _STD addressof(_Newcvt);

  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Newcvt$[rsp]
  00049	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z ; std::addressof<std::codecvt<char,char,_Mbstatet> const >
  0004e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00053	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax

; 757  :             _Mysb::_Init(); // reset any buffering

  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ
$LN3@Initcvt:

; 758  :         }
; 759  :     }

  00062	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
_TEXT	SEGMENT
_Codecvt_temp_buf$ = 48
_Str$ = 72
_Dest$ = 136
_Count$5 = 152
$T6 = 168
$T7 = 172
tv146 = 176
tv94 = 184
tv140 = 188
__$ArrayPad$ = 192
this$ = 224
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite, COMDAT

; 716  :     bool _Endwrite() { // put shift to initial conversion state, as needed

$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+224]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 717  :         if (!_Pcvt || !_Wrotesome) {

  00036	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00043	74 10		 je	 SHORT $LN5@Endwrite
  00045	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004d	0f b6 40 71	 movzx	 eax, BYTE PTR [rax+113]
  00051	85 c0		 test	 eax, eax
  00053	75 07		 jne	 SHORT $LN4@Endwrite
$LN5@Endwrite:

; 718  :             return true;

  00055	b0 01		 mov	 al, 1
  00057	e9 80 01 00 00	 jmp	 $LN1@Endwrite
$LN4@Endwrite:

; 719  :         }
; 720  : 
; 721  :         // may have to put
; 722  :         if (_Traits::eq_int_type(_Traits::eof(), overflow())) {

  0005c	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00061	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00069	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0006c	48 89 8c 24 b0
	00 00 00	 mov	 QWORD PTR tv146[rsp], rcx
  00074	8b d0		 mov	 edx, eax
  00076	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0007e	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR tv146[rsp]
  00086	ff 50 18	 call	 QWORD PTR [rax+24]
  00089	89 84 24 a8 00
	00 00		 mov	 DWORD PTR $T6[rsp], eax
  00090	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00095	89 84 24 ac 00
	00 00		 mov	 DWORD PTR $T7[rsp], eax
  0009c	48 8d 94 24 a8
	00 00 00	 lea	 rdx, QWORD PTR $T6[rsp]
  000a4	48 8d 8c 24 ac
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  000ac	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  000b1	0f b6 c0	 movzx	 eax, al
  000b4	85 c0		 test	 eax, eax
  000b6	74 07		 je	 SHORT $LN6@Endwrite

; 723  :             return false;

  000b8	32 c0		 xor	 al, al
  000ba	e9 1d 01 00 00	 jmp	 $LN1@Endwrite
$LN6@Endwrite:

; 724  :         }
; 725  : 
; 726  :         constexpr size_t _Codecvt_temp_buf = 32;

  000bf	48 c7 44 24 30
	20 00 00 00	 mov	 QWORD PTR _Codecvt_temp_buf$[rsp], 32 ; 00000020H

; 727  :         char _Str[_Codecvt_temp_buf];
; 728  :         char* _Dest;
; 729  :         switch (_Pcvt->unshift(_State, _Str, _Str + _Codecvt_temp_buf, _Dest)) { // test result of homing conversion

  000c8	48 8d 44 24 68	 lea	 rax, QWORD PTR _Str$[rsp+32]
  000cd	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d5	48 83 c1 74	 add	 rcx, 116		; 00000074H
  000d9	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR _Dest$[rsp]
  000e1	48 89 54 24 20	 mov	 QWORD PTR [rsp+32], rdx
  000e6	4c 8b c8	 mov	 r9, rax
  000e9	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Str$[rsp]
  000ee	48 8b d1	 mov	 rdx, rcx
  000f1	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000f9	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
  000fd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z
  00103	89 84 24 b8 00
	00 00		 mov	 DWORD PTR tv94[rsp], eax
  0010a	83 bc 24 b8 00
	00 00 00	 cmp	 DWORD PTR tv94[rsp], 0
  00112	74 1d		 je	 SHORT $LN7@Endwrite
  00114	83 bc 24 b8 00
	00 00 01	 cmp	 DWORD PTR tv94[rsp], 1
  0011c	74 1f		 je	 SHORT $LN8@Endwrite
  0011e	83 bc 24 b8 00
	00 00 03	 cmp	 DWORD PTR tv94[rsp], 3
  00126	0f 84 9e 00 00
	00		 je	 $LN10@Endwrite
  0012c	e9 a9 00 00 00	 jmp	 $LN11@Endwrite
$LN7@Endwrite:

; 730  :         case codecvt_base::ok:
; 731  :             _Wrotesome = false; // homed successfully

  00131	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00139	c6 40 71 00	 mov	 BYTE PTR [rax+113], 0
$LN8@Endwrite:

; 732  : 
; 733  :         case codecvt_base::partial: // fall through
; 734  :         { // put any generated bytes
; 735  :             const auto _Count = static_cast<size_t>(_Dest - _Str);

  0013d	48 8d 44 24 48	 lea	 rax, QWORD PTR _Str$[rsp]
  00142	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0014a	48 2b c8	 sub	 rcx, rax
  0014d	48 8b c1	 mov	 rax, rcx
  00150	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR _Count$5[rsp], rax

; 736  :             if (0 < _Count && _Count != static_cast<size_t>(_CSTD fwrite(_Str, 1, _Count, _Myfile))) {

  00158	48 83 bc 24 98
	00 00 00 00	 cmp	 QWORD PTR _Count$5[rsp], 0
  00161	76 35		 jbe	 SHORT $LN9@Endwrite
  00163	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0016b	4c 8b 88 80 00
	00 00		 mov	 r9, QWORD PTR [rax+128]
  00172	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Count$5[rsp]
  0017a	ba 01 00 00 00	 mov	 edx, 1
  0017f	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Str$[rsp]
  00184	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  0018a	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Count$5[rsp], rax
  00192	74 04		 je	 SHORT $LN9@Endwrite

; 737  :                 return false; // write failed

  00194	32 c0		 xor	 al, al
  00196	eb 44		 jmp	 SHORT $LN1@Endwrite
$LN9@Endwrite:

; 738  :             }
; 739  : 
; 740  :             return !_Wrotesome;

  00198	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001a0	0f b6 40 71	 movzx	 eax, BYTE PTR [rax+113]
  001a4	85 c0		 test	 eax, eax
  001a6	75 0d		 jne	 SHORT $LN13@Endwrite
  001a8	c7 84 24 bc 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv140[rsp], 1
  001b3	eb 0b		 jmp	 SHORT $LN14@Endwrite
$LN13@Endwrite:
  001b5	c7 84 24 bc 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv140[rsp], 0
$LN14@Endwrite:
  001c0	0f b6 84 24 bc
	00 00 00	 movzx	 eax, BYTE PTR tv140[rsp]
  001c8	eb 12		 jmp	 SHORT $LN1@Endwrite
$LN10@Endwrite:

; 741  :         }
; 742  : 
; 743  :         case codecvt_base::noconv:
; 744  :             _Wrotesome = false; // homed successfully

  001ca	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001d2	c6 40 71 00	 mov	 BYTE PTR [rax+113], 0

; 745  :             return true; // nothing else to do

  001d6	b0 01		 mov	 al, 1
  001d8	eb 02		 jmp	 SHORT $LN1@Endwrite
$LN11@Endwrite:

; 746  : 
; 747  :         default:
; 748  :             return false; // conversion failed

  001da	32 c0		 xor	 al, al
$LN1@Endwrite:

; 749  :         }
; 750  :     }

  001dc	48 8b f8	 mov	 rdi, rax
  001df	48 8b cc	 mov	 rcx, rsp
  001e2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcFrameData
  001e9	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001ee	48 8b c7	 mov	 rax, rdi
  001f1	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001f9	48 33 cc	 xor	 rcx, rsp
  001fc	e8 00 00 00 00	 call	 __security_check_cookie
  00201	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  00208	5f		 pop	 rdi
  00209	c3		 ret	 0
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z
_TEXT	SEGMENT
_Pb$6 = 72
_Pn$7 = 104
_Nr$8 = 136
_Nw$9 = 152
tv66 = 160
this$ = 192
_File$ = 200
_Which$ = 208
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Init, COMDAT

; 689  :     void _Init(FILE* _File, _Initfl _Which) { // initialize to C stream _File after {new, open, close}

$LN6:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]

; 690  :         using _State_type = typename _Traits::state_type;
; 691  : 
; 692  :         __PURE_APPDOMAIN_GLOBAL static _State_type _Stinit; // initial state
; 693  : 
; 694  :         _Closef    = _Which == _Openfl;

  0002e	83 bc 24 d0 00
	00 00 01	 cmp	 DWORD PTR _Which$[rsp], 1
  00036	75 0d		 jne	 SHORT $LN4@Init
  00038	c7 84 24 a0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv66[rsp], 1
  00043	eb 0b		 jmp	 SHORT $LN5@Init
$LN4@Init:
  00045	c7 84 24 a0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv66[rsp], 0
$LN5@Init:
  00050	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00058	0f b6 8c 24 a0
	00 00 00	 movzx	 ecx, BYTE PTR tv66[rsp]
  00060	88 48 7c	 mov	 BYTE PTR [rax+124], cl

; 695  :         _Wrotesome = false;

  00063	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006b	c6 40 71 00	 mov	 BYTE PTR [rax+113], 0

; 696  : 
; 697  :         _Mysb::_Init(); // initialize stream buffer base object

  0006f	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00077	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ

; 698  : 
; 699  :         if (_File && sizeof(_Elem) == 1) { // point inside C stream with [first, first + count) buffer

  0007d	48 83 bc 24 c8
	00 00 00 00	 cmp	 QWORD PTR _File$[rsp], 0
  00086	0f 84 9a 00 00
	00		 je	 $LN2@Init
  0008c	33 c0		 xor	 eax, eax
  0008e	83 f8 01	 cmp	 eax, 1
  00091	0f 84 8f 00 00
	00		 je	 $LN2@Init

; 700  :             _Elem** _Pb = nullptr;

  00097	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR _Pb$6[rsp], 0

; 701  :             _Elem** _Pn = nullptr;

  000a0	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR _Pn$7[rsp], 0

; 702  :             int* _Nr    = nullptr;

  000a9	48 c7 84 24 88
	00 00 00 00 00
	00 00		 mov	 QWORD PTR _Nr$8[rsp], 0

; 703  : 
; 704  :             ::_get_stream_buffer_pointers(

  000b5	4c 8d 8c 24 88
	00 00 00	 lea	 r9, QWORD PTR _Nr$8[rsp]
  000bd	4c 8d 44 24 68	 lea	 r8, QWORD PTR _Pn$7[rsp]
  000c2	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Pb$6[rsp]
  000c7	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR _File$[rsp]
  000cf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__get_stream_buffer_pointers

; 705  :                 _File, reinterpret_cast<char***>(&_Pb), reinterpret_cast<char***>(&_Pn), &_Nr);
; 706  :             int* _Nw = _Nr;

  000d5	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR _Nr$8[rsp]
  000dd	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR _Nw$9[rsp], rax

; 707  : 
; 708  :             _Mysb::_Init(_Pb, _Pn, _Nr, _Pb, _Pn, _Nw);

  000e5	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR _Nw$9[rsp]
  000ed	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  000f2	48 8b 44 24 68	 mov	 rax, QWORD PTR _Pn$7[rsp]
  000f7	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000fc	48 8b 44 24 48	 mov	 rax, QWORD PTR _Pb$6[rsp]
  00101	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00106	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR _Nr$8[rsp]
  0010e	4c 8b 44 24 68	 mov	 r8, QWORD PTR _Pn$7[rsp]
  00113	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Pb$6[rsp]
  00118	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00120	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAPEAD0PEAH001@Z
$LN2@Init:

; 709  :         }
; 710  : 
; 711  :         _Myfile = _File;

  00126	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0012e	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR _File$[rsp]
  00136	48 89 88 80 00
	00 00		 mov	 QWORD PTR [rax+128], rcx

; 712  :         _State  = _Stinit;

  0013d	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00145	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
  0014c	48 89 48 74	 mov	 QWORD PTR [rax+116], rcx

; 713  :         _Pcvt   = nullptr; // pointer to codecvt facet

  00150	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00158	48 c7 40 68 00
	00 00 00	 mov	 QWORD PTR [rax+104], 0

; 714  :     }

  00160	48 8b cc	 mov	 rcx, rsp
  00163	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcFrameData
  0016a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0016f	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  00176	5f		 pop	 rdi
  00177	c3		 ret	 0
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
_TEXT	SEGMENT
this$ = 48
_Loc$ = 56
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::imbue, COMDAT

; 684  :     virtual void __CLR_OR_THIS_CALL imbue(const locale& _Loc) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 685  :         // set locale to argument (capture nontrivial codecvt facet)
; 686  :         _Initcvt(_STD use_facet<_Cvt>(_Loc));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Loc$[rsp]
  00028	e8 00 00 00 00	 call	 ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
  0002d	48 8b d0	 mov	 rdx, rax
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt

; 687  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::imbue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 36
tv86 = 40
this$ = 64
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::sync, COMDAT

; 676  :     virtual int __CLR_OR_THIS_CALL sync() { // synchronize C stream with external file

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 677  :         if (!_Myfile || _Traits::eq_int_type(_Traits::eof(), overflow()) || 0 <= _CSTD fflush(_Myfile)) {

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0002b	74 5a		 je	 SHORT $LN3@sync
  0002d	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003a	48 89 4c 24 28	 mov	 QWORD PTR tv86[rsp], rcx
  0003f	8b d0		 mov	 edx, eax
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00046	48 8b 44 24 28	 mov	 rax, QWORD PTR tv86[rsp]
  0004b	ff 50 18	 call	 QWORD PTR [rax+24]
  0004e	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00052	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00057	89 44 24 24	 mov	 DWORD PTR $T2[rsp], eax
  0005b	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00060	48 8d 4c 24 24	 lea	 rcx, QWORD PTR $T2[rsp]
  00065	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  0006a	0f b6 c0	 movzx	 eax, al
  0006d	85 c0		 test	 eax, eax
  0006f	75 16		 jne	 SHORT $LN3@sync
  00071	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0007d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fflush
  00083	85 c0		 test	 eax, eax
  00085	7c 04		 jl	 SHORT $LN2@sync
$LN3@sync:

; 678  :             return 0;

  00087	33 c0		 xor	 eax, eax
  00089	eb 05		 jmp	 SHORT $LN1@sync
$LN2@sync:

; 679  :         }
; 680  : 
; 681  :         return -1;

  0008b	b8 ff ff ff ff	 mov	 eax, -1
$LN1@sync:

; 682  :     }

  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::sync
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z
_TEXT	SEGMENT
_Mode$ = 32
_Size$ = 40
this$ = 64
_Buffer$ = 72
_Count$ = 80
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::setbuf, COMDAT

; 657  :     virtual _Mysb* __CLR_OR_THIS_CALL setbuf(_Elem* _Buffer, streamsize _Count) { // offer _Buffer to C stream

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 658  :         int _Mode;
; 659  :         if (!_Buffer && _Count == 0) {

  00028	48 83 7c 24 48
	00		 cmp	 QWORD PTR _Buffer$[rsp], 0
  0002e	75 12		 jne	 SHORT $LN2@setbuf
  00030	48 83 7c 24 50
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00036	75 0a		 jne	 SHORT $LN2@setbuf

; 660  :             _Mode = _IONBF;

  00038	c7 44 24 20 04
	00 00 00	 mov	 DWORD PTR _Mode$[rsp], 4

; 661  :         } else {

  00040	eb 08		 jmp	 SHORT $LN3@setbuf
$LN2@setbuf:

; 662  :             _Mode = _IOFBF;

  00042	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _Mode$[rsp], 0
$LN3@setbuf:

; 663  :         }
; 664  : 
; 665  :         const size_t _Size = static_cast<size_t>(_Count) * sizeof(_Elem);

  0004a	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  0004f	48 89 44 24 28	 mov	 QWORD PTR _Size$[rsp], rax

; 666  : 
; 667  :         if (!_Myfile || _CSTD setvbuf(_Myfile, reinterpret_cast<char*>(_Buffer), _Mode, _Size) != 0) {

  00054	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  00061	74 25		 je	 SHORT $LN5@setbuf
  00063	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _Size$[rsp]
  00068	44 8b 44 24 20	 mov	 r8d, DWORD PTR _Mode$[rsp]
  0006d	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00077	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_setvbuf
  00084	85 c0		 test	 eax, eax
  00086	74 04		 je	 SHORT $LN4@setbuf
$LN5@setbuf:

; 668  :             return nullptr; // failed

  00088	33 c0		 xor	 eax, eax
  0008a	eb 21		 jmp	 SHORT $LN1@setbuf
$LN4@setbuf:

; 669  :         }
; 670  : 
; 671  :         // new buffer, reinitialize pointers
; 672  :         _Init(_Myfile, _Openfl);

  0008c	41 b8 01 00 00
	00		 mov	 r8d, 1
  00092	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00097	48 8b 90 80 00
	00 00		 mov	 rdx, QWORD PTR [rax+128]
  0009e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000a3	e8 00 00 00 00	 call	 ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 673  :         return this;

  000a8	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
$LN1@setbuf:

; 674  :     }

  000ad	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b1	5f		 pop	 rdi
  000b2	c3		 ret	 0
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
_Off$ = 40
$T4 = 52
this$ = 80
__$ReturnUdt$ = 88
_Pos$ = 96
__formal$ = 104
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekpos, COMDAT

; 644  :     virtual pos_type __CLR_OR_THIS_CALL seekpos(pos_type _Pos, ios_base::openmode = ios_base::in | ios_base::out) {

$LN5:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 645  :         // change position to _Pos
; 646  :         off_type _Off = static_cast<off_type>(_Pos);

  0002d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Pos$[rsp]
  00032	e8 00 00 00 00	 call	 ??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ ; std::fpos<_Mbstatet>::operator __int64
  00037	48 89 44 24 28	 mov	 QWORD PTR _Off$[rsp], rax

; 647  : 
; 648  :         if (!_Myfile || !_Endwrite() || _CSTD fsetpos(_Myfile, &_Off) != 0) {

  0003c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  00049	74 2c		 je	 SHORT $LN3@seekpos
  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00050	e8 00 00 00 00	 call	 ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
  00055	0f b6 c0	 movzx	 eax, al
  00058	85 c0		 test	 eax, eax
  0005a	74 1b		 je	 SHORT $LN3@seekpos
  0005c	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Off$[rsp]
  00061	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00066	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0006d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fsetpos
  00073	85 c0		 test	 eax, eax
  00075	74 18		 je	 SHORT $LN2@seekpos
$LN3@seekpos:

; 649  :             return pos_type(-1); // report failure

  00077	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  0007e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00083	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0008d	eb 42		 jmp	 SHORT $LN1@seekpos
$LN2@seekpos:

; 650  :         }
; 651  : 
; 652  :         _State = _Pos.state();

  0008f	48 8d 54 24 34	 lea	 rdx, QWORD PTR $T4[rsp]
  00094	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Pos$[rsp]
  00099	e8 00 00 00 00	 call	 ?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ ; std::fpos<_Mbstatet>::state
  0009e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000a6	48 89 41 74	 mov	 QWORD PTR [rcx+116], rax

; 653  :         _Reset_back(); // revert from _Mychar buffer, discarding any putback

  000aa	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000af	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 654  :         return pos_type(_State, _Off); // return new position

  000b4	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Off$[rsp]
  000b9	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000be	48 8b 50 74	 mov	 rdx, QWORD PTR [rax+116]
  000c2	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000c7	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  000cc	48 8b 44 24 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@seekpos:

; 655  :     }

  000d1	48 8b f8	 mov	 rdi, rax
  000d4	48 8b cc	 mov	 rcx, rsp
  000d7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z$rtcFrameData
  000de	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000e3	48 8b c7	 mov	 rax, rdi
  000e6	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ea	5f		 pop	 rdi
  000eb	c3		 ret	 0
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
_Fileposition$ = 40
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Way$ = 104
__formal$ = 112
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekoff, COMDAT

; 625  :         ios_base::openmode = ios_base::in | ios_base::out) { // change position by _Off

$LN8:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 626  :         fpos_t _Fileposition;
; 627  : 
; 628  :         if (_Mysb::gptr() == &_Mychar // something putback
; 629  :             && _Way == ios_base::cur // a relative seek
; 630  :             && !_Pcvt) { // not converting

  0002d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00038	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00041	48 3b c1	 cmp	 rax, rcx
  00044	75 20		 jne	 SHORT $LN2@seekoff
  00046	83 7c 24 68 01	 cmp	 DWORD PTR _Way$[rsp], 1
  0004b	75 19		 jne	 SHORT $LN2@seekoff
  0004d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00057	75 0d		 jne	 SHORT $LN2@seekoff

; 631  :             _Off -= static_cast<off_type>(sizeof(_Elem)); // back up over _Elem bytes

  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR _Off$[rsp]
  0005e	48 ff c8	 dec	 rax
  00061	48 89 44 24 60	 mov	 QWORD PTR _Off$[rsp], rax
$LN2@seekoff:

; 632  :         }
; 633  : 
; 634  :         if (!_Myfile || !_Endwrite()
; 635  :             || ((_Off != 0 || _Way != ios_base::cur) && _CSTD _fseeki64(_Myfile, _Off, _Way) != 0)
; 636  :             || _CSTD fgetpos(_Myfile, &_Fileposition) != 0) {

  00066	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006b	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  00073	74 5b		 je	 SHORT $LN4@seekoff
  00075	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0007a	e8 00 00 00 00	 call	 ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
  0007f	0f b6 c0	 movzx	 eax, al
  00082	85 c0		 test	 eax, eax
  00084	74 4a		 je	 SHORT $LN4@seekoff
  00086	48 83 7c 24 60
	00		 cmp	 QWORD PTR _Off$[rsp], 0
  0008c	75 07		 jne	 SHORT $LN6@seekoff
  0008e	83 7c 24 68 01	 cmp	 DWORD PTR _Way$[rsp], 1
  00093	74 20		 je	 SHORT $LN5@seekoff
$LN6@seekoff:
  00095	44 8b 44 24 68	 mov	 r8d, DWORD PTR _Way$[rsp]
  0009a	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Off$[rsp]
  0009f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  000ab	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__fseeki64
  000b1	85 c0		 test	 eax, eax
  000b3	75 1b		 jne	 SHORT $LN4@seekoff
$LN5@seekoff:
  000b5	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Fileposition$[rsp]
  000ba	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000bf	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  000c6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fgetpos
  000cc	85 c0		 test	 eax, eax
  000ce	74 18		 je	 SHORT $LN3@seekoff
$LN4@seekoff:

; 637  :             return pos_type(-1); // report failure

  000d0	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  000d7	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000dc	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  000e1	48 8b 44 24 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000e6	eb 27		 jmp	 SHORT $LN1@seekoff
$LN3@seekoff:

; 638  :         }
; 639  : 
; 640  :         _Reset_back(); // revert from _Mychar buffer, discarding any putback

  000e8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000ed	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 641  :         return pos_type(_State, _Fileposition); // return new position

  000f2	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Fileposition$[rsp]
  000f7	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000fc	48 8b 50 74	 mov	 rdx, QWORD PTR [rax+116]
  00100	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00105	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  0010a	48 8b 44 24 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@seekoff:

; 642  :     }

  0010f	48 8b f8	 mov	 rdi, rax
  00112	48 8b cc	 mov	 rcx, rsp
  00115	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z$rtcFrameData
  0011c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00121	48 8b c7	 mov	 rax, rdi
  00124	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00128	5f		 pop	 rdi
  00129	c3		 ret	 0
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
_TEXT	SEGMENT
_Start_count$1 = 32
_Size$2 = 40
this$ = 64
_Ptr$ = 72
_Count$ = 80
?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::xsputn, COMDAT

; 591  :     virtual streamsize __CLR_OR_THIS_CALL xsputn(const _Elem* _Ptr, streamsize _Count) override {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 592  :         // put _Count characters to stream
; 593  :         if
; 594  :             _CONSTEXPR_IF(sizeof(_Elem) == 1) {
; 595  :                 if (_Pcvt) { // if we need a nontrivial codecvt transform, do the default expensive thing

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00032	74 1a		 je	 SHORT $LN2@xsputn

; 596  :                     return _Mysb::xsputn(_Ptr, _Count);

  00034	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  00039	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00043	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
  00049	e9 ee 00 00 00	 jmp	 $LN1@xsputn
$LN2@xsputn:

; 597  :                 }
; 598  : 
; 599  :                 const streamsize _Start_count = _Count;

  0004e	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00053	48 89 44 24 20	 mov	 QWORD PTR _Start_count$1[rsp], rax

; 600  :                 streamsize _Size              = _Mysb::_Pnavail();

  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ
  00063	48 89 44 24 28	 mov	 QWORD PTR _Size$2[rsp], rax

; 601  :                 if (0 < _Count && 0 < _Size) { // copy to write buffer

  00068	48 83 7c 24 50
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  0006e	7e 74		 jle	 SHORT $LN3@xsputn
  00070	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Size$2[rsp], 0
  00076	7e 6c		 jle	 SHORT $LN3@xsputn

; 602  :                     if (_Count < _Size) {

  00078	48 8b 44 24 28	 mov	 rax, QWORD PTR _Size$2[rsp]
  0007d	48 39 44 24 50	 cmp	 QWORD PTR _Count$[rsp], rax
  00082	7d 0a		 jge	 SHORT $LN4@xsputn

; 603  :                         _Size = _Count;

  00084	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00089	48 89 44 24 28	 mov	 QWORD PTR _Size$2[rsp], rax
$LN4@xsputn:

; 604  :                     }
; 605  : 
; 606  :                     _Traits::copy(_Mysb::pptr(), _Ptr, static_cast<size_t>(_Size));

  0008e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00093	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00099	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Size$2[rsp]
  0009e	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  000a3	48 8b c8	 mov	 rcx, rax
  000a6	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 607  :                     _Ptr += _Size;

  000ab	48 8b 44 24 28	 mov	 rax, QWORD PTR _Size$2[rsp]
  000b0	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000b5	48 03 c8	 add	 rcx, rax
  000b8	48 8b c1	 mov	 rax, rcx
  000bb	48 89 44 24 48	 mov	 QWORD PTR _Ptr$[rsp], rax

; 608  :                     _Count -= _Size;

  000c0	48 8b 44 24 28	 mov	 rax, QWORD PTR _Size$2[rsp]
  000c5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  000ca	48 2b c8	 sub	 rcx, rax
  000cd	48 8b c1	 mov	 rax, rcx
  000d0	48 89 44 24 50	 mov	 QWORD PTR _Count$[rsp], rax

; 609  :                     _Mysb::pbump(static_cast<int>(_Size));

  000d5	8b 54 24 28	 mov	 edx, DWORD PTR _Size$2[rsp]
  000d9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z
$LN3@xsputn:

; 610  :                 }
; 611  : 
; 612  :                 if (0 < _Count && _Myfile) { // open C stream, attempt write

  000e4	48 83 7c 24 50
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  000ea	7e 40		 jle	 SHORT $LN5@xsputn
  000ec	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000f1	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  000f9	74 31		 je	 SHORT $LN5@xsputn

; 613  :                     _Count -= _CSTD fwrite(_Ptr, sizeof(_Elem), static_cast<size_t>(_Count), _Myfile);

  000fb	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00100	4c 8b 88 80 00
	00 00		 mov	 r9, QWORD PTR [rax+128]
  00107	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0010c	ba 01 00 00 00	 mov	 edx, 1
  00111	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00116	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  0011c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  00121	48 2b c8	 sub	 rcx, rax
  00124	48 8b c1	 mov	 rax, rcx
  00127	48 89 44 24 50	 mov	 QWORD PTR _Count$[rsp], rax
$LN5@xsputn:

; 614  :                 }
; 615  : 
; 616  :                 return _Start_count - _Count;

  0012c	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00131	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Start_count$1[rsp]
  00136	48 2b c8	 sub	 rcx, rax
  00139	48 8b c1	 mov	 rax, rcx
$LN1@xsputn:

; 617  :             }
; 618  :         else { // non-chars always get element-by-element processing
; 619  :             return _Mysb::xsputn(_Ptr, _Count);
; 620  :         }
; 621  :     }

  0013c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00140	5f		 pop	 rdi
  00141	c3		 ret	 0
?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::xsputn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
_TEXT	SEGMENT
_Count_s$5 = 40
_Start_count$6 = 56
_Available$7 = 72
_Read_size$8 = 88
_Read_size$9 = 96
_Actual_read$10 = 104
this$ = 128
_Ptr$ = 136
_Count$ = 144
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn, COMDAT

; 541  :     virtual streamsize __CLR_OR_THIS_CALL xsgetn(_Elem* _Ptr, streamsize _Count) override {

$LN11:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 542  :         // get _Count characters from stream
; 543  :         if
; 544  :             _CONSTEXPR_IF(sizeof(_Elem) == 1) {
; 545  :                 if (_Count <= 0) {

  0002b	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR _Count$[rsp], 0
  00034	7f 07		 jg	 SHORT $LN4@xsgetn

; 546  :                     return 0;

  00036	33 c0		 xor	 eax, eax
  00038	e9 e8 01 00 00	 jmp	 $LN1@xsgetn
$LN4@xsgetn:

; 547  :                 }
; 548  : 
; 549  :                 if (_Pcvt) { // if we need a nontrivial codecvt transform, do the default expensive thing

  0003d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  0004a	74 23		 je	 SHORT $LN5@xsgetn

; 550  :                     return _Mysb::xsgetn(_Ptr, _Count);

  0004c	4c 8b 84 24 90
	00 00 00	 mov	 r8, QWORD PTR _Count$[rsp]
  00054	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0005c	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00064	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
  0006a	e9 b6 01 00 00	 jmp	 $LN1@xsgetn
$LN5@xsgetn:

; 551  :                 }
; 552  : 
; 553  :                 // assuming this is OK because _Ptr + _Count must be valid
; 554  :                 auto _Count_s           = static_cast<size_t>(_Count);

  0006f	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  00077	48 89 44 24 28	 mov	 QWORD PTR _Count_s$5[rsp], rax

; 555  :                 const auto _Start_count = _Count;

  0007c	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  00084	48 89 44 24 38	 mov	 QWORD PTR _Start_count$6[rsp], rax

; 556  :                 const auto _Available   = static_cast<size_t>(_Mysb::_Gnavail());

  00089	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00091	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ
  00097	48 89 44 24 48	 mov	 QWORD PTR _Available$7[rsp], rax

; 557  :                 if (0 < _Available) { // copy from get area

  0009c	48 83 7c 24 48
	00		 cmp	 QWORD PTR _Available$7[rsp], 0
  000a2	76 7c		 jbe	 SHORT $LN6@xsgetn

; 558  :                     const auto _Read_size = _Min_value(_Count_s, _Available);

  000a4	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Available$7[rsp]
  000a9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Count_s$5[rsp]
  000ae	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  000b3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b6	48 89 44 24 58	 mov	 QWORD PTR _Read_size$8[rsp], rax

; 559  :                     _Traits::copy(_Ptr, _Mysb::gptr(), _Read_size);

  000bb	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000c9	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Read_size$8[rsp]
  000ce	48 8b d0	 mov	 rdx, rax
  000d1	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000d9	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 560  :                     _Ptr += _Read_size;

  000de	48 8b 44 24 58	 mov	 rax, QWORD PTR _Read_size$8[rsp]
  000e3	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000eb	48 03 c8	 add	 rcx, rax
  000ee	48 8b c1	 mov	 rax, rcx
  000f1	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Ptr$[rsp], rax

; 561  :                     _Count_s -= _Read_size;

  000f9	48 8b 44 24 58	 mov	 rax, QWORD PTR _Read_size$8[rsp]
  000fe	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Count_s$5[rsp]
  00103	48 2b c8	 sub	 rcx, rax
  00106	48 8b c1	 mov	 rax, rcx
  00109	48 89 44 24 28	 mov	 QWORD PTR _Count_s$5[rsp], rax

; 562  :                     _Mysb::gbump(static_cast<int>(_Read_size));

  0010e	8b 54 24 58	 mov	 edx, DWORD PTR _Read_size$8[rsp]
  00112	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0011a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z
$LN6@xsgetn:

; 563  :                 }
; 564  : 
; 565  :                 if (_Myfile) { // open C stream, attempt read

  00120	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00128	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  00130	0f 84 df 00 00
	00		 je	 $LN7@xsgetn

; 566  :                     _Reset_back(); // revert from _Mychar buffer

  00136	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0013e	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 567  :                     // process in 4k - 1 chunks to avoid tripping over fread's clobber-the-end behavior when
; 568  :                     // doing \r\n -> \n translation
; 569  :                     constexpr size_t _Read_size = 4095; // _INTERNAL_BUFSIZ - 1

  00143	48 c7 44 24 60
	ff 0f 00 00	 mov	 QWORD PTR _Read_size$9[rsp], 4095 ; 00000fffH
$LN2@xsgetn:

; 570  :                     while (_Read_size < _Count_s) {

  0014c	48 81 7c 24 28
	ff 0f 00 00	 cmp	 QWORD PTR _Count_s$5[rsp], 4095 ; 00000fffH
  00155	76 7f		 jbe	 SHORT $LN3@xsgetn

; 571  :                         const auto _Actual_read = _CSTD fread(_Ptr, sizeof(_Elem), _Read_size, _Myfile);

  00157	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0015f	4c 8b 88 80 00
	00 00		 mov	 r9, QWORD PTR [rax+128]
  00166	41 b8 ff 0f 00
	00		 mov	 r8d, 4095		; 00000fffH
  0016c	ba 01 00 00 00	 mov	 edx, 1
  00171	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00179	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fread
  0017f	48 89 44 24 68	 mov	 QWORD PTR _Actual_read$10[rsp], rax

; 572  :                         _Ptr += _Actual_read;

  00184	48 8b 44 24 68	 mov	 rax, QWORD PTR _Actual_read$10[rsp]
  00189	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00191	48 03 c8	 add	 rcx, rax
  00194	48 8b c1	 mov	 rax, rcx
  00197	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Ptr$[rsp], rax

; 573  :                         _Count_s -= _Actual_read;

  0019f	48 8b 44 24 68	 mov	 rax, QWORD PTR _Actual_read$10[rsp]
  001a4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Count_s$5[rsp]
  001a9	48 2b c8	 sub	 rcx, rax
  001ac	48 8b c1	 mov	 rax, rcx
  001af	48 89 44 24 28	 mov	 QWORD PTR _Count_s$5[rsp], rax

; 574  :                         if (_Actual_read != _Read_size) {

  001b4	48 81 7c 24 68
	ff 0f 00 00	 cmp	 QWORD PTR _Actual_read$10[rsp], 4095 ; 00000fffH
  001bd	74 12		 je	 SHORT $LN8@xsgetn

; 575  :                             return static_cast<streamsize>(_Start_count - _Count_s);

  001bf	48 8b 44 24 28	 mov	 rax, QWORD PTR _Count_s$5[rsp]
  001c4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Start_count$6[rsp]
  001c9	48 2b c8	 sub	 rcx, rax
  001cc	48 8b c1	 mov	 rax, rcx
  001cf	eb 54		 jmp	 SHORT $LN1@xsgetn
$LN8@xsgetn:

; 576  :                         }
; 577  :                     }

  001d1	e9 76 ff ff ff	 jmp	 $LN2@xsgetn
$LN3@xsgetn:

; 578  : 
; 579  :                     if (0 < _Count_s) {

  001d6	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Count_s$5[rsp], 0
  001dc	76 37		 jbe	 SHORT $LN9@xsgetn

; 580  :                         _Count_s -= _CSTD fread(_Ptr, sizeof(_Elem), _Count_s, _Myfile);

  001de	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001e6	4c 8b 88 80 00
	00 00		 mov	 r9, QWORD PTR [rax+128]
  001ed	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Count_s$5[rsp]
  001f2	ba 01 00 00 00	 mov	 edx, 1
  001f7	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  001ff	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fread
  00205	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Count_s$5[rsp]
  0020a	48 2b c8	 sub	 rcx, rax
  0020d	48 8b c1	 mov	 rax, rcx
  00210	48 89 44 24 28	 mov	 QWORD PTR _Count_s$5[rsp], rax
$LN9@xsgetn:
$LN7@xsgetn:

; 581  :                     }
; 582  :                 }
; 583  : 
; 584  :                 return static_cast<streamsize>(_Start_count - _Count_s);

  00215	48 8b 44 24 28	 mov	 rax, QWORD PTR _Count_s$5[rsp]
  0021a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Start_count$6[rsp]
  0021f	48 2b c8	 sub	 rcx, rax
  00222	48 8b c1	 mov	 rax, rcx
$LN1@xsgetn:

; 585  :             }
; 586  :         else { // non-chars always get element-by-element processing
; 587  :             return _Mysb::xsgetn(_Ptr, _Count);
; 588  :         }
; 589  :     }

  00225	48 8b f8	 mov	 rdi, rax
  00228	48 8b cc	 mov	 rcx, rsp
  0022b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcFrameData
  00232	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00237	48 8b c7	 mov	 rax, rdi
  0023a	48 83 c4 70	 add	 rsp, 112		; 00000070H
  0023e	5f		 pop	 rdi
  0023f	c3		 ret	 0
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
_TEXT	SEGMENT
_Ch$8 = 68
_Str$ = 104
_Src$9 = 168
_Meta$10 = 180
_Ch$11 = 196
_Dest$12 = 232
_Nleft$13 = 248
$T14 = 264
$T15 = 268
$T16 = 272
$T17 = 276
tv76 = 280
tv139 = 288
tv154 = 296
tv159 = 304
tv162 = 312
tv169 = 320
tv172 = 328
__$ArrayPad$ = 336
this$ = 368
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::uflow, COMDAT

; 483  :     virtual int_type __CLR_OR_THIS_CALL uflow() { // get an element from stream, point past it

$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec 60 01
	00 00		 sub	 rsp, 352		; 00000160H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR [rsp+368]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 484  :         if (_Mysb::gptr() && _Mysb::gptr() < _Mysb::egptr()) {

  00036	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0003e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00044	48 85 c0	 test	 rax, rax
  00047	74 4c		 je	 SHORT $LN9@uflow
  00049	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00051	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00057	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR tv76[rsp], rax
  0005f	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00067	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0006d	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR tv76[rsp]
  00075	48 3b c8	 cmp	 rcx, rax
  00078	73 1b		 jae	 SHORT $LN9@uflow

; 485  :             return _Traits::to_int_type(*_Mysb::_Gninc()); // return buffered

  0007a	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00082	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  00090	e9 0f 03 00 00	 jmp	 $LN1@uflow
$LN9@uflow:

; 486  :         }
; 487  : 
; 488  :         if (!_Myfile) {

  00095	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  000a5	75 0a		 jne	 SHORT $LN10@uflow

; 489  :             return _Traits::eof(); // no open C stream, fail

  000a7	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  000ac	e9 f3 02 00 00	 jmp	 $LN1@uflow
$LN10@uflow:

; 490  :         }
; 491  : 
; 492  :         _Reset_back(); // revert from _Mychar buffer

  000b1	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b9	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 493  :         if (!_Pcvt) { // no codecvt facet, just get it

  000be	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000c6	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  000cb	75 4b		 jne	 SHORT $LN11@uflow

; 494  :             _Elem _Ch;
; 495  :             return _Fgetc(_Ch, _Myfile) ? _Traits::to_int_type(_Ch) : _Traits::eof();

  000cd	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000d5	48 8b 90 80 00
	00 00		 mov	 rdx, QWORD PTR [rax+128]
  000dc	48 8d 4c 24 44	 lea	 rcx, QWORD PTR _Ch$8[rsp]
  000e1	e8 00 00 00 00	 call	 ??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z ; std::_Fgetc<char>
  000e6	0f b6 c0	 movzx	 eax, al
  000e9	85 c0		 test	 eax, eax
  000eb	74 13		 je	 SHORT $LN18@uflow
  000ed	48 8d 4c 24 44	 lea	 rcx, QWORD PTR _Ch$8[rsp]
  000f2	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  000f7	89 84 24 20 01
	00 00		 mov	 DWORD PTR tv139[rsp], eax
  000fe	eb 0c		 jmp	 SHORT $LN19@uflow
$LN18@uflow:
  00100	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00105	89 84 24 20 01
	00 00		 mov	 DWORD PTR tv139[rsp], eax
$LN19@uflow:
  0010c	8b 84 24 20 01
	00 00		 mov	 eax, DWORD PTR tv139[rsp]
  00113	e9 8c 02 00 00	 jmp	 $LN1@uflow
$LN11@uflow:

; 496  :         }
; 497  : 
; 498  :         // build string until codecvt succeeds
; 499  :         string _Str;

  00118	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  0011d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00122	90		 npad	 1
$LN2@uflow:

; 500  : 
; 501  :         for (;;) { // get using codecvt facet
; 502  :             const char* _Src;
; 503  :             int _Meta = _CSTD fgetc(_Myfile);

  00123	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0012b	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00132	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fgetc
  00138	89 84 24 b4 00
	00 00		 mov	 DWORD PTR _Meta$10[rsp], eax

; 504  : 
; 505  :             if (_Meta == EOF) {

  0013f	83 bc 24 b4 00
	00 00 ff	 cmp	 DWORD PTR _Meta$10[rsp], -1
  00147	75 22		 jne	 SHORT $LN12@uflow

; 506  :                 return _Traits::eof(); // partial char?

  00149	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0014e	89 84 24 08 01
	00 00		 mov	 DWORD PTR $T14[rsp], eax
  00155	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  0015a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0015f	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR $T14[rsp]
  00166	e9 39 02 00 00	 jmp	 $LN1@uflow
$LN12@uflow:

; 507  :             }
; 508  : 
; 509  :             _Str.push_back(static_cast<char>(_Meta)); // append byte and convert

  0016b	0f b6 94 24 b4
	00 00 00	 movzx	 edx, BYTE PTR _Meta$10[rsp]
  00173	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00178	e8 00 00 00 00	 call	 ?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back

; 510  : 
; 511  :             _Elem _Ch;
; 512  :             _Elem* _Dest;
; 513  :             switch (_Pcvt->in(_State, _Str.data(), _Str.data() + _Str.size(), _Src, &_Ch, &_Ch + 1,

  0017d	48 8d 84 24 c5
	00 00 00	 lea	 rax, QWORD PTR _Ch$11[rsp+1]
  00185	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR tv154[rsp], rax
  0018d	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00192	e8 00 00 00 00	 call	 ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
  00197	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR tv159[rsp], rax
  0019f	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  001a4	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  001a9	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR tv159[rsp]
  001b1	48 03 c8	 add	 rcx, rax
  001b4	48 8b c1	 mov	 rax, rcx
  001b7	48 89 84 24 38
	01 00 00	 mov	 QWORD PTR tv162[rsp], rax
  001bf	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  001c4	e8 00 00 00 00	 call	 ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
  001c9	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001d1	48 83 c1 74	 add	 rcx, 116		; 00000074H
  001d5	48 8d 94 24 e8
	00 00 00	 lea	 rdx, QWORD PTR _Dest$12[rsp]
  001dd	48 89 54 24 38	 mov	 QWORD PTR [rsp+56], rdx
  001e2	48 8b 94 24 28
	01 00 00	 mov	 rdx, QWORD PTR tv154[rsp]
  001ea	48 89 54 24 30	 mov	 QWORD PTR [rsp+48], rdx
  001ef	48 8d 94 24 c4
	00 00 00	 lea	 rdx, QWORD PTR _Ch$11[rsp]
  001f7	48 89 54 24 28	 mov	 QWORD PTR [rsp+40], rdx
  001fc	48 8d 94 24 a8
	00 00 00	 lea	 rdx, QWORD PTR _Src$9[rsp]
  00204	48 89 54 24 20	 mov	 QWORD PTR [rsp+32], rdx
  00209	48 8b 94 24 38
	01 00 00	 mov	 rdx, QWORD PTR tv162[rsp]
  00211	4c 8b ca	 mov	 r9, rdx
  00214	4c 8b c0	 mov	 r8, rax
  00217	48 8b d1	 mov	 rdx, rcx
  0021a	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00222	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
  00226	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z
  0022c	89 84 24 40 01
	00 00		 mov	 DWORD PTR tv169[rsp], eax
  00233	83 bc 24 40 01
	00 00 00	 cmp	 DWORD PTR tv169[rsp], 0
  0023b	0f 8c 34 01 00
	00		 jl	 $LN16@uflow
  00241	83 bc 24 40 01
	00 00 01	 cmp	 DWORD PTR tv169[rsp], 1
  00249	7e 13		 jle	 SHORT $LN13@uflow
  0024b	83 bc 24 40 01
	00 00 03	 cmp	 DWORD PTR tv169[rsp], 3
  00253	0f 84 f5 00 00
	00		 je	 $LN15@uflow
  00259	e9 17 01 00 00	 jmp	 $LN16@uflow
$LN13@uflow:

; 514  :                 _Dest)) { // test result of converting one element
; 515  :             case codecvt_base::partial:
; 516  :             case codecvt_base::ok:
; 517  :                 if (_Dest != &_Ch) { // got an element, put back excess and deliver it

  0025e	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR _Ch$11[rsp]
  00266	48 39 84 24 e8
	00 00 00	 cmp	 QWORD PTR _Dest$12[rsp], rax
  0026e	0f 84 b1 00 00
	00		 je	 $LN14@uflow

; 518  :                     auto _Nleft = _Str.data() + _Str.size() - _Src;

  00274	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00279	e8 00 00 00 00	 call	 ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
  0027e	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR tv172[rsp], rax
  00286	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  0028b	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00290	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR tv172[rsp]
  00298	48 03 c8	 add	 rcx, rax
  0029b	48 8b c1	 mov	 rax, rcx
  0029e	48 2b 84 24 a8
	00 00 00	 sub	 rax, QWORD PTR _Src$9[rsp]
  002a6	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR _Nleft$13[rsp], rax
$LN7@uflow:

; 519  :                     while (0 < _Nleft) {

  002ae	48 83 bc 24 f8
	00 00 00 00	 cmp	 QWORD PTR _Nleft$13[rsp], 0
  002b7	7e 45		 jle	 SHORT $LN8@uflow

; 520  :                         _CSTD ungetc(_Src[--_Nleft], _Myfile);

  002b9	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR _Nleft$13[rsp]
  002c1	48 ff c8	 dec	 rax
  002c4	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR _Nleft$13[rsp], rax
  002cc	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR _Nleft$13[rsp]
  002d4	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR _Src$9[rsp]
  002dc	48 03 c8	 add	 rcx, rax
  002df	48 8b c1	 mov	 rax, rcx
  002e2	0f be 00	 movsx	 eax, BYTE PTR [rax]
  002e5	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002ed	48 8b 91 80 00
	00 00		 mov	 rdx, QWORD PTR [rcx+128]
  002f4	8b c8		 mov	 ecx, eax
  002f6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ungetc

; 521  :                     }

  002fc	eb b0		 jmp	 SHORT $LN7@uflow
$LN8@uflow:

; 522  : 
; 523  :                     return _Traits::to_int_type(_Ch);

  002fe	48 8d 8c 24 c4
	00 00 00	 lea	 rcx, QWORD PTR _Ch$11[rsp]
  00306	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  0030b	89 84 24 0c 01
	00 00		 mov	 DWORD PTR $T15[rsp], eax
  00312	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00317	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0031c	8b 84 24 0c 01
	00 00		 mov	 eax, DWORD PTR $T15[rsp]
  00323	eb 7f		 jmp	 SHORT $LN1@uflow
$LN14@uflow:

; 524  :                 }
; 525  : 
; 526  :                 _Str.erase(0, static_cast<size_t>(_Src - _Str.data())); // partial, discard used input

  00325	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  0032a	e8 00 00 00 00	 call	 ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
  0032f	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR _Src$9[rsp]
  00337	48 2b c8	 sub	 rcx, rax
  0033a	48 8b c1	 mov	 rax, rcx
  0033d	4c 8b c0	 mov	 r8, rax
  00340	33 d2		 xor	 edx, edx
  00342	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00347	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 527  :                 break;

  0034c	eb 46		 jmp	 SHORT $LN5@uflow
$LN15@uflow:

; 528  : 
; 529  :             case codecvt_base::noconv:
; 530  :                 // noconv is only possible if _Elem is char, so we can use it directly
; 531  :                 return static_cast<int_type>(_Str.front());

  0034e	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00353	e8 00 00 00 00	 call	 ?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front
  00358	0f be 00	 movsx	 eax, BYTE PTR [rax]
  0035b	89 84 24 10 01
	00 00		 mov	 DWORD PTR $T16[rsp], eax
  00362	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00367	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0036c	8b 84 24 10 01
	00 00		 mov	 eax, DWORD PTR $T16[rsp]
  00373	eb 2f		 jmp	 SHORT $LN1@uflow
$LN16@uflow:

; 532  : 
; 533  :             default:
; 534  :                 return _Traits::eof(); // conversion failed

  00375	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0037a	89 84 24 14 01
	00 00		 mov	 DWORD PTR $T17[rsp], eax
  00381	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00386	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0038b	8b 84 24 14 01
	00 00		 mov	 eax, DWORD PTR $T17[rsp]
  00392	eb 10		 jmp	 SHORT $LN1@uflow
$LN5@uflow:

; 535  :             }
; 536  :         }

  00394	e9 8a fd ff ff	 jmp	 $LN2@uflow

; 537  :     }

  00399	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  0039e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003a3	90		 npad	 1
$LN1@uflow:
  003a4	48 8b f8	 mov	 rdi, rax
  003a7	48 8b cc	 mov	 rcx, rsp
  003aa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcFrameData
  003b1	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  003b6	48 8b c7	 mov	 rax, rdi
  003b9	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  003c1	48 33 cc	 xor	 rcx, rsp
  003c4	e8 00 00 00 00	 call	 __security_check_cookie
  003c9	48 81 c4 60 01
	00 00		 add	 rsp, 352		; 00000160H
  003d0	5f		 pop	 rdi
  003d1	c3		 ret	 0
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::uflow
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ch$8 = 68
_Str$ = 104
_Src$9 = 168
_Meta$10 = 180
_Ch$11 = 196
_Dest$12 = 232
_Nleft$13 = 248
$T14 = 264
$T15 = 268
$T16 = 272
$T17 = 276
tv76 = 280
tv139 = 288
tv154 = 296
tv159 = 304
tv162 = 312
tv169 = 320
tv172 = 328
__$ArrayPad$ = 336
this$ = 368
?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::uflow'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 68	 lea	 rcx, QWORD PTR _Str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::uflow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Ch$8 = 68
_Str$ = 104
_Src$9 = 168
_Meta$10 = 180
_Ch$11 = 196
_Dest$12 = 232
_Nleft$13 = 248
$T14 = 264
$T15 = 268
$T16 = 272
$T17 = 276
tv76 = 280
tv139 = 288
tv154 = 296
tv159 = 304
tv162 = 312
tv169 = 320
tv172 = 328
__$ArrayPad$ = 336
this$ = 368
?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::uflow'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 68	 lea	 rcx, QWORD PTR _Str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::uflow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
_TEXT	SEGMENT
_Meta$ = 36
$T4 = 52
tv76 = 56
this$ = 80
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::underflow, COMDAT

; 471  :     virtual int_type __CLR_OR_THIS_CALL underflow() { // get an element from stream, but don't point past it

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 472  :         int_type _Meta;
; 473  :         if (_Mysb::gptr() && _Mysb::gptr() < _Mysb::egptr()) {

  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00029	48 85 c0	 test	 rax, rax
  0002c	74 3c		 je	 SHORT $LN2@underflow
  0002e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00039	48 89 44 24 38	 mov	 QWORD PTR tv76[rsp], rax
  0003e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00043	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00049	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv76[rsp]
  0004e	48 3b c8	 cmp	 rcx, rax
  00051	73 17		 jae	 SHORT $LN2@underflow

; 474  :             return _Traits::to_int_type(*_Mysb::gptr()); // return buffered

  00053	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00058	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0005e	48 8b c8	 mov	 rcx, rax
  00061	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  00066	eb 55		 jmp	 SHORT $LN1@underflow
  00068	eb 53		 jmp	 SHORT $LN3@underflow
$LN2@underflow:

; 475  :         } else if (_Traits::eq_int_type(_Traits::eof(), _Meta = uflow())) {

  0006a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00072	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00077	ff 50 38	 call	 QWORD PTR [rax+56]
  0007a	89 44 24 24	 mov	 DWORD PTR _Meta$[rsp], eax
  0007e	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00083	89 44 24 34	 mov	 DWORD PTR $T4[rsp], eax
  00087	48 8d 54 24 24	 lea	 rdx, QWORD PTR _Meta$[rsp]
  0008c	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $T4[rsp]
  00091	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00096	0f b6 c0	 movzx	 eax, al
  00099	85 c0		 test	 eax, eax
  0009b	74 08		 je	 SHORT $LN4@underflow

; 476  :             return _Meta; // uflow failed, return EOF

  0009d	8b 44 24 24	 mov	 eax, DWORD PTR _Meta$[rsp]
  000a1	eb 1a		 jmp	 SHORT $LN1@underflow

; 477  :         } else { // get a char, don't point past it

  000a3	eb 18		 jmp	 SHORT $LN5@underflow
$LN4@underflow:

; 478  :             pbackfail(_Meta);

  000a5	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	8b 54 24 24	 mov	 edx, DWORD PTR _Meta$[rsp]
  000b1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000b6	ff 50 20	 call	 QWORD PTR [rax+32]

; 479  :             return _Meta;

  000b9	8b 44 24 24	 mov	 eax, DWORD PTR _Meta$[rsp]
$LN5@underflow:
$LN3@underflow:
$LN1@underflow:

; 480  :         }
; 481  :     }

  000bd	48 8b f8	 mov	 rdi, rax
  000c0	48 8b cc	 mov	 rcx, rsp
  000c3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcFrameData
  000ca	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cf	48 8b c7	 mov	 rax, rdi
  000d2	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d6	5f		 pop	 rdi
  000d7	c3		 ret	 0
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 36
$T3 = 40
$T4 = 44
tv76 = 48
this$ = 80
_Meta$ = 88
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail, COMDAT

; 451  :     virtual int_type __CLR_OR_THIS_CALL pbackfail(int_type _Meta = _Traits::eof()) { // put an element back to stream

$LN13:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 10 00 00 00	 mov	 ecx, 16
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 452  :         if (_Mysb::gptr() && _Mysb::eback() < _Mysb::gptr()
; 453  :             && (_Traits::eq_int_type(_Traits::eof(), _Meta)

  00022	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00027	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0002d	48 85 c0	 test	 rax, rax
  00030	0f 84 9c 00 00
	00		 je	 $LN2@pbackfail
  00036	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00041	48 89 44 24 30	 mov	 QWORD PTR tv76[rsp], rax
  00046	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00051	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv76[rsp]
  00056	48 3b c8	 cmp	 rcx, rax
  00059	73 77		 jae	 SHORT $LN2@pbackfail
  0005b	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00060	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00064	48 8d 54 24 58	 lea	 rdx, QWORD PTR _Meta$[rsp]
  00069	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0006e	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00073	0f b6 c0	 movzx	 eax, al
  00076	85 c0		 test	 eax, eax
  00078	75 39		 jne	 SHORT $LN4@pbackfail
  0007a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0007f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00085	b9 01 00 00 00	 mov	 ecx, 1
  0008a	48 6b c9 ff	 imul	 rcx, rcx, -1
  0008e	48 03 c1	 add	 rax, rcx
  00091	48 8b c8	 mov	 rcx, rax
  00094	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  00099	89 44 24 24	 mov	 DWORD PTR $T2[rsp], eax
  0009d	48 8d 54 24 58	 lea	 rdx, QWORD PTR _Meta$[rsp]
  000a2	48 8d 4c 24 24	 lea	 rcx, QWORD PTR $T2[rsp]
  000a7	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  000ac	0f b6 c0	 movzx	 eax, al
  000af	85 c0		 test	 eax, eax
  000b1	74 1f		 je	 SHORT $LN2@pbackfail
$LN4@pbackfail:

; 454  :                 || _Traits::eq_int_type(_Traits::to_int_type(_Mysb::gptr()[-1]),
; 455  :                     _Meta))) { // just back up position
; 456  :             _Mysb::_Gndec();

  000b3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000b8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ

; 457  :             return _Traits::not_eof(_Meta);

  000be	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Meta$[rsp]
  000c3	e8 00 00 00 00	 call	 ?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
  000c8	e9 c3 00 00 00	 jmp	 $LN1@pbackfail
  000cd	e9 be 00 00 00	 jmp	 $LN3@pbackfail
$LN2@pbackfail:

; 458  :         } else if (!_Myfile || _Traits::eq_int_type(_Traits::eof(), _Meta)) {

  000d2	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000d7	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  000df	74 1f		 je	 SHORT $LN7@pbackfail
  000e1	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  000e6	89 44 24 28	 mov	 DWORD PTR $T3[rsp], eax
  000ea	48 8d 54 24 58	 lea	 rdx, QWORD PTR _Meta$[rsp]
  000ef	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T3[rsp]
  000f4	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  000f9	0f b6 c0	 movzx	 eax, al
  000fc	85 c0		 test	 eax, eax
  000fe	74 0f		 je	 SHORT $LN5@pbackfail
$LN7@pbackfail:

; 459  :             return _Traits::eof(); // no open C stream or EOF, fail

  00100	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00105	e9 86 00 00 00	 jmp	 $LN1@pbackfail
  0010a	e9 81 00 00 00	 jmp	 $LN6@pbackfail
$LN5@pbackfail:

; 460  :         } else if (!_Pcvt && _Ungetc(_Traits::to_char_type(_Meta), _Myfile)) {

  0010f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00114	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00119	75 33		 jne	 SHORT $LN8@pbackfail
  0011b	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Meta$[rsp]
  00120	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  00125	88 44 24 2c	 mov	 BYTE PTR $T4[rsp], al
  00129	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0012e	48 8b 90 80 00
	00 00		 mov	 rdx, QWORD PTR [rax+128]
  00135	48 8d 4c 24 2c	 lea	 rcx, QWORD PTR $T4[rsp]
  0013a	e8 00 00 00 00	 call	 ??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z ; std::_Ungetc<char>
  0013f	0f b6 c0	 movzx	 eax, al
  00142	85 c0		 test	 eax, eax
  00144	74 08		 je	 SHORT $LN8@pbackfail

; 461  :             return _Meta; // no facet and unget succeeded, return

  00146	8b 44 24 58	 mov	 eax, DWORD PTR _Meta$[rsp]
  0014a	eb 44		 jmp	 SHORT $LN1@pbackfail
  0014c	eb 42		 jmp	 SHORT $LN9@pbackfail
$LN8@pbackfail:

; 462  :         } else if (_Mysb::gptr() != &_Mychar) { // putback to _Mychar

  0014e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00153	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00159	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0015e	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00162	48 3b c1	 cmp	 rax, rcx
  00165	74 24		 je	 SHORT $LN10@pbackfail

; 463  :             _Mychar = _Traits::to_char_type(_Meta);

  00167	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Meta$[rsp]
  0016c	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  00171	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00176	88 41 70	 mov	 BYTE PTR [rcx+112], al

; 464  :             _Set_back(); // switch to _Mychar buffer

  00179	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0017e	e8 00 00 00 00	 call	 ?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back

; 465  :             return _Meta;

  00183	8b 44 24 58	 mov	 eax, DWORD PTR _Meta$[rsp]
  00187	eb 07		 jmp	 SHORT $LN1@pbackfail

; 466  :         } else {

  00189	eb 05		 jmp	 SHORT $LN11@pbackfail
$LN10@pbackfail:

; 467  :             return _Traits::eof(); // nowhere to put back

  0018b	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
$LN11@pbackfail:
$LN9@pbackfail:
$LN6@pbackfail:
$LN3@pbackfail:
$LN1@pbackfail:

; 468  :         }
; 469  :     }

  00190	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00194	5f		 pop	 rdi
  00195	c3		 ret	 0
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
_TEXT	SEGMENT
_Codecvt_temp_buf$ = 64
_Str$ = 88
_Ch$ = 148
_Src$ = 184
_Dest$ = 216
_Count$7 = 232
$T8 = 248
tv84 = 256
tv178 = 264
tv147 = 268
tv163 = 272
tv184 = 276
__$ArrayPad$ = 280
this$ = 304
_Meta$ = 312
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::overflow, COMDAT

; 400  :     virtual int_type __CLR_OR_THIS_CALL overflow(int_type _Meta = _Traits::eof()) { // put an element to stream

$LN18:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 81 ec 20 01
	00 00		 sub	 rsp, 288		; 00000120H
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR [rsp+304]
  00028	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002f	48 33 c4	 xor	 rax, rsp
  00032	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 401  :         if (_Traits::eq_int_type(_Traits::eof(), _Meta)) {

  0003a	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0003f	89 84 24 f8 00
	00 00		 mov	 DWORD PTR $T8[rsp], eax
  00046	48 8d 94 24 38
	01 00 00	 lea	 rdx, QWORD PTR _Meta$[rsp]
  0004e	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  00056	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  0005b	0f b6 c0	 movzx	 eax, al
  0005e	85 c0		 test	 eax, eax
  00060	74 12		 je	 SHORT $LN4@overflow

; 402  :             return _Traits::not_eof(_Meta); // EOF, return success code

  00062	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR _Meta$[rsp]
  0006a	e8 00 00 00 00	 call	 ?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
  0006f	e9 8e 02 00 00	 jmp	 $LN1@overflow
$LN4@overflow:

; 403  :         }
; 404  : 
; 405  :         if (_Mysb::pptr() && _Mysb::pptr() < _Mysb::epptr()) { // room in buffer, store it

  00074	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00082	48 85 c0	 test	 rax, rax
  00085	74 69		 je	 SHORT $LN5@overflow
  00087	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0008f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00095	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv84[rsp], rax
  0009d	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000ab	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR tv84[rsp]
  000b3	48 3b c8	 cmp	 rcx, rax
  000b6	73 38		 jae	 SHORT $LN5@overflow

; 406  :             *_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

  000b8	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR _Meta$[rsp]
  000c0	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  000c5	88 84 24 08 01
	00 00		 mov	 BYTE PTR tv178[rsp], al
  000cc	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
  000da	0f b6 8c 24 08
	01 00 00	 movzx	 ecx, BYTE PTR tv178[rsp]
  000e2	88 08		 mov	 BYTE PTR [rax], cl

; 407  :             return _Meta;

  000e4	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR _Meta$[rsp]
  000eb	e9 12 02 00 00	 jmp	 $LN1@overflow
$LN5@overflow:

; 408  :         }
; 409  : 
; 410  :         if (!_Myfile) {

  000f0	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000f8	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  00100	75 0a		 jne	 SHORT $LN6@overflow

; 411  :             return _Traits::eof(); // no open C stream, fail

  00102	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00107	e9 f6 01 00 00	 jmp	 $LN1@overflow
$LN6@overflow:

; 412  :         }
; 413  : 
; 414  :         _Reset_back(); // revert from _Mychar buffer

  0010c	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00114	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 415  :         if (!_Pcvt) { // no codecvt facet, put as is

  00119	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00121	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00126	75 53		 jne	 SHORT $LN7@overflow

; 416  :             return _Fputc(_Traits::to_char_type(_Meta), _Myfile) ? _Meta : _Traits::eof();

  00128	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR _Meta$[rsp]
  00130	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  00135	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0013d	48 8b 91 80 00
	00 00		 mov	 rdx, QWORD PTR [rcx+128]
  00144	0f b6 c8	 movzx	 ecx, al
  00147	e8 00 00 00 00	 call	 ??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z ; std::_Fputc<char>
  0014c	0f b6 c0	 movzx	 eax, al
  0014f	85 c0		 test	 eax, eax
  00151	74 10		 je	 SHORT $LN14@overflow
  00153	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR _Meta$[rsp]
  0015a	89 84 24 0c 01
	00 00		 mov	 DWORD PTR tv147[rsp], eax
  00161	eb 0c		 jmp	 SHORT $LN15@overflow
$LN14@overflow:
  00163	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00168	89 84 24 0c 01
	00 00		 mov	 DWORD PTR tv147[rsp], eax
$LN15@overflow:
  0016f	8b 84 24 0c 01
	00 00		 mov	 eax, DWORD PTR tv147[rsp]
  00176	e9 87 01 00 00	 jmp	 $LN1@overflow
$LN7@overflow:

; 417  :         }
; 418  : 
; 419  :         // put using codecvt facet
; 420  :         constexpr size_t _Codecvt_temp_buf = 32;

  0017b	48 c7 44 24 40
	20 00 00 00	 mov	 QWORD PTR _Codecvt_temp_buf$[rsp], 32 ; 00000020H

; 421  :         char _Str[_Codecvt_temp_buf];
; 422  :         const _Elem _Ch = _Traits::to_char_type(_Meta);

  00184	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR _Meta$[rsp]
  0018c	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  00191	88 84 24 94 00
	00 00		 mov	 BYTE PTR _Ch$[rsp], al

; 423  :         const _Elem* _Src;
; 424  :         char* _Dest;
; 425  :         switch (_Pcvt->out(_State, &_Ch, &_Ch + 1, _Src, _Str, _Str + _Codecvt_temp_buf,

  00198	48 8d 44 24 78	 lea	 rax, QWORD PTR _Str$[rsp+32]
  0019d	48 8d 8c 24 95
	00 00 00	 lea	 rcx, QWORD PTR _Ch$[rsp+1]
  001a5	48 8b 94 24 30
	01 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  001ad	48 83 c2 74	 add	 rdx, 116		; 00000074H
  001b1	4c 8d 84 24 d8
	00 00 00	 lea	 r8, QWORD PTR _Dest$[rsp]
  001b9	4c 89 44 24 38	 mov	 QWORD PTR [rsp+56], r8
  001be	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  001c3	48 8d 44 24 58	 lea	 rax, QWORD PTR _Str$[rsp]
  001c8	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  001cd	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR _Src$[rsp]
  001d5	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001da	4c 8b c9	 mov	 r9, rcx
  001dd	4c 8d 84 24 94
	00 00 00	 lea	 r8, QWORD PTR _Ch$[rsp]
  001e5	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001ed	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
  001f1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z
  001f7	89 84 24 10 01
	00 00		 mov	 DWORD PTR tv163[rsp], eax
  001fe	83 bc 24 10 01
	00 00 00	 cmp	 DWORD PTR tv163[rsp], 0
  00206	0f 8c f1 00 00
	00		 jl	 $LN12@overflow
  0020c	83 bc 24 10 01
	00 00 01	 cmp	 DWORD PTR tv163[rsp], 1
  00214	7e 13		 jle	 SHORT $LN8@overflow
  00216	83 bc 24 10 01
	00 00 03	 cmp	 DWORD PTR tv163[rsp], 3
  0021e	0f 84 91 00 00
	00		 je	 $LN11@overflow
  00224	e9 d4 00 00 00	 jmp	 $LN12@overflow
$LN8@overflow:

; 426  :             _Dest)) { // test result of converting one element
; 427  :         case codecvt_base::partial:
; 428  :         case codecvt_base::ok: { // converted something, try to put it out
; 429  :             const auto _Count = static_cast<size_t>(_Dest - _Str);

  00229	48 8d 44 24 58	 lea	 rax, QWORD PTR _Str$[rsp]
  0022e	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00236	48 2b c8	 sub	 rcx, rax
  00239	48 8b c1	 mov	 rax, rcx
  0023c	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR _Count$7[rsp], rax

; 430  :             if (0 < _Count && _Count != static_cast<size_t>(_CSTD fwrite(_Str, 1, _Count, _Myfile))) {

  00244	48 83 bc 24 e8
	00 00 00 00	 cmp	 QWORD PTR _Count$7[rsp], 0
  0024d	76 38		 jbe	 SHORT $LN9@overflow
  0024f	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00257	4c 8b 88 80 00
	00 00		 mov	 r9, QWORD PTR [rax+128]
  0025e	4c 8b 84 24 e8
	00 00 00	 mov	 r8, QWORD PTR _Count$7[rsp]
  00266	ba 01 00 00 00	 mov	 edx, 1
  0026b	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Str$[rsp]
  00270	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  00276	48 39 84 24 e8
	00 00 00	 cmp	 QWORD PTR _Count$7[rsp], rax
  0027e	74 07		 je	 SHORT $LN9@overflow

; 431  :                 return _Traits::eof(); // write failed

  00280	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00285	eb 7b		 jmp	 SHORT $LN1@overflow
$LN9@overflow:

; 432  :             }
; 433  : 
; 434  :             _Wrotesome = true; // write succeeded

  00287	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0028f	c6 40 71 01	 mov	 BYTE PTR [rax+113], 1

; 435  :             if (_Src != &_Ch) {

  00293	48 8d 84 24 94
	00 00 00	 lea	 rax, QWORD PTR _Ch$[rsp]
  0029b	48 39 84 24 b8
	00 00 00	 cmp	 QWORD PTR _Src$[rsp], rax
  002a3	74 09		 je	 SHORT $LN10@overflow

; 436  :                 return _Meta; // converted whole element

  002a5	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR _Meta$[rsp]
  002ac	eb 54		 jmp	 SHORT $LN1@overflow
$LN10@overflow:

; 437  :             }
; 438  : 
; 439  :             return _Traits::eof(); // conversion failed

  002ae	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  002b3	eb 4d		 jmp	 SHORT $LN1@overflow
$LN11@overflow:

; 440  :         }
; 441  : 
; 442  :         case codecvt_base::noconv:
; 443  :             // no conversion, put as is
; 444  :             return _Fputc(_Ch, _Myfile) ? _Meta : _Traits::eof();

  002b5	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002bd	48 8b 90 80 00
	00 00		 mov	 rdx, QWORD PTR [rax+128]
  002c4	0f b6 8c 24 94
	00 00 00	 movzx	 ecx, BYTE PTR _Ch$[rsp]
  002cc	e8 00 00 00 00	 call	 ??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z ; std::_Fputc<char>
  002d1	0f b6 c0	 movzx	 eax, al
  002d4	85 c0		 test	 eax, eax
  002d6	74 10		 je	 SHORT $LN16@overflow
  002d8	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR _Meta$[rsp]
  002df	89 84 24 14 01
	00 00		 mov	 DWORD PTR tv184[rsp], eax
  002e6	eb 0c		 jmp	 SHORT $LN17@overflow
$LN16@overflow:
  002e8	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  002ed	89 84 24 14 01
	00 00		 mov	 DWORD PTR tv184[rsp], eax
$LN17@overflow:
  002f4	8b 84 24 14 01
	00 00		 mov	 eax, DWORD PTR tv184[rsp]
  002fb	eb 05		 jmp	 SHORT $LN1@overflow
$LN12@overflow:

; 445  : 
; 446  :         default:
; 447  :             return _Traits::eof(); // conversion failed

  002fd	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
$LN1@overflow:

; 448  :         }
; 449  :     }

  00302	48 8b f8	 mov	 rdi, rax
  00305	48 8b cc	 mov	 rcx, rsp
  00308	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcFrameData
  0030f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00314	48 8b c7	 mov	 rax, rdi
  00317	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0031f	48 33 cc	 xor	 rcx, rsp
  00322	e8 00 00 00 00	 call	 __security_check_cookie
  00327	48 81 c4 20 01
	00 00		 add	 rsp, 288		; 00000120H
  0032e	5f		 pop	 rdi
  0032f	c3		 ret	 0
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock, COMDAT

; 393  :     virtual void __CLR_OR_THIS_CALL _Unlock() { // unlock file instead of stream buffer

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 394  :         if (_Myfile) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0002b	74 12		 je	 SHORT $LN2@Unlock

; 395  :             _CSTD _unlock_file(_Myfile);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__unlock_file
$LN2@Unlock:

; 396  :         }
; 397  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Lock, COMDAT

; 387  :     virtual void __CLR_OR_THIS_CALL _Lock() { // lock file instead of stream buffer

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 388  :         if (_Myfile) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0002b	74 12		 je	 SHORT $LN2@Lock

; 389  :             _CSTD _lock_file(_Myfile);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__lock_file
$LN2@Lock:

; 390  :         }
; 391  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ
_TEXT	SEGMENT
_Ans$ = 32
this$ = 64
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::close, COMDAT

; 368  :     basic_filebuf* close() { // close the C stream

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 369  :         basic_filebuf* _Ans;
; 370  :         if (_Myfile) { // put any homing sequence and close file

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0002b	74 45		 je	 SHORT $LN2@close

; 371  :             _Ans = this;

  0002d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _Ans$[rsp], rax

; 372  :             if (!_Endwrite()) {

  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	e8 00 00 00 00	 call	 ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
  00041	0f b6 c0	 movzx	 eax, al
  00044	85 c0		 test	 eax, eax
  00046	75 09		 jne	 SHORT $LN4@close

; 373  :                 _Ans = nullptr;

  00048	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR _Ans$[rsp], 0
$LN4@close:

; 374  :             }
; 375  : 
; 376  :             if (_CSTD fclose(_Myfile) != 0) {

  00051	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0005d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose
  00063	85 c0		 test	 eax, eax
  00065	74 09		 je	 SHORT $LN5@close

; 377  :                 _Ans = nullptr;

  00067	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR _Ans$[rsp], 0
$LN5@close:

; 378  :             }
; 379  :         } else {

  00070	eb 09		 jmp	 SHORT $LN3@close
$LN2@close:

; 380  :             _Ans = nullptr;

  00072	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR _Ans$[rsp], 0
$LN3@close:

; 381  :         }
; 382  : 
; 383  :         _Init(nullptr, _Closefl);

  0007b	41 b8 02 00 00
	00		 mov	 r8d, 2
  00081	33 d2		 xor	 edx, edx
  00083	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00088	e8 00 00 00 00	 call	 ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 384  :         return _Ans;

  0008d	48 8b 44 24 20	 mov	 rax, QWORD PTR _Ans$[rsp]

; 385  :     }

  00092	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00096	5f		 pop	 rdi
  00097	c3		 ret	 0
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
_TEXT	SEGMENT
_File$ = 32
$T1 = 40
tv89 = 56
tv88 = 64
this$ = 96
_Filename$ = 104
_Mode$ = 112
_Prot$ = 120
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::open, COMDAT

; 268  :     basic_filebuf* open(const char* _Filename, ios_base::openmode _Mode, int _Prot = ios_base::_Default_open_prot) {

$LN6:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 269  :         // open a C stream with specified mode
; 270  :         if (_Myfile) {

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0003a	74 04		 je	 SHORT $LN2@open

; 271  :             return nullptr;

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 7f		 jmp	 SHORT $LN1@open
$LN2@open:

; 272  :         }
; 273  : 
; 274  :         const auto _File = _Fiopen(_Filename, _Mode, _Prot);

  00040	44 8b 44 24 78	 mov	 r8d, DWORD PTR _Prot$[rsp]
  00045	8b 54 24 70	 mov	 edx, DWORD PTR _Mode$[rsp]
  00049	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Filename$[rsp]
  0004e	e8 00 00 00 00	 call	 ?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z ; std::_Fiopen
  00053	48 89 44 24 20	 mov	 QWORD PTR _File$[rsp], rax

; 275  :         if (!_File) {

  00058	48 83 7c 24 20
	00		 cmp	 QWORD PTR _File$[rsp], 0
  0005e	75 04		 jne	 SHORT $LN3@open

; 276  :             return nullptr; // open failed

  00060	33 c0		 xor	 eax, eax
  00062	eb 5b		 jmp	 SHORT $LN1@open
$LN3@open:

; 277  :         }
; 278  : 
; 279  :         _Init(_File, _Openfl);

  00064	41 b8 01 00 00
	00		 mov	 r8d, 1
  0006a	48 8b 54 24 20	 mov	 rdx, QWORD PTR _File$[rsp]
  0006f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00074	e8 00 00 00 00	 call	 ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 280  :         _Initcvt(_STD use_facet<_Cvt>(_Mysb::getloc()));

  00079	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0007e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEBA?AVlocale@2@XZ
  00089	48 89 44 24 38	 mov	 QWORD PTR tv89[rsp], rax
  0008e	48 8b 44 24 38	 mov	 rax, QWORD PTR tv89[rsp]
  00093	48 89 44 24 40	 mov	 QWORD PTR tv88[rsp], rax
  00098	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv88[rsp]
  0009d	e8 00 00 00 00	 call	 ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
  000a2	48 8b d0	 mov	 rdx, rax
  000a5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000aa	e8 00 00 00 00	 call	 ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
  000af	90		 npad	 1
  000b0	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp]
  000b5	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale

; 281  :         return this; // open succeeded

  000ba	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
$LN1@open:

; 282  :     }

  000bf	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c3	5f		 pop	 rdi
  000c4	c3		 ret	 0
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::open
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_File$ = 32
$T1 = 40
tv89 = 56
tv88 = 64
this$ = 96
_Filename$ = 104
_Mode$ = 112
_Prot$ = 120
?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::open'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::open'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_File$ = 32
$T1 = 40
tv89 = 56
tv88 = 64
this$ = 96
_Filename$ = 104
_Mode$ = 112
_Prot$ = 120
?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::open'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::open'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >, COMDAT

; 162  :     virtual __CLR_OR_THIS_CALL ~basic_filebuf() noexcept {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 163  :         if (_Myfile) {

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0003a	74 0b		 je	 SHORT $LN2@basic_file

; 164  :             _Reset_back(); // revert from _Mychar buffer

  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
  00046	90		 npad	 1
$LN2@basic_file:

; 165  :         }
; 166  : 
; 167  :         if (_Closef) {

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	0f b6 40 7c	 movzx	 eax, BYTE PTR [rax+124]
  00050	85 c0		 test	 eax, eax
  00052	74 0b		 je	 SHORT $LN3@basic_file

; 168  :             close();

  00054	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00059	e8 00 00 00 00	 call	 ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
  0005e	90		 npad	 1
$LN3@basic_file:

; 169  :         }
; 170  :     }

  0005f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00064	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0006a	90		 npad	 1
  0006b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006f	5f		 pop	 rdi
  00070	c3		 ret	 0
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
_TEXT	SEGMENT
this$ = 48
_File$ = 56
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >, COMDAT

; 158  :     basic_filebuf(FILE* _File = nullptr) : _Mysb() { // construct from pointer to C stream

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
  0002e	90		 npad	 1
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
  0003b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 159  :         _Init(_File, _Newfl);

  0003e	45 33 c0	 xor	 r8d, r8d
  00041	48 8b 54 24 38	 mov	 rdx, QWORD PTR _File$[rsp]
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	e8 00 00 00 00	 call	 ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
  00050	90		 npad	 1

; 160  :     }

  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_File$ = 56
?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_File$ = 56
?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::close, COMDAT

; 1168 :     void close() { // close the C stream

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1169 :         if (!_Filebuffer.close()) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
  0002f	48 85 c0	 test	 rax, rax
  00032	75 28		 jne	 SHORT $LN2@close

; 1170 :             _Myios::setstate(ios_base::failbit);

  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	48 03 c8	 add	 rcx, rax
  00048	48 8b c1	 mov	 rax, rcx
  0004b	45 33 c0	 xor	 r8d, r8d
  0004e	ba 02 00 00 00	 mov	 edx, 2
  00053	48 8b c8	 mov	 rcx, rax
  00056	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
$LN2@close:

; 1171 :         }
; 1172 :     }

  0005c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00060	5f		 pop	 rdi
  00061	c3		 ret	 0
?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ PROC ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >, COMDAT

; 1136 :     virtual __CLR_OR_THIS_CALL ~basic_ofstream() noexcept {}

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 80 58 ff
	ff ff		 mov	 rax, QWORD PTR [rax-168]
  0002a	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
  0003a	48 89 94 01 58
	ff ff ff	 mov	 QWORD PTR [rcx+rax-168], rdx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 8b 80 58 ff
	ff ff		 mov	 rax, QWORD PTR [rax-168]
  0004e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00052	48 2d a8 00 00
	00		 sub	 rax, 168		; 000000a8H
  00058	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	48 8b 89 58 ff
	ff ff		 mov	 rcx, QWORD PTR [rcx-168]
  00064	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  00068	48 8b 54 24 30	 mov	 rdx, QWORD PTR this$[rsp]
  0006d	89 84 0a 54 ff
	ff ff		 mov	 DWORD PTR [rdx+rcx-172], eax
  00074	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 2d a0 00 00
	00		 sub	 rax, 160		; 000000a0H
  0007f	48 8b c8	 mov	 rcx, rax
  00082	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  00087	90		 npad	 1
  00088	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008d	48 2d 98 00 00
	00		 sub	 rax, 152		; 00000098H
  00093	48 8b c8	 mov	 rcx, rax
  00096	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0009c	90		 npad	 1
  0009d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ ENDP ; std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 a8 00
	00 00		 sub	 rcx, 168		; 000000a8H
  0001e	48 83 c1 10	 add	 rcx, 16
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	5f		 pop	 rdi
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
?dtor$0@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 a8 00
	00 00		 sub	 rcx, 168		; 000000a8H
  0001e	48 83 c1 08	 add	 rcx, 8
  00022	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	5f		 pop	 rdi
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?dtor$1@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 a8 00
	00 00		 sub	 rcx, 168		; 000000a8H
  0001e	48 83 c1 10	 add	 rcx, 16
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	5f		 pop	 rdi
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
?dtor$0@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 a8 00
	00 00		 sub	 rcx, 168		; 000000a8H
  0001e	48 83 c1 08	 add	 rcx, 8
  00022	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	5f		 pop	 rdi
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?dtor$1@?0???1?$basic_ofstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::~basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
_TEXT	SEGMENT
this$ = 64
_Str$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >, COMDAT

; 1006 :     explicit basic_ofstream(

$LN4:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1007 :         const string& _Str, ios_base::openmode _Mode = ios_base::out, int _Prot = ios_base::_Default_open_prot)
; 1008 :         : basic_ofstream(_Str.c_str(), _Mode, _Prot) {} // construct with named file and specified mode

  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Str$[rsp]
  00032	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00037	8b 4c 24 60	 mov	 ecx, DWORD PTR $initVBases$[rsp]
  0003b	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  0003f	44 8b 4c 24 58	 mov	 r9d, DWORD PTR _Prot$[rsp]
  00044	44 8b 44 24 50	 mov	 r8d, DWORD PTR _Mode$[rsp]
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
  00056	90		 npad	 1
  00057	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005f	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
  0006f	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx
  00073	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00078	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007b	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0007f	48 2d a8 00 00
	00		 sub	 rax, 168		; 000000a8H
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0008a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0008d	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  00091	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  00096	89 44 0a fc	 mov	 DWORD PTR [rdx+rcx-4], eax
  0009a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a3	5f		 pop	 rdi
  000a4	c3		 ret	 0
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
_Str$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
_Str$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z PROC ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >, COMDAT

; 998  :     explicit basic_ofstream(const char* _Filename, ios_base::openmode _Mode = ios_base::out,

$LN9:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0002d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 999  :         int _Prot = ios_base::_Default_open_prot)
; 1000 :         : _Mybase(_STD addressof(_Filebuffer)) { // construct with named file and specified mode

  00035	83 7c 24 60 00	 cmp	 DWORD PTR $initVBases$[rsp], 0
  0003a	74 2f		 je	 SHORT $LN2@basic_ofst
  0003c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_8?$basic_ofstream@DU?$char_traits@D@std@@@std@@7B@
  00048	48 89 08	 mov	 QWORD PTR [rax], rcx
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  00056	48 8b c8	 mov	 rcx, rax
  00059	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
  0005f	90		 npad	 1
  00060	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00064	83 c8 01	 or	 eax, 1
  00067	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
$LN2@basic_ofst:
  0006b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 83 c0 08	 add	 rax, 8
  00074	48 8b c8	 mov	 rcx, rax
  00077	e8 00 00 00 00	 call	 ??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >
  0007c	45 33 c9	 xor	 r9d, r9d
  0007f	45 33 c0	 xor	 r8d, r8d
  00082	48 8b d0	 mov	 rdx, rax
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0008a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
  00090	90		 npad	 1
  00091	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0009d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
  000a9	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx
  000ad	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000b2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b5	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000b9	48 2d a8 00 00
	00		 sub	 rax, 168		; 000000a8H
  000bf	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000c4	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000c7	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  000cb	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  000d0	89 44 0a fc	 mov	 DWORD PTR [rdx+rcx-4], eax
  000d4	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000d9	48 83 c0 08	 add	 rax, 8
  000dd	33 d2		 xor	 edx, edx
  000df	48 8b c8	 mov	 rcx, rax
  000e2	e8 00 00 00 00	 call	 ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
  000e7	90		 npad	 1

; 1001 :         if (!_Filebuffer.open(_Filename, _Mode | ios_base::out, _Prot)) {

  000e8	8b 44 24 50	 mov	 eax, DWORD PTR _Mode$[rsp]
  000ec	83 c8 02	 or	 eax, 2
  000ef	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000f4	48 83 c1 08	 add	 rcx, 8
  000f8	44 8b 4c 24 58	 mov	 r9d, DWORD PTR _Prot$[rsp]
  000fd	44 8b c0	 mov	 r8d, eax
  00100	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Filename$[rsp]
  00105	e8 00 00 00 00	 call	 ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
  0010a	48 85 c0	 test	 rax, rax
  0010d	75 29		 jne	 SHORT $LN3@basic_ofst

; 1002 :             _Myios::setstate(ios_base::failbit);

  0010f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00114	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00117	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0011b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00120	48 03 c8	 add	 rcx, rax
  00123	48 8b c1	 mov	 rax, rcx
  00126	45 33 c0	 xor	 r8d, r8d
  00129	ba 02 00 00 00	 mov	 edx, 2
  0012e	48 8b c8	 mov	 rcx, rax
  00131	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  00137	90		 npad	 1
$LN3@basic_ofst:

; 1003 :         }
; 1004 :     }

  00138	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0013d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00141	5f		 pop	 rdi
  00142	c3		 ret	 0
??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z ENDP ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 15		 je	 SHORT $LN6@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00025	48 81 c1 a8 00
	00 00		 add	 rcx, 168		; 000000a8H
  0002c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN6@dtor$0:
  00032	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00036	5f		 pop	 rdi
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 10	 add	 rcx, 16
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$2@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 15		 je	 SHORT $LN6@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00025	48 81 c1 a8 00
	00 00		 add	 rcx, 168		; 000000a8H
  0002c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN6@dtor$0:
  00032	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00036	5f		 pop	 rdi
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?dtor$0@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 10	 add	 rcx, 16
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$1@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$2@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA PROC ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA ENDP ; `std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 2d 98 00 00
	00		 sub	 rax, 152		; 00000098H
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  00035	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 18		 je	 SHORT $LN2@scalar
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 2d 98 00 00
	00		 sub	 rax, 152		; 00000098H
  0004b	ba f8 00 00 00	 mov	 edx, 248		; 000000f8H
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 2d 98 00 00
	00		 sub	 rax, 152		; 00000098H
  00063	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 78 00 00 00	 mov	 edx, 120		; 00000078H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z
_TEXT	SEGMENT
_State$ = 0
_Mode$ = 32
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT

; 343  :     static int _Getstate(ios_base::openmode _Mode) { // convert open mode to stream state bits

$LN7:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 344  :         int _State = 0;

  0001c	c7 04 24 00 00
	00 00		 mov	 DWORD PTR _State$[rsp], 0

; 345  :         if (!(_Mode & ios_base::in)) {

  00023	8b 44 24 20	 mov	 eax, DWORD PTR _Mode$[rsp]
  00027	83 e0 01	 and	 eax, 1
  0002a	85 c0		 test	 eax, eax
  0002c	75 09		 jne	 SHORT $LN2@Getstate

; 346  :             _State |= _Noread;

  0002e	8b 04 24	 mov	 eax, DWORD PTR _State$[rsp]
  00031	83 c8 04	 or	 eax, 4
  00034	89 04 24	 mov	 DWORD PTR _State$[rsp], eax
$LN2@Getstate:

; 347  :         }
; 348  : 
; 349  :         if (!(_Mode & ios_base::out)) {

  00037	8b 44 24 20	 mov	 eax, DWORD PTR _Mode$[rsp]
  0003b	83 e0 02	 and	 eax, 2
  0003e	85 c0		 test	 eax, eax
  00040	75 09		 jne	 SHORT $LN3@Getstate

; 350  :             _State |= _Constant;

  00042	8b 04 24	 mov	 eax, DWORD PTR _State$[rsp]
  00045	83 c8 02	 or	 eax, 2
  00048	89 04 24	 mov	 DWORD PTR _State$[rsp], eax
$LN3@Getstate:

; 351  :         }
; 352  : 
; 353  :         if (_Mode & ios_base::app) {

  0004b	8b 44 24 20	 mov	 eax, DWORD PTR _Mode$[rsp]
  0004f	83 e0 08	 and	 eax, 8
  00052	85 c0		 test	 eax, eax
  00054	74 09		 je	 SHORT $LN4@Getstate

; 354  :             _State |= _Append;

  00056	8b 04 24	 mov	 eax, DWORD PTR _State$[rsp]
  00059	83 c8 08	 or	 eax, 8
  0005c	89 04 24	 mov	 DWORD PTR _State$[rsp], eax
$LN4@Getstate:

; 355  :         }
; 356  : 
; 357  :         if (_Mode & ios_base::ate) {

  0005f	8b 44 24 20	 mov	 eax, DWORD PTR _Mode$[rsp]
  00063	83 e0 04	 and	 eax, 4
  00066	85 c0		 test	 eax, eax
  00068	74 09		 je	 SHORT $LN5@Getstate

; 358  :             _State |= _Atend;

  0006a	8b 04 24	 mov	 eax, DWORD PTR _State$[rsp]
  0006d	83 c8 10	 or	 eax, 16
  00070	89 04 24	 mov	 DWORD PTR _State$[rsp], eax
$LN5@Getstate:

; 359  :         }
; 360  : 
; 361  :         return _State;

  00073	8b 04 24	 mov	 eax, DWORD PTR _State$[rsp]

; 362  :     }

  00076	48 83 c4 10	 add	 rsp, 16
  0007a	5f		 pop	 rdi
  0007b	c3		 ret	 0
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
_TEXT	SEGMENT
tv88 = 32
tv95 = 40
this$ = 64
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT

; 323  :     void _Tidy() noexcept { // discard any allocated buffer and clear pointers

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 324  :         if (_Mystate & _Allocated) {

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00026	83 e0 01	 and	 eax, 1
  00029	85 c0		 test	 eax, eax
  0002b	0f 84 80 00 00
	00		 je	 $LN2@Tidy

; 325  :             _Al.deallocate(_Ptr_traits::pointer_to(*_Mysb::eback()),

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0003c	90		 npad	 1
  0003d	48 85 c0	 test	 rax, rax
  00040	74 13		 je	 SHORT $LN4@Tidy
  00042	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00047	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0004d	90		 npad	 1
  0004e	48 89 44 24 20	 mov	 QWORD PTR tv88[rsp], rax
  00053	eb 11		 jmp	 SHORT $LN5@Tidy
$LN4@Tidy:
  00055	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00060	90		 npad	 1
  00061	48 89 44 24 20	 mov	 QWORD PTR tv88[rsp], rax
$LN5@Tidy:
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00071	90		 npad	 1
  00072	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv88[rsp]
  00077	48 2b c8	 sub	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	48 89 44 24 28	 mov	 QWORD PTR tv95[rsp], rax
  00082	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00087	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0008d	90		 npad	 1
  0008e	48 8b c8	 mov	 rcx, rax
  00091	e8 00 00 00 00	 call	 ?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ; std::pointer_traits<char *>::pointer_to
  00096	90		 npad	 1
  00097	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0009c	48 83 c1 74	 add	 rcx, 116		; 00000074H
  000a0	48 8b 54 24 28	 mov	 rdx, QWORD PTR tv95[rsp]
  000a5	4c 8b c2	 mov	 r8, rdx
  000a8	48 8b d0	 mov	 rdx, rax
  000ab	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  000b0	90		 npad	 1
$LN2@Tidy:

; 326  :                 static_cast<typename allocator_traits<allocator_type>::size_type>(
; 327  :                     (_Mysb::pptr() ? _Mysb::epptr() : _Mysb::egptr()) - _Mysb::eback()));
; 328  :         }
; 329  : 
; 330  :         _Mysb::setg(nullptr, nullptr, nullptr);

  000b1	45 33 c9	 xor	 r9d, r9d
  000b4	45 33 c0	 xor	 r8d, r8d
  000b7	33 d2		 xor	 edx, edx
  000b9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000be	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
  000c4	90		 npad	 1

; 331  :         _Mysb::setp(nullptr, nullptr);

  000c5	45 33 c0	 xor	 r8d, r8d
  000c8	33 d2		 xor	 edx, edx
  000ca	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000cf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD0@Z
  000d5	90		 npad	 1

; 332  :         _Seekhigh = nullptr;

  000d6	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000db	48 c7 40 68 00
	00 00 00	 mov	 QWORD PTR [rax+104], 0

; 333  :         _Mystate &= ~_Allocated;

  000e3	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000e8	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000eb	83 e0 fe	 and	 eax, -2
  000ee	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000f3	89 41 70	 mov	 DWORD PTR [rcx+112], eax

; 334  :     }

  000f6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000fa	5f		 pop	 rdi
  000fb	c3		 ret	 0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
_Off$ = 32
_Gptr_old$ = 40
_Pptr_old$ = 48
_Seeklow$ = 56
_Seekdist$ = 64
_Newptr$ = 72
this$ = 96
__$ReturnUdt$ = 104
_Pos$ = 112
_Mode$ = 120
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT

; 260  :         ios_base::openmode _Mode = ios_base::in | ios_base::out) { // change position to _Pos, according to _Mode

$LN10:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 261  :         const auto _Off      = static_cast<streamoff>(_Pos);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Pos$[rsp]
  00032	e8 00 00 00 00	 call	 ??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ ; std::fpos<_Mbstatet>::operator __int64
  00037	48 89 44 24 20	 mov	 QWORD PTR _Off$[rsp], rax

; 262  :         const auto _Gptr_old = _Mysb::gptr();

  0003c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00041	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00047	48 89 44 24 28	 mov	 QWORD PTR _Gptr_old$[rsp], rax

; 263  :         const auto _Pptr_old = _Mysb::pptr();

  0004c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00051	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00057	48 89 44 24 30	 mov	 QWORD PTR _Pptr_old$[rsp], rax

; 264  :         if (_Pptr_old && _Seekhigh < _Pptr_old) { // update high-water pointer

  0005c	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  00062	74 1e		 je	 SHORT $LN2@seekpos
  00064	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00069	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Pptr_old$[rsp]
  0006e	48 39 48 68	 cmp	 QWORD PTR [rax+104], rcx
  00072	73 0e		 jae	 SHORT $LN2@seekpos

; 265  :             _Seekhigh = _Pptr_old;

  00074	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Pptr_old$[rsp]
  0007e	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx
$LN2@seekpos:

; 266  :         }
; 267  : 
; 268  :         const auto _Seeklow  = _Mysb::eback();

  00082	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00087	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0008d	48 89 44 24 38	 mov	 QWORD PTR _Seeklow$[rsp], rax

; 269  :         const auto _Seekdist = _Seekhigh - _Seeklow;

  00092	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00097	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Seeklow$[rsp]
  0009c	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 89 44 24 40	 mov	 QWORD PTR _Seekdist$[rsp], rax

; 270  :         if (static_cast<unsigned long long>(_Off) > static_cast<unsigned long long>(_Seekdist)) {

  000a8	48 8b 44 24 40	 mov	 rax, QWORD PTR _Seekdist$[rsp]
  000ad	48 39 44 24 20	 cmp	 QWORD PTR _Off$[rsp], rax
  000b2	76 1b		 jbe	 SHORT $LN3@seekpos

; 271  :             return pos_type(off_type(-1));

  000b4	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  000bb	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000c0	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  000c5	48 8b 44 24 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000ca	e9 d9 00 00 00	 jmp	 $LN1@seekpos
$LN3@seekpos:

; 272  :         }
; 273  : 
; 274  :         if (_Off != 0 && (((_Mode & ios_base::in) && !_Gptr_old) || ((_Mode & ios_base::out) && !_Pptr_old))) {

  000cf	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Off$[rsp], 0
  000d5	74 41		 je	 SHORT $LN4@seekpos
  000d7	8b 44 24 78	 mov	 eax, DWORD PTR _Mode$[rsp]
  000db	83 e0 01	 and	 eax, 1
  000de	85 c0		 test	 eax, eax
  000e0	74 08		 je	 SHORT $LN6@seekpos
  000e2	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Gptr_old$[rsp], 0
  000e8	74 13		 je	 SHORT $LN5@seekpos
$LN6@seekpos:
  000ea	8b 44 24 78	 mov	 eax, DWORD PTR _Mode$[rsp]
  000ee	83 e0 02	 and	 eax, 2
  000f1	85 c0		 test	 eax, eax
  000f3	74 23		 je	 SHORT $LN4@seekpos
  000f5	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  000fb	75 1b		 jne	 SHORT $LN4@seekpos
$LN5@seekpos:

; 275  :             return pos_type(off_type(-1));

  000fd	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  00104	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00109	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  0010e	48 8b 44 24 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00113	e9 90 00 00 00	 jmp	 $LN1@seekpos
$LN4@seekpos:

; 276  :         }
; 277  : 
; 278  :         const auto _Newptr = _Seeklow + _Off; // may perform nullptr + 0

  00118	48 8b 44 24 20	 mov	 rax, QWORD PTR _Off$[rsp]
  0011d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Seeklow$[rsp]
  00122	48 03 c8	 add	 rcx, rax
  00125	48 8b c1	 mov	 rax, rcx
  00128	48 89 44 24 48	 mov	 QWORD PTR _Newptr$[rsp], rax

; 279  :         if ((_Mode & ios_base::in) && _Gptr_old) {

  0012d	8b 44 24 78	 mov	 eax, DWORD PTR _Mode$[rsp]
  00131	83 e0 01	 and	 eax, 1
  00134	85 c0		 test	 eax, eax
  00136	74 26		 je	 SHORT $LN7@seekpos
  00138	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Gptr_old$[rsp], 0
  0013e	74 1e		 je	 SHORT $LN7@seekpos

; 280  :             _Mysb::setg(_Seeklow, _Newptr, _Seekhigh);

  00140	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00145	4c 8b 48 68	 mov	 r9, QWORD PTR [rax+104]
  00149	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Newptr$[rsp]
  0014e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Seeklow$[rsp]
  00153	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00158	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN7@seekpos:

; 281  :         }
; 282  : 
; 283  :         if ((_Mode & ios_base::out) && _Pptr_old) {

  0015e	8b 44 24 78	 mov	 eax, DWORD PTR _Mode$[rsp]
  00162	83 e0 02	 and	 eax, 2
  00165	85 c0		 test	 eax, eax
  00167	74 2b		 je	 SHORT $LN8@seekpos
  00169	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  0016f	74 23		 je	 SHORT $LN8@seekpos

; 284  :             _Mysb::setp(_Seeklow, _Newptr, _Mysb::epptr());

  00171	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00176	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0017c	4c 8b c8	 mov	 r9, rax
  0017f	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Newptr$[rsp]
  00184	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Seeklow$[rsp]
  00189	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0018e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN8@seekpos:

; 285  :         }
; 286  : 
; 287  :         return pos_type(_Off);

  00194	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Off$[rsp]
  00199	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0019e	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  001a3	48 8b 44 24 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@seekpos:

; 288  :     }

  001a8	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001ac	5f		 pop	 rdi
  001ad	c3		 ret	 0
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
_Gptr_old$ = 32
_Pptr_old$ = 40
_Seeklow$ = 48
_Seekdist$ = 56
_Newoff$ = 64
_Both$1 = 72
_Newptr$ = 80
tv88 = 88
this$ = 112
__$ReturnUdt$ = 120
_Off$ = 128
_Way$ = 136
_Mode$ = 144
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT

; 201  :         ios_base::openmode _Mode = ios_base::in | ios_base::out) { // change position by _Off, according to _Way, _Mode

$LN23:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 202  :         const auto _Gptr_old = _Mysb::gptr();

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00038	48 89 44 24 20	 mov	 QWORD PTR _Gptr_old$[rsp], rax

; 203  :         const auto _Pptr_old = _Mysb::pptr();

  0003d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00042	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00048	48 89 44 24 28	 mov	 QWORD PTR _Pptr_old$[rsp], rax

; 204  :         if (_Pptr_old && _Seekhigh < _Pptr_old) { // update high-water pointer

  0004d	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  00053	74 1e		 je	 SHORT $LN4@seekoff
  00055	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Pptr_old$[rsp]
  0005f	48 39 48 68	 cmp	 QWORD PTR [rax+104], rcx
  00063	73 0e		 jae	 SHORT $LN4@seekoff

; 205  :             _Seekhigh = _Pptr_old;

  00065	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0006a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Pptr_old$[rsp]
  0006f	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx
$LN4@seekoff:

; 206  :         }
; 207  : 
; 208  :         const auto _Seeklow  = _Mysb::eback();

  00073	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00078	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0007e	48 89 44 24 30	 mov	 QWORD PTR _Seeklow$[rsp], rax

; 209  :         const auto _Seekdist = _Seekhigh - _Seeklow;

  00083	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00088	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Seeklow$[rsp]
  0008d	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00091	48 2b c1	 sub	 rax, rcx
  00094	48 89 44 24 38	 mov	 QWORD PTR _Seekdist$[rsp], rax

; 210  :         off_type _Newoff;
; 211  :         switch (_Way) {

  00099	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR _Way$[rsp]
  000a0	89 44 24 58	 mov	 DWORD PTR tv88[rsp], eax
  000a4	83 7c 24 58 00	 cmp	 DWORD PTR tv88[rsp], 0
  000a9	74 13		 je	 SHORT $LN5@seekoff
  000ab	83 7c 24 58 01	 cmp	 DWORD PTR tv88[rsp], 1
  000b0	74 29		 je	 SHORT $LN7@seekoff
  000b2	83 7c 24 58 02	 cmp	 DWORD PTR tv88[rsp], 2
  000b7	74 13		 je	 SHORT $LN6@seekoff
  000b9	e9 a0 00 00 00	 jmp	 $LN15@seekoff
$LN5@seekoff:

; 212  :         case ios_base::beg:
; 213  :             _Newoff = 0;

  000be	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR _Newoff$[rsp], 0

; 214  :             break;

  000c7	e9 ad 00 00 00	 jmp	 $LN2@seekoff
$LN6@seekoff:

; 215  :         case ios_base::end:
; 216  :             _Newoff = _Seekdist;

  000cc	48 8b 44 24 38	 mov	 rax, QWORD PTR _Seekdist$[rsp]
  000d1	48 89 44 24 40	 mov	 QWORD PTR _Newoff$[rsp], rax

; 217  :             break;

  000d6	e9 9e 00 00 00	 jmp	 $LN2@seekoff
$LN7@seekoff:

; 218  :         case ios_base::cur: {
; 219  :             constexpr auto _Both = ios_base::in | ios_base::out;

  000db	c7 44 24 48 03
	00 00 00	 mov	 DWORD PTR _Both$1[rsp], 3

; 220  :             if ((_Mode & _Both) != _Both) { // prohibited by N4727 [stringbuf.virtuals] Table 107 "seekoff positioning"

  000e3	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  000ea	83 e0 03	 and	 eax, 3
  000ed	83 f8 03	 cmp	 eax, 3
  000f0	74 6c		 je	 SHORT $LN8@seekoff

; 221  :                 if (_Mode & ios_base::in) {

  000f2	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  000f9	83 e0 01	 and	 eax, 1
  000fc	85 c0		 test	 eax, eax
  000fe	74 29		 je	 SHORT $LN9@seekoff

; 222  :                     if (_Gptr_old || !_Seeklow) {

  00100	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Gptr_old$[rsp], 0
  00106	75 08		 jne	 SHORT $LN12@seekoff
  00108	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Seeklow$[rsp], 0
  0010e	75 17		 jne	 SHORT $LN11@seekoff
$LN12@seekoff:

; 223  :                         _Newoff = _Gptr_old - _Seeklow;

  00110	48 8b 44 24 30	 mov	 rax, QWORD PTR _Seeklow$[rsp]
  00115	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Gptr_old$[rsp]
  0011a	48 2b c8	 sub	 rcx, rax
  0011d	48 8b c1	 mov	 rax, rcx
  00120	48 89 44 24 40	 mov	 QWORD PTR _Newoff$[rsp], rax

; 224  :                         break;

  00125	eb 52		 jmp	 SHORT $LN2@seekoff
$LN11@seekoff:

; 225  :                     }

  00127	eb 35		 jmp	 SHORT $LN10@seekoff
$LN9@seekoff:

; 226  :                 } else if ((_Mode & ios_base::out) && (_Pptr_old || !_Seeklow)) {

  00129	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  00130	83 e0 02	 and	 eax, 2
  00133	85 c0		 test	 eax, eax
  00135	74 27		 je	 SHORT $LN13@seekoff
  00137	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  0013d	75 08		 jne	 SHORT $LN14@seekoff
  0013f	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Seeklow$[rsp], 0
  00145	75 17		 jne	 SHORT $LN13@seekoff
$LN14@seekoff:

; 227  :                     _Newoff = _Pptr_old - _Seeklow;

  00147	48 8b 44 24 30	 mov	 rax, QWORD PTR _Seeklow$[rsp]
  0014c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Pptr_old$[rsp]
  00151	48 2b c8	 sub	 rcx, rax
  00154	48 8b c1	 mov	 rax, rcx
  00157	48 89 44 24 40	 mov	 QWORD PTR _Newoff$[rsp], rax

; 228  :                     break;

  0015c	eb 1b		 jmp	 SHORT $LN2@seekoff
$LN13@seekoff:
$LN10@seekoff:
$LN8@seekoff:
$LN15@seekoff:

; 229  :                 }
; 230  :             }
; 231  :         }
; 232  : 
; 233  :             // fallthrough
; 234  :         default:
; 235  :             return pos_type(off_type(-1));

  0015e	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  00165	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0016a	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  0016f	48 8b 44 24 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00174	e9 3e 01 00 00	 jmp	 $LN1@seekoff
$LN2@seekoff:

; 236  :         }
; 237  : 
; 238  :         if (static_cast<unsigned long long>(_Off) + _Newoff > static_cast<unsigned long long>(_Seekdist)) {

  00179	48 8b 44 24 40	 mov	 rax, QWORD PTR _Newoff$[rsp]
  0017e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Off$[rsp]
  00186	48 03 c8	 add	 rcx, rax
  00189	48 8b c1	 mov	 rax, rcx
  0018c	48 3b 44 24 38	 cmp	 rax, QWORD PTR _Seekdist$[rsp]
  00191	76 1b		 jbe	 SHORT $LN16@seekoff

; 239  :             return pos_type(off_type(-1));

  00193	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  0019a	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0019f	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  001a4	48 8b 44 24 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  001a9	e9 09 01 00 00	 jmp	 $LN1@seekoff
$LN16@seekoff:

; 240  :         }
; 241  : 
; 242  :         _Off += _Newoff;

  001ae	48 8b 44 24 40	 mov	 rax, QWORD PTR _Newoff$[rsp]
  001b3	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Off$[rsp]
  001bb	48 03 c8	 add	 rcx, rax
  001be	48 8b c1	 mov	 rax, rcx
  001c1	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Off$[rsp], rax

; 243  :         if (_Off != 0 && (((_Mode & ios_base::in) && !_Gptr_old) || ((_Mode & ios_base::out) && !_Pptr_old))) {

  001c9	48 83 bc 24 80
	00 00 00 00	 cmp	 QWORD PTR _Off$[rsp], 0
  001d2	74 47		 je	 SHORT $LN17@seekoff
  001d4	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  001db	83 e0 01	 and	 eax, 1
  001de	85 c0		 test	 eax, eax
  001e0	74 08		 je	 SHORT $LN19@seekoff
  001e2	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Gptr_old$[rsp], 0
  001e8	74 16		 je	 SHORT $LN18@seekoff
$LN19@seekoff:
  001ea	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  001f1	83 e0 02	 and	 eax, 2
  001f4	85 c0		 test	 eax, eax
  001f6	74 23		 je	 SHORT $LN17@seekoff
  001f8	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  001fe	75 1b		 jne	 SHORT $LN17@seekoff
$LN18@seekoff:

; 244  :             return pos_type(off_type(-1));

  00200	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  00207	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0020c	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  00211	48 8b 44 24 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00216	e9 9c 00 00 00	 jmp	 $LN1@seekoff
$LN17@seekoff:

; 245  :         }
; 246  : 
; 247  :         const auto _Newptr = _Seeklow + _Off; // may perform nullptr + 0

  0021b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Off$[rsp]
  00223	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Seeklow$[rsp]
  00228	48 03 c8	 add	 rcx, rax
  0022b	48 8b c1	 mov	 rax, rcx
  0022e	48 89 44 24 50	 mov	 QWORD PTR _Newptr$[rsp], rax

; 248  :         if ((_Mode & ios_base::in) && _Gptr_old) {

  00233	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  0023a	83 e0 01	 and	 eax, 1
  0023d	85 c0		 test	 eax, eax
  0023f	74 26		 je	 SHORT $LN20@seekoff
  00241	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Gptr_old$[rsp], 0
  00247	74 1e		 je	 SHORT $LN20@seekoff

; 249  :             _Mysb::setg(_Seeklow, _Newptr, _Seekhigh);

  00249	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0024e	4c 8b 48 68	 mov	 r9, QWORD PTR [rax+104]
  00252	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newptr$[rsp]
  00257	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Seeklow$[rsp]
  0025c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00261	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN20@seekoff:

; 250  :         }
; 251  : 
; 252  :         if ((_Mode & ios_base::out) && _Pptr_old) {

  00267	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  0026e	83 e0 02	 and	 eax, 2
  00271	85 c0		 test	 eax, eax
  00273	74 2b		 je	 SHORT $LN21@seekoff
  00275	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  0027b	74 23		 je	 SHORT $LN21@seekoff

; 253  :             _Mysb::setp(_Seeklow, _Newptr, _Mysb::epptr());

  0027d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00282	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00288	4c 8b c8	 mov	 r9, rax
  0028b	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newptr$[rsp]
  00290	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Seeklow$[rsp]
  00295	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0029a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN21@seekoff:

; 254  :         }
; 255  : 
; 256  :         return pos_type(_Off);

  002a0	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Off$[rsp]
  002a8	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  002ad	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  002b2	48 8b 44 24 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@seekoff:

; 257  :     }

  002b7	48 83 c4 60	 add	 rsp, 96			; 00000060H
  002bb	5f		 pop	 rdi
  002bc	c3		 ret	 0
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ
_TEXT	SEGMENT
_Gptr$ = 32
_Pptr$ = 56
_Local_highwater$ = 72
tv142 = 80
this$ = 112
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT

; 174  :     virtual int_type underflow() { // get an element from stream, but don't point past it

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 175  :         const auto _Gptr = _Mysb::gptr();

  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00029	48 89 44 24 20	 mov	 QWORD PTR _Gptr$[rsp], rax

; 176  :         if (!_Gptr) { // no character buffer, fail

  0002e	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Gptr$[rsp], 0
  00034	75 0a		 jne	 SHORT $LN2@underflow

; 177  :             return _Traits::eof();

  00036	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0003b	e9 da 00 00 00	 jmp	 $LN1@underflow
$LN2@underflow:

; 178  :         }
; 179  : 
; 180  :         if (_Gptr < _Mysb::egptr()) { // return buffered

  00040	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0004b	48 39 44 24 20	 cmp	 QWORD PTR _Gptr$[rsp], rax
  00050	73 0f		 jae	 SHORT $LN3@underflow

; 181  :             return _Traits::to_int_type(*_Gptr);

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Gptr$[rsp]
  00057	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  0005c	e9 b9 00 00 00	 jmp	 $LN1@underflow
$LN3@underflow:

; 182  :         }
; 183  : 
; 184  :         // try to add initialized characters from the put area into the get area
; 185  :         const auto _Pptr = _Mysb::pptr();

  00061	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00066	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0006c	48 89 44 24 38	 mov	 QWORD PTR _Pptr$[rsp], rax

; 186  :         if (!_Pptr || (_Mystate & _Noread)) { // no put area or read disallowed

  00071	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Pptr$[rsp], 0
  00077	74 0f		 je	 SHORT $LN5@underflow
  00079	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0007e	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00081	83 e0 04	 and	 eax, 4
  00084	85 c0		 test	 eax, eax
  00086	74 0a		 je	 SHORT $LN4@underflow
$LN5@underflow:

; 187  :             return _Traits::eof();

  00088	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0008d	e9 88 00 00 00	 jmp	 $LN1@underflow
$LN4@underflow:

; 188  :         }
; 189  : 
; 190  :         const auto _Local_highwater = _Max_value(_Seekhigh, _Pptr);

  00092	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00097	48 83 c0 68	 add	 rax, 104		; 00000068H
  0009b	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Pptr$[rsp]
  000a0	48 8b c8	 mov	 rcx, rax
  000a3	e8 00 00 00 00	 call	 ??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z ; std::_Max_value<char *>
  000a8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ab	48 89 44 24 48	 mov	 QWORD PTR _Local_highwater$[rsp], rax

; 191  :         if (_Local_highwater <= _Gptr) { // nothing in the put area to take

  000b0	48 8b 44 24 20	 mov	 rax, QWORD PTR _Gptr$[rsp]
  000b5	48 39 44 24 48	 cmp	 QWORD PTR _Local_highwater$[rsp], rax
  000ba	77 07		 ja	 SHORT $LN6@underflow

; 192  :             return _Traits::eof();

  000bc	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  000c1	eb 57		 jmp	 SHORT $LN1@underflow
$LN6@underflow:

; 193  :         }
; 194  : 
; 195  :         _Seekhigh = _Local_highwater;

  000c3	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000c8	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Local_highwater$[rsp]
  000cd	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx

; 196  :         _Mysb::setg(_Mysb::eback(), _Mysb::gptr(), _Local_highwater);

  000d1	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000d6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000dc	48 89 44 24 50	 mov	 QWORD PTR tv142[rsp], rax
  000e1	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000e6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000ec	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Local_highwater$[rsp]
  000f1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv142[rsp]
  000f6	4c 8b c1	 mov	 r8, rcx
  000f9	48 8b d0	 mov	 rdx, rax
  000fc	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00101	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z

; 197  :         return _Traits::to_int_type(*_Mysb::gptr());

  00107	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0010c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00112	48 8b c8	 mov	 rcx, rax
  00115	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
$LN1@underflow:

; 198  :     }

  0011a	48 8b f8	 mov	 rdi, rax
  0011d	48 8b cc	 mov	 rcx, rsp
  00120	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcFrameData
  00127	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0012c	48 8b c7	 mov	 rax, rdi
  0012f	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00133	5f		 pop	 rdi
  00134	c3		 ret	 0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
_TEXT	SEGMENT
_Gptr$ = 32
$T1 = 40
$T2 = 44
$T3 = 48
tv143 = 52
this$ = 80
_Meta$ = 88
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT

; 157  :     virtual int_type pbackfail(int_type _Meta = _Traits::eof()) { // put an element back to stream

$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 10 00 00 00	 mov	 ecx, 16
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 158  :         const auto _Gptr = _Mysb::gptr();

  00022	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00027	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Gptr$[rsp], rax

; 159  :         if (!_Gptr || _Gptr <= _Mysb::eback()
; 160  :             || (!_Traits::eq_int_type(_Traits::eof(), _Meta) && !_Traits::eq(_Traits::to_char_type(_Meta), _Gptr[-1])

  00032	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Gptr$[rsp], 0
  00038	74 76		 je	 SHORT $LN3@pbackfail
  0003a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00045	48 39 44 24 20	 cmp	 QWORD PTR _Gptr$[rsp], rax
  0004a	76 64		 jbe	 SHORT $LN3@pbackfail
  0004c	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00051	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00055	48 8d 54 24 58	 lea	 rdx, QWORD PTR _Meta$[rsp]
  0005a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp]
  0005f	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00064	0f b6 c0	 movzx	 eax, al
  00067	85 c0		 test	 eax, eax
  00069	75 4c		 jne	 SHORT $LN2@pbackfail
  0006b	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Meta$[rsp]
  00070	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  00075	88 44 24 2c	 mov	 BYTE PTR $T2[rsp], al
  00079	b8 01 00 00 00	 mov	 eax, 1
  0007e	48 6b c0 ff	 imul	 rax, rax, -1
  00082	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Gptr$[rsp]
  00087	48 03 c8	 add	 rcx, rax
  0008a	48 8b c1	 mov	 rax, rcx
  0008d	48 8b d0	 mov	 rdx, rax
  00090	48 8d 4c 24 2c	 lea	 rcx, QWORD PTR $T2[rsp]
  00095	e8 00 00 00 00	 call	 ?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z ; std::_Narrow_char_traits<char,int>::eq
  0009a	0f b6 c0	 movzx	 eax, al
  0009d	85 c0		 test	 eax, eax
  0009f	75 16		 jne	 SHORT $LN2@pbackfail
  000a1	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a6	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000a9	83 e0 02	 and	 eax, 2
  000ac	85 c0		 test	 eax, eax
  000ae	74 07		 je	 SHORT $LN2@pbackfail
$LN3@pbackfail:

; 161  :                 && (_Mystate & _Constant))) { // can't put back, fail
; 162  :             return _Traits::eof();

  000b0	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  000b5	eb 59		 jmp	 SHORT $LN1@pbackfail
$LN2@pbackfail:

; 163  :         }
; 164  : 
; 165  :         // back up one position and store put-back character
; 166  :         _Mysb::gbump(-1);

  000b7	ba ff ff ff ff	 mov	 edx, -1
  000bc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000c1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z

; 167  :         if (!_Traits::eq_int_type(_Traits::eof(), _Meta)) {

  000c7	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  000cc	89 44 24 30	 mov	 DWORD PTR $T3[rsp], eax
  000d0	48 8d 54 24 58	 lea	 rdx, QWORD PTR _Meta$[rsp]
  000d5	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T3[rsp]
  000da	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  000df	0f b6 c0	 movzx	 eax, al
  000e2	85 c0		 test	 eax, eax
  000e4	75 20		 jne	 SHORT $LN4@pbackfail

; 168  :             *_Mysb::gptr() = _Traits::to_char_type(_Meta);

  000e6	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Meta$[rsp]
  000eb	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  000f0	88 44 24 34	 mov	 BYTE PTR tv143[rsp], al
  000f4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000f9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000ff	0f b6 4c 24 34	 movzx	 ecx, BYTE PTR tv143[rsp]
  00104	88 08		 mov	 BYTE PTR [rax], cl
$LN4@pbackfail:

; 169  :         }
; 170  : 
; 171  :         return _Traits::not_eof(_Meta);

  00106	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Meta$[rsp]
  0010b	e8 00 00 00 00	 call	 ?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
$LN1@pbackfail:

; 172  :     }

  00110	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00114	5f		 pop	 rdi
  00115	c3		 ret	 0
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
_TEXT	SEGMENT
_Pptr$ = 32
_Epptr$ = 40
_Oldsize$ = 48
_Oldptr$ = 56
_Newsize$ = 64
_Newptr$ = 72
_New_pnext$ = 80
$T1 = 88
tv212 = 92
tv210 = 93
this$ = 112
_Meta$ = 120
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT

; 100  :     virtual int_type overflow(int_type _Meta = _Traits::eof()) { // put an element to stream

$LN16:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 18 00 00 00	 mov	 ecx, 24
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 101  :         if (_Mystate & _Constant) {

  00022	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00027	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  0002a	83 e0 02	 and	 eax, 2
  0002d	85 c0		 test	 eax, eax
  0002f	74 0a		 je	 SHORT $LN2@overflow

; 102  :             return _Traits::eof(); // array nonmutable, fail

  00031	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00036	e9 6a 02 00 00	 jmp	 $LN1@overflow
$LN2@overflow:

; 103  :         }
; 104  : 
; 105  :         if (_Traits::eq_int_type(_Traits::eof(), _Meta)) {

  0003b	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00040	89 44 24 58	 mov	 DWORD PTR $T1[rsp], eax
  00044	48 8d 54 24 78	 lea	 rdx, QWORD PTR _Meta$[rsp]
  00049	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00053	0f b6 c0	 movzx	 eax, al
  00056	85 c0		 test	 eax, eax
  00058	74 0f		 je	 SHORT $LN3@overflow

; 106  :             return _Traits::not_eof(_Meta); // EOF, return success code

  0005a	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Meta$[rsp]
  0005f	e8 00 00 00 00	 call	 ?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
  00064	e9 3c 02 00 00	 jmp	 $LN1@overflow
$LN3@overflow:

; 107  :         }
; 108  : 
; 109  :         const auto _Pptr  = _Mysb::pptr();

  00069	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0006e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00074	48 89 44 24 20	 mov	 QWORD PTR _Pptr$[rsp], rax

; 110  :         const auto _Epptr = _Mysb::epptr();

  00079	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00084	48 89 44 24 28	 mov	 QWORD PTR _Epptr$[rsp], rax

; 111  :         if (_Pptr && _Pptr < _Epptr) { // room in buffer, store it

  00089	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Pptr$[rsp], 0
  0008f	74 46		 je	 SHORT $LN4@overflow
  00091	48 8b 44 24 28	 mov	 rax, QWORD PTR _Epptr$[rsp]
  00096	48 39 44 24 20	 cmp	 QWORD PTR _Pptr$[rsp], rax
  0009b	73 3a		 jae	 SHORT $LN4@overflow

; 112  :             *_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

  0009d	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Meta$[rsp]
  000a2	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  000a7	88 44 24 5c	 mov	 BYTE PTR tv212[rsp], al
  000ab	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000b0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
  000b6	0f b6 4c 24 5c	 movzx	 ecx, BYTE PTR tv212[rsp]
  000bb	88 08		 mov	 BYTE PTR [rax], cl

; 113  :             _Seekhigh        = _Pptr + 1;

  000bd	48 8b 44 24 20	 mov	 rax, QWORD PTR _Pptr$[rsp]
  000c2	48 ff c0	 inc	 rax
  000c5	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000ca	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax

; 114  :             return _Meta;

  000ce	8b 44 24 78	 mov	 eax, DWORD PTR _Meta$[rsp]
  000d2	e9 ce 01 00 00	 jmp	 $LN1@overflow
$LN4@overflow:

; 115  :         }
; 116  : 
; 117  :         // grow buffer and store element
; 118  :         size_t _Oldsize    = 0;

  000d7	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR _Oldsize$[rsp], 0

; 119  :         const auto _Oldptr = _Mysb::eback();

  000e0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000e5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000eb	48 89 44 24 38	 mov	 QWORD PTR _Oldptr$[rsp], rax

; 120  :         if (_Pptr) {

  000f0	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Pptr$[rsp], 0
  000f6	74 15		 je	 SHORT $LN5@overflow

; 121  :             _Oldsize = static_cast<size_t>(_Epptr - _Oldptr);

  000f8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Oldptr$[rsp]
  000fd	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Epptr$[rsp]
  00102	48 2b c8	 sub	 rcx, rax
  00105	48 8b c1	 mov	 rax, rcx
  00108	48 89 44 24 30	 mov	 QWORD PTR _Oldsize$[rsp], rax
$LN5@overflow:

; 122  :         }
; 123  : 
; 124  :         size_t _Newsize;
; 125  :         if (_Oldsize < _MINSIZE) {

  0010d	48 83 7c 24 30
	20		 cmp	 QWORD PTR _Oldsize$[rsp], 32 ; 00000020H
  00113	73 0b		 jae	 SHORT $LN6@overflow

; 126  :             _Newsize = _MINSIZE;

  00115	48 c7 44 24 40
	20 00 00 00	 mov	 QWORD PTR _Newsize$[rsp], 32 ; 00000020H
  0011e	eb 3a		 jmp	 SHORT $LN7@overflow
$LN6@overflow:

; 127  :         } else if (_Oldsize < INT_MAX / 2) { // grow by 50 percent

  00120	48 81 7c 24 30
	ff ff ff 3f	 cmp	 QWORD PTR _Oldsize$[rsp], 1073741823 ; 3fffffffH
  00129	73 0f		 jae	 SHORT $LN8@overflow

; 128  :             _Newsize = _Oldsize << 1;

  0012b	48 8b 44 24 30	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  00130	48 d1 e0	 shl	 rax, 1
  00133	48 89 44 24 40	 mov	 QWORD PTR _Newsize$[rsp], rax
  00138	eb 20		 jmp	 SHORT $LN9@overflow
$LN8@overflow:

; 129  :         } else if (_Oldsize < INT_MAX) {

  0013a	48 81 7c 24 30
	ff ff ff 7f	 cmp	 QWORD PTR _Oldsize$[rsp], 2147483647 ; 7fffffffH
  00143	73 0b		 jae	 SHORT $LN10@overflow

; 130  :             _Newsize = INT_MAX;

  00145	48 c7 44 24 40
	ff ff ff 7f	 mov	 QWORD PTR _Newsize$[rsp], 2147483647 ; 7fffffffH

; 131  :         } else { // buffer can't grow, fail

  0014e	eb 0a		 jmp	 SHORT $LN11@overflow
$LN10@overflow:

; 132  :             return _Traits::eof();

  00150	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00155	e9 4b 01 00 00	 jmp	 $LN1@overflow
$LN11@overflow:
$LN9@overflow:
$LN7@overflow:

; 133  :         }
; 134  : 
; 135  :         const auto _Newptr = _Unfancy(_Al.allocate(_Newsize));

  0015a	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0015f	48 83 c0 74	 add	 rax, 116		; 00000074H
  00163	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  00168	48 8b c8	 mov	 rcx, rax
  0016b	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00170	48 8b c8	 mov	 rcx, rax
  00173	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00178	48 89 44 24 48	 mov	 QWORD PTR _Newptr$[rsp], rax

; 136  :         _Traits::copy(_Newptr, _Oldptr, _Oldsize);

  0017d	4c 8b 44 24 30	 mov	 r8, QWORD PTR _Oldsize$[rsp]
  00182	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Oldptr$[rsp]
  00187	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newptr$[rsp]
  0018c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 137  : 
; 138  :         const auto _New_pnext = _Newptr + _Oldsize;

  00191	48 8b 44 24 30	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  00196	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newptr$[rsp]
  0019b	48 03 c8	 add	 rcx, rax
  0019e	48 8b c1	 mov	 rax, rcx
  001a1	48 89 44 24 50	 mov	 QWORD PTR _New_pnext$[rsp], rax

; 139  :         _Seekhigh             = _New_pnext + 1; // to include _Meta

  001a6	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_pnext$[rsp]
  001ab	48 ff c0	 inc	 rax
  001ae	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  001b3	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax

; 140  : 
; 141  :         _Mysb::setp(_Newptr, _New_pnext, _Newptr + _Newsize);

  001b7	48 8b 44 24 40	 mov	 rax, QWORD PTR _Newsize$[rsp]
  001bc	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newptr$[rsp]
  001c1	48 03 c8	 add	 rcx, rax
  001c4	48 8b c1	 mov	 rax, rcx
  001c7	4c 8b c8	 mov	 r9, rax
  001ca	4c 8b 44 24 50	 mov	 r8, QWORD PTR _New_pnext$[rsp]
  001cf	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Newptr$[rsp]
  001d4	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  001d9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z

; 142  :         if (_Mystate & _Noread) { // maintain eback() == allocated pointer invariant

  001df	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  001e4	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  001e7	83 e0 04	 and	 eax, 4
  001ea	85 c0		 test	 eax, eax
  001ec	74 1a		 je	 SHORT $LN12@overflow

; 143  :             _Mysb::setg(_Newptr, nullptr, _Newptr);

  001ee	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Newptr$[rsp]
  001f3	45 33 c0	 xor	 r8d, r8d
  001f6	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Newptr$[rsp]
  001fb	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00200	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z

; 144  :         } else { // if readable, set the get area to initialized region

  00206	eb 37		 jmp	 SHORT $LN13@overflow
$LN12@overflow:

; 145  :             _Mysb::setg(_Newptr, _Newptr + (_Mysb::gptr() - _Oldptr), _Seekhigh);

  00208	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0020d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00213	48 2b 44 24 38	 sub	 rax, QWORD PTR _Oldptr$[rsp]
  00218	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newptr$[rsp]
  0021d	48 03 c8	 add	 rcx, rax
  00220	48 8b c1	 mov	 rax, rcx
  00223	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00228	4c 8b 49 68	 mov	 r9, QWORD PTR [rcx+104]
  0022c	4c 8b c0	 mov	 r8, rax
  0022f	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Newptr$[rsp]
  00234	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00239	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN13@overflow:

; 146  :         }
; 147  : 
; 148  :         if (_Mystate & _Allocated) {

  0023f	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00244	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00247	83 e0 01	 and	 eax, 1
  0024a	85 c0		 test	 eax, eax
  0024c	74 20		 je	 SHORT $LN14@overflow

; 149  :             _Al.deallocate(_Ptr_traits::pointer_to(*_Oldptr), _Oldsize);

  0024e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Oldptr$[rsp]
  00253	e8 00 00 00 00	 call	 ?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ; std::pointer_traits<char *>::pointer_to
  00258	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0025d	48 83 c1 74	 add	 rcx, 116		; 00000074H
  00261	4c 8b 44 24 30	 mov	 r8, QWORD PTR _Oldsize$[rsp]
  00266	48 8b d0	 mov	 rdx, rax
  00269	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN14@overflow:

; 150  :         }
; 151  : 
; 152  :         _Mystate |= _Allocated;

  0026e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00273	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00276	83 c8 01	 or	 eax, 1
  00279	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0027e	89 41 70	 mov	 DWORD PTR [rcx+112], eax

; 153  :         *_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

  00281	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Meta$[rsp]
  00286	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  0028b	88 44 24 5d	 mov	 BYTE PTR tv210[rsp], al
  0028f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00294	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
  0029a	0f b6 4c 24 5d	 movzx	 ecx, BYTE PTR tv210[rsp]
  0029f	88 08		 mov	 BYTE PTR [rax], cl

; 154  :         return _Meta;

  002a1	8b 44 24 78	 mov	 eax, DWORD PTR _Meta$[rsp]
$LN1@overflow:

; 155  :     }

  002a5	48 83 c4 60	 add	 rsp, 96			; 00000060H
  002a9	5f		 pop	 rdi
  002aa	c3		 ret	 0
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_Result$ = 40
_Base$4 = 88
_Base$5 = 96
$T6 = 112
$T7 = 120
__$ArrayPad$ = 128
this$ = 160
__$ReturnUdt$ = 168
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT

; 81   :     _NODISCARD _Mystr str() const { // return string copy of character array

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003b	c7 44 24 78 00
	00 00 00	 mov	 DWORD PTR $T7[rsp], 0

; 82   :         _Mystr _Result(_Al);

  00043	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c0 74	 add	 rax, 116		; 00000074H
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Result$[rsp]
  00057	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005c	90		 npad	 1

; 83   :         if (!(_Mystate & _Constant) && _Mysb::pptr()) { // writable, make string from write buffer

  0005d	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00065	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00068	83 e0 02	 and	 eax, 2
  0006b	85 c0		 test	 eax, eax
  0006d	75 71		 jne	 SHORT $LN2@str
  0006f	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00077	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0007d	48 85 c0	 test	 rax, rax
  00080	74 5e		 je	 SHORT $LN2@str

; 84   :             const auto _Base = _Mysb::pbase();

  00082	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0008a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00090	48 89 44 24 58	 mov	 QWORD PTR _Base$4[rsp], rax

; 85   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));

  00095	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000a3	48 89 44 24 70	 mov	 QWORD PTR $T6[rsp], rax
  000a8	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000b0	48 83 c0 68	 add	 rax, 104		; 00000068H
  000b4	48 8b d0	 mov	 rdx, rax
  000b7	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T6[rsp]
  000bc	e8 00 00 00 00	 call	 ??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z ; std::_Max_value<char *>
  000c1	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Base$4[rsp]
  000c6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c9	48 2b c1	 sub	 rax, rcx
  000cc	4c 8b c0	 mov	 r8, rax
  000cf	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Base$4[rsp]
  000d4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Result$[rsp]
  000d9	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  000de	eb 5d		 jmp	 SHORT $LN3@str
$LN2@str:

; 86   :         } else if (!(_Mystate & _Noread) && _Mysb::gptr()) { // readable, make string from read buffer

  000e0	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e8	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000eb	83 e0 04	 and	 eax, 4
  000ee	85 c0		 test	 eax, eax
  000f0	75 4b		 jne	 SHORT $LN3@str
  000f2	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000fa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00100	48 85 c0	 test	 rax, rax
  00103	74 38		 je	 SHORT $LN3@str

; 87   :             const auto _Base = _Mysb::eback();

  00105	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0010d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00113	48 89 44 24 60	 mov	 QWORD PTR _Base$5[rsp], rax

; 88   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Mysb::egptr() - _Base));

  00118	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00120	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00126	48 2b 44 24 60	 sub	 rax, QWORD PTR _Base$5[rsp]
  0012b	4c 8b c0	 mov	 r8, rax
  0012e	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Base$5[rsp]
  00133	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Result$[rsp]
  00138	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN3@str:

; 89   :         }
; 90   : 
; 91   :         return _Result;

  0013d	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Result$[rsp]
  00142	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0014a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0014f	8b 44 24 78	 mov	 eax, DWORD PTR $T7[rsp]
  00153	83 c8 01	 or	 eax, 1
  00156	89 44 24 78	 mov	 DWORD PTR $T7[rsp], eax
  0015a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Result$[rsp]
  0015f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00164	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 92   :     }

  0016c	48 8b f8	 mov	 rdi, rax
  0016f	48 8b cc	 mov	 rcx, rsp
  00172	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcFrameData
  00179	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0017e	48 8b c7	 mov	 rax, rdi
  00181	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00189	48 33 cc	 xor	 rcx, rsp
  0018c	e8 00 00 00 00	 call	 __security_check_cookie
  00191	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00198	5f		 pop	 rdi
  00199	c3		 ret	 0
  0019a	cc		 int	 3
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
_Base$4 = 88
_Base$5 = 96
$T6 = 112
$T7 = 120
__$ArrayPad$ = 128
this$ = 160
__$ReturnUdt$ = 168
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
_Base$4 = 88
_Base$5 = 96
$T6 = 112
$T7 = 120
__$ArrayPad$ = 128
this$ = 160
__$ReturnUdt$ = 168
?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 78	 mov	 eax, DWORD PTR $T7[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN8@dtor$1
  0001d	83 65 78 fe	 and	 DWORD PTR $T7[rbp], -2
  00021	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
_Base$4 = 88
_Base$5 = 96
$T6 = 112
$T7 = 120
__$ArrayPad$ = 128
this$ = 160
__$ReturnUdt$ = 168
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
_Base$4 = 88
_Base$5 = 96
$T6 = 112
$T7 = 120
__$ArrayPad$ = 128
this$ = 160
__$ReturnUdt$ = 168
?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 78	 mov	 eax, DWORD PTR $T7[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN8@dtor$1
  0001d	83 65 78 fe	 and	 DWORD PTR $T7[rbp], -2
  00021	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 65   :     virtual ~basic_stringbuf() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 66   :         _Tidy();

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00037	90		 npad	 1

; 67   :     }

  00038	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00043	90		 npad	 1
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 48
_Mode$ = 56
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 29   :         : _Seekhigh(nullptr), _Mystate(_Getstate(_Mode)), _Al() { // construct empty character buffer from mode

$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
  0002d	90		 npad	 1
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  0003a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 c7 40 68 00
	00 00 00	 mov	 QWORD PTR [rax+104], 0
  0004a	8b 4c 24 38	 mov	 ecx, DWORD PTR _Mode$[rsp]
  0004e	e8 00 00 00 00	 call	 ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
  00053	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00058	89 41 70	 mov	 DWORD PTR [rcx+112], eax
  0005b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00060	48 83 c0 74	 add	 rax, 116		; 00000074H
  00064	48 8b c8	 mov	 rcx, rax
  00067	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  0006c	90		 npad	 1

; 30   :     }

  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00072	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$ = 56
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$ = 56
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT

; 571  :     _NODISCARD _Mystr str() const { // return string copy of character array

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 572  :         return _Stringbuffer.str();

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 83 c0 18	 add	 rax, 24
  00034	48 8b 54 24 48	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
  00041	90		 npad	 1
  00042	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00046	83 c8 01	 or	 eax, 1
  00049	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0004d	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 573  :     }

  00052	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00056	5f		 pop	 rdi
  00057	c3		 ret	 0
  00058	cc		 int	 3
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 565  :     virtual ~basic_stringstream() noexcept {}

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 80 68 ff
	ff ff		 mov	 rax, QWORD PTR [rax-152]
  0002a	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  0003a	48 89 94 01 68
	ff ff ff	 mov	 QWORD PTR [rcx+rax-152], rdx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 8b 80 68 ff
	ff ff		 mov	 rax, QWORD PTR [rax-152]
  0004e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00052	48 2d 98 00 00
	00		 sub	 rax, 152		; 00000098H
  00058	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	48 8b 89 68 ff
	ff ff		 mov	 rcx, QWORD PTR [rcx-152]
  00064	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  00068	48 8b 54 24 30	 mov	 rdx, QWORD PTR this$[rsp]
  0006d	89 84 0a 64 ff
	ff ff		 mov	 DWORD PTR [rdx+rcx-156], eax
  00074	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 2d 80 00 00
	00		 sub	 rax, 128		; 00000080H
  0007f	48 8b c8	 mov	 rcx, rax
  00082	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00087	90		 npad	 1
  00088	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008d	48 83 e8 78	 sub	 rax, 120		; 00000078H
  00091	48 8b c8	 mov	 rcx, rax
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0009a	90		 npad	 1
  0009b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009f	5f		 pop	 rdi
  000a0	c3		 ret	 0
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 98 00
	00 00		 sub	 rcx, 152		; 00000098H
  0001e	48 83 c1 20	 add	 rcx, 32			; 00000020H
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	5f		 pop	 rdi
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 98 00
	00 00		 sub	 rcx, 152		; 00000098H
  0001e	48 83 c1 18	 add	 rcx, 24
  00022	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	5f		 pop	 rdi
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 98 00
	00 00		 sub	 rcx, 152		; 00000098H
  0001e	48 83 c1 20	 add	 rcx, 32			; 00000020H
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	5f		 pop	 rdi
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 98 00
	00 00		 sub	 rcx, 152		; 00000098H
  0001e	48 83 c1 18	 add	 rcx, 24
  00022	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	5f		 pop	 rdi
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 531  :         : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(_Mode) { // construct empty character buffer

$LN8:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 0c 00 00 00	 mov	 ecx, 12
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00027	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
  0002f	83 7c 24 50 00	 cmp	 DWORD PTR $initVBases$[rsp], 0
  00034	74 3f		 je	 SHORT $LN2@basic_stri
  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
  00042	48 89 08	 mov	 QWORD PTR [rax], rcx
  00045	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
  00051	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00055	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00060	48 8b c8	 mov	 rcx, rax
  00063	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
  00069	90		 npad	 1
  0006a	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  0006e	83 c8 01	 or	 eax, 1
  00071	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
$LN2@basic_stri:
  00075	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 83 c0 18	 add	 rax, 24
  0007e	48 8b c8	 mov	 rcx, rax
  00081	e8 00 00 00 00	 call	 ??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
  00086	45 33 c0	 xor	 r8d, r8d
  00089	48 8b d0	 mov	 rdx, rax
  0008c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00091	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
  00097	90		 npad	 1
  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000a4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000a9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  000b0	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx
  000b4	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000b9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bc	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000c0	48 2d 98 00 00
	00		 sub	 rax, 152		; 00000098H
  000c6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000cb	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000ce	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  000d2	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  000d7	89 44 0a fc	 mov	 DWORD PTR [rdx+rcx-4], eax
  000db	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000e0	48 83 c0 18	 add	 rax, 24
  000e4	8b 54 24 48	 mov	 edx, DWORD PTR _Mode$[rsp]
  000e8	48 8b c8	 mov	 rcx, rax
  000eb	e8 00 00 00 00	 call	 ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  000f0	90		 npad	 1

; 532  :     }

  000f1	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000f6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000fa	5f		 pop	 rdi
  000fb	c3		 ret	 0
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 15		 je	 SHORT $LN5@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00025	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
  0002c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
  00032	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00036	5f		 pop	 rdi
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 18	 add	 rcx, 24
  0001b	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 15		 je	 SHORT $LN5@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00025	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
  0002c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
  00032	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00036	5f		 pop	 rdi
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 18	 add	 rcx, 24
  0001b	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z PROC		; std::pair<int,int>::pair<int,int><int,int,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	8b 00		 mov	 eax, DWORD PTR [rax]
  0004c	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z ENDP		; std::pair<int,int>::pair<int,int><int,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ?end@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ
_TEXT	SEGMENT
this$ = 16
?end@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ PROC ; std::initializer_list<std::pair<int,int> >::end, COMDAT

; 38   :     _NODISCARD constexpr const _Elem* end() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 39   :         return _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 40   :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?end@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ ENDP ; std::initializer_list<std::pair<int,int> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ?begin@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ
_TEXT	SEGMENT
this$ = 16
?begin@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ PROC ; std::initializer_list<std::pair<int,int> >::begin, COMDAT

; 34   :     _NODISCARD constexpr const _Elem* begin() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 35   :         return _First;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 36   :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?begin@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ ENDP ; std::initializer_list<std::pair<int,int> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ??0?$initializer_list@U?$pair@HH@std@@@std@@QEAA@PEBU?$pair@HH@1@0@Z
_TEXT	SEGMENT
this$ = 16
_First_arg$ = 24
_Last_arg$ = 32
??0?$initializer_list@U?$pair@HH@std@@@std@@QEAA@PEBU?$pair@HH@1@0@Z PROC ; std::initializer_list<std::pair<int,int> >::initializer_list<std::pair<int,int> >, COMDAT

; 32   :         : _First(_First_arg), _Last(_Last_arg) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _First_arg$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Last_arg$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??0?$initializer_list@U?$pair@HH@std@@@std@@QEAA@PEBU?$pair@HH@1@0@Z ENDP ; std::initializer_list<std::pair<int,int> >::initializer_list<std::pair<int,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::pair<int,int> > >::_Vector_val<std::_Simple_types<std::pair<int,int> > >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::pair<int,int> > >::_Vector_val<std::_Simple_types<std::pair<int,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@CAXXZ PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEAU?$pair@HH@2@0@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 03	 sar	 rax, 3
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$pair@HH@std@@@std@@QEAAXQEAU?$pair@HH@2@_K@Z ; std::allocator<std::pair<int,int> >::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Buy_nonzero, COMDAT

; 1605 :     void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1606 :         // allocate array with _Newcapacity elements
; 1607 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1608 :         auto& _My_data    = _Mypair._Myval2;
; 1609 :         pointer& _Myfirst = _My_data._Myfirst;
; 1610 :         pointer& _Mylast  = _My_data._Mylast;
; 1611 :         pointer& _Myend   = _My_data._Myend;
; 1612 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1613 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1614 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1615 : 
; 1616 :         if (_Newcapacity > max_size()) {

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::max_size
  0002d	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00032	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 1617 :             _Xlength();

  00034	e8 00 00 00 00	 call	 ?_Xlength@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@CAXXZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Xlength
$LN2@Buy_nonzer:

; 1618 :         }
; 1619 : 
; 1620 :         _Buy_raw(_Newcapacity);

  00039	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Buy_raw
$LN3@Buy_nonzer:

; 1621 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Buy_nonzero@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$pair@HH@std@@@std@@QEAAPEAU?$pair@HH@2@_K@Z ; std::allocator<std::pair<int,int> >::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 8b 44 24 40	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00092	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newcapacity$[rsp]
  00097	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  0009b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a0	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000a7	5f		 pop	 rdi
  000a8	c3		 ret	 0
?_Buy_raw@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAX_K@Z ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEAU?$pair@HH@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEAU?$pair@HH@2@0@Z PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$pair@HH@std@@@std@@@std@@YAXPEAU?$pair@HH@0@QEAU10@AEAV?$allocator@U?$pair@HH@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<int,int> > >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEAU?$pair@HH@2@0@Z ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::operator[], COMDAT

; 1461 :     _NODISCARD const _Ty& operator[](const size_type _Pos) const noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1462 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1463 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1464 :         _STL_VERIFY(

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003f	48 2b c1	 sub	 rax, rcx
  00042	48 c1 f8 03	 sar	 rax, 3
  00046	48 39 44 24 58	 cmp	 QWORD PTR _Pos$[rsp], rax
  0004b	73 02		 jae	 SHORT $LN7@operator
  0004d	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  00056	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00062	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00067	45 33 c9	 xor	 r9d, r9d
  0006a	41 b8 b9 05 00
	00		 mov	 r8d, 1465		; 000005b9H
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00082	90		 npad	 1
  00083	83 f8 01	 cmp	 eax, 1
  00086	75 03		 jne	 SHORT $LN11@operator
  00088	cc		 int	 3
  00089	33 c0		 xor	 eax, eax
$LN11@operator:
  0008b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00094	41 b9 b9 05 00
	00		 mov	 r9d, 1465		; 000005b9H
  0009a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1MM@CFLCIPDM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
  000a8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000af	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b5	90		 npad	 1

; 1465 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");

  000b6	33 c0		 xor	 eax, eax
  000b8	85 c0		 test	 eax, eax
  000ba	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000bc	33 c0		 xor	 eax, eax
  000be	85 c0		 test	 eax, eax
  000c0	0f 85 67 ff ff
	ff		 jne	 $LN4@operator

; 1466 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1467 : 
; 1468 :         return _My_data._Myfirst[_Pos];

  000c6	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000cb	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000cf	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Pos$[rsp]
  000d4	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 1469 :     }

  000d8	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000dc	5f		 pop	 rdi
  000dd	c3		 ret	 0
??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@HH@std@@@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@HH@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<int,int> > >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 03	 sar	 rax, 3

; 1439 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_end, COMDAT

; 1427 :     const_pointer _Unchecked_end() const noexcept { // return pointer for end of nonmutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1428 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1429 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_begin, COMDAT

; 1419 :     const_pointer _Unchecked_begin() const noexcept { // return pointer for beginning of nonmutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1420 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1421 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S17$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S17$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0U?$pair@HH@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@HH@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<int,int> >
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S17$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z PROC ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >, COMDAT

; 458  :     vector(initializer_list<_Ty> _Ilist, const _Alloc& _Al = _Alloc())

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 459  :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from initializer_list, optional allocator

  0002e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00036	4c 8b 84 24 a0
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  0003e	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00043	48 8b c8	 mov	 rcx, rax
  00046	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@U?$pair@HH@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@HH@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@HH@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1>::_Compressed_pair<std::allocator<std::pair<int,int> >,std::_Vector_val<std::_Simple_types<std::pair<int,int> > >,1><std::allocator<std::pair<int,int> > const &>

; 460  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0004b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@HH@std@@@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Getal
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S18$[rsp]
  00060	e8 00 00 00 00	 call	 ??$?0U?$pair@HH@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@HH@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<int,int> >
  00065	48 8d 44 24 34	 lea	 rax, QWORD PTR $S18$[rsp]
  0006a	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 461  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  0006f	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00077	4c 8b c0	 mov	 r8, rax
  0007a	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  0007f	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00084	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00089	90		 npad	 1

; 462  :         _Range_construct_or_tidy(_Ilist.begin(), _Ilist.end(), random_access_iterator_tag{});

  0008a	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Ilist$[rsp]
  00092	e8 00 00 00 00	 call	 ?end@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::initializer_list<std::pair<int,int> >::end
  00097	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  0009c	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Ilist$[rsp]
  000a4	e8 00 00 00 00	 call	 ?begin@?$initializer_list@U?$pair@HH@std@@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::initializer_list<std::pair<int,int> >::begin
  000a9	44 0f b6 4c 24
	76		 movzx	 r9d, BYTE PTR $T6[rsp]
  000af	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  000b4	4c 8b c1	 mov	 r8, rcx
  000b7	48 8b d0	 mov	 rdx, rax
  000ba	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c2	e8 00 00 00 00	 call	 ??$_Range_construct_or_tidy@PEBU?$pair@HH@std@@@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@AEAAXPEBU?$pair@HH@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Range_construct_or_tidy<std::pair<int,int> const *>

; 463  :         _Proxy._Release();

  000c7	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000cc	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000d1	90		 npad	 1

; 464  :     }

  000d2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000d7	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000dc	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e4	48 8b f8	 mov	 rdi, rax
  000e7	48 8b cc	 mov	 rcx, rsp
  000ea	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z$rtcFrameData
  000f1	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f6	48 8b c7	 mov	 rax, rdi
  000f9	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00100	5f		 pop	 rdi
  00101	c3		 ret	 0
??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z ENDP ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
?dtor$0@?0???0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z@4HA PROC ; `std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z@4HA ENDP ; `std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
?dtor$0@?0???0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z@4HA PROC ; `std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z@4HA ENDP ; `std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@HH@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@HH@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::pair<int,int> > >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@HH@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@HH@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::pair<int,int> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$pair@HH@std@@@std@@QEAAPEAU?$pair@HH@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$pair@HH@std@@@std@@QEAAPEAU?$pair@HH@2@_K@Z PROC ; std::allocator<std::pair<int,int> >::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YA_K_K@Z ; std::_Get_size_of_n<8>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U?$pair@HH@std@@@std@@QEAAPEAU?$pair@HH@2@_K@Z ENDP ; std::allocator<std::pair<int,int> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$pair@HH@std@@@std@@QEAAXQEAU?$pair@HH@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@U?$pair@HH@std@@@std@@QEAAXQEAU?$pair@HH@2@_K@Z PROC ; std::allocator<std::pair<int,int> >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 03	 shl	 rax, 3
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@U?$pair@HH@std@@@std@@QEAAXQEAU?$pair@HH@2@_K@Z ENDP ; std::allocator<std::pair<int,int> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@HH@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$pair@HH@std@@@std@@QEAA@XZ PROC	; std::allocator<std::pair<int,int> >::allocator<std::pair<int,int> >, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@U?$pair@HH@std@@@std@@QEAA@XZ ENDP	; std::allocator<std::pair<int,int> >::allocator<std::pair<int,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z PROC ; run_benchmark

; 797  : mfxStatus run_benchmark(sInputParams *params) {

$LN102:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	56		 push	 rsi
  00006	57		 push	 rdi
  00007	b8 78 1c 00 00	 mov	 eax, 7288		; 00001c78H
  0000c	e8 00 00 00 00	 call	 __chkstk
  00011	48 2b e0	 sub	 rsp, rax
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1e 07 00 00	 mov	 ecx, 1822		; 0000071eH
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 90
	1c 00 00	 mov	 rcx, QWORD PTR [rsp+7312]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 84 24 60
	1c 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 798  :     using namespace std;
; 799  :     mfxStatus sts = MFX_ERR_NONE;

  0003d	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR sts$[rsp], 0

; 800  :     basic_string<TCHAR> benchmarkLogFile = params->strDstFile;

  00045	48 8b 84 24 90
	1c 00 00	 mov	 rax, QWORD PTR params$[rsp]
  0004d	48 05 dc 09 00
	00		 add	 rax, 2524		; 000009dcH
  00053	48 8b d0	 mov	 rdx, rax
  00056	48 8d 4c 24 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rsp]
  0005b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00060	90		 npad	 1

; 801  : 
; 802  :     //测试分辨率
; 803  :     const vector<pair<int, int>> test_resolution = { { 1920, 1080 }, { 1280, 720 } };

  00061	c7 84 24 78 1a
	00 00 80 07 00
	00		 mov	 DWORD PTR $T96[rsp], 1920 ; 00000780H
  0006c	c7 84 24 74 1a
	00 00 38 04 00
	00		 mov	 DWORD PTR $T95[rsp], 1080 ; 00000438H
  00077	4c 8d 84 24 74
	1a 00 00	 lea	 r8, QWORD PTR $T95[rsp]
  0007f	48 8d 94 24 78
	1a 00 00	 lea	 rdx, QWORD PTR $T96[rsp]
  00087	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR $T24[rsp]
  0008f	e8 00 00 00 00	 call	 ??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z ; std::pair<int,int>::pair<int,int><int,int,0>
  00094	c7 84 24 80 1a
	00 00 00 05 00
	00		 mov	 DWORD PTR $T98[rsp], 1280 ; 00000500H
  0009f	c7 84 24 7c 1a
	00 00 d0 02 00
	00		 mov	 DWORD PTR $T97[rsp], 720 ; 000002d0H
  000aa	4c 8d 84 24 7c
	1a 00 00	 lea	 r8, QWORD PTR $T97[rsp]
  000b2	48 8d 94 24 80
	1a 00 00	 lea	 rdx, QWORD PTR $T98[rsp]
  000ba	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR $T24[rsp+8]
  000c2	e8 00 00 00 00	 call	 ??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z ; std::pair<int,int>::pair<int,int><int,int,0>
  000c7	48 8d 8c 24 70
	1a 00 00	 lea	 rcx, QWORD PTR $T94[rsp]
  000cf	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@HH@std@@@std@@QEAA@XZ ; std::allocator<std::pair<int,int> >::allocator<std::pair<int,int> >
  000d4	48 89 84 24 00
	1b 00 00	 mov	 QWORD PTR tv72[rsp], rax
  000dc	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T24[rsp+16]
  000e4	4c 8b c1	 mov	 r8, rcx
  000e7	48 8d 94 24 c8
	00 00 00	 lea	 rdx, QWORD PTR $T24[rsp]
  000ef	48 8d 8c 24 88
	1a 00 00	 lea	 rcx, QWORD PTR $T99[rsp]
  000f7	e8 00 00 00 00	 call	 ??0?$initializer_list@U?$pair@HH@std@@@std@@QEAA@PEBU?$pair@HH@1@0@Z ; std::initializer_list<std::pair<int,int> >::initializer_list<std::pair<int,int> >
  000fc	48 8d 8c 24 f0
	1a 00 00	 lea	 rcx, QWORD PTR $T114[rsp]
  00104	48 8b f9	 mov	 rdi, rcx
  00107	48 8b f0	 mov	 rsi, rax
  0010a	b9 10 00 00 00	 mov	 ecx, 16
  0010f	f3 a4		 rep movsb
  00111	48 8b 84 24 00
	1b 00 00	 mov	 rax, QWORD PTR tv72[rsp]
  00119	4c 8b c0	 mov	 r8, rax
  0011c	48 8d 94 24 f0
	1a 00 00	 lea	 rdx, QWORD PTR $T114[rsp]
  00124	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  0012c	e8 00 00 00 00	 call	 ??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@HH@std@@@1@AEBV?$allocator@U?$pair@HH@std@@@1@@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
  00131	90		 npad	 1

; 804  : 
; 805  :     //第一组输出
; 806  :     {
; 807  :         params->nDstWidth = test_resolution[0].first;

  00132	33 d2		 xor	 edx, edx
  00134	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  0013c	e8 00 00 00 00	 call	 ??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::operator[]
  00141	48 8b 8c 24 90
	1c 00 00	 mov	 rcx, QWORD PTR params$[rsp]
  00149	0f b7 00	 movzx	 eax, WORD PTR [rax]
  0014c	66 89 41 4e	 mov	 WORD PTR [rcx+78], ax

; 808  :         params->nDstHeight = test_resolution[0].second;

  00150	33 d2		 xor	 edx, edx
  00152	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  0015a	e8 00 00 00 00	 call	 ??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAAEBU?$pair@HH@1@_K@Z ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::operator[]
  0015f	48 8b 8c 24 90
	1c 00 00	 mov	 rcx, QWORD PTR params$[rsp]
  00167	0f b7 40 04	 movzx	 eax, WORD PTR [rax+4]
  0016b	66 89 41 50	 mov	 WORD PTR [rcx+80], ax

; 809  :         params->nTargetUsage = MFX_TARGETUSAGE_BEST_SPEED;

  0016f	b8 07 00 00 00	 mov	 eax, 7
  00174	48 8b 8c 24 90
	1c 00 00	 mov	 rcx, QWORD PTR params$[rsp]
  0017c	66 89 41 04	 mov	 WORD PTR [rcx+4], ax

; 810  : 
; 811  :         unique_ptr<CQSVPipeline> pPipeline(new CQSVPipeline);

  00180	b9 08 14 00 00	 mov	 ecx, 5128		; 00001408H
  00185	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0018a	48 89 84 24 a0
	1a 00 00	 mov	 QWORD PTR $T101[rsp], rax
  00192	48 83 bc 24 a0
	1a 00 00 00	 cmp	 QWORD PTR $T101[rsp], 0
  0019b	74 17		 je	 SHORT $LN77@run_benchm
  0019d	48 8b 8c 24 a0
	1a 00 00	 mov	 rcx, QWORD PTR $T101[rsp]
  001a5	e8 00 00 00 00	 call	 ??0CQSVPipeline@@QEAA@XZ ; CQSVPipeline::CQSVPipeline
  001aa	48 89 84 24 08
	1b 00 00	 mov	 QWORD PTR tv143[rsp], rax
  001b2	eb 0c		 jmp	 SHORT $LN78@run_benchm
$LN77@run_benchm:
  001b4	48 c7 84 24 08
	1b 00 00 00 00
	00 00		 mov	 QWORD PTR tv143[rsp], 0
$LN78@run_benchm:
  001c0	48 8b 84 24 08
	1b 00 00	 mov	 rax, QWORD PTR tv143[rsp]
  001c8	48 89 84 24 98
	1a 00 00	 mov	 QWORD PTR $T100[rsp], rax
  001d0	48 8b 94 24 98
	1a 00 00	 mov	 rdx, QWORD PTR $T100[rsp]
  001d8	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  001e0	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> ><std::default_delete<CQSVPipeline>,0>
  001e5	90		 npad	 1

; 812  :         if (!pPipeline) {

  001e6	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  001ee	e8 00 00 00 00	 call	 ??B?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBA_NXZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator bool
  001f3	0f b6 c0	 movzx	 eax, al
  001f6	85 c0		 test	 eax, eax
  001f8	75 3d		 jne	 SHORT $LN47@run_benchm

; 813  :             return MFX_ERR_MEMORY_ALLOC;

  001fa	c7 84 24 a8 1a
	00 00 fc ff ff
	ff		 mov	 DWORD PTR $T102[rsp], -4
  00205	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  0020d	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00212	90		 npad	 1
  00213	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  0021b	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
  00220	90		 npad	 1
  00221	48 8d 4c 24 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rsp]
  00226	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0022b	8b 84 24 a8 1a
	00 00		 mov	 eax, DWORD PTR $T102[rsp]
  00232	e9 b2 18 00 00	 jmp	 $LN1@run_benchm
$LN47@run_benchm:

; 814  :         }
; 815  : 
; 816  :         sts = pPipeline->Init(params);

  00237	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  0023f	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00244	48 89 84 24 10
	1b 00 00	 mov	 QWORD PTR tv152[rsp], rax
  0024c	48 8b 84 24 10
	1b 00 00	 mov	 rax, QWORD PTR tv152[rsp]
  00254	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00257	48 8b 94 24 90
	1c 00 00	 mov	 rdx, QWORD PTR params$[rsp]
  0025f	48 8b 8c 24 10
	1b 00 00	 mov	 rcx, QWORD PTR tv152[rsp]
  00267	ff 50 10	 call	 QWORD PTR [rax+16]
  0026a	89 44 24 40	 mov	 DWORD PTR sts$[rsp], eax

; 817  :         if (sts < MFX_ERR_NONE) return sts;

  0026e	83 7c 24 40 00	 cmp	 DWORD PTR sts$[rsp], 0
  00273	7d 3d		 jge	 SHORT $LN48@run_benchm
  00275	8b 44 24 40	 mov	 eax, DWORD PTR sts$[rsp]
  00279	89 84 24 ac 1a
	00 00		 mov	 DWORD PTR $T103[rsp], eax
  00280	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  00288	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  0028d	90		 npad	 1
  0028e	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  00296	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
  0029b	90		 npad	 1
  0029c	48 8d 4c 24 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rsp]
  002a1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002a6	8b 84 24 ac 1a
	00 00		 mov	 eax, DWORD PTR $T103[rsp]
  002ad	e9 37 18 00 00	 jmp	 $LN1@run_benchm
$LN48@run_benchm:

; 818  : 
; 819  :         pPipeline->SetAbortFlagPointer(&g_signal_abort);

  002b2	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  002ba	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  002bf	48 89 84 24 18
	1b 00 00	 mov	 QWORD PTR tv161[rsp], rax
  002c7	48 8b 84 24 18
	1b 00 00	 mov	 rax, QWORD PTR tv161[rsp]
  002cf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002d2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?g_signal_abort@@3_NA
  002d9	48 8b 8c 24 18
	1b 00 00	 mov	 rcx, QWORD PTR tv161[rsp]
  002e1	ff 50 48	 call	 QWORD PTR [rax+72]

; 820  :         set_signal_handler();

  002e4	e8 00 00 00 00	 call	 ?set_signal_handler@@YAHXZ ; set_signal_handler

; 821  :         time_t current_time = time(NULL);

  002e9	33 c9		 xor	 ecx, ecx
  002eb	e8 00 00 00 00	 call	 time
  002f0	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR current_time$26[rsp], rax

; 822  :         struct tm *local_time = localtime(&current_time);

  002f8	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR current_time$26[rsp]
  00300	e8 00 00 00 00	 call	 localtime
  00305	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR local_time$27[rsp], rax

; 823  : 
; 824  :         TCHAR encode_info[4096] = { 0 };

  0030d	48 8d 84 24 30
	01 00 00	 lea	 rax, QWORD PTR encode_info$28[rsp]
  00315	48 8b f8	 mov	 rdi, rax
  00318	33 c0		 xor	 eax, eax
  0031a	b9 00 10 00 00	 mov	 ecx, 4096		; 00001000H
  0031f	f3 aa		 rep stosb

; 825  :         if (MFX_ERR_NONE != (sts = pPipeline->CheckCurrentVideoParam(encode_info, _countof(encode_info)))) {

  00321	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  00329	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  0032e	48 89 84 24 20
	1b 00 00	 mov	 QWORD PTR tv176[rsp], rax
  00336	48 8b 84 24 20
	1b 00 00	 mov	 rax, QWORD PTR tv176[rsp]
  0033e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00341	41 b8 00 10 00
	00		 mov	 r8d, 4096		; 00001000H
  00347	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR encode_info$28[rsp]
  0034f	48 8b 8c 24 20
	1b 00 00	 mov	 rcx, QWORD PTR tv176[rsp]
  00357	ff 50 40	 call	 QWORD PTR [rax+64]
  0035a	89 44 24 40	 mov	 DWORD PTR sts$[rsp], eax
  0035e	83 7c 24 40 00	 cmp	 DWORD PTR sts$[rsp], 0
  00363	74 3d		 je	 SHORT $LN49@run_benchm

; 826  :             return sts;

  00365	8b 44 24 40	 mov	 eax, DWORD PTR sts$[rsp]
  00369	89 84 24 b0 1a
	00 00		 mov	 DWORD PTR $T104[rsp], eax
  00370	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  00378	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  0037d	90		 npad	 1
  0037e	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  00386	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
  0038b	90		 npad	 1
  0038c	48 8d 4c 24 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rsp]
  00391	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00396	8b 84 24 b0 1a
	00 00		 mov	 eax, DWORD PTR $T104[rsp]
  0039d	e9 47 17 00 00	 jmp	 $LN1@run_benchm
$LN49@run_benchm:

; 827  :         }
; 828  : 
; 829  :         bool hardware;
; 830  :         mfxVersion ver;
; 831  :         pPipeline->GetEncodeLibInfo(&ver, &hardware);

  003a2	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  003aa	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  003af	48 89 84 24 28
	1b 00 00	 mov	 QWORD PTR tv186[rsp], rax
  003b7	48 8b 84 24 28
	1b 00 00	 mov	 rax, QWORD PTR tv186[rsp]
  003bf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003c2	4c 8d 84 24 44
	11 00 00	 lea	 r8, QWORD PTR hardware$29[rsp]
  003ca	48 8d 94 24 64
	11 00 00	 lea	 rdx, QWORD PTR ver$30[rsp]
  003d2	48 8b 8c 24 28
	1b 00 00	 mov	 rcx, QWORD PTR tv186[rsp]
  003da	ff 50 58	 call	 QWORD PTR [rax+88]

; 832  : 
; 833  :         auto enviroment_info = getEnviromentInfo();

  003dd	b2 01		 mov	 dl, 1
  003df	48 8d 8c 24 88
	11 00 00	 lea	 rcx, QWORD PTR enviroment_info$31[rsp]
  003e7	e8 00 00 00 00	 call	 ?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; getEnviromentInfo
  003ec	90		 npad	 1

; 834  : 
; 835  :         MemType memtype = pPipeline->GetMemType();

  003ed	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  003f5	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  003fa	48 89 84 24 30
	1b 00 00	 mov	 QWORD PTR tv198[rsp], rax
  00402	48 8b 84 24 30
	1b 00 00	 mov	 rax, QWORD PTR tv198[rsp]
  0040a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0040d	48 8b 8c 24 30
	1b 00 00	 mov	 rcx, QWORD PTR tv198[rsp]
  00415	ff 50 68	 call	 QWORD PTR [rax+104]
  00418	89 84 24 b4 11
	00 00		 mov	 DWORD PTR memtype$32[rsp], eax

; 836  : 
; 837  :         basic_stringstream<TCHAR> ss;

  0041f	41 b8 01 00 00
	00		 mov	 r8d, 1
  00425	ba 03 00 00 00	 mov	 edx, 3
  0042a	48 8d 8c 24 d0
	11 00 00	 lea	 rcx, QWORD PTR ss$33[rsp]
  00432	e8 00 00 00 00	 call	 ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  00437	90		 npad	 1

; 838  :         FILE *fp_bench = NULL;

  00438	48 c7 84 24 e8
	12 00 00 00 00
	00 00		 mov	 QWORD PTR fp_bench$34[rsp], 0

; 839  :         if (_tfopen_s(&fp_bench, benchmarkLogFile.c_str(), _T("a")) || NULL == fp_bench) {

  00444	48 8d 4c 24 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rsp]
  00449	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0044e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG180943
  00455	48 8b d0	 mov	 rdx, rax
  00458	48 8d 8c 24 e8
	12 00 00	 lea	 rcx, QWORD PTR fp_bench$34[rsp]
  00460	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fopen_s
  00466	85 c0		 test	 eax, eax
  00468	75 0f		 jne	 SHORT $LN52@run_benchm
  0046a	48 83 bc 24 e8
	12 00 00 00	 cmp	 QWORD PTR fp_bench$34[rsp], 0
  00473	0f 85 95 00 00
	00		 jne	 $LN50@run_benchm
$LN52@run_benchm:

; 840  :             pPipeline->PrintMes(RGY_LOG_ERROR, _T("\nERROR: failed opening benchmark result file.\n"));

  00479	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  00481	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00486	48 89 84 24 38
	1b 00 00	 mov	 QWORD PTR tv218[rsp], rax
  0048e	48 8b 84 24 38
	1b 00 00	 mov	 rax, QWORD PTR tv218[rsp]
  00496	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00499	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG180944
  004a0	ba 02 00 00 00	 mov	 edx, 2
  004a5	48 8b 8c 24 38
	1b 00 00	 mov	 rcx, QWORD PTR tv218[rsp]
  004ad	ff 50 70	 call	 QWORD PTR [rax+112]

; 841  :             return MFX_ERR_INVALID_HANDLE;

  004b0	c7 84 24 b4 1a
	00 00 fa ff ff
	ff		 mov	 DWORD PTR $T105[rsp], -6
  004bb	48 8d 8c 24 d0
	11 00 00	 lea	 rcx, QWORD PTR ss$33[rsp]
  004c3	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  004c8	90		 npad	 1
  004c9	48 8d 8c 24 88
	11 00 00	 lea	 rcx, QWORD PTR enviroment_info$31[rsp]
  004d1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  004d6	90		 npad	 1
  004d7	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  004df	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  004e4	90		 npad	 1
  004e5	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  004ed	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
  004f2	90		 npad	 1
  004f3	48 8d 4c 24 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rsp]
  004f8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  004fd	8b 84 24 b4 1a
	00 00		 mov	 eax, DWORD PTR $T105[rsp]
  00504	e9 e0 15 00 00	 jmp	 $LN1@run_benchm

; 842  :         } else {

  00509	e9 23 03 00 00	 jmp	 $LN51@run_benchm
$LN50@run_benchm:

; 843  :             fprintf(fp_bench, "Started benchmark on %d.%02d.%02d %2d:%02d:%02d\n",

  0050e	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR local_time$27[rsp]
  00516	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00519	ff c0		 inc	 eax
  0051b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR local_time$27[rsp]
  00523	8b 49 14	 mov	 ecx, DWORD PTR [rcx+20]
  00526	81 c1 6c 07 00
	00		 add	 ecx, 1900		; 0000076cH
  0052c	48 8b 94 24 18
	01 00 00	 mov	 rdx, QWORD PTR local_time$27[rsp]
  00534	8b 12		 mov	 edx, DWORD PTR [rdx]
  00536	89 54 24 38	 mov	 DWORD PTR [rsp+56], edx
  0053a	48 8b 94 24 18
	01 00 00	 mov	 rdx, QWORD PTR local_time$27[rsp]
  00542	8b 52 04	 mov	 edx, DWORD PTR [rdx+4]
  00545	89 54 24 30	 mov	 DWORD PTR [rsp+48], edx
  00549	48 8b 94 24 18
	01 00 00	 mov	 rdx, QWORD PTR local_time$27[rsp]
  00551	8b 52 08	 mov	 edx, DWORD PTR [rdx+8]
  00554	89 54 24 28	 mov	 DWORD PTR [rsp+40], edx
  00558	48 8b 94 24 18
	01 00 00	 mov	 rdx, QWORD PTR local_time$27[rsp]
  00560	8b 52 0c	 mov	 edx, DWORD PTR [rdx+12]
  00563	89 54 24 20	 mov	 DWORD PTR [rsp+32], edx
  00567	44 8b c8	 mov	 r9d, eax
  0056a	44 8b c1	 mov	 r8d, ecx
  0056d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180946
  00574	48 8b 8c 24 e8
	12 00 00	 mov	 rcx, QWORD PTR fp_bench$34[rsp]
  0057c	e8 00 00 00 00	 call	 fprintf

; 844  :                 1900 + local_time->tm_year, local_time->tm_mon + 1, local_time->tm_mday, local_time->tm_hour, local_time->tm_min, local_time->tm_sec);
; 845  :             fprintf(fp_bench, "Input File: %s\n", tchar_to_string(params->strSrcFile).c_str());

  00581	48 8b 84 24 90
	1c 00 00	 mov	 rax, QWORD PTR params$[rsp]
  00589	48 05 dc 05 00
	00		 add	 rax, 1500		; 000005dcH
  0058f	41 b8 03 00 00
	00		 mov	 r8d, 3
  00595	48 8b d0	 mov	 rdx, rax
  00598	48 8d 8c 24 f8
	12 00 00	 lea	 rcx, QWORD PTR $T35[rsp]
  005a0	e8 00 00 00 00	 call	 ?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; tchar_to_string
  005a5	48 89 84 24 40
	1b 00 00	 mov	 QWORD PTR tv203[rsp], rax
  005ad	48 8b 84 24 40
	1b 00 00	 mov	 rax, QWORD PTR tv203[rsp]
  005b5	48 89 84 24 48
	1b 00 00	 mov	 QWORD PTR tv914[rsp], rax
  005bd	48 8b 8c 24 48
	1b 00 00	 mov	 rcx, QWORD PTR tv914[rsp]
  005c5	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  005ca	4c 8b c0	 mov	 r8, rax
  005cd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180947
  005d4	48 8b 8c 24 e8
	12 00 00	 mov	 rcx, QWORD PTR fp_bench$34[rsp]
  005dc	e8 00 00 00 00	 call	 fprintf
  005e1	90		 npad	 1
  005e2	48 8d 8c 24 f8
	12 00 00	 lea	 rcx, QWORD PTR $T35[rsp]
  005ea	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 846  :             fprintf(fp_bench, "Basic parameters of the benchmark\n"

  005ef	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180948
  005f6	48 8b 8c 24 e8
	12 00 00	 mov	 rcx, QWORD PTR fp_bench$34[rsp]
  005fe	e8 00 00 00 00	 call	 fprintf

; 847  :                               " (Target Usage and output resolution will be changed)\n");
; 848  :             fprintf(fp_bench, "%s\n\n", tchar_to_string(encode_info).c_str());

  00603	41 b8 03 00 00
	00		 mov	 r8d, 3
  00609	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR encode_info$28[rsp]
  00611	48 8d 8c 24 20
	13 00 00	 lea	 rcx, QWORD PTR $T36[rsp]
  00619	e8 00 00 00 00	 call	 ?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; tchar_to_string
  0061e	48 89 84 24 50
	1b 00 00	 mov	 QWORD PTR tv191[rsp], rax
  00626	48 8b 84 24 50
	1b 00 00	 mov	 rax, QWORD PTR tv191[rsp]
  0062e	48 89 84 24 58
	1b 00 00	 mov	 QWORD PTR tv916[rsp], rax
  00636	48 8b 8c 24 58
	1b 00 00	 mov	 rcx, QWORD PTR tv916[rsp]
  0063e	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00643	4c 8b c0	 mov	 r8, rax
  00646	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180949
  0064d	48 8b 8c 24 e8
	12 00 00	 mov	 rcx, QWORD PTR fp_bench$34[rsp]
  00655	e8 00 00 00 00	 call	 fprintf
  0065a	90		 npad	 1
  0065b	48 8d 8c 24 20
	13 00 00	 lea	 rcx, QWORD PTR $T36[rsp]
  00663	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 849  :             fprintf(fp_bench, "%s", tchar_to_string(enviroment_info).c_str());

  00668	41 b8 03 00 00
	00		 mov	 r8d, 3
  0066e	48 8d 94 24 88
	11 00 00	 lea	 rdx, QWORD PTR enviroment_info$31[rsp]
  00676	48 8d 8c 24 48
	13 00 00	 lea	 rcx, QWORD PTR $T37[rsp]
  0067e	e8 00 00 00 00	 call	 ?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z ; tchar_to_string
  00683	48 89 84 24 60
	1b 00 00	 mov	 QWORD PTR tv131[rsp], rax
  0068b	48 8b 84 24 60
	1b 00 00	 mov	 rax, QWORD PTR tv131[rsp]
  00693	48 89 84 24 68
	1b 00 00	 mov	 QWORD PTR tv918[rsp], rax
  0069b	48 8b 8c 24 68
	1b 00 00	 mov	 rcx, QWORD PTR tv918[rsp]
  006a3	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  006a8	4c 8b c0	 mov	 r8, rax
  006ab	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180950
  006b2	48 8b 8c 24 e8
	12 00 00	 mov	 rcx, QWORD PTR fp_bench$34[rsp]
  006ba	e8 00 00 00 00	 call	 fprintf
  006bf	90		 npad	 1
  006c0	48 8d 8c 24 48
	13 00 00	 lea	 rcx, QWORD PTR $T37[rsp]
  006c8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 850  :             fprintf(fp_bench, "QSV: QSVEncC %s (%s) / API[%s]: v%d.%d / %s\n",

  006cd	0f b6 84 24 44
	11 00 00	 movzx	 eax, BYTE PTR hardware$29[rsp]
  006d5	85 c0		 test	 eax, eax
  006d7	74 11		 je	 SHORT $LN79@run_benchm
  006d9	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG180951
  006e0	48 89 84 24 70
	1b 00 00	 mov	 QWORD PTR tv325[rsp], rax
  006e8	eb 0f		 jmp	 SHORT $LN80@run_benchm
$LN79@run_benchm:
  006ea	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG180952
  006f1	48 89 84 24 70
	1b 00 00	 mov	 QWORD PTR tv325[rsp], rax
$LN80@run_benchm:
  006f9	8b 8c 24 b4 11
	00 00		 mov	 ecx, DWORD PTR memtype$32[rsp]
  00700	e8 00 00 00 00	 call	 ?MemTypeToStr@@YAPEBDI@Z ; MemTypeToStr
  00705	41 b8 03 00 00
	00		 mov	 r8d, 3
  0070b	48 8b d0	 mov	 rdx, rax
  0070e	48 8d 8c 24 98
	13 00 00	 lea	 rcx, QWORD PTR $T39[rsp]
  00716	e8 00 00 00 00	 call	 ?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; tchar_to_string
  0071b	48 89 84 24 78
	1b 00 00	 mov	 QWORD PTR tv70[rsp], rax
  00723	48 8b 84 24 78
	1b 00 00	 mov	 rax, QWORD PTR tv70[rsp]
  0072b	48 89 84 24 80
	1b 00 00	 mov	 QWORD PTR tv920[rsp], rax
  00733	48 8b 8c 24 80
	1b 00 00	 mov	 rcx, QWORD PTR tv920[rsp]
  0073b	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00740	48 89 84 24 88
	1b 00 00	 mov	 QWORD PTR tv285[rsp], rax
  00748	0f b7 8c 24 64
	11 00 00	 movzx	 ecx, WORD PTR ver$30[rsp]
  00750	89 8c 24 90 1b
	00 00		 mov	 DWORD PTR tv287[rsp], ecx
  00757	0f b7 94 24 66
	11 00 00	 movzx	 edx, WORD PTR ver$30[rsp+2]
  0075f	89 94 24 94 1b
	00 00		 mov	 DWORD PTR tv321[rsp], edx
  00766	41 b8 03 00 00
	00		 mov	 r8d, 3
  0076c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180953
  00773	48 8d 8c 24 70
	13 00 00	 lea	 rcx, QWORD PTR $T38[rsp]
  0077b	e8 00 00 00 00	 call	 ?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; tchar_to_string
  00780	48 89 84 24 98
	1b 00 00	 mov	 QWORD PTR tv65[rsp], rax
  00788	48 8b 84 24 98
	1b 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  00790	48 89 84 24 a0
	1b 00 00	 mov	 QWORD PTR tv922[rsp], rax
  00798	48 8b 8c 24 a0
	1b 00 00	 mov	 rcx, QWORD PTR tv922[rsp]
  007a0	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  007a5	48 8b 8c 24 88
	1b 00 00	 mov	 rcx, QWORD PTR tv285[rsp]
  007ad	48 89 4c 24 38	 mov	 QWORD PTR [rsp+56], rcx
  007b2	8b 8c 24 90 1b
	00 00		 mov	 ecx, DWORD PTR tv287[rsp]
  007b9	89 4c 24 30	 mov	 DWORD PTR [rsp+48], ecx
  007bd	8b 8c 24 94 1b
	00 00		 mov	 ecx, DWORD PTR tv321[rsp]
  007c4	89 4c 24 28	 mov	 DWORD PTR [rsp+40], ecx
  007c8	48 8b 8c 24 70
	1b 00 00	 mov	 rcx, QWORD PTR tv325[rsp]
  007d0	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  007d5	4c 8b c8	 mov	 r9, rax
  007d8	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG180954
  007df	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180955
  007e6	48 8b 8c 24 e8
	12 00 00	 mov	 rcx, QWORD PTR fp_bench$34[rsp]
  007ee	e8 00 00 00 00	 call	 fprintf
  007f3	90		 npad	 1
  007f4	48 8d 8c 24 70
	13 00 00	 lea	 rcx, QWORD PTR $T38[rsp]
  007fc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00801	90		 npad	 1
  00802	48 8d 8c 24 98
	13 00 00	 lea	 rcx, QWORD PTR $T39[rsp]
  0080a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 851  :                 VER_STR_FILEVERSION, tchar_to_string(BUILD_ARCH_STR).c_str(), (hardware) ? "hw" : "sw", ver.Major, ver.Minor, tchar_to_string(MemTypeToStr(memtype)).c_str());
; 852  :             fprintf(fp_bench, "\n");

  0080f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180956
  00816	48 8b 8c 24 e8
	12 00 00	 mov	 rcx, QWORD PTR fp_bench$34[rsp]
  0081e	e8 00 00 00 00	 call	 fprintf

; 853  :             fclose(fp_bench);

  00823	48 8b 8c 24 e8
	12 00 00	 mov	 rcx, QWORD PTR fp_bench$34[rsp]
  0082b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose
$LN51@run_benchm:

; 854  :         }
; 855  :         basic_ofstream<TCHAR> benchmark_log_test_open(benchmarkLogFile, ios::out | ios::app);

  00831	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  00839	41 b9 40 00 00
	00		 mov	 r9d, 64			; 00000040H
  0083f	41 b8 0a 00 00
	00		 mov	 r8d, 10
  00845	48 8d 54 24 58	 lea	 rdx, QWORD PTR benchmarkLogFile$[rsp]
  0084a	48 8d 8c 24 d0
	13 00 00	 lea	 rcx, QWORD PTR benchmark_log_test_open$40[rsp]
  00852	e8 00 00 00 00	 call	 ??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
  00857	90		 npad	 1

; 856  :         if (!benchmark_log_test_open.good()) {

  00858	48 8b 84 24 d0
	13 00 00	 mov	 rax, QWORD PTR benchmark_log_test_open$40[rsp]
  00860	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00864	48 8d 84 04 d0
	13 00 00	 lea	 rax, QWORD PTR benchmark_log_test_open$40[rsp+rax]
  0086c	48 8b c8	 mov	 rcx, rax
  0086f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  00875	0f b6 c0	 movzx	 eax, al
  00878	85 c0		 test	 eax, eax
  0087a	0f 85 9e 00 00
	00		 jne	 $LN53@run_benchm

; 857  :             pPipeline->PrintMes(RGY_LOG_ERROR, _T("\nERROR: failed opening benchmark result file.\n"));

  00880	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  00888	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  0088d	48 89 84 24 a8
	1b 00 00	 mov	 QWORD PTR tv365[rsp], rax
  00895	48 8b 84 24 a8
	1b 00 00	 mov	 rax, QWORD PTR tv365[rsp]
  0089d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  008a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG180958
  008a7	ba 02 00 00 00	 mov	 edx, 2
  008ac	48 8b 8c 24 a8
	1b 00 00	 mov	 rcx, QWORD PTR tv365[rsp]
  008b4	ff 50 70	 call	 QWORD PTR [rax+112]

; 858  :             return MFX_ERR_INVALID_HANDLE;

  008b7	c7 84 24 b8 1a
	00 00 fa ff ff
	ff		 mov	 DWORD PTR $T106[rsp], -6
  008c2	48 8d 8c 24 d0
	13 00 00	 lea	 rcx, QWORD PTR benchmark_log_test_open$40[rsp]
  008ca	e8 00 00 00 00	 call	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  008cf	90		 npad	 1
  008d0	48 8d 8c 24 d0
	11 00 00	 lea	 rcx, QWORD PTR ss$33[rsp]
  008d8	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  008dd	90		 npad	 1
  008de	48 8d 8c 24 88
	11 00 00	 lea	 rcx, QWORD PTR enviroment_info$31[rsp]
  008e6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  008eb	90		 npad	 1
  008ec	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  008f4	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  008f9	90		 npad	 1
  008fa	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  00902	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
  00907	90		 npad	 1
  00908	48 8d 4c 24 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rsp]
  0090d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00912	8b 84 24 b8 1a
	00 00		 mov	 eax, DWORD PTR $T106[rsp]
  00919	e9 cb 11 00 00	 jmp	 $LN1@run_benchm
$LN53@run_benchm:

; 859  :         }
; 860  :         benchmark_log_test_open << ss.str();

  0091e	48 8d 94 24 e8
	14 00 00	 lea	 rdx, QWORD PTR $T41[rsp]
  00926	48 8d 8c 24 d0
	11 00 00	 lea	 rcx, QWORD PTR ss$33[rsp]
  0092e	e8 00 00 00 00	 call	 ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
  00933	48 89 84 24 b0
	1b 00 00	 mov	 QWORD PTR tv342[rsp], rax
  0093b	48 8b 84 24 b0
	1b 00 00	 mov	 rax, QWORD PTR tv342[rsp]
  00943	48 89 84 24 b8
	1b 00 00	 mov	 QWORD PTR tv931[rsp], rax
  0094b	48 8b 94 24 b8
	1b 00 00	 mov	 rdx, QWORD PTR tv931[rsp]
  00953	48 8d 8c 24 d0
	13 00 00	 lea	 rcx, QWORD PTR benchmark_log_test_open$40[rsp]
  0095b	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
  00960	90		 npad	 1
  00961	48 8d 8c 24 e8
	14 00 00	 lea	 rcx, QWORD PTR $T41[rsp]
  00969	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 861  :         benchmark_log_test_open.close();

  0096e	48 8d 8c 24 d0
	13 00 00	 lea	 rcx, QWORD PTR benchmark_log_test_open$40[rsp]
  00976	e8 00 00 00 00	 call	 ?close@?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ofstream<char,std::char_traits<char> >::close
$LN2@run_benchm:

; 862  : 
; 863  :         for (;;) {
; 864  :             sts = pPipeline->Run();

  0097b	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  00983	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00988	48 89 84 24 c0
	1b 00 00	 mov	 QWORD PTR tv385[rsp], rax
  00990	48 8b 84 24 c0
	1b 00 00	 mov	 rax, QWORD PTR tv385[rsp]
  00998	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0099b	48 8b 8c 24 c0
	1b 00 00	 mov	 rcx, QWORD PTR tv385[rsp]
  009a3	ff 50 20	 call	 QWORD PTR [rax+32]
  009a6	89 44 24 40	 mov	 DWORD PTR sts$[rsp], eax

; 865  : 
; 866  :             if (MFX_ERR_DEVICE_LOST == sts || MFX_ERR_DEVICE_FAILED == sts) {

  009aa	83 7c 24 40 f3	 cmp	 DWORD PTR sts$[rsp], -13
  009af	74 0b		 je	 SHORT $LN56@run_benchm
  009b1	83 7c 24 40 ef	 cmp	 DWORD PTR sts$[rsp], -17
  009b6	0f 85 af 00 00
	00		 jne	 $LN54@run_benchm
$LN56@run_benchm:

; 867  :                 pPipeline->PrintMes(RGY_LOG_ERROR, _T("\nERROR: Hardware device was lost or returned an unexpected error. Recovering...\n"));

  009bc	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  009c4	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  009c9	48 89 84 24 c8
	1b 00 00	 mov	 QWORD PTR tv394[rsp], rax
  009d1	48 8b 84 24 c8
	1b 00 00	 mov	 rax, QWORD PTR tv394[rsp]
  009d9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  009dc	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG180963
  009e3	ba 02 00 00 00	 mov	 edx, 2
  009e8	48 8b 8c 24 c8
	1b 00 00	 mov	 rcx, QWORD PTR tv394[rsp]
  009f0	ff 50 70	 call	 QWORD PTR [rax+112]

; 868  :                 if (   MFX_ERR_NONE != (sts = pPipeline->ResetDevice())
; 869  :                     || MFX_ERR_NONE != (sts = pPipeline->ResetMFXComponents(params)))

  009f3	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  009fb	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00a00	48 89 84 24 d0
	1b 00 00	 mov	 QWORD PTR tv402[rsp], rax
  00a08	48 8b 84 24 d0
	1b 00 00	 mov	 rax, QWORD PTR tv402[rsp]
  00a10	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00a13	48 8b 8c 24 d0
	1b 00 00	 mov	 rcx, QWORD PTR tv402[rsp]
  00a1b	ff 50 38	 call	 QWORD PTR [rax+56]
  00a1e	89 44 24 40	 mov	 DWORD PTR sts$[rsp], eax
  00a22	83 7c 24 40 00	 cmp	 DWORD PTR sts$[rsp], 0
  00a27	75 3e		 jne	 SHORT $LN58@run_benchm
  00a29	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  00a31	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00a36	48 89 84 24 d8
	1b 00 00	 mov	 QWORD PTR tv410[rsp], rax
  00a3e	48 8b 84 24 d8
	1b 00 00	 mov	 rax, QWORD PTR tv410[rsp]
  00a46	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00a49	48 8b 94 24 90
	1c 00 00	 mov	 rdx, QWORD PTR params$[rsp]
  00a51	48 8b 8c 24 d8
	1b 00 00	 mov	 rcx, QWORD PTR tv410[rsp]
  00a59	ff 50 30	 call	 QWORD PTR [rax+48]
  00a5c	89 44 24 40	 mov	 DWORD PTR sts$[rsp], eax
  00a60	83 7c 24 40 00	 cmp	 DWORD PTR sts$[rsp], 0
  00a65	74 02		 je	 SHORT $LN57@run_benchm
$LN58@run_benchm:

; 870  :                     break;

  00a67	eb 09		 jmp	 SHORT $LN3@run_benchm
$LN57@run_benchm:

; 871  :             } else {

  00a69	eb 02		 jmp	 SHORT $LN55@run_benchm
$LN54@run_benchm:

; 872  :                 break;

  00a6b	eb 05		 jmp	 SHORT $LN3@run_benchm
$LN55@run_benchm:

; 873  :             }
; 874  :         }

  00a6d	e9 09 ff ff ff	 jmp	 $LN2@run_benchm
$LN3@run_benchm:

; 875  : 
; 876  :         EncodeStatusData data = { 0 };

  00a72	48 8d 84 24 20
	15 00 00	 lea	 rax, QWORD PTR data$42[rsp]
  00a7a	48 8b f8	 mov	 rdi, rax
  00a7d	33 c0		 xor	 eax, eax
  00a7f	b9 b0 00 00 00	 mov	 ecx, 176		; 000000b0H
  00a84	f3 aa		 rep stosb

; 877  :         sts = pPipeline->GetEncodeStatusData(&data);

  00a86	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  00a8e	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00a93	48 89 84 24 e0
	1b 00 00	 mov	 QWORD PTR tv423[rsp], rax
  00a9b	48 8b 84 24 e0
	1b 00 00	 mov	 rax, QWORD PTR tv423[rsp]
  00aa3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00aa6	48 8d 94 24 20
	15 00 00	 lea	 rdx, QWORD PTR data$42[rsp]
  00aae	48 8b 8c 24 e0
	1b 00 00	 mov	 rcx, QWORD PTR tv423[rsp]
  00ab6	ff 50 50	 call	 QWORD PTR [rax+80]
  00ab9	89 44 24 40	 mov	 DWORD PTR sts$[rsp], eax

; 878  : 
; 879  :         pPipeline->Close();

  00abd	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  00ac5	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00aca	48 89 84 24 e8
	1b 00 00	 mov	 QWORD PTR tv431[rsp], rax
  00ad2	48 8b 84 24 e8
	1b 00 00	 mov	 rax, QWORD PTR tv431[rsp]
  00ada	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00add	48 8b 8c 24 e8
	1b 00 00	 mov	 rcx, QWORD PTR tv431[rsp]
  00ae5	ff 50 28	 call	 QWORD PTR [rax+40]
  00ae8	90		 npad	 1

; 880  :     }

  00ae9	48 8d 8c 24 d0
	13 00 00	 lea	 rcx, QWORD PTR benchmark_log_test_open$40[rsp]
  00af1	e8 00 00 00 00	 call	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00af6	90		 npad	 1
  00af7	48 8d 8c 24 d0
	11 00 00	 lea	 rcx, QWORD PTR ss$33[rsp]
  00aff	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  00b04	90		 npad	 1
  00b05	48 8d 8c 24 88
	11 00 00	 lea	 rcx, QWORD PTR enviroment_info$31[rsp]
  00b0d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00b12	90		 npad	 1
  00b13	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR pPipeline$25[rsp]
  00b1b	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >

; 881  : 
; 882  :     //基准数据
; 883  :     typedef struct benchmark_t {
; 884  :         pair<int, int> resolution;
; 885  :         int targetUsage;
; 886  :         double fps;
; 887  :         double bitrate;
; 888  :         double cpuUsagePercent;
; 889  :     } benchmark_t;
; 890  : 
; 891  :     //目标质量
; 892  :     vector<CX_DESC> list_target_quality;

  00b20	48 8d 8c 24 e8
	15 00 00	 lea	 rcx, QWORD PTR list_target_quality$[rsp]
  00b28	e8 00 00 00 00	 call	 ??0?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::vector<CX_DESC,std::allocator<CX_DESC> >
  00b2d	90		 npad	 1

; 893  :     for (uint32_t i = 0; i < _countof(list_quality); i++) {

  00b2e	c7 84 24 14 16
	00 00 00 00 00
	00		 mov	 DWORD PTR i$43[rsp], 0
  00b39	eb 10		 jmp	 SHORT $LN7@run_benchm
$LN5@run_benchm:
  00b3b	8b 84 24 14 16
	00 00		 mov	 eax, DWORD PTR i$43[rsp]
  00b42	ff c0		 inc	 eax
  00b44	89 84 24 14 16
	00 00		 mov	 DWORD PTR i$43[rsp], eax
$LN7@run_benchm:
  00b4b	8b 84 24 14 16
	00 00		 mov	 eax, DWORD PTR i$43[rsp]
  00b52	48 83 f8 08	 cmp	 rax, 8
  00b56	0f 83 96 00 00
	00		 jae	 $LN6@run_benchm

; 894  :         if (list_quality[i].desc) {

  00b5c	8b 84 24 14 16
	00 00		 mov	 eax, DWORD PTR i$43[rsp]
  00b63	48 6b c0 10	 imul	 rax, rax, 16
  00b67	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_quality@@3QBUCX_DESC@@B
  00b6e	48 83 3c 01 00	 cmp	 QWORD PTR [rcx+rax], 0
  00b73	74 78		 je	 SHORT $LN59@run_benchm

; 895  :             int test = 1 << list_quality[i].value;

  00b75	8b 84 24 14 16
	00 00		 mov	 eax, DWORD PTR i$43[rsp]
  00b7c	48 6b c0 10	 imul	 rax, rax, 16
  00b80	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_quality@@3QBUCX_DESC@@B
  00b87	8b 44 01 08	 mov	 eax, DWORD PTR [rcx+rax+8]
  00b8b	b9 01 00 00 00	 mov	 ecx, 1
  00b90	89 8c 24 f0 1b
	00 00		 mov	 DWORD PTR tv1168[rsp], ecx
  00b97	0f b6 c8	 movzx	 ecx, al
  00b9a	8b 84 24 f0 1b
	00 00		 mov	 eax, DWORD PTR tv1168[rsp]
  00ba1	d3 e0		 shl	 eax, cl
  00ba3	89 84 24 18 16
	00 00		 mov	 DWORD PTR test$44[rsp], eax

; 896  :             if (params->nBenchQuality & test) {

  00baa	48 8b 84 24 90
	1c 00 00	 mov	 rax, QWORD PTR params$[rsp]
  00bb2	8b 8c 24 18 16
	00 00		 mov	 ecx, DWORD PTR test$44[rsp]
  00bb9	8b 80 50 01 00
	00		 mov	 eax, DWORD PTR [rax+336]
  00bbf	23 c1		 and	 eax, ecx
  00bc1	85 c0		 test	 eax, eax
  00bc3	74 28		 je	 SHORT $LN59@run_benchm

; 897  :                 list_target_quality.push_back(list_quality[i]);

  00bc5	8b 84 24 14 16
	00 00		 mov	 eax, DWORD PTR i$43[rsp]
  00bcc	48 6b c0 10	 imul	 rax, rax, 16
  00bd0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_quality@@3QBUCX_DESC@@B
  00bd7	48 03 c8	 add	 rcx, rax
  00bda	48 8b c1	 mov	 rax, rcx
  00bdd	48 8b d0	 mov	 rdx, rax
  00be0	48 8d 8c 24 e8
	15 00 00	 lea	 rcx, QWORD PTR list_target_quality$[rsp]
  00be8	e8 00 00 00 00	 call	 ?push_back@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAXAEBUCX_DESC@@@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::push_back
$LN59@run_benchm:

; 898  :             }
; 899  :         }
; 900  :     }

  00bed	e9 49 ff ff ff	 jmp	 $LN5@run_benchm
$LN6@run_benchm:

; 901  : 
; 902  :     //更新分辨率并进行测试
; 903  :     vector<vector<benchmark_t>> benchmark_result;

  00bf2	48 8d 8c 24 28
	16 00 00	 lea	 rcx, QWORD PTR benchmark_result$[rsp]
  00bfa	e8 00 00 00 00	 call	 ??0?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
  00bff	90		 npad	 1

; 904  :     benchmark_result.reserve(test_resolution.size() * list_target_quality.size());

  00c00	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  00c08	e8 00 00 00 00	 call	 ?size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::size
  00c0d	48 89 84 24 f8
	1b 00 00	 mov	 QWORD PTR tv463[rsp], rax
  00c15	48 8d 8c 24 e8
	15 00 00	 lea	 rcx, QWORD PTR list_target_quality$[rsp]
  00c1d	e8 00 00 00 00	 call	 ?size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::size
  00c22	48 8b 8c 24 f8
	1b 00 00	 mov	 rcx, QWORD PTR tv463[rsp]
  00c2a	48 0f af c8	 imul	 rcx, rax
  00c2e	48 8b c1	 mov	 rax, rcx
  00c31	48 8b d0	 mov	 rdx, rax
  00c34	48 8d 8c 24 28
	16 00 00	 lea	 rcx, QWORD PTR benchmark_result$[rsp]
  00c3c	e8 00 00 00 00	 call	 ?reserve@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAX_K@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::reserve

; 905  : 
; 906  :     for (uint32_t i = 0; MFX_ERR_NONE == sts && !g_signal_abort && i < list_target_quality.size(); i++) {

  00c41	c7 84 24 54 16
	00 00 00 00 00
	00		 mov	 DWORD PTR i$45[rsp], 0
  00c4c	eb 10		 jmp	 SHORT $LN10@run_benchm
$LN8@run_benchm:
  00c4e	8b 84 24 54 16
	00 00		 mov	 eax, DWORD PTR i$45[rsp]
  00c55	ff c0		 inc	 eax
  00c57	89 84 24 54 16
	00 00		 mov	 DWORD PTR i$45[rsp], eax
$LN10@run_benchm:
  00c5e	83 7c 24 40 00	 cmp	 DWORD PTR sts$[rsp], 0
  00c63	0f 85 8e 05 00
	00		 jne	 $LN9@run_benchm
  00c69	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?g_signal_abort@@3_NA
  00c70	85 c0		 test	 eax, eax
  00c72	0f 85 7f 05 00
	00		 jne	 $LN9@run_benchm
  00c78	8b 84 24 54 16
	00 00		 mov	 eax, DWORD PTR i$45[rsp]
  00c7f	48 89 84 24 00
	1c 00 00	 mov	 QWORD PTR tv472[rsp], rax
  00c87	48 8d 8c 24 e8
	15 00 00	 lea	 rcx, QWORD PTR list_target_quality$[rsp]
  00c8f	e8 00 00 00 00	 call	 ?size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::size
  00c94	48 8b 8c 24 00
	1c 00 00	 mov	 rcx, QWORD PTR tv472[rsp]
  00c9c	48 3b c8	 cmp	 rcx, rax
  00c9f	0f 83 52 05 00
	00		 jae	 $LN9@run_benchm

; 907  :         params->nTargetUsage = list_target_quality[i].value;

  00ca5	8b 84 24 54 16
	00 00		 mov	 eax, DWORD PTR i$45[rsp]
  00cac	8b d0		 mov	 edx, eax
  00cae	48 8d 8c 24 e8
	15 00 00	 lea	 rcx, QWORD PTR list_target_quality$[rsp]
  00cb6	e8 00 00 00 00	 call	 ??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::operator[]
  00cbb	48 8b 8c 24 90
	1c 00 00	 mov	 rcx, QWORD PTR params$[rsp]
  00cc3	0f b7 40 08	 movzx	 eax, WORD PTR [rax+8]
  00cc7	66 89 41 04	 mov	 WORD PTR [rcx+4], ax

; 908  :         vector<benchmark_t> benchmark_per_target_usage;

  00ccb	48 8d 8c 24 68
	16 00 00	 lea	 rcx, QWORD PTR benchmark_per_target_usage$46[rsp]
  00cd3	e8 00 00 00 00	 call	 ??0?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
  00cd8	90		 npad	 1

; 909  :         for (const auto& resolution : test_resolution) {

  00cd9	48 8d 84 24 98
	00 00 00	 lea	 rax, QWORD PTR test_resolution$[rsp]
  00ce1	48 89 84 24 98
	16 00 00	 mov	 QWORD PTR <range>$L0$47[rsp], rax
  00ce9	48 8b 8c 24 98
	16 00 00	 mov	 rcx, QWORD PTR <range>$L0$47[rsp]
  00cf1	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_begin
  00cf6	48 89 84 24 a0
	16 00 00	 mov	 QWORD PTR <begin>$L0$48[rsp], rax
  00cfe	48 8b 8c 24 98
	16 00 00	 mov	 rcx, QWORD PTR <range>$L0$47[rsp]
  00d06	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_end
  00d0b	48 89 84 24 a8
	16 00 00	 mov	 QWORD PTR <end>$L0$49[rsp], rax
  00d13	eb 14		 jmp	 SHORT $LN13@run_benchm
$LN11@run_benchm:
  00d15	48 8b 84 24 a0
	16 00 00	 mov	 rax, QWORD PTR <begin>$L0$48[rsp]
  00d1d	48 83 c0 08	 add	 rax, 8
  00d21	48 89 84 24 a0
	16 00 00	 mov	 QWORD PTR <begin>$L0$48[rsp], rax
$LN13@run_benchm:
  00d29	48 8b 84 24 a8
	16 00 00	 mov	 rax, QWORD PTR <end>$L0$49[rsp]
  00d31	48 39 84 24 a0
	16 00 00	 cmp	 QWORD PTR <begin>$L0$48[rsp], rax
  00d39	0f 84 90 04 00
	00		 je	 $LN12@run_benchm
  00d3f	48 8b 84 24 a0
	16 00 00	 mov	 rax, QWORD PTR <begin>$L0$48[rsp]
  00d47	48 89 84 24 b0
	16 00 00	 mov	 QWORD PTR resolution$50[rsp], rax

; 910  :             params->nDstWidth = resolution.first;

  00d4f	48 8b 84 24 90
	1c 00 00	 mov	 rax, QWORD PTR params$[rsp]
  00d57	48 8b 8c 24 b0
	16 00 00	 mov	 rcx, QWORD PTR resolution$50[rsp]
  00d5f	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  00d62	66 89 48 4e	 mov	 WORD PTR [rax+78], cx

; 911  :             params->nDstHeight = resolution.second;

  00d66	48 8b 84 24 90
	1c 00 00	 mov	 rax, QWORD PTR params$[rsp]
  00d6e	48 8b 8c 24 b0
	16 00 00	 mov	 rcx, QWORD PTR resolution$50[rsp]
  00d76	0f b7 49 04	 movzx	 ecx, WORD PTR [rcx+4]
  00d7a	66 89 48 50	 mov	 WORD PTR [rax+80], cx

; 912  : 
; 913  :             unique_ptr<CQSVPipeline> pPipeline(new CQSVPipeline);

  00d7e	b9 08 14 00 00	 mov	 ecx, 5128		; 00001408H
  00d83	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00d88	48 89 84 24 c8
	1a 00 00	 mov	 QWORD PTR $T108[rsp], rax
  00d90	48 83 bc 24 c8
	1a 00 00 00	 cmp	 QWORD PTR $T108[rsp], 0
  00d99	74 17		 je	 SHORT $LN81@run_benchm
  00d9b	48 8b 8c 24 c8
	1a 00 00	 mov	 rcx, QWORD PTR $T108[rsp]
  00da3	e8 00 00 00 00	 call	 ??0CQSVPipeline@@QEAA@XZ ; CQSVPipeline::CQSVPipeline
  00da8	48 89 84 24 08
	1c 00 00	 mov	 QWORD PTR tv508[rsp], rax
  00db0	eb 0c		 jmp	 SHORT $LN82@run_benchm
$LN81@run_benchm:
  00db2	48 c7 84 24 08
	1c 00 00 00 00
	00 00		 mov	 QWORD PTR tv508[rsp], 0
$LN82@run_benchm:
  00dbe	48 8b 84 24 08
	1c 00 00	 mov	 rax, QWORD PTR tv508[rsp]
  00dc6	48 89 84 24 c0
	1a 00 00	 mov	 QWORD PTR $T107[rsp], rax
  00dce	48 8b 94 24 c0
	1a 00 00	 mov	 rdx, QWORD PTR $T107[rsp]
  00dd6	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  00dde	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> ><std::default_delete<CQSVPipeline>,0>
  00de3	90		 npad	 1

; 914  :             if (!pPipeline) {

  00de4	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  00dec	e8 00 00 00 00	 call	 ??B?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBA_NXZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator bool
  00df1	0f b6 c0	 movzx	 eax, al
  00df4	85 c0		 test	 eax, eax
  00df6	75 67		 jne	 SHORT $LN61@run_benchm

; 915  :                 return MFX_ERR_MEMORY_ALLOC;

  00df8	c7 84 24 d0 1a
	00 00 fc ff ff
	ff		 mov	 DWORD PTR $T109[rsp], -4
  00e03	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  00e0b	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00e10	90		 npad	 1
  00e11	48 8d 8c 24 68
	16 00 00	 lea	 rcx, QWORD PTR benchmark_per_target_usage$46[rsp]
  00e19	e8 00 00 00 00	 call	 ??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::~vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
  00e1e	90		 npad	 1
  00e1f	48 8d 8c 24 28
	16 00 00	 lea	 rcx, QWORD PTR benchmark_result$[rsp]
  00e27	e8 00 00 00 00	 call	 ??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
  00e2c	90		 npad	 1
  00e2d	48 8d 8c 24 e8
	15 00 00	 lea	 rcx, QWORD PTR list_target_quality$[rsp]
  00e35	e8 00 00 00 00	 call	 ??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::~vector<CX_DESC,std::allocator<CX_DESC> >
  00e3a	90		 npad	 1
  00e3b	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  00e43	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
  00e48	90		 npad	 1
  00e49	48 8d 4c 24 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rsp]
  00e4e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00e53	8b 84 24 d0 1a
	00 00		 mov	 eax, DWORD PTR $T109[rsp]
  00e5a	e9 8a 0c 00 00	 jmp	 $LN1@run_benchm
$LN61@run_benchm:

; 916  :             }
; 917  : 
; 918  :             if (MFX_ERR_NONE != (sts = pPipeline->Init(params))) {

  00e5f	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  00e67	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00e6c	48 89 84 24 10
	1c 00 00	 mov	 QWORD PTR tv517[rsp], rax
  00e74	48 8b 84 24 10
	1c 00 00	 mov	 rax, QWORD PTR tv517[rsp]
  00e7c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00e7f	48 8b 94 24 90
	1c 00 00	 mov	 rdx, QWORD PTR params$[rsp]
  00e87	48 8b 8c 24 10
	1c 00 00	 mov	 rcx, QWORD PTR tv517[rsp]
  00e8f	ff 50 10	 call	 QWORD PTR [rax+16]
  00e92	89 44 24 40	 mov	 DWORD PTR sts$[rsp], eax
  00e96	83 7c 24 40 00	 cmp	 DWORD PTR sts$[rsp], 0
  00e9b	74 12		 je	 SHORT $LN62@run_benchm

; 919  :                 break;

  00e9d	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  00ea5	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00eaa	e9 20 03 00 00	 jmp	 $LN12@run_benchm
$LN62@run_benchm:

; 920  :             }
; 921  : 
; 922  :             pPipeline->SetAbortFlagPointer(&g_signal_abort);

  00eaf	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  00eb7	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00ebc	48 89 84 24 18
	1c 00 00	 mov	 QWORD PTR tv526[rsp], rax
  00ec4	48 8b 84 24 18
	1c 00 00	 mov	 rax, QWORD PTR tv526[rsp]
  00ecc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00ecf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?g_signal_abort@@3_NA
  00ed6	48 8b 8c 24 18
	1c 00 00	 mov	 rcx, QWORD PTR tv526[rsp]
  00ede	ff 50 48	 call	 QWORD PTR [rax+72]

; 923  :             set_signal_handler();

  00ee1	e8 00 00 00 00	 call	 ?set_signal_handler@@YAHXZ ; set_signal_handler

; 924  :             if (MFX_ERR_NONE != (sts = pPipeline->CheckCurrentVideoParam())) {

  00ee6	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  00eee	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00ef3	48 89 84 24 20
	1c 00 00	 mov	 QWORD PTR tv533[rsp], rax
  00efb	48 8b 84 24 20
	1c 00 00	 mov	 rax, QWORD PTR tv533[rsp]
  00f03	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00f06	45 33 c0	 xor	 r8d, r8d
  00f09	33 d2		 xor	 edx, edx
  00f0b	48 8b 8c 24 20
	1c 00 00	 mov	 rcx, QWORD PTR tv533[rsp]
  00f13	ff 50 40	 call	 QWORD PTR [rax+64]
  00f16	89 44 24 40	 mov	 DWORD PTR sts$[rsp], eax
  00f1a	83 7c 24 40 00	 cmp	 DWORD PTR sts$[rsp], 0
  00f1f	74 67		 je	 SHORT $LN14@run_benchm

; 925  :                 return sts;

  00f21	8b 44 24 40	 mov	 eax, DWORD PTR sts$[rsp]
  00f25	89 84 24 d4 1a
	00 00		 mov	 DWORD PTR $T110[rsp], eax
  00f2c	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  00f34	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00f39	90		 npad	 1
  00f3a	48 8d 8c 24 68
	16 00 00	 lea	 rcx, QWORD PTR benchmark_per_target_usage$46[rsp]
  00f42	e8 00 00 00 00	 call	 ??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::~vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
  00f47	90		 npad	 1
  00f48	48 8d 8c 24 28
	16 00 00	 lea	 rcx, QWORD PTR benchmark_result$[rsp]
  00f50	e8 00 00 00 00	 call	 ??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
  00f55	90		 npad	 1
  00f56	48 8d 8c 24 e8
	15 00 00	 lea	 rcx, QWORD PTR list_target_quality$[rsp]
  00f5e	e8 00 00 00 00	 call	 ??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::~vector<CX_DESC,std::allocator<CX_DESC> >
  00f63	90		 npad	 1
  00f64	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  00f6c	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
  00f71	90		 npad	 1
  00f72	48 8d 4c 24 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rsp]
  00f77	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00f7c	8b 84 24 d4 1a
	00 00		 mov	 eax, DWORD PTR $T110[rsp]
  00f83	e9 61 0b 00 00	 jmp	 $LN1@run_benchm
$LN14@run_benchm:

; 926  :             }
; 927  : 
; 928  :             for (;;) {
; 929  :                 sts = pPipeline->Run();

  00f88	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  00f90	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00f95	48 89 84 24 28
	1c 00 00	 mov	 QWORD PTR tv543[rsp], rax
  00f9d	48 8b 84 24 28
	1c 00 00	 mov	 rax, QWORD PTR tv543[rsp]
  00fa5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00fa8	48 8b 8c 24 28
	1c 00 00	 mov	 rcx, QWORD PTR tv543[rsp]
  00fb0	ff 50 20	 call	 QWORD PTR [rax+32]
  00fb3	89 44 24 40	 mov	 DWORD PTR sts$[rsp], eax

; 930  : 
; 931  :                 if (MFX_ERR_DEVICE_LOST == sts || MFX_ERR_DEVICE_FAILED == sts) {

  00fb7	83 7c 24 40 f3	 cmp	 DWORD PTR sts$[rsp], -13
  00fbc	74 0b		 je	 SHORT $LN66@run_benchm
  00fbe	83 7c 24 40 ef	 cmp	 DWORD PTR sts$[rsp], -17
  00fc3	0f 85 af 00 00
	00		 jne	 $LN64@run_benchm
$LN66@run_benchm:

; 932  :                     pPipeline->PrintMes(RGY_LOG_ERROR, _T("\nERROR: Hardware device was lost or returned an unexpected error. Recovering...\n"));

  00fc9	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  00fd1	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00fd6	48 89 84 24 30
	1c 00 00	 mov	 QWORD PTR tv552[rsp], rax
  00fde	48 8b 84 24 30
	1c 00 00	 mov	 rax, QWORD PTR tv552[rsp]
  00fe6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00fe9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG180977
  00ff0	ba 02 00 00 00	 mov	 edx, 2
  00ff5	48 8b 8c 24 30
	1c 00 00	 mov	 rcx, QWORD PTR tv552[rsp]
  00ffd	ff 50 70	 call	 QWORD PTR [rax+112]

; 933  :                     if (   MFX_ERR_NONE != (sts = pPipeline->ResetDevice())
; 934  :                         || MFX_ERR_NONE != (sts = pPipeline->ResetMFXComponents(params)))

  01000	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  01008	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  0100d	48 89 84 24 38
	1c 00 00	 mov	 QWORD PTR tv560[rsp], rax
  01015	48 8b 84 24 38
	1c 00 00	 mov	 rax, QWORD PTR tv560[rsp]
  0101d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  01020	48 8b 8c 24 38
	1c 00 00	 mov	 rcx, QWORD PTR tv560[rsp]
  01028	ff 50 38	 call	 QWORD PTR [rax+56]
  0102b	89 44 24 40	 mov	 DWORD PTR sts$[rsp], eax
  0102f	83 7c 24 40 00	 cmp	 DWORD PTR sts$[rsp], 0
  01034	75 3e		 jne	 SHORT $LN68@run_benchm
  01036	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  0103e	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  01043	48 89 84 24 40
	1c 00 00	 mov	 QWORD PTR tv568[rsp], rax
  0104b	48 8b 84 24 40
	1c 00 00	 mov	 rax, QWORD PTR tv568[rsp]
  01053	48 8b 00	 mov	 rax, QWORD PTR [rax]
  01056	48 8b 94 24 90
	1c 00 00	 mov	 rdx, QWORD PTR params$[rsp]
  0105e	48 8b 8c 24 40
	1c 00 00	 mov	 rcx, QWORD PTR tv568[rsp]
  01066	ff 50 30	 call	 QWORD PTR [rax+48]
  01069	89 44 24 40	 mov	 DWORD PTR sts$[rsp], eax
  0106d	83 7c 24 40 00	 cmp	 DWORD PTR sts$[rsp], 0
  01072	74 02		 je	 SHORT $LN67@run_benchm
$LN68@run_benchm:

; 935  :                         break;

  01074	eb 09		 jmp	 SHORT $LN15@run_benchm
$LN67@run_benchm:

; 936  :                 } else {

  01076	eb 02		 jmp	 SHORT $LN65@run_benchm
$LN64@run_benchm:

; 937  :                     break;

  01078	eb 05		 jmp	 SHORT $LN15@run_benchm
$LN65@run_benchm:

; 938  :                 }
; 939  :             }

  0107a	e9 09 ff ff ff	 jmp	 $LN14@run_benchm
$LN15@run_benchm:

; 940  : 
; 941  :             EncodeStatusData data = { 0 };

  0107f	48 8d 84 24 f0
	16 00 00	 lea	 rax, QWORD PTR data$52[rsp]
  01087	48 8b f8	 mov	 rdi, rax
  0108a	33 c0		 xor	 eax, eax
  0108c	b9 b0 00 00 00	 mov	 ecx, 176		; 000000b0H
  01091	f3 aa		 rep stosb

; 942  :             sts = pPipeline->GetEncodeStatusData(&data);

  01093	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  0109b	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  010a0	48 89 84 24 48
	1c 00 00	 mov	 QWORD PTR tv581[rsp], rax
  010a8	48 8b 84 24 48
	1c 00 00	 mov	 rax, QWORD PTR tv581[rsp]
  010b0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  010b3	48 8d 94 24 f0
	16 00 00	 lea	 rdx, QWORD PTR data$52[rsp]
  010bb	48 8b 8c 24 48
	1c 00 00	 mov	 rcx, QWORD PTR tv581[rsp]
  010c3	ff 50 50	 call	 QWORD PTR [rax+80]
  010c6	89 44 24 40	 mov	 DWORD PTR sts$[rsp], eax

; 943  : 
; 944  :             pPipeline->Close();

  010ca	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  010d2	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  010d7	48 89 84 24 50
	1c 00 00	 mov	 QWORD PTR tv589[rsp], rax
  010df	48 8b 84 24 50
	1c 00 00	 mov	 rax, QWORD PTR tv589[rsp]
  010e7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  010ea	48 8b 8c 24 50
	1c 00 00	 mov	 rcx, QWORD PTR tv589[rsp]
  010f2	ff 50 28	 call	 QWORD PTR [rax+40]

; 945  : 
; 946  :             benchmark_t result;

  010f5	48 8d 8c 24 b8
	17 00 00	 lea	 rcx, QWORD PTR result$53[rsp]
  010fd	e8 00 00 00 00	 call	 ??0benchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@QEAA@XZ

; 947  :             result.resolution      = resolution;

  01102	48 8b 94 24 b0
	16 00 00	 mov	 rdx, QWORD PTR resolution$50[rsp]
  0110a	48 8d 8c 24 b8
	17 00 00	 lea	 rcx, QWORD PTR result$53[rsp]
  01112	e8 00 00 00 00	 call	 ??$?4U?$pair@HH@std@@$0A@@?$pair@HH@std@@QEAAAEAU01@AEBU01@@Z ; std::pair<int,int>::operator=<std::pair<int,int>,0>

; 948  :             result.targetUsage     = list_target_quality[i].value;

  01117	8b 84 24 54 16
	00 00		 mov	 eax, DWORD PTR i$45[rsp]
  0111e	8b d0		 mov	 edx, eax
  01120	48 8d 8c 24 e8
	15 00 00	 lea	 rcx, QWORD PTR list_target_quality$[rsp]
  01128	e8 00 00 00 00	 call	 ??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::operator[]
  0112d	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  01130	89 84 24 c0 17
	00 00		 mov	 DWORD PTR result$53[rsp+8], eax

; 949  :             result.fps             = data.encodeFps;

  01137	f2 0f 10 84 24
	50 17 00 00	 movsd	 xmm0, QWORD PTR data$52[rsp+96]
  01140	f2 0f 11 84 24
	c8 17 00 00	 movsd	 QWORD PTR result$53[rsp+16], xmm0

; 950  :             result.bitrate         = data.bitrateKbps;

  01149	f2 0f 10 84 24
	58 17 00 00	 movsd	 xmm0, QWORD PTR data$52[rsp+104]
  01152	f2 0f 11 84 24
	d0 17 00 00	 movsd	 QWORD PTR result$53[rsp+24], xmm0

; 951  :             result.cpuUsagePercent = data.CPUUsagePercent;

  0115b	f2 0f 10 84 24
	60 17 00 00	 movsd	 xmm0, QWORD PTR data$52[rsp+112]
  01164	f2 0f 11 84 24
	d8 17 00 00	 movsd	 QWORD PTR result$53[rsp+32], xmm0

; 952  :             benchmark_per_target_usage.push_back(result);

  0116d	48 8d 94 24 b8
	17 00 00	 lea	 rdx, QWORD PTR result$53[rsp]
  01175	48 8d 8c 24 68
	16 00 00	 lea	 rcx, QWORD PTR benchmark_per_target_usage$46[rsp]
  0117d	e8 00 00 00 00	 call	 ?push_back@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAAXAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::push_back

; 953  : 
; 954  :             _ftprintf(stderr, _T("\n"));

  01182	b9 02 00 00 00	 mov	 ecx, 2
  01187	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  0118d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180980
  01194	48 8b c8	 mov	 rcx, rax
  01197	e8 00 00 00 00	 call	 fprintf

; 955  : 
; 956  :             if (MFX_ERR_NONE != sts || g_signal_abort)

  0119c	83 7c 24 40 00	 cmp	 DWORD PTR sts$[rsp], 0
  011a1	75 0b		 jne	 SHORT $LN70@run_benchm
  011a3	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?g_signal_abort@@3_NA
  011aa	85 c0		 test	 eax, eax
  011ac	74 0f		 je	 SHORT $LN69@run_benchm
$LN70@run_benchm:

; 957  :                 break;

  011ae	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  011b6	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  011bb	eb 12		 jmp	 SHORT $LN12@run_benchm
$LN69@run_benchm:

; 958  :         }

  011bd	48 8d 8c 24 c8
	16 00 00	 lea	 rcx, QWORD PTR pPipeline$51[rsp]
  011c5	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  011ca	e9 46 fb ff ff	 jmp	 $LN11@run_benchm
$LN12@run_benchm:

; 959  : 
; 960  :         benchmark_result.push_back(benchmark_per_target_usage);

  011cf	48 8d 94 24 68
	16 00 00	 lea	 rdx, QWORD PTR benchmark_per_target_usage$46[rsp]
  011d7	48 8d 8c 24 28
	16 00 00	 lea	 rcx, QWORD PTR benchmark_result$[rsp]
  011df	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAXAEBV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@@Z ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::push_back
  011e4	90		 npad	 1

; 961  :     }

  011e5	48 8d 8c 24 68
	16 00 00	 lea	 rcx, QWORD PTR benchmark_per_target_usage$46[rsp]
  011ed	e8 00 00 00 00	 call	 ??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::~vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
  011f2	e9 57 fa ff ff	 jmp	 $LN8@run_benchm
$LN9@run_benchm:

; 962  : 
; 963  :     //结果输出
; 964  :     if (MFX_ERR_NONE == sts && benchmark_result.size()) {

  011f7	83 7c 24 40 00	 cmp	 DWORD PTR sts$[rsp], 0
  011fc	0f 85 8d 08 00
	00		 jne	 $LN71@run_benchm
  01202	48 8d 8c 24 28
	16 00 00	 lea	 rcx, QWORD PTR benchmark_result$[rsp]
  0120a	e8 00 00 00 00	 call	 ?size@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::size
  0120f	48 85 c0	 test	 rax, rax
  01212	0f 84 77 08 00
	00		 je	 $LN71@run_benchm

; 965  :         basic_stringstream<TCHAR> ss;

  01218	41 b8 01 00 00
	00		 mov	 r8d, 1
  0121e	ba 03 00 00 00	 mov	 edx, 3
  01223	48 8d 8c 24 00
	18 00 00	 lea	 rcx, QWORD PTR ss$54[rsp]
  0122b	e8 00 00 00 00	 call	 ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  01230	90		 npad	 1

; 966  : 
; 967  :         uint32_t maxLengthOfTargetUsageDesc = 0;

  01231	c7 84 24 14 19
	00 00 00 00 00
	00		 mov	 DWORD PTR maxLengthOfTargetUsageDesc$55[rsp], 0

; 968  :         for (uint32_t i = 0; i < list_target_quality.size(); i++) {

  0123c	c7 84 24 24 19
	00 00 00 00 00
	00		 mov	 DWORD PTR i$56[rsp], 0
  01247	eb 10		 jmp	 SHORT $LN19@run_benchm
$LN17@run_benchm:
  01249	8b 84 24 24 19
	00 00		 mov	 eax, DWORD PTR i$56[rsp]
  01250	ff c0		 inc	 eax
  01252	89 84 24 24 19
	00 00		 mov	 DWORD PTR i$56[rsp], eax
$LN19@run_benchm:
  01259	8b 84 24 24 19
	00 00		 mov	 eax, DWORD PTR i$56[rsp]
  01260	48 89 84 24 58
	1c 00 00	 mov	 QWORD PTR tv653[rsp], rax
  01268	48 8d 8c 24 e8
	15 00 00	 lea	 rcx, QWORD PTR list_target_quality$[rsp]
  01270	e8 00 00 00 00	 call	 ?size@?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEBA_KXZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::size
  01275	48 8b 8c 24 58
	1c 00 00	 mov	 rcx, QWORD PTR tv653[rsp]
  0127d	48 3b c8	 cmp	 rcx, rax
  01280	73 45		 jae	 SHORT $LN18@run_benchm

; 969  :             maxLengthOfTargetUsageDesc = max(maxLengthOfTargetUsageDesc, (uint32_t)_tcslen(list_target_quality[i].desc));

  01282	8b 84 24 24 19
	00 00		 mov	 eax, DWORD PTR i$56[rsp]
  01289	8b d0		 mov	 edx, eax
  0128b	48 8d 8c 24 e8
	15 00 00	 lea	 rcx, QWORD PTR list_target_quality$[rsp]
  01293	e8 00 00 00 00	 call	 ??A?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAAAEAUCX_DESC@@_K@Z ; std::vector<CX_DESC,std::allocator<CX_DESC> >::operator[]
  01298	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0129b	e8 00 00 00 00	 call	 strlen
  012a0	89 84 24 d8 1a
	00 00		 mov	 DWORD PTR $T111[rsp], eax
  012a7	48 8d 94 24 d8
	1a 00 00	 lea	 rdx, QWORD PTR $T111[rsp]
  012af	48 8d 8c 24 14
	19 00 00	 lea	 rcx, QWORD PTR maxLengthOfTargetUsageDesc$55[rsp]
  012b7	e8 00 00 00 00	 call	 ??$max@I@std@@YAAEBIAEBI0@Z ; std::max<unsigned int>
  012bc	8b 00		 mov	 eax, DWORD PTR [rax]
  012be	89 84 24 14 19
	00 00		 mov	 DWORD PTR maxLengthOfTargetUsageDesc$55[rsp], eax

; 970  :         }

  012c5	eb 82		 jmp	 SHORT $LN17@run_benchm
$LN18@run_benchm:

; 971  : 
; 972  :         FILE *fp_bench = NULL;

  012c7	48 c7 84 24 38
	19 00 00 00 00
	00 00		 mov	 QWORD PTR fp_bench$57[rsp], 0

; 973  :         if (_tfopen_s(&fp_bench, benchmarkLogFile.c_str(), _T("a")) || NULL == fp_bench) {

  012d3	48 8d 4c 24 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rsp]
  012d8	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  012dd	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG180988
  012e4	48 8b d0	 mov	 rdx, rax
  012e7	48 8d 8c 24 38
	19 00 00	 lea	 rcx, QWORD PTR fp_bench$57[rsp]
  012ef	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fopen_s
  012f5	85 c0		 test	 eax, eax
  012f7	75 0b		 jne	 SHORT $LN75@run_benchm
  012f9	48 83 bc 24 38
	19 00 00 00	 cmp	 QWORD PTR fp_bench$57[rsp], 0
  01302	75 78		 jne	 SHORT $LN73@run_benchm
$LN75@run_benchm:

; 974  :             _ftprintf(stderr, _T("\nERROR: failed opening benchmark result file.\n"));

  01304	b9 02 00 00 00	 mov	 ecx, 2
  01309	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  0130f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180989
  01316	48 8b c8	 mov	 rcx, rax
  01319	e8 00 00 00 00	 call	 fprintf

; 975  :             return MFX_ERR_INVALID_HANDLE;

  0131e	c7 84 24 dc 1a
	00 00 fa ff ff
	ff		 mov	 DWORD PTR $T112[rsp], -6
  01329	48 8d 8c 24 00
	18 00 00	 lea	 rcx, QWORD PTR ss$54[rsp]
  01331	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  01336	90		 npad	 1
  01337	48 8d 8c 24 28
	16 00 00	 lea	 rcx, QWORD PTR benchmark_result$[rsp]
  0133f	e8 00 00 00 00	 call	 ??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
  01344	90		 npad	 1
  01345	48 8d 8c 24 e8
	15 00 00	 lea	 rcx, QWORD PTR list_target_quality$[rsp]
  0134d	e8 00 00 00 00	 call	 ??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::~vector<CX_DESC,std::allocator<CX_DESC> >
  01352	90		 npad	 1
  01353	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  0135b	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
  01360	90		 npad	 1
  01361	48 8d 4c 24 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rsp]
  01366	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0136b	8b 84 24 dc 1a
	00 00		 mov	 eax, DWORD PTR $T112[rsp]
  01372	e9 72 07 00 00	 jmp	 $LN1@run_benchm

; 976  :         } else {

  01377	e9 04 07 00 00	 jmp	 $LN74@run_benchm
$LN73@run_benchm:

; 977  :             fprintf(fp_bench, "TargetUsage ([TU-1]:Best Quality) ～ ([TU-7]:Fastest Speed)\n\n");

  0137c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180991
  01383	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  0138b	e8 00 00 00 00	 call	 fprintf

; 978  : 
; 979  :             fprintf(fp_bench, "Encode Speed (fps)\n");

  01390	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180992
  01397	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  0139f	e8 00 00 00 00	 call	 fprintf

; 980  :             fprintf(fp_bench, "TargetUsage");

  013a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180993
  013ab	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  013b3	e8 00 00 00 00	 call	 fprintf

; 981  :             for (const auto& resolution : test_resolution) {

  013b8	48 8d 84 24 98
	00 00 00	 lea	 rax, QWORD PTR test_resolution$[rsp]
  013c0	48 89 84 24 48
	19 00 00	 mov	 QWORD PTR <range>$L1$58[rsp], rax
  013c8	48 8b 8c 24 48
	19 00 00	 mov	 rcx, QWORD PTR <range>$L1$58[rsp]
  013d0	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_begin
  013d5	48 89 84 24 50
	19 00 00	 mov	 QWORD PTR <begin>$L1$59[rsp], rax
  013dd	48 8b 8c 24 48
	19 00 00	 mov	 rcx, QWORD PTR <range>$L1$58[rsp]
  013e5	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_end
  013ea	48 89 84 24 58
	19 00 00	 mov	 QWORD PTR <end>$L1$60[rsp], rax
  013f2	eb 14		 jmp	 SHORT $LN22@run_benchm
$LN20@run_benchm:
  013f4	48 8b 84 24 50
	19 00 00	 mov	 rax, QWORD PTR <begin>$L1$59[rsp]
  013fc	48 83 c0 08	 add	 rax, 8
  01400	48 89 84 24 50
	19 00 00	 mov	 QWORD PTR <begin>$L1$59[rsp], rax
$LN22@run_benchm:
  01408	48 8b 84 24 58
	19 00 00	 mov	 rax, QWORD PTR <end>$L1$60[rsp]
  01410	48 39 84 24 50
	19 00 00	 cmp	 QWORD PTR <begin>$L1$59[rsp], rax
  01418	74 3d		 je	 SHORT $LN21@run_benchm
  0141a	48 8b 84 24 50
	19 00 00	 mov	 rax, QWORD PTR <begin>$L1$59[rsp]
  01422	48 89 84 24 60
	19 00 00	 mov	 QWORD PTR resolution$61[rsp], rax

; 982  :                 fprintf(fp_bench, ",   %dx%d", resolution.first, resolution.second);

  0142a	48 8b 84 24 60
	19 00 00	 mov	 rax, QWORD PTR resolution$61[rsp]
  01432	44 8b 48 04	 mov	 r9d, DWORD PTR [rax+4]
  01436	48 8b 84 24 60
	19 00 00	 mov	 rax, QWORD PTR resolution$61[rsp]
  0143e	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  01441	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180994
  01448	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  01450	e8 00 00 00 00	 call	 fprintf

; 983  :             }

  01455	eb 9d		 jmp	 SHORT $LN20@run_benchm
$LN21@run_benchm:

; 984  :             fprintf(fp_bench, "\n");

  01457	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180995
  0145e	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  01466	e8 00 00 00 00	 call	 fprintf

; 985  : 
; 986  :             for (const auto &benchmark_per_target_usage : benchmark_result) {

  0146b	48 8d 84 24 28
	16 00 00	 lea	 rax, QWORD PTR benchmark_result$[rsp]
  01473	48 89 84 24 68
	19 00 00	 mov	 QWORD PTR <range>$L2$62[rsp], rax
  0147b	48 8b 8c 24 68
	19 00 00	 mov	 rcx, QWORD PTR <range>$L2$62[rsp]
  01483	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Unchecked_begin
  01488	48 89 84 24 70
	19 00 00	 mov	 QWORD PTR <begin>$L2$63[rsp], rax
  01490	48 8b 8c 24 68
	19 00 00	 mov	 rcx, QWORD PTR <range>$L2$62[rsp]
  01498	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Unchecked_end
  0149d	48 89 84 24 78
	19 00 00	 mov	 QWORD PTR <end>$L2$64[rsp], rax
  014a5	eb 14		 jmp	 SHORT $LN25@run_benchm
$LN23@run_benchm:
  014a7	48 8b 84 24 70
	19 00 00	 mov	 rax, QWORD PTR <begin>$L2$63[rsp]
  014af	48 83 c0 20	 add	 rax, 32			; 00000020H
  014b3	48 89 84 24 70
	19 00 00	 mov	 QWORD PTR <begin>$L2$63[rsp], rax
$LN25@run_benchm:
  014bb	48 8b 84 24 78
	19 00 00	 mov	 rax, QWORD PTR <end>$L2$64[rsp]
  014c3	48 39 84 24 70
	19 00 00	 cmp	 QWORD PTR <begin>$L2$63[rsp], rax
  014cb	0f 84 ea 00 00
	00		 je	 $LN24@run_benchm
  014d1	48 8b 84 24 70
	19 00 00	 mov	 rax, QWORD PTR <begin>$L2$63[rsp]
  014d9	48 89 84 24 80
	19 00 00	 mov	 QWORD PTR benchmark_per_target_usage$65[rsp], rax

; 987  :                 fprintf(fp_bench, " 　　TU-%d", benchmark_per_target_usage[0].targetUsage);

  014e1	33 d2		 xor	 edx, edx
  014e3	48 8b 8c 24 80
	19 00 00	 mov	 rcx, QWORD PTR benchmark_per_target_usage$65[rsp]
  014eb	e8 00 00 00 00	 call	 ??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::operator[]
  014f0	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  014f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180996
  014fb	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  01503	e8 00 00 00 00	 call	 fprintf

; 988  :                 for (const auto &result : benchmark_per_target_usage) {

  01508	48 8b 84 24 80
	19 00 00	 mov	 rax, QWORD PTR benchmark_per_target_usage$65[rsp]
  01510	48 89 84 24 88
	19 00 00	 mov	 QWORD PTR <range>$L3$66[rsp], rax
  01518	48 8b 8c 24 88
	19 00 00	 mov	 rcx, QWORD PTR <range>$L3$66[rsp]
  01520	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Unchecked_begin
  01525	48 89 84 24 90
	19 00 00	 mov	 QWORD PTR <begin>$L3$67[rsp], rax
  0152d	48 8b 8c 24 88
	19 00 00	 mov	 rcx, QWORD PTR <range>$L3$66[rsp]
  01535	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Unchecked_end
  0153a	48 89 84 24 98
	19 00 00	 mov	 QWORD PTR <end>$L3$68[rsp], rax
  01542	eb 14		 jmp	 SHORT $LN28@run_benchm
$LN26@run_benchm:
  01544	48 8b 84 24 90
	19 00 00	 mov	 rax, QWORD PTR <begin>$L3$67[rsp]
  0154c	48 83 c0 28	 add	 rax, 40			; 00000028H
  01550	48 89 84 24 90
	19 00 00	 mov	 QWORD PTR <begin>$L3$67[rsp], rax
$LN28@run_benchm:
  01558	48 8b 84 24 98
	19 00 00	 mov	 rax, QWORD PTR <end>$L3$68[rsp]
  01560	48 39 84 24 90
	19 00 00	 cmp	 QWORD PTR <begin>$L3$67[rsp], rax
  01568	74 38		 je	 SHORT $LN27@run_benchm
  0156a	48 8b 84 24 90
	19 00 00	 mov	 rax, QWORD PTR <begin>$L3$67[rsp]
  01572	48 89 84 24 a0
	19 00 00	 mov	 QWORD PTR result$69[rsp], rax

; 989  :                     fprintf(fp_bench, ",　　　%6.2f", result.fps);

  0157a	48 8b 84 24 a0
	19 00 00	 mov	 rax, QWORD PTR result$69[rsp]
  01582	f2 0f 10 50 10	 movsd	 xmm2, QWORD PTR [rax+16]
  01587	66 49 0f 7e d0	 movq	 r8, xmm2
  0158c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180997
  01593	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  0159b	e8 00 00 00 00	 call	 fprintf

; 990  :                 }

  015a0	eb a2		 jmp	 SHORT $LN26@run_benchm
$LN27@run_benchm:

; 991  :                 fprintf(fp_bench, "\n");

  015a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180998
  015a9	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  015b1	e8 00 00 00 00	 call	 fprintf

; 992  :             }

  015b6	e9 ec fe ff ff	 jmp	 $LN23@run_benchm
$LN24@run_benchm:

; 993  :             fprintf(fp_bench, "\n");

  015bb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG180999
  015c2	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  015ca	e8 00 00 00 00	 call	 fprintf

; 994  : 
; 995  :             fprintf(fp_bench, "Bitrate (kbps)\n");

  015cf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181000
  015d6	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  015de	e8 00 00 00 00	 call	 fprintf

; 996  :             fprintf(fp_bench, "TargetUsage");

  015e3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181001
  015ea	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  015f2	e8 00 00 00 00	 call	 fprintf

; 997  :             for (const auto& resolution : test_resolution) {

  015f7	48 8d 84 24 98
	00 00 00	 lea	 rax, QWORD PTR test_resolution$[rsp]
  015ff	48 89 84 24 a8
	19 00 00	 mov	 QWORD PTR <range>$L4$70[rsp], rax
  01607	48 8b 8c 24 a8
	19 00 00	 mov	 rcx, QWORD PTR <range>$L4$70[rsp]
  0160f	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_begin
  01614	48 89 84 24 b0
	19 00 00	 mov	 QWORD PTR <begin>$L4$71[rsp], rax
  0161c	48 8b 8c 24 a8
	19 00 00	 mov	 rcx, QWORD PTR <range>$L4$70[rsp]
  01624	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_end
  01629	48 89 84 24 b8
	19 00 00	 mov	 QWORD PTR <end>$L4$72[rsp], rax
  01631	eb 14		 jmp	 SHORT $LN31@run_benchm
$LN29@run_benchm:
  01633	48 8b 84 24 b0
	19 00 00	 mov	 rax, QWORD PTR <begin>$L4$71[rsp]
  0163b	48 83 c0 08	 add	 rax, 8
  0163f	48 89 84 24 b0
	19 00 00	 mov	 QWORD PTR <begin>$L4$71[rsp], rax
$LN31@run_benchm:
  01647	48 8b 84 24 b8
	19 00 00	 mov	 rax, QWORD PTR <end>$L4$72[rsp]
  0164f	48 39 84 24 b0
	19 00 00	 cmp	 QWORD PTR <begin>$L4$71[rsp], rax
  01657	74 3d		 je	 SHORT $LN30@run_benchm
  01659	48 8b 84 24 b0
	19 00 00	 mov	 rax, QWORD PTR <begin>$L4$71[rsp]
  01661	48 89 84 24 c0
	19 00 00	 mov	 QWORD PTR resolution$73[rsp], rax

; 998  :                 fprintf(fp_bench, ",   %dx%d", resolution.first, resolution.second);

  01669	48 8b 84 24 c0
	19 00 00	 mov	 rax, QWORD PTR resolution$73[rsp]
  01671	44 8b 48 04	 mov	 r9d, DWORD PTR [rax+4]
  01675	48 8b 84 24 c0
	19 00 00	 mov	 rax, QWORD PTR resolution$73[rsp]
  0167d	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  01680	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181002
  01687	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  0168f	e8 00 00 00 00	 call	 fprintf

; 999  :             }

  01694	eb 9d		 jmp	 SHORT $LN29@run_benchm
$LN30@run_benchm:

; 1000 :             fprintf(fp_bench, "\n");

  01696	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181003
  0169d	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  016a5	e8 00 00 00 00	 call	 fprintf

; 1001 :             for (const auto &benchmark_per_target_usage : benchmark_result) {

  016aa	48 8d 84 24 28
	16 00 00	 lea	 rax, QWORD PTR benchmark_result$[rsp]
  016b2	48 89 84 24 c8
	19 00 00	 mov	 QWORD PTR <range>$L5$74[rsp], rax
  016ba	48 8b 8c 24 c8
	19 00 00	 mov	 rcx, QWORD PTR <range>$L5$74[rsp]
  016c2	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Unchecked_begin
  016c7	48 89 84 24 d0
	19 00 00	 mov	 QWORD PTR <begin>$L5$75[rsp], rax
  016cf	48 8b 8c 24 c8
	19 00 00	 mov	 rcx, QWORD PTR <range>$L5$74[rsp]
  016d7	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Unchecked_end
  016dc	48 89 84 24 d8
	19 00 00	 mov	 QWORD PTR <end>$L5$76[rsp], rax
  016e4	eb 14		 jmp	 SHORT $LN34@run_benchm
$LN32@run_benchm:
  016e6	48 8b 84 24 d0
	19 00 00	 mov	 rax, QWORD PTR <begin>$L5$75[rsp]
  016ee	48 83 c0 20	 add	 rax, 32			; 00000020H
  016f2	48 89 84 24 d0
	19 00 00	 mov	 QWORD PTR <begin>$L5$75[rsp], rax
$LN34@run_benchm:
  016fa	48 8b 84 24 d8
	19 00 00	 mov	 rax, QWORD PTR <end>$L5$76[rsp]
  01702	48 39 84 24 d0
	19 00 00	 cmp	 QWORD PTR <begin>$L5$75[rsp], rax
  0170a	0f 84 f4 00 00
	00		 je	 $LN33@run_benchm
  01710	48 8b 84 24 d0
	19 00 00	 mov	 rax, QWORD PTR <begin>$L5$75[rsp]
  01718	48 89 84 24 e0
	19 00 00	 mov	 QWORD PTR benchmark_per_target_usage$77[rsp], rax

; 1002 :                 fprintf(fp_bench, " 　　TU-%d", benchmark_per_target_usage[0].targetUsage);

  01720	33 d2		 xor	 edx, edx
  01722	48 8b 8c 24 e0
	19 00 00	 mov	 rcx, QWORD PTR benchmark_per_target_usage$77[rsp]
  0172a	e8 00 00 00 00	 call	 ??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::operator[]
  0172f	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  01733	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181004
  0173a	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  01742	e8 00 00 00 00	 call	 fprintf

; 1003 :                 for (const auto &result : benchmark_per_target_usage) {

  01747	48 8b 84 24 e0
	19 00 00	 mov	 rax, QWORD PTR benchmark_per_target_usage$77[rsp]
  0174f	48 89 84 24 e8
	19 00 00	 mov	 QWORD PTR <range>$L6$78[rsp], rax
  01757	48 8b 8c 24 e8
	19 00 00	 mov	 rcx, QWORD PTR <range>$L6$78[rsp]
  0175f	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Unchecked_begin
  01764	48 89 84 24 f0
	19 00 00	 mov	 QWORD PTR <begin>$L6$79[rsp], rax
  0176c	48 8b 8c 24 e8
	19 00 00	 mov	 rcx, QWORD PTR <range>$L6$78[rsp]
  01774	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Unchecked_end
  01779	48 89 84 24 f8
	19 00 00	 mov	 QWORD PTR <end>$L6$80[rsp], rax
  01781	eb 14		 jmp	 SHORT $LN37@run_benchm
$LN35@run_benchm:
  01783	48 8b 84 24 f0
	19 00 00	 mov	 rax, QWORD PTR <begin>$L6$79[rsp]
  0178b	48 83 c0 28	 add	 rax, 40			; 00000028H
  0178f	48 89 84 24 f0
	19 00 00	 mov	 QWORD PTR <begin>$L6$79[rsp], rax
$LN37@run_benchm:
  01797	48 8b 84 24 f8
	19 00 00	 mov	 rax, QWORD PTR <end>$L6$80[rsp]
  0179f	48 39 84 24 f0
	19 00 00	 cmp	 QWORD PTR <begin>$L6$79[rsp], rax
  017a7	74 42		 je	 SHORT $LN36@run_benchm
  017a9	48 8b 84 24 f0
	19 00 00	 mov	 rax, QWORD PTR <begin>$L6$79[rsp]
  017b1	48 89 84 24 00
	1a 00 00	 mov	 QWORD PTR result$81[rsp], rax

; 1004 :                     fprintf(fp_bench, ",　　　%6d", (int)(result.bitrate + 0.5));

  017b9	48 8b 84 24 00
	1a 00 00	 mov	 rax, QWORD PTR result$81[rsp]
  017c1	f2 0f 10 40 18	 movsd	 xmm0, QWORD PTR [rax+24]
  017c6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  017ce	f2 0f 2c c0	 cvttsd2si eax, xmm0
  017d2	44 8b c0	 mov	 r8d, eax
  017d5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181005
  017dc	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  017e4	e8 00 00 00 00	 call	 fprintf

; 1005 :                 }

  017e9	eb 98		 jmp	 SHORT $LN35@run_benchm
$LN36@run_benchm:

; 1006 :                 fprintf(fp_bench, "\n");

  017eb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181006
  017f2	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  017fa	e8 00 00 00 00	 call	 fprintf

; 1007 :             }

  017ff	e9 e2 fe ff ff	 jmp	 $LN32@run_benchm
$LN33@run_benchm:

; 1008 :             fprintf(fp_bench, "\n");

  01804	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181007
  0180b	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  01813	e8 00 00 00 00	 call	 fprintf

; 1009 : 
; 1010 :             fprintf(fp_bench, "CPU Usage (%%)\n");

  01818	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181008
  0181f	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  01827	e8 00 00 00 00	 call	 fprintf

; 1011 :             fprintf(fp_bench, "TargetUsage");

  0182c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181009
  01833	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  0183b	e8 00 00 00 00	 call	 fprintf

; 1012 :             for (const auto& resolution : test_resolution) {

  01840	48 8d 84 24 98
	00 00 00	 lea	 rax, QWORD PTR test_resolution$[rsp]
  01848	48 89 84 24 08
	1a 00 00	 mov	 QWORD PTR <range>$L7$82[rsp], rax
  01850	48 8b 8c 24 08
	1a 00 00	 mov	 rcx, QWORD PTR <range>$L7$82[rsp]
  01858	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_begin
  0185d	48 89 84 24 10
	1a 00 00	 mov	 QWORD PTR <begin>$L7$83[rsp], rax
  01865	48 8b 8c 24 08
	1a 00 00	 mov	 rcx, QWORD PTR <range>$L7$82[rsp]
  0186d	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEBAPEBU?$pair@HH@2@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::_Unchecked_end
  01872	48 89 84 24 18
	1a 00 00	 mov	 QWORD PTR <end>$L7$84[rsp], rax
  0187a	eb 14		 jmp	 SHORT $LN40@run_benchm
$LN38@run_benchm:
  0187c	48 8b 84 24 10
	1a 00 00	 mov	 rax, QWORD PTR <begin>$L7$83[rsp]
  01884	48 83 c0 08	 add	 rax, 8
  01888	48 89 84 24 10
	1a 00 00	 mov	 QWORD PTR <begin>$L7$83[rsp], rax
$LN40@run_benchm:
  01890	48 8b 84 24 18
	1a 00 00	 mov	 rax, QWORD PTR <end>$L7$84[rsp]
  01898	48 39 84 24 10
	1a 00 00	 cmp	 QWORD PTR <begin>$L7$83[rsp], rax
  018a0	74 3d		 je	 SHORT $LN39@run_benchm
  018a2	48 8b 84 24 10
	1a 00 00	 mov	 rax, QWORD PTR <begin>$L7$83[rsp]
  018aa	48 89 84 24 20
	1a 00 00	 mov	 QWORD PTR resolution$85[rsp], rax

; 1013 :                 fprintf(fp_bench, ",   %dx%d", resolution.first, resolution.second);

  018b2	48 8b 84 24 20
	1a 00 00	 mov	 rax, QWORD PTR resolution$85[rsp]
  018ba	44 8b 48 04	 mov	 r9d, DWORD PTR [rax+4]
  018be	48 8b 84 24 20
	1a 00 00	 mov	 rax, QWORD PTR resolution$85[rsp]
  018c6	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  018c9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181010
  018d0	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  018d8	e8 00 00 00 00	 call	 fprintf

; 1014 :             }

  018dd	eb 9d		 jmp	 SHORT $LN38@run_benchm
$LN39@run_benchm:

; 1015 :             fprintf(fp_bench, "\n");

  018df	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181011
  018e6	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  018ee	e8 00 00 00 00	 call	 fprintf

; 1016 :             for (const auto &benchmark_per_target_usage : benchmark_result) {

  018f3	48 8d 84 24 28
	16 00 00	 lea	 rax, QWORD PTR benchmark_result$[rsp]
  018fb	48 89 84 24 28
	1a 00 00	 mov	 QWORD PTR <range>$L8$86[rsp], rax
  01903	48 8b 8c 24 28
	1a 00 00	 mov	 rcx, QWORD PTR <range>$L8$86[rsp]
  0190b	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Unchecked_begin
  01910	48 89 84 24 30
	1a 00 00	 mov	 QWORD PTR <begin>$L8$87[rsp], rax
  01918	48 8b 8c 24 28
	1a 00 00	 mov	 rcx, QWORD PTR <range>$L8$86[rsp]
  01920	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAAPEAV?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@2@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::_Unchecked_end
  01925	48 89 84 24 38
	1a 00 00	 mov	 QWORD PTR <end>$L8$88[rsp], rax
  0192d	eb 14		 jmp	 SHORT $LN43@run_benchm
$LN41@run_benchm:
  0192f	48 8b 84 24 30
	1a 00 00	 mov	 rax, QWORD PTR <begin>$L8$87[rsp]
  01937	48 83 c0 20	 add	 rax, 32			; 00000020H
  0193b	48 89 84 24 30
	1a 00 00	 mov	 QWORD PTR <begin>$L8$87[rsp], rax
$LN43@run_benchm:
  01943	48 8b 84 24 38
	1a 00 00	 mov	 rax, QWORD PTR <end>$L8$88[rsp]
  0194b	48 39 84 24 30
	1a 00 00	 cmp	 QWORD PTR <begin>$L8$87[rsp], rax
  01953	0f 84 ea 00 00
	00		 je	 $LN42@run_benchm
  01959	48 8b 84 24 30
	1a 00 00	 mov	 rax, QWORD PTR <begin>$L8$87[rsp]
  01961	48 89 84 24 40
	1a 00 00	 mov	 QWORD PTR benchmark_per_target_usage$89[rsp], rax

; 1017 :                 fprintf(fp_bench, " 　　TU-%d", benchmark_per_target_usage[0].targetUsage);

  01969	33 d2		 xor	 edx, edx
  0196b	48 8b 8c 24 40
	1a 00 00	 mov	 rcx, QWORD PTR benchmark_per_target_usage$89[rsp]
  01973	e8 00 00 00 00	 call	 ??A?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAAEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@_K@Z ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::operator[]
  01978	44 8b 40 08	 mov	 r8d, DWORD PTR [rax+8]
  0197c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181012
  01983	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  0198b	e8 00 00 00 00	 call	 fprintf

; 1018 :                 for (const auto &result : benchmark_per_target_usage) {

  01990	48 8b 84 24 40
	1a 00 00	 mov	 rax, QWORD PTR benchmark_per_target_usage$89[rsp]
  01998	48 89 84 24 48
	1a 00 00	 mov	 QWORD PTR <range>$L9$90[rsp], rax
  019a0	48 8b 8c 24 48
	1a 00 00	 mov	 rcx, QWORD PTR <range>$L9$90[rsp]
  019a8	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Unchecked_begin
  019ad	48 89 84 24 50
	1a 00 00	 mov	 QWORD PTR <begin>$L9$91[rsp], rax
  019b5	48 8b 8c 24 48
	1a 00 00	 mov	 rcx, QWORD PTR <range>$L9$90[rsp]
  019bd	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEBAPEBUbenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::_Unchecked_end
  019c2	48 89 84 24 58
	1a 00 00	 mov	 QWORD PTR <end>$L9$92[rsp], rax
  019ca	eb 14		 jmp	 SHORT $LN46@run_benchm
$LN44@run_benchm:
  019cc	48 8b 84 24 50
	1a 00 00	 mov	 rax, QWORD PTR <begin>$L9$91[rsp]
  019d4	48 83 c0 28	 add	 rax, 40			; 00000028H
  019d8	48 89 84 24 50
	1a 00 00	 mov	 QWORD PTR <begin>$L9$91[rsp], rax
$LN46@run_benchm:
  019e0	48 8b 84 24 58
	1a 00 00	 mov	 rax, QWORD PTR <end>$L9$92[rsp]
  019e8	48 39 84 24 50
	1a 00 00	 cmp	 QWORD PTR <begin>$L9$91[rsp], rax
  019f0	74 38		 je	 SHORT $LN45@run_benchm
  019f2	48 8b 84 24 50
	1a 00 00	 mov	 rax, QWORD PTR <begin>$L9$91[rsp]
  019fa	48 89 84 24 60
	1a 00 00	 mov	 QWORD PTR result$93[rsp], rax

; 1019 :                     fprintf(fp_bench, ",　　　%6.2f", result.cpuUsagePercent);

  01a02	48 8b 84 24 60
	1a 00 00	 mov	 rax, QWORD PTR result$93[rsp]
  01a0a	f2 0f 10 50 20	 movsd	 xmm2, QWORD PTR [rax+32]
  01a0f	66 49 0f 7e d0	 movq	 r8, xmm2
  01a14	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181013
  01a1b	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  01a23	e8 00 00 00 00	 call	 fprintf

; 1020 :                 }

  01a28	eb a2		 jmp	 SHORT $LN44@run_benchm
$LN45@run_benchm:

; 1021 :                 fprintf(fp_bench, "\n");

  01a2a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181014
  01a31	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  01a39	e8 00 00 00 00	 call	 fprintf

; 1022 :             }

  01a3e	e9 ec fe ff ff	 jmp	 $LN41@run_benchm
$LN42@run_benchm:

; 1023 :             fprintf(fp_bench, "\n");

  01a43	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181015
  01a4a	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  01a52	e8 00 00 00 00	 call	 fprintf

; 1024 :             fclose(fp_bench);

  01a57	48 8b 8c 24 38
	19 00 00	 mov	 rcx, QWORD PTR fp_bench$57[rsp]
  01a5f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose

; 1025 :             _ftprintf(stderr, _T("\nFinished benchmark.\n"));

  01a65	b9 02 00 00 00	 mov	 ecx, 2
  01a6a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  01a70	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181016
  01a77	48 8b c8	 mov	 rcx, rax
  01a7a	e8 00 00 00 00	 call	 fprintf
  01a7f	90		 npad	 1
$LN74@run_benchm:

; 1026 :         }
; 1027 :     } else {

  01a80	48 8d 8c 24 00
	18 00 00	 lea	 rcx, QWORD PTR ss$54[rsp]
  01a88	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  01a8d	eb 14		 jmp	 SHORT $LN72@run_benchm
$LN71@run_benchm:

; 1028 :         rgy_print_stderr(RGY_LOG_ERROR, _T("\nError occurred during benchmark.\n"));

  01a8f	45 33 c0	 xor	 r8d, r8d
  01a92	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG181017
  01a99	b9 02 00 00 00	 mov	 ecx, 2
  01a9e	e8 00 00 00 00	 call	 ?rgy_print_stderr@@YAHHPEBDPEAX@Z ; rgy_print_stderr
$LN72@run_benchm:

; 1029 :     }
; 1030 : 
; 1031 :     return sts;

  01aa3	8b 44 24 40	 mov	 eax, DWORD PTR sts$[rsp]
  01aa7	89 84 24 e0 1a
	00 00		 mov	 DWORD PTR $T113[rsp], eax
  01aae	48 8d 8c 24 28
	16 00 00	 lea	 rcx, QWORD PTR benchmark_result$[rsp]
  01ab6	e8 00 00 00 00	 call	 ??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
  01abb	90		 npad	 1
  01abc	48 8d 8c 24 e8
	15 00 00	 lea	 rcx, QWORD PTR list_target_quality$[rsp]
  01ac4	e8 00 00 00 00	 call	 ??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::~vector<CX_DESC,std::allocator<CX_DESC> >
  01ac9	90		 npad	 1
  01aca	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR test_resolution$[rsp]
  01ad2	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
  01ad7	90		 npad	 1
  01ad8	48 8d 4c 24 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rsp]
  01add	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  01ae2	8b 84 24 e0 1a
	00 00		 mov	 eax, DWORD PTR $T113[rsp]
$LN1@run_benchm:

; 1032 : }

  01ae9	48 8b f8	 mov	 rdi, rax
  01aec	48 8b cc	 mov	 rcx, rsp
  01aef	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z$rtcFrameData
  01af6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  01afb	48 8b c7	 mov	 rax, rdi
  01afe	48 8b 8c 24 60
	1c 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  01b06	48 33 cc	 xor	 rcx, rsp
  01b09	e8 00 00 00 00	 call	 __security_check_cookie
  01b0e	48 81 c4 78 1c
	00 00		 add	 rsp, 7288		; 00001c78H
  01b15	5f		 pop	 rdi
  01b16	5e		 pop	 rsi
  01b17	c3		 ret	 0
?run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z ENDP ; run_benchmark
_TEXT	ENDS
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$0@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$0
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$1@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR test_resolution$[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$1
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$2@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	ba 08 14 00 00	 mov	 edx, 5128		; 00001408H
  00061	48 8b 8d a0 1a
	00 00		 mov	 rcx, QWORD PTR $T101[rbp]
  00068	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0006d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00071	5f		 pop	 rdi
  00072	5d		 pop	 rbp
  00073	c3		 ret	 0
?dtor$2@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$2
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$3@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$3
  00074	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00079	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007e	55		 push	 rbp
  0007f	57		 push	 rdi
  00080	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00084	48 8b ea	 mov	 rbp, rdx
  00087	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR pPipeline$25[rbp]
  0008e	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00093	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00097	5f		 pop	 rdi
  00098	5d		 pop	 rbp
  00099	c3		 ret	 0
?dtor$3@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$3
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$4@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$4
  0009a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a4	55		 push	 rbp
  000a5	57		 push	 rdi
  000a6	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000aa	48 8b ea	 mov	 rbp, rdx
  000ad	48 8d 8d 88 11
	00 00		 lea	 rcx, QWORD PTR enviroment_info$31[rbp]
  000b4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b9	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000bd	5f		 pop	 rdi
  000be	5d		 pop	 rbp
  000bf	c3		 ret	 0
?dtor$4@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$4
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$5@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$5
  000c0	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c5	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000ca	55		 push	 rbp
  000cb	57		 push	 rdi
  000cc	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000d0	48 8b ea	 mov	 rbp, rdx
  000d3	48 8d 8d d0 11
	00 00		 lea	 rcx, QWORD PTR ss$33[rbp]
  000da	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  000df	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000e3	5f		 pop	 rdi
  000e4	5d		 pop	 rbp
  000e5	c3		 ret	 0
?dtor$5@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$5
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$6@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$6
  000e6	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000eb	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000f0	55		 push	 rbp
  000f1	57		 push	 rdi
  000f2	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f6	48 8b ea	 mov	 rbp, rdx
  000f9	48 8d 8d f8 12
	00 00		 lea	 rcx, QWORD PTR $T35[rbp]
  00100	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00105	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00109	5f		 pop	 rdi
  0010a	5d		 pop	 rbp
  0010b	c3		 ret	 0
?dtor$6@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$6
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$7@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$7
  0010c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00111	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00116	55		 push	 rbp
  00117	57		 push	 rdi
  00118	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0011c	48 8b ea	 mov	 rbp, rdx
  0011f	48 8d 8d 20 13
	00 00		 lea	 rcx, QWORD PTR $T36[rbp]
  00126	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0012b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0012f	5f		 pop	 rdi
  00130	5d		 pop	 rbp
  00131	c3		 ret	 0
?dtor$7@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$7
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$8@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$8
  00132	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00137	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0013c	55		 push	 rbp
  0013d	57		 push	 rdi
  0013e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00142	48 8b ea	 mov	 rbp, rdx
  00145	48 8d 8d 48 13
	00 00		 lea	 rcx, QWORD PTR $T37[rbp]
  0014c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00151	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00155	5f		 pop	 rdi
  00156	5d		 pop	 rbp
  00157	c3		 ret	 0
?dtor$8@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$8
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$9@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$9
  00158	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0015d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00162	55		 push	 rbp
  00163	57		 push	 rdi
  00164	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00168	48 8b ea	 mov	 rbp, rdx
  0016b	48 8d 8d 98 13
	00 00		 lea	 rcx, QWORD PTR $T39[rbp]
  00172	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00177	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0017b	5f		 pop	 rdi
  0017c	5d		 pop	 rbp
  0017d	c3		 ret	 0
?dtor$9@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$9
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$10@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$10
  0017e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00183	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00188	55		 push	 rbp
  00189	57		 push	 rdi
  0018a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0018e	48 8b ea	 mov	 rbp, rdx
  00191	48 8d 8d 70 13
	00 00		 lea	 rcx, QWORD PTR $T38[rbp]
  00198	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0019d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001a1	5f		 pop	 rdi
  001a2	5d		 pop	 rbp
  001a3	c3		 ret	 0
?dtor$10@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$10
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$11@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$11
  001a4	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001a9	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001ae	55		 push	 rbp
  001af	57		 push	 rdi
  001b0	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001b4	48 8b ea	 mov	 rbp, rdx
  001b7	48 8d 8d d0 13
	00 00		 lea	 rcx, QWORD PTR benchmark_log_test_open$40[rbp]
  001be	e8 00 00 00 00	 call	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  001c3	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001c7	5f		 pop	 rdi
  001c8	5d		 pop	 rbp
  001c9	c3		 ret	 0
?dtor$11@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$11
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$12@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$12
  001ca	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001cf	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001d4	55		 push	 rbp
  001d5	57		 push	 rdi
  001d6	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001da	48 8b ea	 mov	 rbp, rdx
  001dd	48 8d 8d e8 14
	00 00		 lea	 rcx, QWORD PTR $T41[rbp]
  001e4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001e9	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001ed	5f		 pop	 rdi
  001ee	5d		 pop	 rbp
  001ef	c3		 ret	 0
?dtor$12@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$12
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$13@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$13
  001f0	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001f5	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001fa	55		 push	 rbp
  001fb	57		 push	 rdi
  001fc	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00200	48 8b ea	 mov	 rbp, rdx
  00203	48 8d 8d e8 15
	00 00		 lea	 rcx, QWORD PTR list_target_quality$[rbp]
  0020a	e8 00 00 00 00	 call	 ??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::~vector<CX_DESC,std::allocator<CX_DESC> >
  0020f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00213	5f		 pop	 rdi
  00214	5d		 pop	 rbp
  00215	c3		 ret	 0
?dtor$13@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$13
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$14@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$14
  00216	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0021b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00220	55		 push	 rbp
  00221	57		 push	 rdi
  00222	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00226	48 8b ea	 mov	 rbp, rdx
  00229	48 8d 8d 28 16
	00 00		 lea	 rcx, QWORD PTR benchmark_result$[rbp]
  00230	e8 00 00 00 00	 call	 ??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
  00235	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00239	5f		 pop	 rdi
  0023a	5d		 pop	 rbp
  0023b	c3		 ret	 0
?dtor$14@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$14
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$15@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$15
  0023c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00241	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00246	55		 push	 rbp
  00247	57		 push	 rdi
  00248	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0024c	48 8b ea	 mov	 rbp, rdx
  0024f	48 8d 8d 68 16
	00 00		 lea	 rcx, QWORD PTR benchmark_per_target_usage$46[rbp]
  00256	e8 00 00 00 00	 call	 ??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::~vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
  0025b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0025f	5f		 pop	 rdi
  00260	5d		 pop	 rbp
  00261	c3		 ret	 0
?dtor$15@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$15
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$16@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$16
  00262	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00267	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0026c	55		 push	 rbp
  0026d	57		 push	 rdi
  0026e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00272	48 8b ea	 mov	 rbp, rdx
  00275	ba 08 14 00 00	 mov	 edx, 5128		; 00001408H
  0027a	48 8b 8d c8 1a
	00 00		 mov	 rcx, QWORD PTR $T108[rbp]
  00281	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00286	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0028a	5f		 pop	 rdi
  0028b	5d		 pop	 rbp
  0028c	c3		 ret	 0
?dtor$16@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$16
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$17@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$17
  0028d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00292	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00297	55		 push	 rbp
  00298	57		 push	 rdi
  00299	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0029d	48 8b ea	 mov	 rbp, rdx
  002a0	48 8d 8d c8 16
	00 00		 lea	 rcx, QWORD PTR pPipeline$51[rbp]
  002a7	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  002ac	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002b0	5f		 pop	 rdi
  002b1	5d		 pop	 rbp
  002b2	c3		 ret	 0
?dtor$17@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$17
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$18@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$18
  002b3	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002b8	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002bd	55		 push	 rbp
  002be	57		 push	 rdi
  002bf	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002c3	48 8b ea	 mov	 rbp, rdx
  002c6	48 8d 8d 00 18
	00 00		 lea	 rcx, QWORD PTR ss$54[rbp]
  002cd	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  002d2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002d6	5f		 pop	 rdi
  002d7	5d		 pop	 rbp
  002d8	c3		 ret	 0
?dtor$18@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$0@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR benchmarkLogFile$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$1@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR test_resolution$[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >::~vector<std::pair<int,int>,std::allocator<std::pair<int,int> > >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$2@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	ba 08 14 00 00	 mov	 edx, 5128		; 00001408H
  00061	48 8b 8d a0 1a
	00 00		 mov	 rcx, QWORD PTR $T101[rbp]
  00068	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0006d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00071	5f		 pop	 rdi
  00072	5d		 pop	 rbp
  00073	c3		 ret	 0
?dtor$2@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$3@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$3
  00074	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00079	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007e	55		 push	 rbp
  0007f	57		 push	 rdi
  00080	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00084	48 8b ea	 mov	 rbp, rdx
  00087	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR pPipeline$25[rbp]
  0008e	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00093	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00097	5f		 pop	 rdi
  00098	5d		 pop	 rbp
  00099	c3		 ret	 0
?dtor$3@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$4@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$4
  0009a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a4	55		 push	 rbp
  000a5	57		 push	 rdi
  000a6	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000aa	48 8b ea	 mov	 rbp, rdx
  000ad	48 8d 8d 88 11
	00 00		 lea	 rcx, QWORD PTR enviroment_info$31[rbp]
  000b4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b9	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000bd	5f		 pop	 rdi
  000be	5d		 pop	 rbp
  000bf	c3		 ret	 0
?dtor$4@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$5@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$5
  000c0	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c5	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000ca	55		 push	 rbp
  000cb	57		 push	 rdi
  000cc	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000d0	48 8b ea	 mov	 rbp, rdx
  000d3	48 8d 8d d0 11
	00 00		 lea	 rcx, QWORD PTR ss$33[rbp]
  000da	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  000df	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000e3	5f		 pop	 rdi
  000e4	5d		 pop	 rbp
  000e5	c3		 ret	 0
?dtor$5@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$6@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$6
  000e6	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000eb	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000f0	55		 push	 rbp
  000f1	57		 push	 rdi
  000f2	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f6	48 8b ea	 mov	 rbp, rdx
  000f9	48 8d 8d f8 12
	00 00		 lea	 rcx, QWORD PTR $T35[rbp]
  00100	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00105	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00109	5f		 pop	 rdi
  0010a	5d		 pop	 rbp
  0010b	c3		 ret	 0
?dtor$6@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$7@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$7
  0010c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00111	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00116	55		 push	 rbp
  00117	57		 push	 rdi
  00118	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0011c	48 8b ea	 mov	 rbp, rdx
  0011f	48 8d 8d 20 13
	00 00		 lea	 rcx, QWORD PTR $T36[rbp]
  00126	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0012b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0012f	5f		 pop	 rdi
  00130	5d		 pop	 rbp
  00131	c3		 ret	 0
?dtor$7@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$8@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$8
  00132	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00137	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0013c	55		 push	 rbp
  0013d	57		 push	 rdi
  0013e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00142	48 8b ea	 mov	 rbp, rdx
  00145	48 8d 8d 48 13
	00 00		 lea	 rcx, QWORD PTR $T37[rbp]
  0014c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00151	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00155	5f		 pop	 rdi
  00156	5d		 pop	 rbp
  00157	c3		 ret	 0
?dtor$8@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$9@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$9
  00158	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0015d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00162	55		 push	 rbp
  00163	57		 push	 rdi
  00164	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00168	48 8b ea	 mov	 rbp, rdx
  0016b	48 8d 8d 98 13
	00 00		 lea	 rcx, QWORD PTR $T39[rbp]
  00172	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00177	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0017b	5f		 pop	 rdi
  0017c	5d		 pop	 rbp
  0017d	c3		 ret	 0
?dtor$9@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$10@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$10
  0017e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00183	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00188	55		 push	 rbp
  00189	57		 push	 rdi
  0018a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0018e	48 8b ea	 mov	 rbp, rdx
  00191	48 8d 8d 70 13
	00 00		 lea	 rcx, QWORD PTR $T38[rbp]
  00198	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0019d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001a1	5f		 pop	 rdi
  001a2	5d		 pop	 rbp
  001a3	c3		 ret	 0
?dtor$10@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$11@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$11
  001a4	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001a9	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001ae	55		 push	 rbp
  001af	57		 push	 rdi
  001b0	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001b4	48 8b ea	 mov	 rbp, rdx
  001b7	48 8d 8d d0 13
	00 00		 lea	 rcx, QWORD PTR benchmark_log_test_open$40[rbp]
  001be	e8 00 00 00 00	 call	 ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  001c3	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001c7	5f		 pop	 rdi
  001c8	5d		 pop	 rbp
  001c9	c3		 ret	 0
?dtor$11@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$12@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$12
  001ca	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001cf	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001d4	55		 push	 rbp
  001d5	57		 push	 rdi
  001d6	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001da	48 8b ea	 mov	 rbp, rdx
  001dd	48 8d 8d e8 14
	00 00		 lea	 rcx, QWORD PTR $T41[rbp]
  001e4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001e9	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001ed	5f		 pop	 rdi
  001ee	5d		 pop	 rbp
  001ef	c3		 ret	 0
?dtor$12@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$13@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$13
  001f0	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001f5	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001fa	55		 push	 rbp
  001fb	57		 push	 rdi
  001fc	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00200	48 8b ea	 mov	 rbp, rdx
  00203	48 8d 8d e8 15
	00 00		 lea	 rcx, QWORD PTR list_target_quality$[rbp]
  0020a	e8 00 00 00 00	 call	 ??1?$vector@UCX_DESC@@V?$allocator@UCX_DESC@@@std@@@std@@QEAA@XZ ; std::vector<CX_DESC,std::allocator<CX_DESC> >::~vector<CX_DESC,std::allocator<CX_DESC> >
  0020f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00213	5f		 pop	 rdi
  00214	5d		 pop	 rbp
  00215	c3		 ret	 0
?dtor$13@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$14@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$14
  00216	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0021b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00220	55		 push	 rbp
  00221	57		 push	 rdi
  00222	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00226	48 8b ea	 mov	 rbp, rdx
  00229	48 8d 8d 28 16
	00 00		 lea	 rcx, QWORD PTR benchmark_result$[rbp]
  00230	e8 00 00 00 00	 call	 ??1?$vector@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@V?$allocator@V?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >::~vector<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >,std::allocator<std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> > > >
  00235	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00239	5f		 pop	 rdi
  0023a	5d		 pop	 rbp
  0023b	c3		 ret	 0
?dtor$14@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$15@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$15
  0023c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00241	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00246	55		 push	 rbp
  00247	57		 push	 rdi
  00248	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0024c	48 8b ea	 mov	 rbp, rdx
  0024f	48 8d 8d 68 16
	00 00		 lea	 rcx, QWORD PTR benchmark_per_target_usage$46[rbp]
  00256	e8 00 00 00 00	 call	 ??1?$vector@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@V?$allocator@Ubenchmark_t@?1??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@@std@@@std@@QEAA@XZ ; std::vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >::~vector<`run_benchmark'::`2'::benchmark_t,std::allocator<`run_benchmark'::`2'::benchmark_t> >
  0025b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0025f	5f		 pop	 rdi
  00260	5d		 pop	 rbp
  00261	c3		 ret	 0
?dtor$15@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$16@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$16
  00262	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00267	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0026c	55		 push	 rbp
  0026d	57		 push	 rdi
  0026e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00272	48 8b ea	 mov	 rbp, rdx
  00275	ba 08 14 00 00	 mov	 edx, 5128		; 00001408H
  0027a	48 8b 8d c8 1a
	00 00		 mov	 rcx, QWORD PTR $T108[rbp]
  00281	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00286	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0028a	5f		 pop	 rdi
  0028b	5d		 pop	 rbp
  0028c	c3		 ret	 0
?dtor$16@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$17@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$17
  0028d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00292	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00297	55		 push	 rbp
  00298	57		 push	 rdi
  00299	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0029d	48 8b ea	 mov	 rbp, rdx
  002a0	48 8d 8d c8 16
	00 00		 lea	 rcx, QWORD PTR pPipeline$51[rbp]
  002a7	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  002ac	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002b0	5f		 pop	 rdi
  002b1	5d		 pop	 rbp
  002b2	c3		 ret	 0
?dtor$17@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
benchmarkLogFile$ = 88
test_resolution$ = 152
$T24 = 200
pPipeline$25 = 232
current_time$26 = 264
local_time$27 = 280
encode_info$28 = 304
hardware$29 = 4420
ver$30 = 4452
enviroment_info$31 = 4488
memtype$32 = 4532
ss$33 = 4560
fp_bench$34 = 4840
$T35 = 4856
$T36 = 4896
$T37 = 4936
$T38 = 4976
$T39 = 5016
benchmark_log_test_open$40 = 5072
$T41 = 5352
data$42 = 5408
list_target_quality$ = 5608
i$43 = 5652
test$44 = 5656
benchmark_result$ = 5672
i$45 = 5716
benchmark_per_target_usage$46 = 5736
<range>$L0$47 = 5784
<begin>$L0$48 = 5792
<end>$L0$49 = 5800
resolution$50 = 5808
pPipeline$51 = 5832
data$52 = 5872
result$53 = 6072
ss$54 = 6144
maxLengthOfTargetUsageDesc$55 = 6420
i$56 = 6436
fp_bench$57 = 6456
<range>$L1$58 = 6472
<begin>$L1$59 = 6480
<end>$L1$60 = 6488
resolution$61 = 6496
<range>$L2$62 = 6504
<begin>$L2$63 = 6512
<end>$L2$64 = 6520
benchmark_per_target_usage$65 = 6528
<range>$L3$66 = 6536
<begin>$L3$67 = 6544
<end>$L3$68 = 6552
result$69 = 6560
<range>$L4$70 = 6568
<begin>$L4$71 = 6576
<end>$L4$72 = 6584
resolution$73 = 6592
<range>$L5$74 = 6600
<begin>$L5$75 = 6608
<end>$L5$76 = 6616
benchmark_per_target_usage$77 = 6624
<range>$L6$78 = 6632
<begin>$L6$79 = 6640
<end>$L6$80 = 6648
result$81 = 6656
<range>$L7$82 = 6664
<begin>$L7$83 = 6672
<end>$L7$84 = 6680
resolution$85 = 6688
<range>$L8$86 = 6696
<begin>$L8$87 = 6704
<end>$L8$88 = 6712
benchmark_per_target_usage$89 = 6720
<range>$L9$90 = 6728
<begin>$L9$91 = 6736
<end>$L9$92 = 6744
result$93 = 6752
$T94 = 6768
$T95 = 6772
$T96 = 6776
$T97 = 6780
$T98 = 6784
$T99 = 6792
$T100 = 6808
$T101 = 6816
$T102 = 6824
$T103 = 6828
$T104 = 6832
$T105 = 6836
$T106 = 6840
$T107 = 6848
$T108 = 6856
$T109 = 6864
$T110 = 6868
$T111 = 6872
$T112 = 6876
$T113 = 6880
$T114 = 6896
tv72 = 6912
tv143 = 6920
tv152 = 6928
tv161 = 6936
tv176 = 6944
tv186 = 6952
tv198 = 6960
tv218 = 6968
tv203 = 6976
tv914 = 6984
tv191 = 6992
tv916 = 7000
tv131 = 7008
tv918 = 7016
tv325 = 7024
tv70 = 7032
tv920 = 7040
tv285 = 7048
tv287 = 7056
tv321 = 7060
tv65 = 7064
tv922 = 7072
tv365 = 7080
tv342 = 7088
tv931 = 7096
tv385 = 7104
tv394 = 7112
tv402 = 7120
tv410 = 7128
tv423 = 7136
tv431 = 7144
tv1168 = 7152
tv463 = 7160
tv472 = 7168
tv508 = 7176
tv517 = 7184
tv526 = 7192
tv533 = 7200
tv543 = 7208
tv552 = 7216
tv560 = 7224
tv568 = 7232
tv581 = 7240
tv589 = 7248
tv653 = 7256
__$ArrayPad$ = 7264
params$ = 7312
?dtor$18@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA PROC ; `run_benchmark'::`1'::dtor$18
  002b3	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002b8	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002bd	55		 push	 rbp
  002be	57		 push	 rdi
  002bf	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002c3	48 8b ea	 mov	 rbp, rdx
  002c6	48 8d 8d 00 18
	00 00		 lea	 rcx, QWORD PTR ss$54[rbp]
  002cd	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  002d2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002d6	5f		 pop	 rdi
  002d7	5d		 pop	 rbp
  002d8	c3		 ret	 0
?dtor$18@?0??run_benchmark@@YA?AW4mfxStatus@@PEAUsInputParams@@@Z@4HA ENDP ; `run_benchmark'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z PROC ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> ><std::default_delete<CQSVPipeline>,0>, COMDAT

; 1820 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Ptr$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEAPEAVCQSVPipeline@@@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCQSVPipeline@@@Z ; std::_Compressed_pair<std::default_delete<CQSVPipeline>,CQSVPipeline *,1>::_Compressed_pair<std::default_delete<CQSVPipeline>,CQSVPipeline *,1><CQSVPipeline * &>
  0003a	90		 npad	 1
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z ENDP ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> ><std::default_delete<CQSVPipeline>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAAAEAU?$default_delete@VCQSVPipeline@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAAAEAU?$default_delete@VCQSVPipeline@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<CQSVPipeline>,CQSVPipeline *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAAAEAU?$default_delete@VCQSVPipeline@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<CQSVPipeline>,CQSVPipeline *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??B?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 0
this$ = 32
??B?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBA_NXZ PROC ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator bool, COMDAT

; 1899 :     explicit operator bool() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1900 :         return static_cast<bool>(_Mypair._Myval2);

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 06		 je	 SHORT $LN3@operator
  00029	c6 04 24 01	 mov	 BYTE PTR tv67[rsp], 1
  0002d	eb 04		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002f	c6 04 24 00	 mov	 BYTE PTR tv67[rsp], 0
$LN4@operator:
  00033	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 1901 :     }

  00037	48 83 c4 10	 add	 rsp, 16
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??B?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBA_NXZ ENDP ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ
_TEXT	SEGMENT
this$ = 16
??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ PROC ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->, COMDAT

; 1891 :     _NODISCARD pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1892 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1893 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ENDP ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1d		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VCQSVPipeline@@@std@@PEAVCQSVPipeline@@$00@std@@QEAAAEAU?$default_delete@VCQSVPipeline@@@2@XZ ; std::_Compressed_pair<std::default_delete<CQSVPipeline>,CQSVPipeline *,1>::_Get_first
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??R?$default_delete@VCQSVPipeline@@@std@@QEBAXPEAVCQSVPipeline@@@Z ; std::default_delete<CQSVPipeline>::operator()
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??R?$default_delete@VCQSVPipeline@@@std@@QEBAXPEAVCQSVPipeline@@@Z
_TEXT	SEGMENT
$T1 = 32
tv70 = 40
this$ = 64
_Ptr$ = 72
??R?$default_delete@VCQSVPipeline@@@std@@QEBAXPEAVCQSVPipeline@@@Z PROC ; std::default_delete<CQSVPipeline>::operator(), COMDAT

; 1765 :     void operator()(_Ty* _Ptr) const noexcept { // delete a pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1766 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1767 :         delete _Ptr;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0002d	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  00033	74 1b		 je	 SHORT $LN3@operator
  00035	48 8b 44 24 20	 mov	 rax, QWORD PTR $T1[rsp]
  0003a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003d	ba 01 00 00 00	 mov	 edx, 1
  00042	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00047	ff 10		 call	 QWORD PTR [rax]
  00049	48 89 44 24 28	 mov	 QWORD PTR tv70[rsp], rax
  0004e	eb 09		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv70[rsp], 0
$LN4@operator:

; 1768 :     }

  00059	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??R?$default_delete@VCQSVPipeline@@@std@@QEBAXPEAVCQSVPipeline@@@Z ENDP ; std::default_delete<CQSVPipeline>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
sts$ = 32
pPipeline$ = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 92
$T8 = 96
$T9 = 100
$T10 = 104
$T11 = 108
$T12 = 112
tv77 = 120
tv86 = 128
tv132 = 136
tv139 = 144
tv149 = 152
tv162 = 160
tv170 = 168
tv180 = 176
params$ = 208
?run_encode@@YAHPEAUsInputParams@@@Z PROC		; run_encode

; 752  : int run_encode(sInputParams *params) {

$LN20:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+208]

; 753  :     mfxStatus sts = MFX_ERR_NONE; // return value check

  00024	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR sts$[rsp], 0

; 754  : 
; 755  :     unique_ptr<CQSVPipeline> pPipeline(new CQSVPipeline);

  0002c	b9 08 14 00 00	 mov	 ecx, 5128		; 00001408H
  00031	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00036	48 89 44 24 50	 mov	 QWORD PTR $T5[rsp], rax
  0003b	48 83 7c 24 50
	00		 cmp	 QWORD PTR $T5[rsp], 0
  00041	74 11		 je	 SHORT $LN16@run_encode
  00043	48 8b 4c 24 50	 mov	 rcx, QWORD PTR $T5[rsp]
  00048	e8 00 00 00 00	 call	 ??0CQSVPipeline@@QEAA@XZ ; CQSVPipeline::CQSVPipeline
  0004d	48 89 44 24 78	 mov	 QWORD PTR tv77[rsp], rax
  00052	eb 09		 jmp	 SHORT $LN17@run_encode
$LN16@run_encode:
  00054	48 c7 44 24 78
	00 00 00 00	 mov	 QWORD PTR tv77[rsp], 0
$LN17@run_encode:
  0005d	48 8b 44 24 78	 mov	 rax, QWORD PTR tv77[rsp]
  00062	48 89 44 24 48	 mov	 QWORD PTR $T4[rsp], rax
  00067	48 8b 54 24 48	 mov	 rdx, QWORD PTR $T4[rsp]
  0006c	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00071	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VCQSVPipeline@@@std@@$0A@@?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@PEAVCQSVPipeline@@@Z ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> ><std::default_delete<CQSVPipeline>,0>
  00076	90		 npad	 1

; 756  :     if (!pPipeline) {

  00077	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  0007c	e8 00 00 00 00	 call	 ??B?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBA_NXZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator bool
  00081	0f b6 c0	 movzx	 eax, al
  00084	85 c0		 test	 eax, eax
  00086	75 1b		 jne	 SHORT $LN5@run_encode

; 757  :         return MFX_ERR_MEMORY_ALLOC;

  00088	c7 44 24 58 fc
	ff ff ff	 mov	 DWORD PTR $T6[rsp], -4
  00090	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00095	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  0009a	8b 44 24 58	 mov	 eax, DWORD PTR $T6[rsp]
  0009e	e9 7b 02 00 00	 jmp	 $LN1@run_encode
$LN5@run_encode:

; 758  :     }
; 759  : 
; 760  :     sts = pPipeline->Init(params);

  000a3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  000a8	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  000ad	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv86[rsp], rax
  000b5	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR tv86[rsp]
  000bd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c0	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR params$[rsp]
  000c8	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR tv86[rsp]
  000d0	ff 50 10	 call	 QWORD PTR [rax+16]
  000d3	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax

; 761  :     if (sts < MFX_ERR_NONE) return sts;

  000d7	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  000dc	7d 1b		 jge	 SHORT $LN6@run_encode
  000de	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  000e2	89 44 24 5c	 mov	 DWORD PTR $T7[rsp], eax
  000e6	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  000eb	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  000f0	8b 44 24 5c	 mov	 eax, DWORD PTR $T7[rsp]
  000f4	e9 25 02 00 00	 jmp	 $LN1@run_encode
$LN6@run_encode:

; 762  : 
; 763  :     if (params->pStrLogFile) {

  000f9	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR params$[rsp]
  00101	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  00109	74 28		 je	 SHORT $LN7@run_encode

; 764  :         free(params->pStrLogFile);

  0010b	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR params$[rsp]
  00113	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  0011a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free

; 765  :         params->pStrLogFile = NULL;

  00120	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR params$[rsp]
  00128	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
$LN7@run_encode:

; 766  :     }
; 767  : 
; 768  :     pPipeline->SetAbortFlagPointer(&g_signal_abort);

  00133	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00138	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  0013d	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv132[rsp], rax
  00145	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR tv132[rsp]
  0014d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00150	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?g_signal_abort@@3_NA
  00157	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR tv132[rsp]
  0015f	ff 50 48	 call	 QWORD PTR [rax+72]

; 769  :     set_signal_handler();

  00162	e8 00 00 00 00	 call	 ?set_signal_handler@@YAHXZ ; set_signal_handler

; 770  : 
; 771  :     if (MFX_ERR_NONE != (sts = pPipeline->CheckCurrentVideoParam())) {

  00167	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  0016c	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  00171	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR tv139[rsp], rax
  00179	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR tv139[rsp]
  00181	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00184	45 33 c0	 xor	 r8d, r8d
  00187	33 d2		 xor	 edx, edx
  00189	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR tv139[rsp]
  00191	ff 50 40	 call	 QWORD PTR [rax+64]
  00194	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax
  00198	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  0019d	74 1b		 je	 SHORT $LN2@run_encode

; 772  :         return sts;

  0019f	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  001a3	89 44 24 60	 mov	 DWORD PTR $T8[rsp], eax
  001a7	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  001ac	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  001b1	8b 44 24 60	 mov	 eax, DWORD PTR $T8[rsp]
  001b5	e9 64 01 00 00	 jmp	 $LN1@run_encode
$LN2@run_encode:

; 773  :     }
; 774  : 
; 775  :     for (;;) {
; 776  :         sts = pPipeline->Run();

  001ba	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  001bf	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  001c4	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv149[rsp], rax
  001cc	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR tv149[rsp]
  001d4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001d7	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR tv149[rsp]
  001df	ff 50 20	 call	 QWORD PTR [rax+32]
  001e2	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax

; 777  : 
; 778  :         if (MFX_ERR_DEVICE_LOST == sts || MFX_ERR_DEVICE_FAILED == sts) {

  001e6	83 7c 24 20 f3	 cmp	 DWORD PTR sts$[rsp], -13
  001eb	74 0b		 je	 SHORT $LN11@run_encode
  001ed	83 7c 24 20 ef	 cmp	 DWORD PTR sts$[rsp], -17
  001f2	0f 85 c2 00 00
	00		 jne	 $LN9@run_encode
$LN11@run_encode:

; 779  :             _ftprintf(stderr, _T("\nERROR: Hardware device was lost or returned an unexpected error. Recovering...\n"));

  001f8	b9 02 00 00 00	 mov	 ecx, 2
  001fd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00203	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG178000
  0020a	48 8b c8	 mov	 rcx, rax
  0020d	e8 00 00 00 00	 call	 fprintf

; 780  :             sts = pPipeline->ResetDevice();

  00212	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00217	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  0021c	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv162[rsp], rax
  00224	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR tv162[rsp]
  0022c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0022f	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR tv162[rsp]
  00237	ff 50 38	 call	 QWORD PTR [rax+56]
  0023a	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax

; 781  :             if (sts < MFX_ERR_NONE) return sts;

  0023e	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  00243	7d 1b		 jge	 SHORT $LN12@run_encode
  00245	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  00249	89 44 24 64	 mov	 DWORD PTR $T9[rsp], eax
  0024d	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00252	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00257	8b 44 24 64	 mov	 eax, DWORD PTR $T9[rsp]
  0025b	e9 be 00 00 00	 jmp	 $LN1@run_encode
$LN12@run_encode:

; 782  : 
; 783  :             sts = pPipeline->ResetMFXComponents(params);

  00260	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00265	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  0026a	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR tv170[rsp], rax
  00272	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR tv170[rsp]
  0027a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0027d	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR params$[rsp]
  00285	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR tv170[rsp]
  0028d	ff 50 30	 call	 QWORD PTR [rax+48]
  00290	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax

; 784  :             if (sts < MFX_ERR_NONE) return sts;

  00294	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  00299	7d 18		 jge	 SHORT $LN13@run_encode
  0029b	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  0029f	89 44 24 68	 mov	 DWORD PTR $T10[rsp], eax
  002a3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  002a8	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  002ad	8b 44 24 68	 mov	 eax, DWORD PTR $T10[rsp]
  002b1	eb 6b		 jmp	 SHORT $LN1@run_encode
$LN13@run_encode:

; 785  :             continue;

  002b3	e9 02 ff ff ff	 jmp	 $LN2@run_encode

; 786  :         } else {

  002b8	eb 21		 jmp	 SHORT $LN10@run_encode
$LN9@run_encode:

; 787  :             if (sts < MFX_ERR_NONE) return sts;

  002ba	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  002bf	7d 18		 jge	 SHORT $LN14@run_encode
  002c1	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  002c5	89 44 24 6c	 mov	 DWORD PTR $T11[rsp], eax
  002c9	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  002ce	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  002d3	8b 44 24 6c	 mov	 eax, DWORD PTR $T11[rsp]
  002d7	eb 45		 jmp	 SHORT $LN1@run_encode
$LN14@run_encode:

; 788  :             break;

  002d9	eb 05		 jmp	 SHORT $LN3@run_encode
$LN10@run_encode:

; 789  :         }
; 790  :     }

  002db	e9 da fe ff ff	 jmp	 $LN2@run_encode
$LN3@run_encode:

; 791  : 
; 792  :     pPipeline->Close();

  002e0	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  002e5	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEBAPEAVCQSVPipeline@@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::operator->
  002ea	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR tv180[rsp], rax
  002f2	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR tv180[rsp]
  002fa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002fd	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR tv180[rsp]
  00305	ff 50 28	 call	 QWORD PTR [rax+40]

; 793  : 
; 794  :     return sts;

  00308	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  0030c	89 44 24 70	 mov	 DWORD PTR $T12[rsp], eax
  00310	48 8d 4c 24 38	 lea	 rcx, QWORD PTR pPipeline$[rsp]
  00315	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  0031a	8b 44 24 70	 mov	 eax, DWORD PTR $T12[rsp]
$LN1@run_encode:

; 795  : }

  0031e	48 8b f8	 mov	 rdi, rax
  00321	48 8b cc	 mov	 rcx, rsp
  00324	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?run_encode@@YAHPEAUsInputParams@@@Z$rtcFrameData
  0032b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00330	48 8b c7	 mov	 rax, rdi
  00333	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  0033a	5f		 pop	 rdi
  0033b	c3		 ret	 0
?run_encode@@YAHPEAUsInputParams@@@Z ENDP		; run_encode
_TEXT	ENDS
text$x	SEGMENT
sts$ = 32
pPipeline$ = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 92
$T8 = 96
$T9 = 100
$T10 = 104
$T11 = 108
$T12 = 112
tv77 = 120
tv86 = 128
tv132 = 136
tv139 = 144
tv149 = 152
tv162 = 160
tv170 = 168
tv180 = 176
params$ = 208
?dtor$0@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA PROC ; `run_encode'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	ba 08 14 00 00	 mov	 edx, 5128		; 00001408H
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR $T5[rbp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA ENDP ; `run_encode'::`1'::dtor$0
sts$ = 32
pPipeline$ = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 92
$T8 = 96
$T9 = 100
$T10 = 104
$T11 = 108
$T12 = 112
tv77 = 120
tv86 = 128
tv132 = 136
tv139 = 144
tv149 = 152
tv162 = 160
tv170 = 168
tv180 = 176
params$ = 208
?dtor$1@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA PROC ; `run_encode'::`1'::dtor$1
  00028	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00032	55		 push	 rbp
  00033	57		 push	 rdi
  00034	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00038	48 8b ea	 mov	 rbp, rdx
  0003b	48 8d 4d 38	 lea	 rcx, QWORD PTR pPipeline$[rbp]
  0003f	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00044	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?dtor$1@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA ENDP ; `run_encode'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 32
pPipeline$ = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 92
$T8 = 96
$T9 = 100
$T10 = 104
$T11 = 108
$T12 = 112
tv77 = 120
tv86 = 128
tv132 = 136
tv139 = 144
tv149 = 152
tv162 = 160
tv170 = 168
tv180 = 176
params$ = 208
?dtor$0@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA PROC ; `run_encode'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	ba 08 14 00 00	 mov	 edx, 5128		; 00001408H
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR $T5[rbp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA ENDP ; `run_encode'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 32
pPipeline$ = 56
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 92
$T8 = 96
$T9 = 100
$T10 = 104
$T11 = 108
$T12 = 112
tv77 = 120
tv86 = 128
tv132 = 136
tv139 = 144
tv149 = 152
tv162 = 160
tv170 = 168
tv180 = 176
params$ = 208
?dtor$1@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA PROC ; `run_encode'::`1'::dtor$1
  00028	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00032	55		 push	 rbp
  00033	57		 push	 rdi
  00034	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00038	48 8b ea	 mov	 rbp, rdx
  0003b	48 8d 4d 38	 lea	 rcx, QWORD PTR pPipeline$[rbp]
  0003f	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCQSVPipeline@@U?$default_delete@VCQSVPipeline@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >::~unique_ptr<CQSVPipeline,std::default_delete<CQSVPipeline> >
  00044	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?dtor$1@?0??run_encode@@YAHPEAUsInputParams@@@Z@4HA ENDP ; `run_encode'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
ret$ = 32
?set_signal_handler@@YAHXZ PROC				; set_signal_handler

; 744  : static int set_signal_handler() {

  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 0c 00 00 00	 mov	 ecx, 12
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 745  :     int ret = 0;

  00015	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR ret$[rsp], 0

; 746  :     if (SIG_ERR == signal(SIGINT, sigcatch)) {

  0001d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?sigcatch@@YAXH@Z ; sigcatch
  00024	b9 02 00 00 00	 mov	 ecx, 2
  00029	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_signal
  0002f	48 83 f8 ff	 cmp	 rax, -1
  00033	75 1a		 jne	 SHORT $LN2@set_signal

; 747  :         _ftprintf(stderr, _T("failed to set signal handler.\n"));

  00035	b9 02 00 00 00	 mov	 ecx, 2
  0003a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00040	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177775
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 fprintf
$LN2@set_signal:

; 748  :     }
; 749  :     return ret;

  0004f	8b 44 24 20	 mov	 eax, DWORD PTR ret$[rsp]

; 750  : }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
?set_signal_handler@@YAHXZ ENDP				; set_signal_handler
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
sig$ = 16
?sigcatch@@YAXH@Z PROC					; sigcatch

; 740  : static void sigcatch(int sig) {

  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi

; 741  :     g_signal_abort = true;

  00005	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?g_signal_abort@@3_NA, 1

; 742  : }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?sigcatch@@YAXH@Z ENDP					; sigcatch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?parse_print_options@@YAHPEBD0@Z PROC			; parse_print_options

; 659  : int parse_print_options(const TCHAR *option_name, const TCHAR *arg1) {

$LN33:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 10 03
	00 00		 sub	 rsp, 784		; 00000310H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 c4 00 00 00	 mov	 ecx, 196		; 000000c4H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR [rsp+800]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 00
	03 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 660  : 
; 661  :     // process multi-character options
; 662  :     if (0 == _tcscmp(option_name, _T("help"))) {

  0003b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177723
  00042	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR option_name$[rsp]
  0004a	e8 00 00 00 00	 call	 _tcscmp
  0004f	85 c0		 test	 eax, eax
  00051	75 14		 jne	 SHORT $LN2@parse_prin

; 663  :         show_version();

  00053	e8 00 00 00 00	 call	 ?show_version@@YAXXZ	; show_version

; 664  :         show_help();

  00058	e8 00 00 00 00	 call	 ?show_help@@YAXXZ	; show_help

; 665  :         return 1;

  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	e9 86 06 00 00	 jmp	 $LN20@parse_prin
$LN2@parse_prin:

; 666  :     }
; 667  :     if (0 == _tcscmp(option_name, _T("version"))) {

  00067	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177725
  0006e	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR option_name$[rsp]
  00076	e8 00 00 00 00	 call	 _tcscmp
  0007b	85 c0		 test	 eax, eax
  0007d	75 0f		 jne	 SHORT $LN3@parse_prin

; 668  :         show_version();

  0007f	e8 00 00 00 00	 call	 ?show_version@@YAXXZ	; show_version

; 669  :         return 1;

  00084	b8 01 00 00 00	 mov	 eax, 1
  00089	e9 5f 06 00 00	 jmp	 $LN20@parse_prin
$LN3@parse_prin:

; 670  :     }
; 671  :     if (0 == _tcscmp(option_name, _T("check-environment"))) {

  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177727
  00095	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR option_name$[rsp]
  0009d	e8 00 00 00 00	 call	 _tcscmp
  000a2	85 c0		 test	 eax, eax
  000a4	75 78		 jne	 SHORT $LN4@parse_prin

; 672  :         show_version();

  000a6	e8 00 00 00 00	 call	 ?show_version@@YAXXZ	; show_version

; 673  :         _ftprintf(stdout, _T("%s"), getEnviromentInfo(true).c_str());

  000ab	b2 01		 mov	 dl, 1
  000ad	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T11[rsp]
  000b2	e8 00 00 00 00	 call	 ?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; getEnviromentInfo
  000b7	48 89 84 24 78
	02 00 00	 mov	 QWORD PTR tv330[rsp], rax
  000bf	48 8b 84 24 78
	02 00 00	 mov	 rax, QWORD PTR tv330[rsp]
  000c7	48 89 84 24 80
	02 00 00	 mov	 QWORD PTR tv317[rsp], rax
  000cf	48 8b 8c 24 80
	02 00 00	 mov	 rcx, QWORD PTR tv317[rsp]
  000d7	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000dc	48 89 84 24 88
	02 00 00	 mov	 QWORD PTR tv83[rsp], rax
  000e4	b9 01 00 00 00	 mov	 ecx, 1
  000e9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  000ef	48 8b 8c 24 88
	02 00 00	 mov	 rcx, QWORD PTR tv83[rsp]
  000f7	4c 8b c1	 mov	 r8, rcx
  000fa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177728
  00101	48 8b c8	 mov	 rcx, rax
  00104	e8 00 00 00 00	 call	 fprintf
  00109	90		 npad	 1
  0010a	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T11[rsp]
  0010f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 674  :         return 1;

  00114	b8 01 00 00 00	 mov	 eax, 1
  00119	e9 cf 05 00 00	 jmp	 $LN20@parse_prin
$LN4@parse_prin:

; 675  :     }
; 676  :     if (0 == _tcscmp(option_name, _T("check-environment-auo"))) {

  0011e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177730
  00125	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR option_name$[rsp]
  0012d	e8 00 00 00 00	 call	 _tcscmp
  00132	85 c0		 test	 eax, eax
  00134	0f 85 0c 01 00
	00		 jne	 $LN5@parse_prin

; 677  :         show_version();

  0013a	e8 00 00 00 00	 call	 ?show_version@@YAXXZ	; show_version

; 678  :         _ftprintf(stdout, _T("%s"), getEnviromentInfo(false).c_str());

  0013f	33 d2		 xor	 edx, edx
  00141	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T12[rsp]
  00146	e8 00 00 00 00	 call	 ?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; getEnviromentInfo
  0014b	48 89 84 24 90
	02 00 00	 mov	 QWORD PTR tv331[rsp], rax
  00153	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR tv331[rsp]
  0015b	48 89 84 24 98
	02 00 00	 mov	 QWORD PTR tv319[rsp], rax
  00163	48 8b 8c 24 98
	02 00 00	 mov	 rcx, QWORD PTR tv319[rsp]
  0016b	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00170	48 89 84 24 a0
	02 00 00	 mov	 QWORD PTR tv131[rsp], rax
  00178	b9 01 00 00 00	 mov	 ecx, 1
  0017d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00183	48 8b 8c 24 a0
	02 00 00	 mov	 rcx, QWORD PTR tv131[rsp]
  0018b	4c 8b c1	 mov	 r8, rcx
  0018e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177731
  00195	48 8b c8	 mov	 rcx, rax
  00198	e8 00 00 00 00	 call	 fprintf
  0019d	90		 npad	 1
  0019e	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T12[rsp]
  001a3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 679  :         mfxVersion lib = get_mfx_libhw_version();

  001a8	e8 00 00 00 00	 call	 ?get_mfx_libhw_version@@YA?ATmfxVersion@@XZ ; get_mfx_libhw_version
  001ad	89 84 24 c8 01
	00 00		 mov	 DWORD PTR $T22[rsp], eax
  001b4	8b 84 24 c8 01
	00 00		 mov	 eax, DWORD PTR $T22[rsp]
  001bb	89 84 24 84 00
	00 00		 mov	 DWORD PTR lib$13[rsp], eax

; 680  :         mfxVersion test = { 0, 1 };

  001c2	33 c0		 xor	 eax, eax
  001c4	66 89 84 24 a4
	00 00 00	 mov	 WORD PTR test$14[rsp], ax
  001cc	b8 01 00 00 00	 mov	 eax, 1
  001d1	66 89 84 24 a6
	00 00 00	 mov	 WORD PTR test$14[rsp+2], ax

; 681  :         if (check_lib_version(lib, test)) {

  001d9	8b 94 24 a4 00
	00 00		 mov	 edx, DWORD PTR test$14[rsp]
  001e0	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR lib$13[rsp]
  001e7	e8 00 00 00 00	 call	 ?check_lib_version@@YAHTmfxVersion@@0@Z ; check_lib_version
  001ec	85 c0		 test	 eax, eax
  001ee	74 4c		 je	 SHORT $LN6@parse_prin

; 682  :             _ftprintf(stdout, _T("Media SDK Version: Hardware API v%d.%d\n\n"), lib.Major, lib.Minor);

  001f0	0f b7 84 24 84
	00 00 00	 movzx	 eax, WORD PTR lib$13[rsp]
  001f8	89 84 24 a8 02
	00 00		 mov	 DWORD PTR tv142[rsp], eax
  001ff	0f b7 8c 24 86
	00 00 00	 movzx	 ecx, WORD PTR lib$13[rsp+2]
  00207	89 8c 24 ac 02
	00 00		 mov	 DWORD PTR tv144[rsp], ecx
  0020e	b9 01 00 00 00	 mov	 ecx, 1
  00213	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00219	8b 8c 24 a8 02
	00 00		 mov	 ecx, DWORD PTR tv142[rsp]
  00220	44 8b c9	 mov	 r9d, ecx
  00223	8b 8c 24 ac 02
	00 00		 mov	 ecx, DWORD PTR tv144[rsp]
  0022a	44 8b c1	 mov	 r8d, ecx
  0022d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177733
  00234	48 8b c8	 mov	 rcx, rax
  00237	e8 00 00 00 00	 call	 fprintf
$LN6@parse_prin:

; 683  :         }
; 684  :         return 1;

  0023c	b8 01 00 00 00	 mov	 eax, 1
  00241	e9 a7 04 00 00	 jmp	 $LN20@parse_prin
$LN5@parse_prin:

; 685  :     }
; 686  :     if (0 == _tcscmp(option_name, _T("check-features"))) {

  00246	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177735
  0024d	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR option_name$[rsp]
  00255	e8 00 00 00 00	 call	 _tcscmp
  0025a	85 c0		 test	 eax, eax
  0025c	0f 85 c4 00 00
	00		 jne	 $LN7@parse_prin

; 687  :         tstring output = (arg1[0] != _T('-')) ? arg1 : _T("");

  00262	b8 01 00 00 00	 mov	 eax, 1
  00267	48 6b c0 00	 imul	 rax, rax, 0
  0026b	48 8b 8c 24 28
	03 00 00	 mov	 rcx, QWORD PTR arg1$[rsp]
  00273	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  00277	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  0027a	74 12		 je	 SHORT $LN21@parse_prin
  0027c	48 8b 84 24 28
	03 00 00	 mov	 rax, QWORD PTR arg1$[rsp]
  00284	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR tv159[rsp], rax
  0028c	eb 0f		 jmp	 SHORT $LN22@parse_prin
$LN21@parse_prin:
  0028e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG177736
  00295	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR tv159[rsp], rax
$LN22@parse_prin:
  0029d	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR tv159[rsp]
  002a5	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR output$15[rsp]
  002ad	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  002b2	90		 npad	 1

; 688  :         writeFeatureList(output, false);

  002b3	48 8d 84 24 d0
	01 00 00	 lea	 rax, QWORD PTR $T23[rsp]
  002bb	48 89 84 24 f8
	01 00 00	 mov	 QWORD PTR $T24[rsp], rax
  002c3	48 8d 94 24 c8
	00 00 00	 lea	 rdx, QWORD PTR output$15[rsp]
  002cb	48 8b 8c 24 f8
	01 00 00	 mov	 rcx, QWORD PTR $T24[rsp]
  002d3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  002d8	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR tv154[rsp], rax
  002e0	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR tv154[rsp]
  002e8	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR tv322[rsp], rax
  002f0	45 33 c0	 xor	 r8d, r8d
  002f3	33 d2		 xor	 edx, edx
  002f5	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR tv322[rsp]
  002fd	e8 00 00 00 00	 call	 ?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z ; writeFeatureList

; 689  :         return 1;

  00302	c7 84 24 00 02
	00 00 01 00 00
	00		 mov	 DWORD PTR $T25[rsp], 1
  0030d	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR output$15[rsp]
  00315	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0031a	8b 84 24 00 02
	00 00		 mov	 eax, DWORD PTR $T25[rsp]
  00321	e9 c7 03 00 00	 jmp	 $LN20@parse_prin
$LN7@parse_prin:

; 690  :     }
; 691  :     if (0 == _tcscmp(option_name, _T("check-features-auo"))) {

  00326	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177739
  0032d	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR option_name$[rsp]
  00335	e8 00 00 00 00	 call	 _tcscmp
  0033a	85 c0		 test	 eax, eax
  0033c	75 58		 jne	 SHORT $LN8@parse_prin

; 692  :         writeFeatureList(_T(""), true);

  0033e	48 8d 84 24 08
	02 00 00	 lea	 rax, QWORD PTR $T26[rsp]
  00346	48 89 84 24 30
	02 00 00	 mov	 QWORD PTR $T27[rsp], rax
  0034e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177740
  00355	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR $T27[rsp]
  0035d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00362	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR tv332[rsp], rax
  0036a	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR tv332[rsp]
  00372	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR tv325[rsp], rax
  0037a	45 33 c0	 xor	 r8d, r8d
  0037d	b2 01		 mov	 dl, 1
  0037f	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR tv325[rsp]
  00387	e8 00 00 00 00	 call	 ?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z ; writeFeatureList

; 693  :         return 1;

  0038c	b8 01 00 00 00	 mov	 eax, 1
  00391	e9 57 03 00 00	 jmp	 $LN20@parse_prin
$LN8@parse_prin:

; 694  :     }
; 695  :     if (0 == _tcscmp(option_name, _T("check-features-html"))) {

  00396	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177742
  0039d	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR option_name$[rsp]
  003a5	e8 00 00 00 00	 call	 _tcscmp
  003aa	85 c0		 test	 eax, eax
  003ac	0f 85 c7 00 00
	00		 jne	 $LN9@parse_prin

; 696  :         tstring output = (arg1[0] != _T('-')) ? arg1 : _T("");

  003b2	b8 01 00 00 00	 mov	 eax, 1
  003b7	48 6b c0 00	 imul	 rax, rax, 0
  003bb	48 8b 8c 24 28
	03 00 00	 mov	 rcx, QWORD PTR arg1$[rsp]
  003c3	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  003c7	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  003ca	74 12		 je	 SHORT $LN23@parse_prin
  003cc	48 8b 84 24 28
	03 00 00	 mov	 rax, QWORD PTR arg1$[rsp]
  003d4	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR tv200[rsp], rax
  003dc	eb 0f		 jmp	 SHORT $LN24@parse_prin
$LN23@parse_prin:
  003de	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG177743
  003e5	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR tv200[rsp], rax
$LN24@parse_prin:
  003ed	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR tv200[rsp]
  003f5	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR output$16[rsp]
  003fd	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00402	90		 npad	 1

; 697  :         writeFeatureList(output, false, FEATURE_LIST_STR_TYPE_HTML);

  00403	48 8d 84 24 38
	02 00 00	 lea	 rax, QWORD PTR $T28[rsp]
  0040b	48 89 84 24 60
	02 00 00	 mov	 QWORD PTR $T29[rsp], rax
  00413	48 8d 94 24 08
	01 00 00	 lea	 rdx, QWORD PTR output$16[rsp]
  0041b	48 8b 8c 24 60
	02 00 00	 mov	 rcx, QWORD PTR $T29[rsp]
  00423	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00428	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR tv195[rsp], rax
  00430	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR tv195[rsp]
  00438	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR tv328[rsp], rax
  00440	41 b8 03 00 00
	00		 mov	 r8d, 3
  00446	33 d2		 xor	 edx, edx
  00448	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR tv328[rsp]
  00450	e8 00 00 00 00	 call	 ?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z ; writeFeatureList

; 698  :         return 1;

  00455	c7 84 24 68 02
	00 00 01 00 00
	00		 mov	 DWORD PTR $T30[rsp], 1
  00460	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR output$16[rsp]
  00468	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0046d	8b 84 24 68 02
	00 00		 mov	 eax, DWORD PTR $T30[rsp]
  00474	e9 74 02 00 00	 jmp	 $LN20@parse_prin
$LN9@parse_prin:

; 699  :     }
; 700  :     if (0 == _tcscmp(option_name, _T("check-hw"))
; 701  :         || 0 == _tcscmp(option_name, _T("hw-check")))

  00479	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177747
  00480	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR option_name$[rsp]
  00488	e8 00 00 00 00	 call	 _tcscmp
  0048d	85 c0		 test	 eax, eax
  0048f	74 1c		 je	 SHORT $LN11@parse_prin
  00491	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177748
  00498	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR option_name$[rsp]
  004a0	e8 00 00 00 00	 call	 _tcscmp
  004a5	85 c0		 test	 eax, eax
  004a7	0f 85 84 00 00
	00		 jne	 $LN10@parse_prin
$LN11@parse_prin:

; 702  :     {
; 703  :         mfxVersion ver = { 0, 1 };

  004ad	33 c0		 xor	 eax, eax
  004af	66 89 84 24 44
	01 00 00	 mov	 WORD PTR ver$17[rsp], ax
  004b7	b8 01 00 00 00	 mov	 eax, 1
  004bc	66 89 84 24 46
	01 00 00	 mov	 WORD PTR ver$17[rsp+2], ax

; 704  :         if (check_lib_version(get_mfx_libhw_version(), ver) != 0) {

  004c4	e8 00 00 00 00	 call	 ?get_mfx_libhw_version@@YA?ATmfxVersion@@XZ ; get_mfx_libhw_version
  004c9	89 84 24 6c 02
	00 00		 mov	 DWORD PTR $T31[rsp], eax
  004d0	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR ver$17[rsp]
  004d7	8b 8c 24 6c 02
	00 00		 mov	 ecx, DWORD PTR $T31[rsp]
  004de	e8 00 00 00 00	 call	 ?check_lib_version@@YAHTmfxVersion@@0@Z ; check_lib_version
  004e3	85 c0		 test	 eax, eax
  004e5	74 25		 je	 SHORT $LN12@parse_prin

; 705  :             _ftprintf(stdout, _T("Success: QuickSyncVideo (hw encoding) available\n"));

  004e7	b9 01 00 00 00	 mov	 ecx, 1
  004ec	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  004f2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177751
  004f9	48 8b c8	 mov	 rcx, rax
  004fc	e8 00 00 00 00	 call	 fprintf

; 706  :             exit(0);

  00501	33 c9		 xor	 ecx, ecx
  00503	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_exit
  00509	90		 npad	 1

; 707  :         } else {

  0050a	eb 25		 jmp	 SHORT $LN10@parse_prin
$LN12@parse_prin:

; 708  :             _ftprintf(stdout, _T("Error: QuickSyncVideo (hw encoding) unavailable\n"));

  0050c	b9 01 00 00 00	 mov	 ecx, 1
  00511	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00517	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177752
  0051e	48 8b c8	 mov	 rcx, rax
  00521	e8 00 00 00 00	 call	 fprintf

; 709  :             exit(1);

  00526	b9 01 00 00 00	 mov	 ecx, 1
  0052b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_exit
$LN10@parse_prin:

; 710  :         }
; 711  :     }
; 712  :     if (0 == _tcscmp(option_name, _T("lib-check"))
; 713  :         || 0 == _tcscmp(option_name, _T("check-lib"))) {

  00531	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177755
  00538	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR option_name$[rsp]
  00540	e8 00 00 00 00	 call	 _tcscmp
  00545	85 c0		 test	 eax, eax
  00547	74 1c		 je	 SHORT $LN15@parse_prin
  00549	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177756
  00550	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR option_name$[rsp]
  00558	e8 00 00 00 00	 call	 _tcscmp
  0055d	85 c0		 test	 eax, eax
  0055f	0f 85 86 01 00
	00		 jne	 $LN14@parse_prin
$LN15@parse_prin:

; 714  :         mfxVersion test = { 0, 1 };

  00565	33 c0		 xor	 eax, eax
  00567	66 89 84 24 64
	01 00 00	 mov	 WORD PTR test$18[rsp], ax
  0056f	b8 01 00 00 00	 mov	 eax, 1
  00574	66 89 84 24 66
	01 00 00	 mov	 WORD PTR test$18[rsp+2], ax

; 715  :         mfxVersion hwlib = get_mfx_libhw_version();

  0057c	e8 00 00 00 00	 call	 ?get_mfx_libhw_version@@YA?ATmfxVersion@@XZ ; get_mfx_libhw_version
  00581	89 84 24 70 02
	00 00		 mov	 DWORD PTR $T32[rsp], eax
  00588	8b 84 24 70 02
	00 00		 mov	 eax, DWORD PTR $T32[rsp]
  0058f	89 84 24 84 01
	00 00		 mov	 DWORD PTR hwlib$19[rsp], eax

; 716  :         mfxVersion swlib = get_mfx_libsw_version();

  00596	e8 00 00 00 00	 call	 ?get_mfx_libsw_version@@YA?ATmfxVersion@@XZ ; get_mfx_libsw_version
  0059b	89 84 24 74 02
	00 00		 mov	 DWORD PTR $T33[rsp], eax
  005a2	8b 84 24 74 02
	00 00		 mov	 eax, DWORD PTR $T33[rsp]
  005a9	89 84 24 a4 01
	00 00		 mov	 DWORD PTR swlib$20[rsp], eax

; 717  :         show_version();

  005b0	e8 00 00 00 00	 call	 ?show_version@@YAXXZ	; show_version

; 718  : #ifdef _M_IX86
; 719  :         const TCHAR *dll_platform = _T("32");
; 720  : #else
; 721  :         const TCHAR *dll_platform = _T("64");

  005b5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG177757
  005bc	48 89 84 24 b8
	01 00 00	 mov	 QWORD PTR dll_platform$21[rsp], rax

; 722  : #endif
; 723  :         if (check_lib_version(hwlib, test))

  005c4	8b 94 24 64 01
	00 00		 mov	 edx, DWORD PTR test$18[rsp]
  005cb	8b 8c 24 84 01
	00 00		 mov	 ecx, DWORD PTR hwlib$19[rsp]
  005d2	e8 00 00 00 00	 call	 ?check_lib_version@@YAHTmfxVersion@@0@Z ; check_lib_version
  005d7	85 c0		 test	 eax, eax
  005d9	74 57		 je	 SHORT $LN16@parse_prin

; 724  :             _ftprintf(stdout, _T("libmfxhw%s.dll : v%d.%d\n"), dll_platform, hwlib.Major, hwlib.Minor);

  005db	0f b7 84 24 84
	01 00 00	 movzx	 eax, WORD PTR hwlib$19[rsp]
  005e3	89 84 24 f0 02
	00 00		 mov	 DWORD PTR tv253[rsp], eax
  005ea	0f b7 8c 24 86
	01 00 00	 movzx	 ecx, WORD PTR hwlib$19[rsp+2]
  005f2	89 8c 24 f4 02
	00 00		 mov	 DWORD PTR tv255[rsp], ecx
  005f9	b9 01 00 00 00	 mov	 ecx, 1
  005fe	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00604	8b 8c 24 f0 02
	00 00		 mov	 ecx, DWORD PTR tv253[rsp]
  0060b	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  0060f	8b 8c 24 f4 02
	00 00		 mov	 ecx, DWORD PTR tv255[rsp]
  00616	44 8b c9	 mov	 r9d, ecx
  00619	4c 8b 84 24 b8
	01 00 00	 mov	 r8, QWORD PTR dll_platform$21[rsp]
  00621	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177760
  00628	48 8b c8	 mov	 rcx, rax
  0062b	e8 00 00 00 00	 call	 fprintf
  00630	eb 22		 jmp	 SHORT $LN17@parse_prin
$LN16@parse_prin:

; 725  :         else
; 726  :             _ftprintf(stdout, _T("libmfxhw%s.dll : ----\n"), dll_platform);

  00632	b9 01 00 00 00	 mov	 ecx, 1
  00637	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  0063d	4c 8b 84 24 b8
	01 00 00	 mov	 r8, QWORD PTR dll_platform$21[rsp]
  00645	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177761
  0064c	48 8b c8	 mov	 rcx, rax
  0064f	e8 00 00 00 00	 call	 fprintf
$LN17@parse_prin:

; 727  :         if (check_lib_version(swlib, test))

  00654	8b 94 24 64 01
	00 00		 mov	 edx, DWORD PTR test$18[rsp]
  0065b	8b 8c 24 a4 01
	00 00		 mov	 ecx, DWORD PTR swlib$20[rsp]
  00662	e8 00 00 00 00	 call	 ?check_lib_version@@YAHTmfxVersion@@0@Z ; check_lib_version
  00667	85 c0		 test	 eax, eax
  00669	74 57		 je	 SHORT $LN18@parse_prin

; 728  :             _ftprintf(stdout, _T("libmfxsw%s.dll : v%d.%d\n"), dll_platform, swlib.Major, swlib.Minor);

  0066b	0f b7 84 24 a4
	01 00 00	 movzx	 eax, WORD PTR swlib$20[rsp]
  00673	89 84 24 f8 02
	00 00		 mov	 DWORD PTR tv303[rsp], eax
  0067a	0f b7 8c 24 a6
	01 00 00	 movzx	 ecx, WORD PTR swlib$20[rsp+2]
  00682	89 8c 24 fc 02
	00 00		 mov	 DWORD PTR tv305[rsp], ecx
  00689	b9 01 00 00 00	 mov	 ecx, 1
  0068e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00694	8b 8c 24 f8 02
	00 00		 mov	 ecx, DWORD PTR tv303[rsp]
  0069b	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  0069f	8b 8c 24 fc 02
	00 00		 mov	 ecx, DWORD PTR tv305[rsp]
  006a6	44 8b c9	 mov	 r9d, ecx
  006a9	4c 8b 84 24 b8
	01 00 00	 mov	 r8, QWORD PTR dll_platform$21[rsp]
  006b1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177764
  006b8	48 8b c8	 mov	 rcx, rax
  006bb	e8 00 00 00 00	 call	 fprintf
  006c0	eb 22		 jmp	 SHORT $LN19@parse_prin
$LN18@parse_prin:

; 729  :         else
; 730  :             _ftprintf(stdout, _T("libmfxsw%s.dll : ----\n"), dll_platform);

  006c2	b9 01 00 00 00	 mov	 ecx, 1
  006c7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  006cd	4c 8b 84 24 b8
	01 00 00	 mov	 r8, QWORD PTR dll_platform$21[rsp]
  006d5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177765
  006dc	48 8b c8	 mov	 rcx, rax
  006df	e8 00 00 00 00	 call	 fprintf
$LN19@parse_prin:

; 731  :         return 1;

  006e4	b8 01 00 00 00	 mov	 eax, 1
  006e9	eb 02		 jmp	 SHORT $LN20@parse_prin
$LN14@parse_prin:

; 732  :     }
; 733  :     return 0;

  006eb	33 c0		 xor	 eax, eax
$LN20@parse_prin:

; 734  : }

  006ed	48 8b f8	 mov	 rdi, rax
  006f0	48 8b cc	 mov	 rcx, rsp
  006f3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?parse_print_options@@YAHPEBD0@Z$rtcFrameData
  006fa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  006ff	48 8b c7	 mov	 rax, rdi
  00702	48 8b 8c 24 00
	03 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0070a	48 33 cc	 xor	 rcx, rsp
  0070d	e8 00 00 00 00	 call	 __security_check_cookie
  00712	48 81 c4 10 03
	00 00		 add	 rsp, 784		; 00000310H
  00719	5f		 pop	 rdi
  0071a	c3		 ret	 0
$LN32@parse_prin:
?parse_print_options@@YAHPEBD0@Z ENDP			; parse_print_options
_TEXT	ENDS
text$x	SEGMENT
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$0@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 30	 lea	 rcx, QWORD PTR $T11[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$0
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$1@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 58	 lea	 rcx, QWORD PTR $T12[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$1
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$2@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR output$15[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$2
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$3@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8b 8d f8 01
	00 00		 mov	 rcx, QWORD PTR $T24[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$3
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$4@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR $T27[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$4
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$5@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$5
  000b8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000bd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c2	55		 push	 rbp
  000c3	57		 push	 rdi
  000c4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000c8	48 8b ea	 mov	 rbp, rdx
  000cb	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR output$16[rbp]
  000d2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000db	5f		 pop	 rdi
  000dc	5d		 pop	 rbp
  000dd	c3		 ret	 0
?dtor$5@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$5
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$6@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$6
  000de	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000e8	55		 push	 rbp
  000e9	57		 push	 rdi
  000ea	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ee	48 8b ea	 mov	 rbp, rdx
  000f1	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR $T29[rbp]
  000f8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000fd	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00101	5f		 pop	 rdi
  00102	5d		 pop	 rbp
  00103	c3		 ret	 0
?dtor$6@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$0@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 30	 lea	 rcx, QWORD PTR $T11[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$1@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 58	 lea	 rcx, QWORD PTR $T12[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$2@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR output$15[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$3@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8b 8d f8 01
	00 00		 mov	 rcx, QWORD PTR $T24[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$4@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR $T27[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$5@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$5
  000b8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000bd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c2	55		 push	 rbp
  000c3	57		 push	 rdi
  000c4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000c8	48 8b ea	 mov	 rbp, rdx
  000cb	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR output$16[rbp]
  000d2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000db	5f		 pop	 rdi
  000dc	5d		 pop	 rbp
  000dd	c3		 ret	 0
?dtor$5@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T11 = 48
$T12 = 88
lib$13 = 132
test$14 = 164
output$15 = 200
output$16 = 264
ver$17 = 324
test$18 = 356
hwlib$19 = 388
swlib$20 = 420
dll_platform$21 = 440
$T22 = 456
$T23 = 464
$T24 = 504
$T25 = 512
$T26 = 520
$T27 = 560
$T28 = 568
$T29 = 608
$T30 = 616
$T31 = 620
$T32 = 624
$T33 = 628
tv330 = 632
tv317 = 640
tv83 = 648
tv331 = 656
tv319 = 664
tv131 = 672
tv142 = 680
tv144 = 684
tv159 = 688
tv154 = 696
tv322 = 704
tv332 = 712
tv325 = 720
tv200 = 728
tv195 = 736
tv328 = 744
tv253 = 752
tv255 = 756
tv303 = 760
tv305 = 764
__$ArrayPad$ = 768
option_name$ = 800
arg1$ = 808
?dtor$6@?0??parse_print_options@@YAHPEBD0@Z@4HA PROC	; `parse_print_options'::`1'::dtor$6
  000de	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000e8	55		 push	 rbp
  000e9	57		 push	 rdi
  000ea	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ee	48 8b ea	 mov	 rbp, rdx
  000f1	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR $T29[rbp]
  000f8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000fd	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00101	5f		 pop	 rdi
  00102	5d		 pop	 rbp
  00103	c3		 ret	 0
?dtor$6@?0??parse_print_options@@YAHPEBD0@Z@4HA ENDP	; `parse_print_options'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAAPEAXI@Z PROC ; std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 48 00 00 00	 mov	 edx, 72			; 00000048H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAAPEAXI@Z ENDP ; std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ PROC ; std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 20	 add	 rax, 32			; 00000020H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002f	90		 npad	 1
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
  0003d	90		 npad	 1
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ ENDP ; std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA PROC ; `std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA ENDP ; `std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA PROC ; `std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA ENDP ; `std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA PROC ; `std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA ENDP ; `std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA PROC ; `std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???1?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@QEAA@XZ@4HA ENDP ; `std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ PROC ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ ENDP ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K0@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 03	 sar	 rax, 3
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z ; std::allocator<unsigned __int64>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K0@Z PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z ; std::_Destroy_range<std::allocator<unsigned __int64> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXPEA_K0@Z ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S53$ = 52
$T4 = 68
this$ = 96
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ PROC	; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S53$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned __int64>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S53$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ENDP	; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z PROC	; std::allocator<unsigned __int64>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 03	 shl	 rax, 3
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z ENDP	; std::allocator<unsigned __int64>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Take_contents@?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Take_contents@?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Take_contents, COMDAT

; 324  :     void _Take_contents(_Vector_val& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 325  :         this->_Swap_proxy_and_iterators(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 326  :         _Myfirst = _Right._Myfirst;

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00040	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 327  :         _Mylast  = _Right._Mylast;

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00052	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 328  :         _Myend   = _Right._Myend;

  00056	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00060	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00064	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 329  : 
; 330  :         _Right._Myfirst = pointer();

  00068	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0006d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 331  :         _Right._Mylast  = pointer();

  00075	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0007a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 332  :         _Right._Myend   = pointer();

  00082	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00087	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 333  :     }

  0008f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00093	5f		 pop	 rdi
  00094	c3		 ret	 0
?_Take_contents@?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ PROC ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ ENDP ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	0f 84 85 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00071	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?_Destroy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@0@Z ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Destroy
  00086	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 99		 cdq
  0009c	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  000a1	48 f7 f9	 idiv	 rcx
  000a4	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
  000b3	90		 npad	 1
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000b9	4c 8b c1	 mov	 r8, rcx
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@QEAAXQEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@_K@Z ; std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
  000cc	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d2	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000de	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ea	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000f1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f5	5f		 pop	 rdi
  000f6	c3		 ret	 0
?_Tidy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@0@Z PROC ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@0@QEAU10@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXPEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@0@Z ENDP ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??A?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBAAEBU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBAAEBU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@_K@Z PROC ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator[], COMDAT

; 1461 :     _NODISCARD const _Ty& operator[](const size_type _Pos) const noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1462 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1463 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1464 :         _STL_VERIFY(

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003f	48 2b c1	 sub	 rax, rcx
  00042	48 99		 cdq
  00044	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  00049	48 f7 f9	 idiv	 rcx
  0004c	48 39 44 24 58	 cmp	 QWORD PTR _Pos$[rsp], rax
  00051	73 02		 jae	 SHORT $LN7@operator
  00053	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  00055	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  0005c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00061	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00068	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006d	45 33 c9	 xor	 r9d, r9d
  00070	41 b8 b9 05 00
	00		 mov	 r8d, 1465		; 000005b9H
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0007d	b9 02 00 00 00	 mov	 ecx, 2
  00082	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00088	90		 npad	 1
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN11@operator
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN11@operator:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 b9 05 00
	00		 mov	 r9d, 1465		; 000005b9H
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DEA@ECHCKIDC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	90		 npad	 1

; 1465 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");

  000bc	33 c0		 xor	 eax, eax
  000be	85 c0		 test	 eax, eax
  000c0	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000c2	33 c0		 xor	 eax, eax
  000c4	85 c0		 test	 eax, eax
  000c6	0f 85 61 ff ff
	ff		 jne	 $LN4@operator

; 1466 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1467 : 
; 1468 :         return _My_data._Myfirst[_Pos];

  000cc	48 6b 44 24 58
	48		 imul	 rax, QWORD PTR _Pos$[rsp], 72 ; 00000048H
  000d2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000d7	48 03 41 08	 add	 rax, QWORD PTR [rcx+8]

; 1469 :     }

  000db	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000df	5f		 pop	 rdi
  000e0	c3		 ret	 0
??A?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBAAEBU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@_K@Z ENDP ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 99		 cdq
  0003c	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  00041	48 f7 f9	 idiv	 rcx

; 1439 :     }

  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?size@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S19$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S19$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S19$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 531  :     vector(vector&& _Right) noexcept

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 532  :         : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) { // construct by moving _Right

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@0@AEAV10@@Z ; std::move<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Compressed_pair<std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1><std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00049	90		 npad	 1

; 533  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 534  :         _Move_construct(_Right, true_type{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Move_construct@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Move_construct
  00097	90		 npad	 1

; 535  :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Move_construct@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Move_construct@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Move_construct, COMDAT

; 505  :     void _Move_construct(vector& _Right, true_type) noexcept { // move from _Right, stealing its contents

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 506  :         _Mypair._Myval2._Take_contents(_Right._Mypair._Myval2);

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 8b d0	 mov	 rdx, rax
  00035	e8 00 00 00 00	 call	 ?_Take_contents@?$_Vector_val@U?$_Simple_types@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Take_contents

; 507  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?_Move_construct@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Move_construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@QEAAXQEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@QEAAXQEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@_K@Z PROC ; std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	48		 imul	 rax, QWORD PTR _Count$[rsp], 72 ; 00000048H
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@std@@QEAAXQEAU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@2@_K@Z ENDP ; std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 36
__$ReturnUdt$ = 64
ptr$ = 72
??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z PROC ; make_vector<unsigned int,2>, COMDAT

; 111  : std::vector<T> make_vector(const T(&ptr)[size]) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T2[rsp], 0

; 112  :     return std::vector<T>(ptr, ptr + size);

  0002b	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00030	e8 00 00 00 00	 call	 ??0?$allocator@I@std@@QEAA@XZ ; std::allocator<unsigned int>::allocator<unsigned int>
  00035	48 8b 4c 24 48	 mov	 rcx, QWORD PTR ptr$[rsp]
  0003a	48 83 c1 08	 add	 rcx, 8
  0003e	4c 8b c8	 mov	 r9, rax
  00041	4c 8b c1	 mov	 r8, rcx
  00044	48 8b 54 24 48	 mov	 rdx, QWORD PTR ptr$[rsp]
  00049	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0004e	e8 00 00 00 00	 call	 ??$?0PEBIX@?$vector@IV?$allocator@I@std@@@std@@QEAA@PEBI0AEBV?$allocator@I@1@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> ><unsigned int const *,void>
  00053	90		 npad	 1
  00054	8b 44 24 24	 mov	 eax, DWORD PTR $T2[rsp]
  00058	83 c8 01	 or	 eax, 1
  0005b	89 44 24 24	 mov	 DWORD PTR $T2[rsp], eax
  0005f	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 113  : }

  00064	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00068	5f		 pop	 rdi
  00069	c3		 ret	 0
  0006a	cc		 int	 3
??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z ENDP ; make_vector<unsigned int,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 36
__$ReturnUdt$ = 64
ptr$ = 72
?dtor$0@?0???$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z@4HA PROC ; `make_vector<unsigned int,2>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 24	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 24 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z@4HA ENDP ; `make_vector<unsigned int,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 36
__$ReturnUdt$ = 64
ptr$ = 72
?dtor$0@?0???$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z@4HA PROC ; `make_vector<unsigned int,2>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 24	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 24 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z@4HA ENDP ; `make_vector<unsigned int,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
;	COMDAT ??0<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEAA@AEAW4FeatureListStrType@@AEAPEAU_iobuf@@@Z
_TEXT	SEGMENT
this$ = 16
<type>$ = 24
<fp>$ = 32
??0<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEAA@AEAW4FeatureListStrType@@AEAPEAU_iobuf@@@Z PROC ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>, COMDAT

; 585  :     };

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <type>$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 20	 mov	 rcx, QWORD PTR <fp>$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??0<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEAA@AEAW4FeatureListStrType@@AEAPEAU_iobuf@@@Z ENDP ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
;	COMDAT ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
str$ = 56
??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator(), COMDAT

; 581  :     auto print_tstring = [&](tstring str) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 582  :         if (type == FEATURE_LIST_STR_TYPE_TXT) {

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	83 38 01	 cmp	 DWORD PTR [rax], 1
  0002e	75 26		 jne	 SHORT $LN2@operator

; 583  :             _ftprintf(fp, _T("%s"), str.c_str());

  00030	48 8b 4c 24 38	 mov	 rcx, QWORD PTR str$[rsp]
  00035	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00043	4c 8b c0	 mov	 r8, rax
  00046	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0004d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00050	e8 00 00 00 00	 call	 fprintf
  00055	90		 npad	 1
$LN2@operator:

; 584  :         }
; 585  :     };

  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR str$[rsp]
  0005b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00060	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
str$ = 56
?dtor$0@?0???R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 38	 mov	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
str$ = 56
?dtor$0@?0???R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 38	 mov	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z PROC ; writeFeatureList

; 568  : static int writeFeatureList(tstring filename, bool for_auo, FeatureListStrType type = FEATURE_LIST_STR_TYPE_UNKNOWN) {

  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 81 ec 80 0c
	00 00		 sub	 rsp, 3200		; 00000c80H
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 20 03 00 00	 mov	 ecx, 800		; 00000320H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 90
	0c 00 00	 mov	 rcx, QWORD PTR [rsp+3216]
  0002d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00034	48 33 c4	 xor	 rax, rsp
  00037	48 89 84 24 70
	0c 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003f	c7 84 24 3c 0b
	00 00 00 00 00
	00		 mov	 DWORD PTR $T66[rsp], 0

; 569  :     uint32_t codepage = CP_THREAD_ACP;

  0004a	c7 44 24 30 03
	00 00 00	 mov	 DWORD PTR codepage$[rsp], 3

; 570  :     if (type == FEATURE_LIST_STR_TYPE_UNKNOWN) {

  00052	83 bc 24 a0 0c
	00 00 00	 cmp	 DWORD PTR type$[rsp], 0
  0005a	75 0b		 jne	 SHORT $LN8@writeFeatu

; 571  :             type = FEATURE_LIST_STR_TYPE_TXT;

  0005c	c7 84 24 a0 0c
	00 00 01 00 00
	00		 mov	 DWORD PTR type$[rsp], 1
$LN8@writeFeatu:

; 572  :     }
; 573  : 
; 574  :     FILE *fp = stdout;

  00067	b9 01 00 00 00	 mov	 ecx, 1
  0006c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00072	48 89 44 24 48	 mov	 QWORD PTR fp$[rsp], rax

; 575  :     if (filename.length()) {

  00077	48 8b 8c 24 90
	0c 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  0007f	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  00084	48 85 c0	 test	 rax, rax
  00087	74 4a		 je	 SHORT $LN9@writeFeatu

; 576  :         if (_tfopen_s(&fp, filename.c_str(), _T("w"))) {

  00089	48 8b 8c 24 90
	0c 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  00091	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00096	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG177664
  0009d	48 8b d0	 mov	 rdx, rax
  000a0	48 8d 4c 24 48	 lea	 rcx, QWORD PTR fp$[rsp]
  000a5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fopen_s
  000ab	85 c0		 test	 eax, eax
  000ad	74 24		 je	 SHORT $LN9@writeFeatu

; 577  :             return 1;

  000af	c7 84 24 40 08
	00 00 01 00 00
	00		 mov	 DWORD PTR $T29[rsp], 1
  000ba	48 8b 8c 24 90
	0c 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  000c2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c7	8b 84 24 40 08
	00 00		 mov	 eax, DWORD PTR $T29[rsp]
  000ce	e9 8d 0a 00 00	 jmp	 $LN1@writeFeatu
$LN9@writeFeatu:

; 578  :         }
; 579  :     }
; 580  : 
; 581  :     auto print_tstring = [&](tstring str) {
; 582  :         if (type == FEATURE_LIST_STR_TYPE_TXT) {
; 583  :             _ftprintf(fp, _T("%s"), str.c_str());
; 584  :         }
; 585  :     };

  000d3	4c 8d 44 24 48	 lea	 r8, QWORD PTR fp$[rsp]
  000d8	48 8d 94 24 a0
	0c 00 00	 lea	 rdx, QWORD PTR type$[rsp]
  000e0	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  000e5	e8 00 00 00 00	 call	 ??0<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEAA@AEAW4FeatureListStrType@@AEAPEAU_iobuf@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>

; 586  : 
; 587  :     fprintf(stderr, "[DEBUG]--->Checking for QSV...\n");

  000ea	b9 02 00 00 00	 mov	 ecx, 2
  000ef	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  000f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177666
  000fc	48 8b c8	 mov	 rcx, rax
  000ff	e8 00 00 00 00	 call	 fprintf

; 588  :     print_tstring(GetQSVEncVersion());

  00104	48 8d 84 24 48
	08 00 00	 lea	 rax, QWORD PTR $T30[rsp]
  0010c	48 89 84 24 70
	08 00 00	 mov	 QWORD PTR $T31[rsp], rax
  00114	48 8b 8c 24 70
	08 00 00	 mov	 rcx, QWORD PTR $T31[rsp]
  0011c	e8 00 00 00 00	 call	 ?GetQSVEncVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; GetQSVEncVersion
  00121	48 89 84 24 40
	0b 00 00	 mov	 QWORD PTR tv532[rsp], rax
  00129	48 8b 84 24 40
	0b 00 00	 mov	 rax, QWORD PTR tv532[rsp]
  00131	48 89 84 24 48
	0b 00 00	 mov	 QWORD PTR tv475[rsp], rax
  00139	48 8b 94 24 48
	0b 00 00	 mov	 rdx, QWORD PTR tv475[rsp]
  00141	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  00146	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()

; 589  : 
; 590  :     tstring environmentInfo = getEnviromentInfo(false);

  0014b	33 d2		 xor	 edx, edx
  0014d	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR environmentInfo$[rsp]
  00155	e8 00 00 00 00	 call	 ?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; getEnviromentInfo
  0015a	90		 npad	 1

; 591  :     print_tstring(environmentInfo + _T("\n"));

  0015b	48 8d 84 24 78
	08 00 00	 lea	 rax, QWORD PTR $T32[rsp]
  00163	48 89 84 24 a0
	08 00 00	 mov	 QWORD PTR $T33[rsp], rax
  0016b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG177667
  00172	48 8d 94 24 98
	00 00 00	 lea	 rdx, QWORD PTR environmentInfo$[rsp]
  0017a	48 8b 8c 24 a0
	08 00 00	 mov	 rcx, QWORD PTR $T33[rsp]
  00182	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00187	48 89 84 24 50
	0b 00 00	 mov	 QWORD PTR tv129[rsp], rax
  0018f	48 8b 84 24 50
	0b 00 00	 mov	 rax, QWORD PTR tv129[rsp]
  00197	48 89 84 24 58
	0b 00 00	 mov	 QWORD PTR tv478[rsp], rax
  0019f	48 8b 94 24 58
	0b 00 00	 mov	 rdx, QWORD PTR tv478[rsp]
  001a7	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  001ac	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()

; 592  :     bool bOSSupportsQSV = true;

  001b1	c6 84 24 c4 00
	00 00 01	 mov	 BYTE PTR bOSSupportsQSV$[rsp], 1

; 593  : #if defined(_WIN32) || defined(_WIN64)
; 594  :     OSVERSIONINFOEXW osver;
; 595  :     tstring osversion = getOSVersion(&osver);

  001b9	48 8d 94 24 e0
	00 00 00	 lea	 rdx, QWORD PTR osver$[rsp]
  001c1	48 8d 8c 24 18
	02 00 00	 lea	 rcx, QWORD PTR osversion$[rsp]
  001c9	e8 00 00 00 00	 call	 ?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z ; getOSVersion
  001ce	90		 npad	 1

; 596  :     bOSSupportsQSV &= osver.dwPlatformId == VER_PLATFORM_WIN32_NT;

  001cf	83 bc 24 f0 00
	00 00 02	 cmp	 DWORD PTR osver$[rsp+16], 2
  001d7	75 0d		 jne	 SHORT $LN20@writeFeatu
  001d9	c7 84 24 60 0b
	00 00 01 00 00
	00		 mov	 DWORD PTR tv149[rsp], 1
  001e4	eb 0b		 jmp	 SHORT $LN21@writeFeatu
$LN20@writeFeatu:
  001e6	c7 84 24 60 0b
	00 00 00 00 00
	00		 mov	 DWORD PTR tv149[rsp], 0
$LN21@writeFeatu:
  001f1	0f b6 84 24 c4
	00 00 00	 movzx	 eax, BYTE PTR bOSSupportsQSV$[rsp]
  001f9	23 84 24 60 0b
	00 00		 and	 eax, DWORD PTR tv149[rsp]
  00200	88 84 24 c4 00
	00 00		 mov	 BYTE PTR bOSSupportsQSV$[rsp], al

; 597  :     bOSSupportsQSV &= (osver.dwMajorVersion >= 7 || osver.dwMajorVersion == 6 && osver.dwMinorVersion >= 1);

  00207	83 bc 24 e4 00
	00 00 07	 cmp	 DWORD PTR osver$[rsp+4], 7
  0020f	73 21		 jae	 SHORT $LN23@writeFeatu
  00211	83 bc 24 e4 00
	00 00 06	 cmp	 DWORD PTR osver$[rsp+4], 6
  00219	75 0a		 jne	 SHORT $LN22@writeFeatu
  0021b	83 bc 24 e8 00
	00 00 01	 cmp	 DWORD PTR osver$[rsp+8], 1
  00223	73 0d		 jae	 SHORT $LN23@writeFeatu
$LN22@writeFeatu:
  00225	c7 84 24 64 0b
	00 00 00 00 00
	00		 mov	 DWORD PTR tv156[rsp], 0
  00230	eb 0b		 jmp	 SHORT $LN24@writeFeatu
$LN23@writeFeatu:
  00232	c7 84 24 64 0b
	00 00 01 00 00
	00		 mov	 DWORD PTR tv156[rsp], 1
$LN24@writeFeatu:
  0023d	0f b6 84 24 c4
	00 00 00	 movzx	 eax, BYTE PTR bOSSupportsQSV$[rsp]
  00245	23 84 24 64 0b
	00 00		 and	 eax, DWORD PTR tv156[rsp]
  0024c	88 84 24 c4 00
	00 00		 mov	 BYTE PTR bOSSupportsQSV$[rsp], al

; 598  :     bOSSupportsQSV &= osver.wProductType == VER_NT_WORKSTATION;

  00253	0f b6 84 24 fa
	01 00 00	 movzx	 eax, BYTE PTR osver$[rsp+282]
  0025b	83 f8 01	 cmp	 eax, 1
  0025e	75 0d		 jne	 SHORT $LN25@writeFeatu
  00260	c7 84 24 68 0b
	00 00 01 00 00
	00		 mov	 DWORD PTR tv162[rsp], 1
  0026b	eb 0b		 jmp	 SHORT $LN26@writeFeatu
$LN25@writeFeatu:
  0026d	c7 84 24 68 0b
	00 00 00 00 00
	00		 mov	 DWORD PTR tv162[rsp], 0
$LN26@writeFeatu:
  00278	0f b6 84 24 c4
	00 00 00	 movzx	 eax, BYTE PTR bOSSupportsQSV$[rsp]
  00280	23 84 24 68 0b
	00 00		 and	 eax, DWORD PTR tv162[rsp]
  00287	88 84 24 c4 00
	00 00		 mov	 BYTE PTR bOSSupportsQSV$[rsp], al

; 599  : #else
; 600  :     tstring osversion = getOSVersion();
; 601  : #endif
; 602  : 
; 603  :     mfxVersion test = { 0, 1 };

  0028e	33 c0		 xor	 eax, eax
  00290	66 89 84 24 54
	02 00 00	 mov	 WORD PTR test$[rsp], ax
  00298	b8 01 00 00 00	 mov	 eax, 1
  0029d	66 89 84 24 56
	02 00 00	 mov	 WORD PTR test$[rsp+2], ax

; 604  :     for (int impl_type = 0; impl_type < 1; impl_type++) {

  002a5	c7 84 24 64 02
	00 00 00 00 00
	00		 mov	 DWORD PTR impl_type$17[rsp], 0
  002b0	eb 10		 jmp	 SHORT $LN4@writeFeatu
$LN2@writeFeatu:
  002b2	8b 84 24 64 02
	00 00		 mov	 eax, DWORD PTR impl_type$17[rsp]
  002b9	ff c0		 inc	 eax
  002bb	89 84 24 64 02
	00 00		 mov	 DWORD PTR impl_type$17[rsp], eax
$LN4@writeFeatu:
  002c2	83 bc 24 64 02
	00 00 01	 cmp	 DWORD PTR impl_type$17[rsp], 1
  002ca	0f 8d 97 07 00
	00		 jge	 $LN3@writeFeatu

; 605  :         mfxVersion lib = (impl_type) ? get_mfx_libsw_version() : get_mfx_libhw_version();

  002d0	83 bc 24 64 02
	00 00 00	 cmp	 DWORD PTR impl_type$17[rsp], 0
  002d8	74 2c		 je	 SHORT $LN27@writeFeatu
  002da	e8 00 00 00 00	 call	 ?get_mfx_libsw_version@@YA?ATmfxVersion@@XZ ; get_mfx_libsw_version
  002df	89 84 24 b4 08
	00 00		 mov	 DWORD PTR $T36[rsp], eax
  002e6	8b 84 24 b4 08
	00 00		 mov	 eax, DWORD PTR $T36[rsp]
  002ed	89 84 24 b0 08
	00 00		 mov	 DWORD PTR $T35[rsp], eax
  002f4	48 8d 84 24 b0
	08 00 00	 lea	 rax, QWORD PTR $T35[rsp]
  002fc	48 89 84 24 70
	0b 00 00	 mov	 QWORD PTR tv170[rsp], rax
  00304	eb 2a		 jmp	 SHORT $LN28@writeFeatu
$LN27@writeFeatu:
  00306	e8 00 00 00 00	 call	 ?get_mfx_libhw_version@@YA?ATmfxVersion@@XZ ; get_mfx_libhw_version
  0030b	89 84 24 bc 08
	00 00		 mov	 DWORD PTR $T38[rsp], eax
  00312	8b 84 24 bc 08
	00 00		 mov	 eax, DWORD PTR $T38[rsp]
  00319	89 84 24 b8 08
	00 00		 mov	 DWORD PTR $T37[rsp], eax
  00320	48 8d 84 24 b8
	08 00 00	 lea	 rax, QWORD PTR $T37[rsp]
  00328	48 89 84 24 70
	0b 00 00	 mov	 QWORD PTR tv170[rsp], rax
$LN28@writeFeatu:
  00330	48 8b 84 24 70
	0b 00 00	 mov	 rax, QWORD PTR tv170[rsp]
  00338	48 89 84 24 a8
	08 00 00	 mov	 QWORD PTR $T34[rsp], rax
  00340	48 8b 84 24 a8
	08 00 00	 mov	 rax, QWORD PTR $T34[rsp]
  00348	8b 00		 mov	 eax, DWORD PTR [rax]
  0034a	89 84 24 74 02
	00 00		 mov	 DWORD PTR lib$18[rsp], eax

; 606  :         const TCHAR *impl_str = (impl_type) ?  _T("Software") : _T("Hardware");

  00351	83 bc 24 64 02
	00 00 00	 cmp	 DWORD PTR impl_type$17[rsp], 0
  00359	74 11		 je	 SHORT $LN29@writeFeatu
  0035b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG177668
  00362	48 89 84 24 78
	0b 00 00	 mov	 QWORD PTR tv173[rsp], rax
  0036a	eb 0f		 jmp	 SHORT $LN30@writeFeatu
$LN29@writeFeatu:
  0036c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG177669
  00373	48 89 84 24 78
	0b 00 00	 mov	 QWORD PTR tv173[rsp], rax
$LN30@writeFeatu:
  0037b	48 8b 84 24 78
	0b 00 00	 mov	 rax, QWORD PTR tv173[rsp]
  00383	48 89 84 24 88
	02 00 00	 mov	 QWORD PTR impl_str$19[rsp], rax

; 607  :         if (!check_lib_version(lib, test)) {

  0038b	8b 94 24 54 02
	00 00		 mov	 edx, DWORD PTR test$[rsp]
  00392	8b 8c 24 74 02
	00 00		 mov	 ecx, DWORD PTR lib$18[rsp]
  00399	e8 00 00 00 00	 call	 ?check_lib_version@@YAHTmfxVersion@@0@Z ; check_lib_version
  0039e	85 c0		 test	 eax, eax
  003a0	0f 85 b5 00 00
	00		 jne	 $LN11@writeFeatu

; 608  :             if (impl_type == 0) 

  003a6	83 bc 24 64 02
	00 00 00	 cmp	 DWORD PTR impl_type$17[rsp], 0
  003ae	75 50		 jne	 SHORT $LN13@writeFeatu

; 609  : 			{
; 610  :                 print_tstring(_T("QSV unavailable.\n"));

  003b0	48 8d 84 24 c0
	08 00 00	 lea	 rax, QWORD PTR $T39[rsp]
  003b8	48 89 84 24 e8
	08 00 00	 mov	 QWORD PTR $T40[rsp], rax
  003c0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177674
  003c7	48 8b 8c 24 e8
	08 00 00	 mov	 rcx, QWORD PTR $T40[rsp]
  003cf	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  003d4	48 89 84 24 80
	0b 00 00	 mov	 QWORD PTR tv145[rsp], rax
  003dc	48 8b 84 24 80
	0b 00 00	 mov	 rax, QWORD PTR tv145[rsp]
  003e4	48 89 84 24 88
	0b 00 00	 mov	 QWORD PTR tv481[rsp], rax
  003ec	48 8b 94 24 88
	0b 00 00	 mov	 rdx, QWORD PTR tv481[rsp]
  003f4	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  003f9	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()

; 611  :             } else {

  003fe	eb 56		 jmp	 SHORT $LN14@writeFeatu
$LN13@writeFeatu:

; 612  :                 print_tstring(strsprintf(_T("Media SDK %s unavailable.\n"), impl_str));

  00400	48 8d 84 24 f0
	08 00 00	 lea	 rax, QWORD PTR $T41[rsp]
  00408	48 89 84 24 18
	09 00 00	 mov	 QWORD PTR $T42[rsp], rax
  00410	4c 8b 84 24 88
	02 00 00	 mov	 r8, QWORD PTR impl_str$19[rsp]
  00418	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177675
  0041f	48 8b 8c 24 18
	09 00 00	 mov	 rcx, QWORD PTR $T42[rsp]
  00427	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0042c	48 89 84 24 90
	0b 00 00	 mov	 QWORD PTR tv533[rsp], rax
  00434	48 8b 84 24 90
	0b 00 00	 mov	 rax, QWORD PTR tv533[rsp]
  0043c	48 89 84 24 98
	0b 00 00	 mov	 QWORD PTR tv483[rsp], rax
  00444	48 8b 94 24 98
	0b 00 00	 mov	 rdx, QWORD PTR tv483[rsp]
  0044c	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  00451	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()
$LN14@writeFeatu:

; 613  :             }
; 614  :         } else {

  00456	e9 07 06 00 00	 jmp	 $LN12@writeFeatu
$LN11@writeFeatu:

; 615  :             const auto codec_feature_list = (for_auo) ? MakeFeatureListStr(type, make_vector(CODEC_LIST_AUO)) : MakeFeatureListStr(type);

  0045b	0f b6 84 24 98
	0c 00 00	 movzx	 eax, BYTE PTR for_auo$[rsp]
  00463	85 c0		 test	 eax, eax
  00465	0f 84 94 00 00
	00		 je	 $LN31@writeFeatu
  0046b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?CODEC_LIST_AUO@@3QBIB
  00472	48 8d 8c 24 28
	09 00 00	 lea	 rcx, QWORD PTR $T44[rsp]
  0047a	e8 00 00 00 00	 call	 ??$make_vector@I$01@@YA?AV?$vector@IV?$allocator@I@std@@@std@@AEAY01$$CBI@Z ; make_vector<unsigned int,2>
  0047f	48 89 84 24 a0
	0b 00 00	 mov	 QWORD PTR tv534[rsp], rax
  00487	48 8b 84 24 a0
	0b 00 00	 mov	 rax, QWORD PTR tv534[rsp]
  0048f	48 89 84 24 a8
	0b 00 00	 mov	 QWORD PTR tv488[rsp], rax
  00497	8b 84 24 3c 0b
	00 00		 mov	 eax, DWORD PTR $T66[rsp]
  0049e	83 c8 01	 or	 eax, 1
  004a1	89 84 24 3c 0b
	00 00		 mov	 DWORD PTR $T66[rsp], eax
  004a8	4c 8b 84 24 a8
	0b 00 00	 mov	 r8, QWORD PTR tv488[rsp]
  004b0	8b 94 24 a0 0c
	00 00		 mov	 edx, DWORD PTR type$[rsp]
  004b7	48 8d 8c 24 48
	09 00 00	 lea	 rcx, QWORD PTR $T45[rsp]
  004bf	e8 00 00 00 00	 call	 ?MakeFeatureListStr@@YA?AV?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@W4FeatureListStrType@@AEBV?$vector@IV?$allocator@I@std@@@2@@Z ; MakeFeatureListStr
  004c4	48 89 84 24 b0
	0b 00 00	 mov	 QWORD PTR tv535[rsp], rax
  004cc	48 8b 84 24 b0
	0b 00 00	 mov	 rax, QWORD PTR tv535[rsp]
  004d4	48 89 84 24 b8
	0b 00 00	 mov	 QWORD PTR tv493[rsp], rax
  004dc	8b 84 24 3c 0b
	00 00		 mov	 eax, DWORD PTR $T66[rsp]
  004e3	83 c8 02	 or	 eax, 2
  004e6	89 84 24 3c 0b
	00 00		 mov	 DWORD PTR $T66[rsp], eax
  004ed	48 8b 84 24 b8
	0b 00 00	 mov	 rax, QWORD PTR tv493[rsp]
  004f5	48 89 84 24 c0
	0b 00 00	 mov	 QWORD PTR tv254[rsp], rax
  004fd	eb 4d		 jmp	 SHORT $LN32@writeFeatu
$LN31@writeFeatu:
  004ff	8b 94 24 a0 0c
	00 00		 mov	 edx, DWORD PTR type$[rsp]
  00506	48 8d 8c 24 68
	09 00 00	 lea	 rcx, QWORD PTR $T46[rsp]
  0050e	e8 00 00 00 00	 call	 ?MakeFeatureListStr@@YA?AV?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@W4FeatureListStrType@@@Z ; MakeFeatureListStr
  00513	48 89 84 24 c8
	0b 00 00	 mov	 QWORD PTR tv536[rsp], rax
  0051b	48 8b 84 24 c8
	0b 00 00	 mov	 rax, QWORD PTR tv536[rsp]
  00523	48 89 84 24 d0
	0b 00 00	 mov	 QWORD PTR tv498[rsp], rax
  0052b	8b 84 24 3c 0b
	00 00		 mov	 eax, DWORD PTR $T66[rsp]
  00532	83 c8 04	 or	 eax, 4
  00535	89 84 24 3c 0b
	00 00		 mov	 DWORD PTR $T66[rsp], eax
  0053c	48 8b 84 24 d0
	0b 00 00	 mov	 rax, QWORD PTR tv498[rsp]
  00544	48 89 84 24 c0
	0b 00 00	 mov	 QWORD PTR tv254[rsp], rax
$LN32@writeFeatu:
  0054c	48 8b 84 24 c0
	0b 00 00	 mov	 rax, QWORD PTR tv254[rsp]
  00554	48 89 84 24 20
	09 00 00	 mov	 QWORD PTR $T43[rsp], rax
  0055c	48 8b 94 24 20
	09 00 00	 mov	 rdx, QWORD PTR $T43[rsp]
  00564	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR codec_feature_list$20[rsp]
  0056c	e8 00 00 00 00	 call	 ??0?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00571	90		 npad	 1
  00572	8b 84 24 3c 0b
	00 00		 mov	 eax, DWORD PTR $T66[rsp]
  00579	83 e0 04	 and	 eax, 4
  0057c	85 c0		 test	 eax, eax
  0057e	74 16		 je	 SHORT $LN47@writeFeatu
  00580	83 a4 24 3c 0b
	00 00 fb	 and	 DWORD PTR $T66[rsp], -5
  00588	48 8d 8c 24 68
	09 00 00	 lea	 rcx, QWORD PTR $T46[rsp]
  00590	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00595	90		 npad	 1
$LN47@writeFeatu:
  00596	8b 84 24 3c 0b
	00 00		 mov	 eax, DWORD PTR $T66[rsp]
  0059d	83 e0 02	 and	 eax, 2
  005a0	85 c0		 test	 eax, eax
  005a2	74 16		 je	 SHORT $LN48@writeFeatu
  005a4	83 a4 24 3c 0b
	00 00 fd	 and	 DWORD PTR $T66[rsp], -3
  005ac	48 8d 8c 24 48
	09 00 00	 lea	 rcx, QWORD PTR $T45[rsp]
  005b4	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  005b9	90		 npad	 1
$LN48@writeFeatu:
  005ba	8b 84 24 3c 0b
	00 00		 mov	 eax, DWORD PTR $T66[rsp]
  005c1	83 e0 01	 and	 eax, 1
  005c4	85 c0		 test	 eax, eax
  005c6	74 15		 je	 SHORT $LN49@writeFeatu
  005c8	83 a4 24 3c 0b
	00 00 fe	 and	 DWORD PTR $T66[rsp], -2
  005d0	48 8d 8c 24 28
	09 00 00	 lea	 rcx, QWORD PTR $T44[rsp]
  005d8	e8 00 00 00 00	 call	 ??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
$LN49@writeFeatu:

; 616  :             if (codec_feature_list.size() != 0){

  005dd	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR codec_feature_list$20[rsp]
  005e5	e8 00 00 00 00	 call	 ?size@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::size
  005ea	48 85 c0	 test	 rax, rax
  005ed	0f 84 62 04 00
	00		 je	 $LN15@writeFeatu

; 617  :                 print_tstring(strsprintf(_T("Media SDK Version: ")));

  005f3	48 8d 84 24 88
	09 00 00	 lea	 rax, QWORD PTR $T47[rsp]
  005fb	48 89 84 24 b0
	09 00 00	 mov	 QWORD PTR $T48[rsp], rax
  00603	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177677
  0060a	48 8b 8c 24 b0
	09 00 00	 mov	 rcx, QWORD PTR $T48[rsp]
  00612	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00617	48 89 84 24 d8
	0b 00 00	 mov	 QWORD PTR tv180[rsp], rax
  0061f	48 8b 84 24 d8
	0b 00 00	 mov	 rax, QWORD PTR tv180[rsp]
  00627	48 89 84 24 e0
	0b 00 00	 mov	 QWORD PTR tv507[rsp], rax
  0062f	48 8b 94 24 e0
	0b 00 00	 mov	 rdx, QWORD PTR tv507[rsp]
  00637	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  0063c	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()

; 618  :                 print_tstring(strsprintf(_T("%s API v%d.%d\n\n"), impl_str, lib.Major, lib.Minor));

  00641	48 8d 84 24 b8
	09 00 00	 lea	 rax, QWORD PTR $T49[rsp]
  00649	48 89 84 24 e0
	09 00 00	 mov	 QWORD PTR $T50[rsp], rax
  00651	0f b7 84 24 74
	02 00 00	 movzx	 eax, WORD PTR lib$18[rsp]
  00659	0f b7 8c 24 76
	02 00 00	 movzx	 ecx, WORD PTR lib$18[rsp+2]
  00661	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00665	44 8b c9	 mov	 r9d, ecx
  00668	4c 8b 84 24 88
	02 00 00	 mov	 r8, QWORD PTR impl_str$19[rsp]
  00670	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177678
  00677	48 8b 8c 24 e0
	09 00 00	 mov	 rcx, QWORD PTR $T50[rsp]
  0067f	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00684	48 89 84 24 e8
	0b 00 00	 mov	 QWORD PTR tv537[rsp], rax
  0068c	48 8b 84 24 e8
	0b 00 00	 mov	 rax, QWORD PTR tv537[rsp]
  00694	48 89 84 24 f0
	0b 00 00	 mov	 QWORD PTR tv509[rsp], rax
  0069c	48 8b 94 24 f0
	0b 00 00	 mov	 rdx, QWORD PTR tv509[rsp]
  006a4	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  006a9	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()

; 619  :                 auto codecHeader = _T("[DEBUG]--->Supported Enc features:\n");

  006ae	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG177679
  006b5	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR codecHeader$21[rsp], rax

; 620  :                 print_tstring(codecHeader);

  006bd	48 8d 84 24 e8
	09 00 00	 lea	 rax, QWORD PTR $T51[rsp]
  006c5	48 89 84 24 10
	0a 00 00	 mov	 QWORD PTR $T52[rsp], rax
  006cd	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR codecHeader$21[rsp]
  006d5	48 8b 8c 24 10
	0a 00 00	 mov	 rcx, QWORD PTR $T52[rsp]
  006dd	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006e2	48 89 84 24 f8
	0b 00 00	 mov	 QWORD PTR tv538[rsp], rax
  006ea	48 8b 84 24 f8
	0b 00 00	 mov	 rax, QWORD PTR tv538[rsp]
  006f2	48 89 84 24 00
	0c 00 00	 mov	 QWORD PTR tv511[rsp], rax
  006fa	48 8b 94 24 00
	0c 00 00	 mov	 rdx, QWORD PTR tv511[rsp]
  00702	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  00707	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()

; 621  : 				print_tstring(strsprintf(_T("[DEBUG]--->Supported Enc features size = (%d):\n"),codec_feature_list.size()));

  0070c	48 8d 84 24 18
	0a 00 00	 lea	 rax, QWORD PTR $T53[rsp]
  00714	48 89 84 24 40
	0a 00 00	 mov	 QWORD PTR $T54[rsp], rax
  0071c	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR codec_feature_list$20[rsp]
  00724	e8 00 00 00 00	 call	 ?size@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::size
  00729	4c 8b c0	 mov	 r8, rax
  0072c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177680
  00733	48 8b 8c 24 40
	0a 00 00	 mov	 rcx, QWORD PTR $T54[rsp]
  0073b	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00740	48 89 84 24 08
	0c 00 00	 mov	 QWORD PTR tv539[rsp], rax
  00748	48 8b 84 24 08
	0c 00 00	 mov	 rax, QWORD PTR tv539[rsp]
  00750	48 89 84 24 10
	0c 00 00	 mov	 QWORD PTR tv513[rsp], rax
  00758	48 8b 94 24 10
	0c 00 00	 mov	 rdx, QWORD PTR tv513[rsp]
  00760	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  00765	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()

; 622  : 				
; 623  :                 uint32_t i = 0;

  0076a	c7 84 24 d0 02
	00 00 00 00 00
	00		 mov	 DWORD PTR i$22[rsp], 0

; 624  :                 for (; i < codec_feature_list.size(); i++)

  00775	eb 10		 jmp	 SHORT $LN7@writeFeatu
$LN5@writeFeatu:
  00777	8b 84 24 d0 02
	00 00		 mov	 eax, DWORD PTR i$22[rsp]
  0077e	ff c0		 inc	 eax
  00780	89 84 24 d0 02
	00 00		 mov	 DWORD PTR i$22[rsp], eax
$LN7@writeFeatu:
  00787	8b 84 24 d0 02
	00 00		 mov	 eax, DWORD PTR i$22[rsp]
  0078e	48 89 84 24 18
	0c 00 00	 mov	 QWORD PTR tv261[rsp], rax
  00796	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR codec_feature_list$20[rsp]
  0079e	e8 00 00 00 00	 call	 ?size@?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::size
  007a3	48 8b 8c 24 18
	0c 00 00	 mov	 rcx, QWORD PTR tv261[rsp]
  007ab	48 3b c8	 cmp	 rcx, rax
  007ae	0f 83 9c 00 00
	00		 jae	 $LN6@writeFeatu

; 625  : 				{
; 626  :                     auto codec_feature = codec_feature_list[i].second;

  007b4	8b 84 24 d0 02
	00 00		 mov	 eax, DWORD PTR i$22[rsp]
  007bb	8b d0		 mov	 edx, eax
  007bd	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR codec_feature_list$20[rsp]
  007c5	e8 00 00 00 00	 call	 ??A?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEBAAEBU?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@1@_K@Z ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator[]
  007ca	48 83 c0 20	 add	 rax, 32			; 00000020H
  007ce	48 8b d0	 mov	 rdx, rax
  007d1	48 8d 8c 24 e8
	02 00 00	 lea	 rcx, QWORD PTR codec_feature$23[rsp]
  007d9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  007de	90		 npad	 1

; 627  :                     print_tstring(strsprintf(_T("%s\n\n"), codec_feature.c_str()));

  007df	48 8d 84 24 48
	0a 00 00	 lea	 rax, QWORD PTR $T55[rsp]
  007e7	48 89 84 24 70
	0a 00 00	 mov	 QWORD PTR $T56[rsp], rax
  007ef	48 8d 8c 24 e8
	02 00 00	 lea	 rcx, QWORD PTR codec_feature$23[rsp]
  007f7	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  007fc	4c 8b c0	 mov	 r8, rax
  007ff	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177681
  00806	48 8b 8c 24 70
	0a 00 00	 mov	 rcx, QWORD PTR $T56[rsp]
  0080e	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00813	48 89 84 24 20
	0c 00 00	 mov	 QWORD PTR tv318[rsp], rax
  0081b	48 8b 84 24 20
	0c 00 00	 mov	 rax, QWORD PTR tv318[rsp]
  00823	48 89 84 24 28
	0c 00 00	 mov	 QWORD PTR tv516[rsp], rax
  0082b	48 8b 94 24 28
	0c 00 00	 mov	 rdx, QWORD PTR tv516[rsp]
  00833	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  00838	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()
  0083d	90		 npad	 1

; 628  :                 }

  0083e	48 8d 8c 24 e8
	02 00 00	 lea	 rcx, QWORD PTR codec_feature$23[rsp]
  00846	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0084b	e9 27 ff ff ff	 jmp	 $LN5@writeFeatu
$LN6@writeFeatu:

; 629  :                 if (!for_auo) {

  00850	0f b6 84 24 98
	0c 00 00	 movzx	 eax, BYTE PTR for_auo$[rsp]
  00858	85 c0		 test	 eax, eax
  0085a	0f 85 f5 01 00
	00		 jne	 $LN15@writeFeatu

; 630  :                     const auto vppHeader = tstring(_T("Supported Vpp features:\n"));

  00860	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177683
  00867	48 8d 8c 24 28
	03 00 00	 lea	 rcx, QWORD PTR vppHeader$24[rsp]
  0086f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00874	90		 npad	 1

; 631  :                     const auto vppFeatures = MakeVppFeatureStr(type);

  00875	8b 94 24 a0 0c
	00 00		 mov	 edx, DWORD PTR type$[rsp]
  0087c	48 8d 8c 24 68
	03 00 00	 lea	 rcx, QWORD PTR vppFeatures$25[rsp]
  00884	e8 00 00 00 00	 call	 ?MakeVppFeatureStr@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FeatureListStrType@@@Z ; MakeVppFeatureStr
  00889	90		 npad	 1

; 632  :                     print_tstring(vppHeader + _T("\n"));

  0088a	48 8d 84 24 78
	0a 00 00	 lea	 rax, QWORD PTR $T57[rsp]
  00892	48 89 84 24 a0
	0a 00 00	 mov	 QWORD PTR $T58[rsp], rax
  0089a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG177684
  008a1	48 8d 94 24 28
	03 00 00	 lea	 rdx, QWORD PTR vppHeader$24[rsp]
  008a9	48 8b 8c 24 a0
	0a 00 00	 mov	 rcx, QWORD PTR $T58[rsp]
  008b1	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  008b6	48 89 84 24 30
	0c 00 00	 mov	 QWORD PTR tv346[rsp], rax
  008be	48 8b 84 24 30
	0c 00 00	 mov	 rax, QWORD PTR tv346[rsp]
  008c6	48 89 84 24 38
	0c 00 00	 mov	 QWORD PTR tv520[rsp], rax
  008ce	48 8b 94 24 38
	0c 00 00	 mov	 rdx, QWORD PTR tv520[rsp]
  008d6	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  008db	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()

; 633  :                     print_tstring(strsprintf(_T("%s\n\n"), vppFeatures.c_str()));

  008e0	48 8d 84 24 a8
	0a 00 00	 lea	 rax, QWORD PTR $T59[rsp]
  008e8	48 89 84 24 d0
	0a 00 00	 mov	 QWORD PTR $T60[rsp], rax
  008f0	48 8d 8c 24 68
	03 00 00	 lea	 rcx, QWORD PTR vppFeatures$25[rsp]
  008f8	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  008fd	4c 8b c0	 mov	 r8, rax
  00900	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177685
  00907	48 8b 8c 24 d0
	0a 00 00	 mov	 rcx, QWORD PTR $T60[rsp]
  0090f	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00914	48 89 84 24 40
	0c 00 00	 mov	 QWORD PTR tv343[rsp], rax
  0091c	48 8b 84 24 40
	0c 00 00	 mov	 rax, QWORD PTR tv343[rsp]
  00924	48 89 84 24 48
	0c 00 00	 mov	 QWORD PTR tv522[rsp], rax
  0092c	48 8b 94 24 48
	0c 00 00	 mov	 rdx, QWORD PTR tv522[rsp]
  00934	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  00939	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()

; 634  : 
; 635  :                     const auto decHeader = tstring(_T("Supported Decode features:\n"));

  0093e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177686
  00945	48 8d 8c 24 a8
	03 00 00	 lea	 rcx, QWORD PTR decHeader$26[rsp]
  0094d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00952	90		 npad	 1

; 636  :                     const auto decFeatures = MakeDecFeatureStr(type);

  00953	8b 94 24 a0 0c
	00 00		 mov	 edx, DWORD PTR type$[rsp]
  0095a	48 8d 8c 24 e8
	03 00 00	 lea	 rcx, QWORD PTR decFeatures$27[rsp]
  00962	e8 00 00 00 00	 call	 ?MakeDecFeatureStr@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4FeatureListStrType@@@Z ; MakeDecFeatureStr
  00967	90		 npad	 1

; 637  :                     print_tstring(decHeader + _T("\n"));

  00968	48 8d 84 24 d8
	0a 00 00	 lea	 rax, QWORD PTR $T61[rsp]
  00970	48 89 84 24 00
	0b 00 00	 mov	 QWORD PTR $T62[rsp], rax
  00978	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG177687
  0097f	48 8d 94 24 a8
	03 00 00	 lea	 rdx, QWORD PTR decHeader$26[rsp]
  00987	48 8b 8c 24 00
	0b 00 00	 mov	 rcx, QWORD PTR $T62[rsp]
  0098f	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00994	48 89 84 24 50
	0c 00 00	 mov	 QWORD PTR tv380[rsp], rax
  0099c	48 8b 84 24 50
	0c 00 00	 mov	 rax, QWORD PTR tv380[rsp]
  009a4	48 89 84 24 58
	0c 00 00	 mov	 QWORD PTR tv526[rsp], rax
  009ac	48 8b 94 24 58
	0c 00 00	 mov	 rdx, QWORD PTR tv526[rsp]
  009b4	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  009b9	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()

; 638  :                     print_tstring(strsprintf(_T("%s\n\n"), decFeatures.c_str()));

  009be	48 8d 84 24 08
	0b 00 00	 lea	 rax, QWORD PTR $T63[rsp]
  009c6	48 89 84 24 30
	0b 00 00	 mov	 QWORD PTR $T64[rsp], rax
  009ce	48 8d 8c 24 e8
	03 00 00	 lea	 rcx, QWORD PTR decFeatures$27[rsp]
  009d6	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  009db	4c 8b c0	 mov	 r8, rax
  009de	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177688
  009e5	48 8b 8c 24 30
	0b 00 00	 mov	 rcx, QWORD PTR $T64[rsp]
  009ed	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  009f2	48 89 84 24 60
	0c 00 00	 mov	 QWORD PTR tv351[rsp], rax
  009fa	48 8b 84 24 60
	0c 00 00	 mov	 rax, QWORD PTR tv351[rsp]
  00a02	48 89 84 24 68
	0c 00 00	 mov	 QWORD PTR tv528[rsp], rax
  00a0a	48 8b 94 24 68
	0c 00 00	 mov	 rdx, QWORD PTR tv528[rsp]
  00a12	48 8d 4c 24 68	 lea	 rcx, QWORD PTR print_tstring$[rsp]
  00a17	e8 00 00 00 00	 call	 ??R<lambda_77aafdb7168f7720a5b5d0d0a72df3f8>@@QEBAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_77aafdb7168f7720a5b5d0d0a72df3f8>::operator()
  00a1c	90		 npad	 1

; 639  :                 }

  00a1d	48 8d 8c 24 e8
	03 00 00	 lea	 rcx, QWORD PTR decFeatures$27[rsp]
  00a25	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a2a	90		 npad	 1
  00a2b	48 8d 8c 24 a8
	03 00 00	 lea	 rcx, QWORD PTR decHeader$26[rsp]
  00a33	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a38	90		 npad	 1
  00a39	48 8d 8c 24 68
	03 00 00	 lea	 rcx, QWORD PTR vppFeatures$25[rsp]
  00a41	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a46	90		 npad	 1
  00a47	48 8d 8c 24 28
	03 00 00	 lea	 rcx, QWORD PTR vppHeader$24[rsp]
  00a4f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a54	90		 npad	 1
$LN15@writeFeatu:

; 640  :             }
; 641  :         }

  00a55	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR codec_feature_list$20[rsp]
  00a5d	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
$LN12@writeFeatu:

; 642  :     }

  00a62	e9 4b f8 ff ff	 jmp	 $LN2@writeFeatu
$LN3@writeFeatu:

; 643  :     if (filename.length() && fp) {

  00a67	48 8b 8c 24 90
	0c 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  00a6f	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  00a74	48 85 c0	 test	 rax, rax
  00a77	0f 84 a8 00 00
	00		 je	 $LN17@writeFeatu
  00a7d	48 83 7c 24 48
	00		 cmp	 QWORD PTR fp$[rsp], 0
  00a83	0f 84 9c 00 00
	00		 je	 $LN17@writeFeatu

; 644  :         fclose(fp);

  00a89	48 8b 4c 24 48	 mov	 rcx, QWORD PTR fp$[rsp]
  00a8e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose

; 645  : #if defined(_WIN32) || defined(_WIN64)
; 646  :         TCHAR exePath[1024] = { 0 };

  00a94	48 8d 84 24 30
	04 00 00	 lea	 rax, QWORD PTR exePath$28[rsp]
  00a9c	48 8b f8	 mov	 rdi, rax
  00a9f	33 c0		 xor	 eax, eax
  00aa1	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  00aa6	f3 aa		 rep stosb

; 647  :         if (32 <= (size_t)FindExecutable(filename.c_str(), nullptr, exePath) \
; 648  : 			&& _tcslen(exePath) \
; 649  : 			&& PathFileExists(exePath)) 

  00aa8	48 8b 8c 24 90
	0c 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  00ab0	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00ab5	4c 8d 84 24 30
	04 00 00	 lea	 r8, QWORD PTR exePath$28[rsp]
  00abd	33 d2		 xor	 edx, edx
  00abf	48 8b c8	 mov	 rcx, rax
  00ac2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FindExecutableA
  00ac8	48 83 f8 20	 cmp	 rax, 32			; 00000020H
  00acc	72 57		 jb	 SHORT $LN17@writeFeatu
  00ace	48 8d 8c 24 30
	04 00 00	 lea	 rcx, QWORD PTR exePath$28[rsp]
  00ad6	e8 00 00 00 00	 call	 strlen
  00adb	48 85 c0	 test	 rax, rax
  00ade	74 45		 je	 SHORT $LN17@writeFeatu
  00ae0	48 8d 8c 24 30
	04 00 00	 lea	 rcx, QWORD PTR exePath$28[rsp]
  00ae8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathFileExistsA
  00aee	85 c0		 test	 eax, eax
  00af0	74 33		 je	 SHORT $LN17@writeFeatu

; 650  : 		{
; 651  :             ShellExecute(NULL, _T("open"), filename.c_str(), nullptr, nullptr, SW_SHOWNORMAL);

  00af2	48 8b 8c 24 90
	0c 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  00afa	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00aff	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR [rsp+40], 1
  00b07	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00b10	45 33 c9	 xor	 r9d, r9d
  00b13	4c 8b c0	 mov	 r8, rax
  00b16	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG177691
  00b1d	33 c9		 xor	 ecx, ecx
  00b1f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ShellExecuteA
$LN17@writeFeatu:

; 652  :         }
; 653  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 654  :     }
; 655  :     return 0;

  00b25	c7 84 24 38 0b
	00 00 00 00 00
	00		 mov	 DWORD PTR $T65[rsp], 0
  00b30	48 8d 8c 24 18
	02 00 00	 lea	 rcx, QWORD PTR osversion$[rsp]
  00b38	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00b3d	90		 npad	 1
  00b3e	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR environmentInfo$[rsp]
  00b46	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00b4b	90		 npad	 1
  00b4c	48 8b 8c 24 90
	0c 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  00b54	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00b59	8b 84 24 38 0b
	00 00		 mov	 eax, DWORD PTR $T65[rsp]
$LN1@writeFeatu:

; 656  : }

  00b60	48 8b f8	 mov	 rdi, rax
  00b63	48 8b cc	 mov	 rcx, rsp
  00b66	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z$rtcFrameData
  00b6d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00b72	48 8b c7	 mov	 rax, rdi
  00b75	48 8b 8c 24 70
	0c 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00b7d	48 33 cc	 xor	 rcx, rsp
  00b80	e8 00 00 00 00	 call	 __security_check_cookie
  00b85	48 81 c4 80 0c
	00 00		 add	 rsp, 3200		; 00000c80H
  00b8c	5f		 pop	 rdi
  00b8d	c3		 ret	 0
?writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z ENDP ; writeFeatureList
_TEXT	ENDS
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$0@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 0c
	00 00		 mov	 rcx, QWORD PTR filename$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$0
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$1@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8b 8d 70 08
	00 00		 mov	 rcx, QWORD PTR $T31[rbp]
  00040	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$1
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$2@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$2
  0004c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00051	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00056	55		 push	 rbp
  00057	57		 push	 rdi
  00058	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005c	48 8b ea	 mov	 rbp, rdx
  0005f	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR environmentInfo$[rbp]
  00066	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?dtor$2@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$2
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$3@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$3
  00072	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00077	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007c	55		 push	 rbp
  0007d	57		 push	 rdi
  0007e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00082	48 8b ea	 mov	 rbp, rdx
  00085	48 8b 8d a0 08
	00 00		 mov	 rcx, QWORD PTR $T33[rbp]
  0008c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00091	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00095	5f		 pop	 rdi
  00096	5d		 pop	 rbp
  00097	c3		 ret	 0
?dtor$3@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$3
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$4@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$4
  00098	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a2	55		 push	 rbp
  000a3	57		 push	 rdi
  000a4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a8	48 8b ea	 mov	 rbp, rdx
  000ab	48 8d 8d 18 02
	00 00		 lea	 rcx, QWORD PTR osversion$[rbp]
  000b2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000bb	5f		 pop	 rdi
  000bc	5d		 pop	 rbp
  000bd	c3		 ret	 0
?dtor$4@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$4
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$5@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$5
  000be	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c8	55		 push	 rbp
  000c9	57		 push	 rdi
  000ca	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ce	48 8b ea	 mov	 rbp, rdx
  000d1	48 8b 8d e8 08
	00 00		 mov	 rcx, QWORD PTR $T40[rbp]
  000d8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000dd	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000e1	5f		 pop	 rdi
  000e2	5d		 pop	 rbp
  000e3	c3		 ret	 0
?dtor$5@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$5
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$6@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$6
  000e4	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e9	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000ee	55		 push	 rbp
  000ef	57		 push	 rdi
  000f0	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f4	48 8b ea	 mov	 rbp, rdx
  000f7	48 8b 8d 18 09
	00 00		 mov	 rcx, QWORD PTR $T42[rbp]
  000fe	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00103	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00107	5f		 pop	 rdi
  00108	5d		 pop	 rbp
  00109	c3		 ret	 0
?dtor$6@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$6
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$7@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$7
  0010a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0010f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00114	55		 push	 rbp
  00115	57		 push	 rdi
  00116	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0011a	48 8b ea	 mov	 rbp, rdx
  0011d	8b 85 3c 0b 00
	00		 mov	 eax, DWORD PTR $T66[rbp]
  00123	83 e0 01	 and	 eax, 1
  00126	85 c0		 test	 eax, eax
  00128	74 13		 je	 SHORT $LN41@dtor$7
  0012a	83 a5 3c 0b 00
	00 fe		 and	 DWORD PTR $T66[rbp], -2
  00131	48 8d 8d 28 09
	00 00		 lea	 rcx, QWORD PTR $T44[rbp]
  00138	e8 00 00 00 00	 call	 ??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
$LN41@dtor$7:
  0013d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00141	5f		 pop	 rdi
  00142	5d		 pop	 rbp
  00143	c3		 ret	 0
?dtor$7@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$7
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$8@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$8
  00144	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00149	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0014e	55		 push	 rbp
  0014f	57		 push	 rdi
  00150	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00154	48 8b ea	 mov	 rbp, rdx
  00157	8b 85 3c 0b 00
	00		 mov	 eax, DWORD PTR $T66[rbp]
  0015d	83 e0 02	 and	 eax, 2
  00160	85 c0		 test	 eax, eax
  00162	74 13		 je	 SHORT $LN43@dtor$8
  00164	83 a5 3c 0b 00
	00 fd		 and	 DWORD PTR $T66[rbp], -3
  0016b	48 8d 8d 48 09
	00 00		 lea	 rcx, QWORD PTR $T45[rbp]
  00172	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
$LN43@dtor$8:
  00177	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0017b	5f		 pop	 rdi
  0017c	5d		 pop	 rbp
  0017d	c3		 ret	 0
?dtor$8@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$8
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$9@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$9
  0017e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00183	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00188	55		 push	 rbp
  00189	57		 push	 rdi
  0018a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0018e	48 8b ea	 mov	 rbp, rdx
  00191	8b 85 3c 0b 00
	00		 mov	 eax, DWORD PTR $T66[rbp]
  00197	83 e0 04	 and	 eax, 4
  0019a	85 c0		 test	 eax, eax
  0019c	74 13		 je	 SHORT $LN45@dtor$9
  0019e	83 a5 3c 0b 00
	00 fb		 and	 DWORD PTR $T66[rbp], -5
  001a5	48 8d 8d 68 09
	00 00		 lea	 rcx, QWORD PTR $T46[rbp]
  001ac	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
$LN45@dtor$9:
  001b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001b5	5f		 pop	 rdi
  001b6	5d		 pop	 rbp
  001b7	c3		 ret	 0
?dtor$9@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$9
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$10
  001b8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001bd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001c2	55		 push	 rbp
  001c3	57		 push	 rdi
  001c4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001c8	48 8b ea	 mov	 rbp, rdx
  001cb	48 8d 8d 98 02
	00 00		 lea	 rcx, QWORD PTR codec_feature_list$20[rbp]
  001d2	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  001d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001db	5f		 pop	 rdi
  001dc	5d		 pop	 rbp
  001dd	c3		 ret	 0
?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$10
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$11@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$11
  001de	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001e3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001e8	55		 push	 rbp
  001e9	57		 push	 rdi
  001ea	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001ee	48 8b ea	 mov	 rbp, rdx
  001f1	48 8b 8d b0 09
	00 00		 mov	 rcx, QWORD PTR $T48[rbp]
  001f8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001fd	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00201	5f		 pop	 rdi
  00202	5d		 pop	 rbp
  00203	c3		 ret	 0
?dtor$11@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$11
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$12@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$12
  00204	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00209	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0020e	55		 push	 rbp
  0020f	57		 push	 rdi
  00210	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00214	48 8b ea	 mov	 rbp, rdx
  00217	48 8b 8d e0 09
	00 00		 mov	 rcx, QWORD PTR $T50[rbp]
  0021e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00223	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00227	5f		 pop	 rdi
  00228	5d		 pop	 rbp
  00229	c3		 ret	 0
?dtor$12@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$12
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$13@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$13
  0022a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0022f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00234	55		 push	 rbp
  00235	57		 push	 rdi
  00236	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0023a	48 8b ea	 mov	 rbp, rdx
  0023d	48 8b 8d 10 0a
	00 00		 mov	 rcx, QWORD PTR $T52[rbp]
  00244	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00249	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0024d	5f		 pop	 rdi
  0024e	5d		 pop	 rbp
  0024f	c3		 ret	 0
?dtor$13@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$13
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$14@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$14
  00250	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00255	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0025a	55		 push	 rbp
  0025b	57		 push	 rdi
  0025c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00260	48 8b ea	 mov	 rbp, rdx
  00263	48 8b 8d 40 0a
	00 00		 mov	 rcx, QWORD PTR $T54[rbp]
  0026a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0026f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00273	5f		 pop	 rdi
  00274	5d		 pop	 rbp
  00275	c3		 ret	 0
?dtor$14@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$14
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$15@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$15
  00276	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0027b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00280	55		 push	 rbp
  00281	57		 push	 rdi
  00282	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00286	48 8b ea	 mov	 rbp, rdx
  00289	48 8d 8d e8 02
	00 00		 lea	 rcx, QWORD PTR codec_feature$23[rbp]
  00290	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00295	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00299	5f		 pop	 rdi
  0029a	5d		 pop	 rbp
  0029b	c3		 ret	 0
?dtor$15@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$15
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$16@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$16
  0029c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002a1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002a6	55		 push	 rbp
  002a7	57		 push	 rdi
  002a8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002ac	48 8b ea	 mov	 rbp, rdx
  002af	48 8b 8d 70 0a
	00 00		 mov	 rcx, QWORD PTR $T56[rbp]
  002b6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002bb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002bf	5f		 pop	 rdi
  002c0	5d		 pop	 rbp
  002c1	c3		 ret	 0
?dtor$16@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$16
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$17@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$17
  002c2	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002c7	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002cc	55		 push	 rbp
  002cd	57		 push	 rdi
  002ce	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002d2	48 8b ea	 mov	 rbp, rdx
  002d5	48 8d 8d 28 03
	00 00		 lea	 rcx, QWORD PTR vppHeader$24[rbp]
  002dc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002e1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002e5	5f		 pop	 rdi
  002e6	5d		 pop	 rbp
  002e7	c3		 ret	 0
?dtor$17@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$17
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$18@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$18
  002e8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002ed	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002f2	55		 push	 rbp
  002f3	57		 push	 rdi
  002f4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002f8	48 8b ea	 mov	 rbp, rdx
  002fb	48 8d 8d 68 03
	00 00		 lea	 rcx, QWORD PTR vppFeatures$25[rbp]
  00302	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00307	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0030b	5f		 pop	 rdi
  0030c	5d		 pop	 rbp
  0030d	c3		 ret	 0
?dtor$18@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$18
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$19@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$19
  0030e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00313	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00318	55		 push	 rbp
  00319	57		 push	 rdi
  0031a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0031e	48 8b ea	 mov	 rbp, rdx
  00321	48 8b 8d a0 0a
	00 00		 mov	 rcx, QWORD PTR $T58[rbp]
  00328	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0032d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00331	5f		 pop	 rdi
  00332	5d		 pop	 rbp
  00333	c3		 ret	 0
?dtor$19@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$19
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$20@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$20
  00334	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00339	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0033e	55		 push	 rbp
  0033f	57		 push	 rdi
  00340	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00344	48 8b ea	 mov	 rbp, rdx
  00347	48 8b 8d d0 0a
	00 00		 mov	 rcx, QWORD PTR $T60[rbp]
  0034e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00353	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00357	5f		 pop	 rdi
  00358	5d		 pop	 rbp
  00359	c3		 ret	 0
?dtor$20@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$20
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$21@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$21
  0035a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0035f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00364	55		 push	 rbp
  00365	57		 push	 rdi
  00366	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0036a	48 8b ea	 mov	 rbp, rdx
  0036d	48 8d 8d a8 03
	00 00		 lea	 rcx, QWORD PTR decHeader$26[rbp]
  00374	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00379	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0037d	5f		 pop	 rdi
  0037e	5d		 pop	 rbp
  0037f	c3		 ret	 0
?dtor$21@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$21
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$22@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$22
  00380	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00385	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0038a	55		 push	 rbp
  0038b	57		 push	 rdi
  0038c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00390	48 8b ea	 mov	 rbp, rdx
  00393	48 8d 8d e8 03
	00 00		 lea	 rcx, QWORD PTR decFeatures$27[rbp]
  0039a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0039f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003a3	5f		 pop	 rdi
  003a4	5d		 pop	 rbp
  003a5	c3		 ret	 0
?dtor$22@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$22
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$23@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$23
  003a6	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  003ab	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  003b0	55		 push	 rbp
  003b1	57		 push	 rdi
  003b2	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  003b6	48 8b ea	 mov	 rbp, rdx
  003b9	48 8b 8d 00 0b
	00 00		 mov	 rcx, QWORD PTR $T62[rbp]
  003c0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003c5	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003c9	5f		 pop	 rdi
  003ca	5d		 pop	 rbp
  003cb	c3		 ret	 0
?dtor$23@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$23
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$24@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$24
  003cc	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  003d1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  003d6	55		 push	 rbp
  003d7	57		 push	 rdi
  003d8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  003dc	48 8b ea	 mov	 rbp, rdx
  003df	48 8b 8d 30 0b
	00 00		 mov	 rcx, QWORD PTR $T64[rbp]
  003e6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003eb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003ef	5f		 pop	 rdi
  003f0	5d		 pop	 rbp
  003f1	c3		 ret	 0
?dtor$24@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$24
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$0@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 0c
	00 00		 mov	 rcx, QWORD PTR filename$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$1@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8b 8d 70 08
	00 00		 mov	 rcx, QWORD PTR $T31[rbp]
  00040	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$2@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$2
  0004c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00051	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00056	55		 push	 rbp
  00057	57		 push	 rdi
  00058	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005c	48 8b ea	 mov	 rbp, rdx
  0005f	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR environmentInfo$[rbp]
  00066	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?dtor$2@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$3@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$3
  00072	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00077	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007c	55		 push	 rbp
  0007d	57		 push	 rdi
  0007e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00082	48 8b ea	 mov	 rbp, rdx
  00085	48 8b 8d a0 08
	00 00		 mov	 rcx, QWORD PTR $T33[rbp]
  0008c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00091	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00095	5f		 pop	 rdi
  00096	5d		 pop	 rbp
  00097	c3		 ret	 0
?dtor$3@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$4@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$4
  00098	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a2	55		 push	 rbp
  000a3	57		 push	 rdi
  000a4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a8	48 8b ea	 mov	 rbp, rdx
  000ab	48 8d 8d 18 02
	00 00		 lea	 rcx, QWORD PTR osversion$[rbp]
  000b2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000bb	5f		 pop	 rdi
  000bc	5d		 pop	 rbp
  000bd	c3		 ret	 0
?dtor$4@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$5@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$5
  000be	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c8	55		 push	 rbp
  000c9	57		 push	 rdi
  000ca	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ce	48 8b ea	 mov	 rbp, rdx
  000d1	48 8b 8d e8 08
	00 00		 mov	 rcx, QWORD PTR $T40[rbp]
  000d8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000dd	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000e1	5f		 pop	 rdi
  000e2	5d		 pop	 rbp
  000e3	c3		 ret	 0
?dtor$5@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$6@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$6
  000e4	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e9	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000ee	55		 push	 rbp
  000ef	57		 push	 rdi
  000f0	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f4	48 8b ea	 mov	 rbp, rdx
  000f7	48 8b 8d 18 09
	00 00		 mov	 rcx, QWORD PTR $T42[rbp]
  000fe	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00103	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00107	5f		 pop	 rdi
  00108	5d		 pop	 rbp
  00109	c3		 ret	 0
?dtor$6@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$7@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$7
  0010a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0010f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00114	55		 push	 rbp
  00115	57		 push	 rdi
  00116	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0011a	48 8b ea	 mov	 rbp, rdx
  0011d	8b 85 3c 0b 00
	00		 mov	 eax, DWORD PTR $T66[rbp]
  00123	83 e0 01	 and	 eax, 1
  00126	85 c0		 test	 eax, eax
  00128	74 13		 je	 SHORT $LN41@dtor$7
  0012a	83 a5 3c 0b 00
	00 fe		 and	 DWORD PTR $T66[rbp], -2
  00131	48 8d 8d 28 09
	00 00		 lea	 rcx, QWORD PTR $T44[rbp]
  00138	e8 00 00 00 00	 call	 ??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
$LN41@dtor$7:
  0013d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00141	5f		 pop	 rdi
  00142	5d		 pop	 rbp
  00143	c3		 ret	 0
?dtor$7@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$8@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$8
  00144	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00149	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0014e	55		 push	 rbp
  0014f	57		 push	 rdi
  00150	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00154	48 8b ea	 mov	 rbp, rdx
  00157	8b 85 3c 0b 00
	00		 mov	 eax, DWORD PTR $T66[rbp]
  0015d	83 e0 02	 and	 eax, 2
  00160	85 c0		 test	 eax, eax
  00162	74 13		 je	 SHORT $LN43@dtor$8
  00164	83 a5 3c 0b 00
	00 fd		 and	 DWORD PTR $T66[rbp], -3
  0016b	48 8d 8d 48 09
	00 00		 lea	 rcx, QWORD PTR $T45[rbp]
  00172	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
$LN43@dtor$8:
  00177	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0017b	5f		 pop	 rdi
  0017c	5d		 pop	 rbp
  0017d	c3		 ret	 0
?dtor$8@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$9@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$9
  0017e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00183	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00188	55		 push	 rbp
  00189	57		 push	 rdi
  0018a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0018e	48 8b ea	 mov	 rbp, rdx
  00191	8b 85 3c 0b 00
	00		 mov	 eax, DWORD PTR $T66[rbp]
  00197	83 e0 04	 and	 eax, 4
  0019a	85 c0		 test	 eax, eax
  0019c	74 13		 je	 SHORT $LN45@dtor$9
  0019e	83 a5 3c 0b 00
	00 fb		 and	 DWORD PTR $T66[rbp], -5
  001a5	48 8d 8d 68 09
	00 00		 lea	 rcx, QWORD PTR $T46[rbp]
  001ac	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
$LN45@dtor$9:
  001b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001b5	5f		 pop	 rdi
  001b6	5d		 pop	 rbp
  001b7	c3		 ret	 0
?dtor$9@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$10
  001b8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001bd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001c2	55		 push	 rbp
  001c3	57		 push	 rdi
  001c4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001c8	48 8b ea	 mov	 rbp, rdx
  001cb	48 8d 8d 98 02
	00 00		 lea	 rcx, QWORD PTR codec_feature_list$20[rbp]
  001d2	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@V?$allocator@U?$pair@V?$vector@_KV?$allocator@_K@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::vector<unsigned __int64,std::allocator<unsigned __int64> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  001d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001db	5f		 pop	 rdi
  001dc	5d		 pop	 rbp
  001dd	c3		 ret	 0
?dtor$10@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$11@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$11
  001de	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001e3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001e8	55		 push	 rbp
  001e9	57		 push	 rdi
  001ea	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001ee	48 8b ea	 mov	 rbp, rdx
  001f1	48 8b 8d b0 09
	00 00		 mov	 rcx, QWORD PTR $T48[rbp]
  001f8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001fd	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00201	5f		 pop	 rdi
  00202	5d		 pop	 rbp
  00203	c3		 ret	 0
?dtor$11@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$12@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$12
  00204	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00209	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0020e	55		 push	 rbp
  0020f	57		 push	 rdi
  00210	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00214	48 8b ea	 mov	 rbp, rdx
  00217	48 8b 8d e0 09
	00 00		 mov	 rcx, QWORD PTR $T50[rbp]
  0021e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00223	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00227	5f		 pop	 rdi
  00228	5d		 pop	 rbp
  00229	c3		 ret	 0
?dtor$12@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$13@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$13
  0022a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0022f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00234	55		 push	 rbp
  00235	57		 push	 rdi
  00236	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0023a	48 8b ea	 mov	 rbp, rdx
  0023d	48 8b 8d 10 0a
	00 00		 mov	 rcx, QWORD PTR $T52[rbp]
  00244	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00249	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0024d	5f		 pop	 rdi
  0024e	5d		 pop	 rbp
  0024f	c3		 ret	 0
?dtor$13@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$14@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$14
  00250	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00255	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0025a	55		 push	 rbp
  0025b	57		 push	 rdi
  0025c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00260	48 8b ea	 mov	 rbp, rdx
  00263	48 8b 8d 40 0a
	00 00		 mov	 rcx, QWORD PTR $T54[rbp]
  0026a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0026f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00273	5f		 pop	 rdi
  00274	5d		 pop	 rbp
  00275	c3		 ret	 0
?dtor$14@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$15@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$15
  00276	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0027b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00280	55		 push	 rbp
  00281	57		 push	 rdi
  00282	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00286	48 8b ea	 mov	 rbp, rdx
  00289	48 8d 8d e8 02
	00 00		 lea	 rcx, QWORD PTR codec_feature$23[rbp]
  00290	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00295	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00299	5f		 pop	 rdi
  0029a	5d		 pop	 rbp
  0029b	c3		 ret	 0
?dtor$15@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$16@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$16
  0029c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002a1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002a6	55		 push	 rbp
  002a7	57		 push	 rdi
  002a8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002ac	48 8b ea	 mov	 rbp, rdx
  002af	48 8b 8d 70 0a
	00 00		 mov	 rcx, QWORD PTR $T56[rbp]
  002b6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002bb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002bf	5f		 pop	 rdi
  002c0	5d		 pop	 rbp
  002c1	c3		 ret	 0
?dtor$16@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$17@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$17
  002c2	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002c7	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002cc	55		 push	 rbp
  002cd	57		 push	 rdi
  002ce	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002d2	48 8b ea	 mov	 rbp, rdx
  002d5	48 8d 8d 28 03
	00 00		 lea	 rcx, QWORD PTR vppHeader$24[rbp]
  002dc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002e1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002e5	5f		 pop	 rdi
  002e6	5d		 pop	 rbp
  002e7	c3		 ret	 0
?dtor$17@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$18@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$18
  002e8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002ed	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002f2	55		 push	 rbp
  002f3	57		 push	 rdi
  002f4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002f8	48 8b ea	 mov	 rbp, rdx
  002fb	48 8d 8d 68 03
	00 00		 lea	 rcx, QWORD PTR vppFeatures$25[rbp]
  00302	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00307	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0030b	5f		 pop	 rdi
  0030c	5d		 pop	 rbp
  0030d	c3		 ret	 0
?dtor$18@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$19@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$19
  0030e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00313	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00318	55		 push	 rbp
  00319	57		 push	 rdi
  0031a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0031e	48 8b ea	 mov	 rbp, rdx
  00321	48 8b 8d a0 0a
	00 00		 mov	 rcx, QWORD PTR $T58[rbp]
  00328	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0032d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00331	5f		 pop	 rdi
  00332	5d		 pop	 rbp
  00333	c3		 ret	 0
?dtor$19@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$19
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$20@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$20
  00334	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00339	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0033e	55		 push	 rbp
  0033f	57		 push	 rdi
  00340	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00344	48 8b ea	 mov	 rbp, rdx
  00347	48 8b 8d d0 0a
	00 00		 mov	 rcx, QWORD PTR $T60[rbp]
  0034e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00353	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00357	5f		 pop	 rdi
  00358	5d		 pop	 rbp
  00359	c3		 ret	 0
?dtor$20@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$21@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$21
  0035a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0035f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00364	55		 push	 rbp
  00365	57		 push	 rdi
  00366	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0036a	48 8b ea	 mov	 rbp, rdx
  0036d	48 8d 8d a8 03
	00 00		 lea	 rcx, QWORD PTR decHeader$26[rbp]
  00374	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00379	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0037d	5f		 pop	 rdi
  0037e	5d		 pop	 rbp
  0037f	c3		 ret	 0
?dtor$21@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$21
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$22@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$22
  00380	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00385	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0038a	55		 push	 rbp
  0038b	57		 push	 rdi
  0038c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00390	48 8b ea	 mov	 rbp, rdx
  00393	48 8d 8d e8 03
	00 00		 lea	 rcx, QWORD PTR decFeatures$27[rbp]
  0039a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0039f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003a3	5f		 pop	 rdi
  003a4	5d		 pop	 rbp
  003a5	c3		 ret	 0
?dtor$22@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$23@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$23
  003a6	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  003ab	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  003b0	55		 push	 rbp
  003b1	57		 push	 rdi
  003b2	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  003b6	48 8b ea	 mov	 rbp, rdx
  003b9	48 8b 8d 00 0b
	00 00		 mov	 rcx, QWORD PTR $T62[rbp]
  003c0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003c5	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003c9	5f		 pop	 rdi
  003ca	5d		 pop	 rbp
  003cb	c3		 ret	 0
?dtor$23@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$23
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
codepage$ = 48
fp$ = 72
print_tstring$ = 104
environmentInfo$ = 152
bOSSupportsQSV$ = 196
osver$ = 224
osversion$ = 536
test$ = 596
impl_type$17 = 612
lib$18 = 628
impl_str$19 = 648
codec_feature_list$20 = 664
codecHeader$21 = 712
i$22 = 720
codec_feature$23 = 744
vppHeader$24 = 808
vppFeatures$25 = 872
decHeader$26 = 936
decFeatures$27 = 1000
exePath$28 = 1072
$T29 = 2112
$T30 = 2120
$T31 = 2160
$T32 = 2168
$T33 = 2208
$T34 = 2216
$T35 = 2224
$T36 = 2228
$T37 = 2232
$T38 = 2236
$T39 = 2240
$T40 = 2280
$T41 = 2288
$T42 = 2328
$T43 = 2336
$T44 = 2344
$T45 = 2376
$T46 = 2408
$T47 = 2440
$T48 = 2480
$T49 = 2488
$T50 = 2528
$T51 = 2536
$T52 = 2576
$T53 = 2584
$T54 = 2624
$T55 = 2632
$T56 = 2672
$T57 = 2680
$T58 = 2720
$T59 = 2728
$T60 = 2768
$T61 = 2776
$T62 = 2816
$T63 = 2824
$T64 = 2864
$T65 = 2872
$T66 = 2876
tv532 = 2880
tv475 = 2888
tv129 = 2896
tv478 = 2904
tv149 = 2912
tv156 = 2916
tv162 = 2920
tv170 = 2928
tv173 = 2936
tv145 = 2944
tv481 = 2952
tv533 = 2960
tv483 = 2968
tv534 = 2976
tv488 = 2984
tv535 = 2992
tv493 = 3000
tv254 = 3008
tv536 = 3016
tv498 = 3024
tv180 = 3032
tv507 = 3040
tv537 = 3048
tv509 = 3056
tv538 = 3064
tv511 = 3072
tv539 = 3080
tv513 = 3088
tv261 = 3096
tv318 = 3104
tv516 = 3112
tv346 = 3120
tv520 = 3128
tv343 = 3136
tv522 = 3144
tv380 = 3152
tv526 = 3160
tv351 = 3168
tv528 = 3176
__$ArrayPad$ = 3184
filename$ = 3216
for_auo$ = 3224
type$ = 3232
?dtor$24@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA PROC ; `writeFeatureList'::`1'::dtor$24
  003cc	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  003d1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  003d6	55		 push	 rbp
  003d7	57		 push	 rdi
  003d8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  003dc	48 8b ea	 mov	 rbp, rdx
  003df	48 8b 8d 30 0b
	00 00		 mov	 rcx, QWORD PTR $T64[rbp]
  003e6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003eb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003ef	5f		 pop	 rdi
  003f0	5d		 pop	 rbp
  003f1	c3		 ret	 0
?dtor$24@?0??writeFeatureList@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NW4FeatureListStrType@@@Z@4HA ENDP ; `writeFeatureList'::`1'::dtor$24
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
$T1 = 32
tv77 = 80
tv76 = 88
tv70 = 96
__$ArrayPad$ = 104
?show_help@@YAXXZ PROC					; show_help

; 564  : static void show_help() {

  00000	40 57		 push	 rdi
  00002	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 1c 00 00 00	 mov	 ecx, 28
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001c	48 33 c4	 xor	 rax, rsp
  0001f	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 565  :     _ftprintf(stdout, _T("%s\n"), help().c_str());

  00024	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00029	e8 00 00 00 00	 call	 ?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; help
  0002e	48 89 44 24 50	 mov	 QWORD PTR tv77[rsp], rax
  00033	48 8b 44 24 50	 mov	 rax, QWORD PTR tv77[rsp]
  00038	48 89 44 24 58	 mov	 QWORD PTR tv76[rsp], rax
  0003d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv76[rsp]
  00042	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00047	48 89 44 24 60	 mov	 QWORD PTR tv70[rsp], rax
  0004c	b9 01 00 00 00	 mov	 ecx, 1
  00051	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv70[rsp]
  0005c	4c 8b c1	 mov	 r8, rcx
  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176387
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 fprintf
  0006e	90		 npad	 1
  0006f	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 566  : }

  00079	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0007e	48 33 cc	 xor	 rcx, rsp
  00081	e8 00 00 00 00	 call	 __security_check_cookie
  00086	48 83 c4 70	 add	 rsp, 112		; 00000070H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
?show_help@@YAXXZ ENDP					; show_help
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
tv77 = 80
tv76 = 88
tv70 = 96
__$ArrayPad$ = 104
?dtor$0@?0??show_help@@YAXXZ@4HA PROC			; `show_help'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??show_help@@YAXXZ@4HA ENDP			; `show_help'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
tv77 = 80
tv76 = 88
tv70 = 96
__$ArrayPad$ = 104
?dtor$0@?0??show_help@@YAXXZ@4HA PROC			; `show_help'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??show_help@@YAXXZ@4HA ENDP			; `show_help'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ?end@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ
_TEXT	SEGMENT
this$ = 16
?end@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ PROC ; std::initializer_list<ListData>::end, COMDAT

; 38   :     _NODISCARD constexpr const _Elem* end() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 39   :         return _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 40   :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?end@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ ENDP ; std::initializer_list<ListData>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ?begin@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ
_TEXT	SEGMENT
this$ = 16
?begin@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ PROC ; std::initializer_list<ListData>::begin, COMDAT

; 34   :     _NODISCARD constexpr const _Elem* begin() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 35   :         return _First;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 36   :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?begin@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ ENDP ; std::initializer_list<ListData>::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ??0?$initializer_list@UListData@@@std@@QEAA@PEBUListData@@0@Z
_TEXT	SEGMENT
this$ = 16
_First_arg$ = 24
_Last_arg$ = 32
??0?$initializer_list@UListData@@@std@@QEAA@PEBUListData@@0@Z PROC ; std::initializer_list<ListData>::initializer_list<ListData>, COMDAT

; 32   :         : _First(_First_arg), _Last(_Last_arg) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _First_arg$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Last_arg$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??0?$initializer_list@UListData@@@std@@QEAA@PEBUListData@@0@Z ENDP ; std::initializer_list<ListData>::initializer_list<ListData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; help

; 163  : static tstring help() {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	56		 push	 rsi
  00006	57		 push	 rdi
  00007	48 81 ec 98 07
	00 00		 sub	 rsp, 1944		; 00000798H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 e6 01 00 00	 mov	 ecx, 486		; 000001e6H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 8c 24 b0
	07 00 00	 mov	 rcx, QWORD PTR [rsp+1968]
  00025	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002c	48 33 c4	 xor	 rax, rsp
  0002f	48 89 84 24 80
	07 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00037	c7 84 24 f0 05
	00 00 00 00 00
	00		 mov	 DWORD PTR $T42[rsp], 0

; 164  :     tstring str;

  00042	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  00047	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004c	90		 npad	 1

; 165  :     str += strsprintf(_T("Usage: QSVEncC [Options] -i <filename> -o <filename>\n"));

  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176351
  00054	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR $T4[rsp]
  0005c	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00061	48 89 84 24 f8
	05 00 00	 mov	 QWORD PTR tv65[rsp], rax
  00069	48 8b 84 24 f8
	05 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  00071	48 89 84 24 00
	06 00 00	 mov	 QWORD PTR tv449[rsp], rax
  00079	48 8b 94 24 00
	06 00 00	 mov	 rdx, QWORD PTR tv449[rsp]
  00081	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  00086	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  0008b	90		 npad	 1
  0008c	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR $T4[rsp]
  00094	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 166  :     str += strsprintf(_T("\n")

  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176352
  000a0	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  000a8	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  000ad	48 89 84 24 08
	06 00 00	 mov	 QWORD PTR tv502[rsp], rax
  000b5	48 8b 84 24 08
	06 00 00	 mov	 rax, QWORD PTR tv502[rsp]
  000bd	48 89 84 24 10
	06 00 00	 mov	 QWORD PTR tv451[rsp], rax
  000c5	48 8b 94 24 10
	06 00 00	 mov	 rdx, QWORD PTR tv451[rsp]
  000cd	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  000d2	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  000d7	90		 npad	 1
  000d8	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  000e0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 167  :         _T("%s input can be %s%s%sraw YUV or YUV4MPEG2(y4m) format.\n")
; 168  :         _T("when raw(default), fps, input-res are also necessary.\n")
; 169  :         _T("\n")
; 170  :         _T("output format will be automatically set by the output extension.\n")
; 171  :         _T("when output filename is set to \"-\", H.264/AVC ES output is thrown to stdout.\n")
; 172  :         _T("\n")
; 173  :         _T("Example:\n")
; 174  :         _T("  QSVEncC -i \"<avsfilename>\" -o \"<outfilename>\"\n")
; 175  :         _T("  avs2pipemod -y4mp \"<avsfile>\" | QSVEncC --y4m -i - -o \"<outfilename>\"\n")
; 176  :         _T("\n")
; 177  :         _T("Example for Benchmark:\n")
; 178  :         _T("  QSVEncC -i \"<avsfilename>\" --benchmark \"<benchmark_result.txt>\"\n")
; 179  :         );
; 180  :     str += strsprintf(_T("\n")

  000e5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176353
  000ec	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  000f4	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  000f9	48 89 84 24 18
	06 00 00	 mov	 QWORD PTR tv503[rsp], rax
  00101	48 8b 84 24 18
	06 00 00	 mov	 rax, QWORD PTR tv503[rsp]
  00109	48 89 84 24 20
	06 00 00	 mov	 QWORD PTR tv453[rsp], rax
  00111	48 8b 94 24 20
	06 00 00	 mov	 rdx, QWORD PTR tv453[rsp]
  00119	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  0011e	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00123	90		 npad	 1
  00124	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  0012c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 181  :         _T("Information Options: \n")
; 182  :         _T("-h,-? --help                    show help\n")
; 183  :         _T("-v,--version                    show version info\n")
; 184  :         _T("   --check-hw                   check if QuickSyncVideo is available\n")
; 185  :         _T("   --check-lib                  check lib API version installed\n")
; 186  :         _T("   --check-features [<string>]  check encode/vpp features\n")
; 187  :         _T("                                 with no option value, result will on stdout,\n")
; 188  :         _T("                                 otherwise, it is written to file path set\n")
; 189  :         _T("                                 and opened by default application.\n")
; 190  :         _T("                                 when writing to file, txt/html/csv format\n")
; 191  :         _T("                                 is available, chosen by the extension\n")
; 192  :         _T("                                 of the output file.\n")
; 193  :         _T("   --check-features-html [<string>]\n")
; 194  :         _T("                                check encode/vpp features and write html report to\n")
; 195  :         _T("                                 specified path. With no value, \"qsv_check.html\"\n")
; 196  :         _T("                                 will be created to current directory.\n")
; 197  :         _T("   --check-environment          check environment info\n")
; 198  :         _T("\n"));
; 199  : 
; 200  :     str += strsprintf(_T("\n")

  00131	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176354
  00138	48 8d 8c 24 20
	01 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  00140	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00145	48 89 84 24 28
	06 00 00	 mov	 QWORD PTR tv504[rsp], rax
  0014d	48 8b 84 24 28
	06 00 00	 mov	 rax, QWORD PTR tv504[rsp]
  00155	48 89 84 24 30
	06 00 00	 mov	 QWORD PTR tv455[rsp], rax
  0015d	48 8b 94 24 30
	06 00 00	 mov	 rdx, QWORD PTR tv455[rsp]
  00165	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  0016a	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  0016f	90		 npad	 1
  00170	48 8d 8c 24 20
	01 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  00178	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 201  :         _T("Basic Encoding Options: \n")
; 202  :         _T("-c,--codec <string>             set encode codec\n")
; 203  :         _T("                                 - h264(default), hevc, mpeg2, raw\n")
; 204  :         _T("-i,--input-file <filename>      set input file name\n")
; 205  :         _T("-o,--output-file <filename>     set ouput file name\n")
; 206  :         _T("\n")
; 207  :         _T(" Input formats (will be estimated from extension if not set.)\n")
; 208  :         _T("   --raw                        set input as raw format\n")
; 209  :         _T("   --y4m                        set input as y4m format\n")
; 210  :     );
; 211  :     str += strsprintf(_T("\n")

  0017d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176355
  00184	48 8d 8c 24 48
	01 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  0018c	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00191	48 89 84 24 38
	06 00 00	 mov	 QWORD PTR tv505[rsp], rax
  00199	48 8b 84 24 38
	06 00 00	 mov	 rax, QWORD PTR tv505[rsp]
  001a1	48 89 84 24 40
	06 00 00	 mov	 QWORD PTR tv457[rsp], rax
  001a9	48 8b 94 24 40
	06 00 00	 mov	 rdx, QWORD PTR tv457[rsp]
  001b1	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  001b6	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  001bb	90		 npad	 1
  001bc	48 8d 8c 24 48
	01 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  001c4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 212  :         _T("   --nv12                       set raw input as NV12 color format,\n")
; 213  :         _T("                                if not specified YV12 is expected\n")
; 214  :         _T("   --tff                        set as interlaced, top field first\n")
; 215  :         _T("   --bff                        set as interlaced, bottom field first\n")
; 216  :         _T("   --fps <int>/<int> or <float> video frame rate (frames per second)\n")
; 217  :         _T("\n")
; 218  :         _T("   --input-res <int>x<int>      input resolution\n")
; 219  :         _T("   --output-res <int>x<int>     output resolution\n")
; 220  :         _T("                                if different from input, uses vpp resizing\n")
; 221  :         _T("                                if not set, output resolution will be same\n")
; 222  :         _T("                                as input (no resize will be done).\n")
; 223  :         _T("   --fixed-func                 use fixed func instead of GPU EU (default:off)\n")
; 224  :         _T("\n"));
; 225  :     str += strsprintf(_T("Frame buffer Options:\n")

  001c9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176356
  001d0	48 8d 8c 24 70
	01 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  001d8	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  001dd	48 89 84 24 48
	06 00 00	 mov	 QWORD PTR tv506[rsp], rax
  001e5	48 8b 84 24 48
	06 00 00	 mov	 rax, QWORD PTR tv506[rsp]
  001ed	48 89 84 24 50
	06 00 00	 mov	 QWORD PTR tv459[rsp], rax
  001f5	48 8b 94 24 50
	06 00 00	 mov	 rdx, QWORD PTR tv459[rsp]
  001fd	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  00202	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00207	90		 npad	 1
  00208	48 8d 8c 24 70
	01 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00210	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 226  :         _T(" frame buffers are selected automatically by default.\n")
; 227  : #ifdef D3D_SURFACES_SUPPORT
; 228  :         _T(" d3d9 memory is faster than d3d11, so d3d9 frames are used whenever possible,\n")
; 229  :         _T(" except decode/vpp only mode (= no encoding mode, system frames are used).\n")
; 230  :         _T(" On particular cases, such as runnning on a system with dGPU, or running\n")
; 231  :         _T(" vpp-rotate, will require the uses of d3d11 surface.\n")
; 232  :         _T(" Options below will change this default behavior.\n")
; 233  :         _T("\n")
; 234  :         _T("   --disable-d3d                disable using d3d surfaces\n")
; 235  : #if MFX_D3D11_SUPPORT
; 236  :         _T("   --d3d                        use d3d9/d3d11 surfaces\n")
; 237  :         _T("   --d3d9                       use d3d9 surfaces\n")
; 238  :         _T("   --d3d11                      use d3d11 surfaces\n")
; 239  : #else
; 240  :         str += strsprintf(_T("")
; 241  :             _T("   --d3d                        use d3d9 surfaces\n")
; 242  : #endif //MFX_D3D11_SUPPORT
; 243  : #endif //D3D_SURFACES_SUPPORT
; 244  : #ifdef LIBVA_SUPPORT
; 245  :             _T("   --disable-va                 disable using va surfaces\n")
; 246  :             _T("   --va                         use va surfaces\n")
; 247  : #endif //#ifdef LIBVA_SUPPORT
; 248  :             _T("\n"));
; 249  :     str += strsprintf(_T("Encode Mode Options:\n")

  00215	c7 44 24 60 17
	00 00 00	 mov	 DWORD PTR [rsp+96], 23
  0021d	c7 44 24 58 5a
	00 00 00	 mov	 DWORD PTR [rsp+88], 90	; 0000005aH
  00225	c7 44 24 50 5a
	00 00 00	 mov	 DWORD PTR [rsp+80], 90	; 0000005aH
  0022d	c7 44 24 48 17
	00 00 00	 mov	 DWORD PTR [rsp+72], 23
  00235	c7 44 24 40 17
	00 00 00	 mov	 DWORD PTR [rsp+64], 23
  0023d	c7 44 24 38 1b
	00 00 00	 mov	 DWORD PTR [rsp+56], 27
  00245	c7 44 24 30 1a
	00 00 00	 mov	 DWORD PTR [rsp+48], 26
  0024d	c7 44 24 28 18
	00 00 00	 mov	 DWORD PTR [rsp+40], 24
  00255	c7 44 24 20 1b
	00 00 00	 mov	 DWORD PTR [rsp+32], 27
  0025d	41 b9 1a 00 00
	00		 mov	 r9d, 26
  00263	41 b8 18 00 00
	00		 mov	 r8d, 24
  00269	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176357
  00270	48 8d 8c 24 98
	01 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  00278	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0027d	48 89 84 24 58
	06 00 00	 mov	 QWORD PTR tv507[rsp], rax
  00285	48 8b 84 24 58
	06 00 00	 mov	 rax, QWORD PTR tv507[rsp]
  0028d	48 89 84 24 60
	06 00 00	 mov	 QWORD PTR tv461[rsp], rax
  00295	48 8b 94 24 60
	06 00 00	 mov	 rdx, QWORD PTR tv461[rsp]
  0029d	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  002a2	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  002a7	90		 npad	 1
  002a8	48 8d 8c 24 98
	01 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  002b0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 250  :         _T(" EncMode default: --cqp\n")
; 251  :         _T("   --cqp <int> or               encode in Constant QP, default %d:%d:%d\n")
; 252  :         _T("         <int>:<int>:<int>      set qp value for i:p:b frame\n")
; 253  :         _T("   --la <int>                   set bitrate in Lookahead mode (kbps)\n")
; 254  :         _T("   --la-hrd <int>               set bitrate in HRD-Lookahead mode (kbps)\n")
; 255  :         _T("   --icq <int>                  encode in Intelligent Const. Quality mode\n")
; 256  :         _T("                                  default value: %d\n")
; 257  :         _T("   --la-icq <int>               encode in ICQ mode with Lookahead\n")
; 258  :         _T("                                  default value: %d\n")
; 259  :         _T("   --cbr <int>                  set bitrate in CBR mode (kbps)\n")
; 260  :         _T("   --vbr <int>                  set bitrate in VBR mode (kbps)\n")
; 261  :         _T("   --avbr <int>                 set bitrate in AVBR mode (kbps)\n")
; 262  :         _T("                                 AVBR mode is only supported with API v1.3\n")
; 263  :         _T("   --avbr-unitsize <int>        avbr calculation period in x100 frames\n")
; 264  :         _T("                                 default %d (= unit size %d00 frames)\n")
; 265  :         //_T("   --avbr-range <float>           avbr accuracy range from bitrate set\n)"
; 266  :         //_T("                                   in percentage, defalut %.1f(%%)\n)"
; 267  :         _T("   --qvbr <int>                 set bitrate in Quality VBR mode.\n")
; 268  :         _T("                                 requires --qvbr-q option to be set as well\n")
; 269  :         _T("   --qvbr-q <int>  or           set quality used in qvbr mode. default: %d\n")
; 270  :         _T("   --qvbr-quality <int>          QVBR mode is only supported with API v1.11\n")
; 271  :         _T("   --vcm <int>                  set bitrate in VCM mode (kbps)\n")
; 272  :         _T("\n"),
; 273  :         QSV_DEFAULT_QPI, QSV_DEFAULT_QPP, QSV_DEFAULT_QPB,
; 274  :         QSV_DEFAULT_QPI, QSV_DEFAULT_QPP, QSV_DEFAULT_QPB,
; 275  :         QSV_DEFAULT_ICQ, QSV_DEFAULT_ICQ,
; 276  :         QSV_DEFAULT_CONVERGENCE, QSV_DEFAULT_CONVERGENCE,
; 277  :         QSV_DEFAULT_QVBR);
; 278  :     str += strsprintf(_T("Other Encode Options:\n")

  002b5	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  002be	c7 44 24 38 03
	00 00 00	 mov	 DWORD PTR [rsp+56], 3
  002c6	c7 44 24 30 03
	00 00 00	 mov	 DWORD PTR [rsp+48], 3
  002ce	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  002d7	c7 44 24 20 64
	00 00 00	 mov	 DWORD PTR [rsp+32], 100	; 00000064H
  002df	41 b9 0a 00 00
	00		 mov	 r9d, 10
  002e5	41 b8 40 00 00
	00		 mov	 r8d, 64			; 00000040H
  002eb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176358
  002f2	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  002fa	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  002ff	48 89 84 24 68
	06 00 00	 mov	 QWORD PTR tv508[rsp], rax
  00307	48 8b 84 24 68
	06 00 00	 mov	 rax, QWORD PTR tv508[rsp]
  0030f	48 89 84 24 70
	06 00 00	 mov	 QWORD PTR tv463[rsp], rax
  00317	48 8b 94 24 70
	06 00 00	 mov	 rdx, QWORD PTR tv463[rsp]
  0031f	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  00324	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00329	90		 npad	 1
  0032a	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  00332	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 279  :         _T("   --fallback-rc                enable fallback of ratecontrol mode, when\n")
; 280  :         _T("                                 platform does not support new ratecontrol modes.\n")
; 281  :         _T("-a,--async-depth                set async depth for QSV pipeline. (0-%d)\n")
; 282  :         _T("                                 default: 0 (=auto, 4+2*(extra pipeline step))\n")
; 283  :         _T("   --max-bitrate <int>          set max bitrate(kbps)\n")
; 284  :         _T("   --qp-min <int> or            set min QP, default 0 (= unset)\n")
; 285  :         _T("           <int>:<int>:<int>\n")
; 286  :         _T("   --qp-max <int> or            set max QP, default 0 (= unset)\n")
; 287  :         _T("           <int>:<int>:<int>\n")
; 288  :         _T("   --qp-offset <int>[:<int>][:<int>]...\n")
; 289  :         _T("                                set qp offset of each pyramid reference layers.\n")
; 290  :         _T("                                 default 0 (= unset).\n")
; 291  :         _T("-u,--quality <string>           encode quality\n")
; 292  :         _T("                                  - best, higher, high, balanced(default)\n")
; 293  :         _T("                                    fast, faster, fastest\n")
; 294  :         _T("   --la-depth <int>             set Lookahead Depth, %d-%d\n")
; 295  :         _T("   --la-window-size <int>       enables Lookahead Windowed Rate Control mode,\n")
; 296  :         _T("                                  and set the window size in frames.\n")
; 297  :         _T("   --la-quality <string>        set lookahead quality.\n")
; 298  :         _T("                                 - auto(default), fast, medium, slow\n")
; 299  :         _T("   --(no-)mbbrc                 enables per macro block rate control\n")
; 300  :         _T("                                 default: auto\n")
; 301  :         _T("   --ref <int>                  reference frames\n")
; 302  :         _T("                                  default %d (auto)\n")
; 303  :         _T("-b,--bframes <int>              number of sequential b frames\n")
; 304  :         _T("                                  default %d(HEVC) / %d(others)\n")
; 305  :         _T("   --(no-)b-pyramid             enables B-frame pyramid reference (default:off)\n")
; 306  :         _T("   --(no-)direct-bias-adjust    lower usage of B frame Direct/Skip type\n")
; 307  :         _T("   --gop-len <int>              (max) gop length, default %d (auto)\n")
; 308  :         _T("                                  when auto, fps x 10 will be set.\n")
; 309  :         _T("   --(no-)open-gop              enables open gop (default:off)\n")
; 310  :         _T("   --strict-gop                 force gop structure\n")
; 311  :         _T("   --(no-)i-adapt               enables adaptive I frame insert (default:off)\n")
; 312  :         _T("   --(no-)b-adapt               enables adaptive B frame insert (default:off)\n")
; 313  :         _T("   --(no-)weightp               enable weighted prediction for P frame\n")
; 314  :         _T("   --(no-)weightb               enable weighted prediction for B frame\n")
; 315  :         _T("   --(no-)adapt-ltr             enable adaptive LTR frames\n")
; 316  :         _T("   --(no-)repartition-check     [H.264] enable prediction from small partitions\n")
; 317  : #if ENABLE_FADE_DETECT
; 318  :         _T("   --(no-)fade-detect           enable fade detection\n")
; 319  : #endif //#if ENABLE_FADE_DETECT
; 320  :         _T("   --trellis <string>           set trellis mode used in encoding\n")
; 321  :         _T("                                 - auto(default), off, i, ip, all\n")
; 322  :         _T("   --mv-scaling                 set mv cost scaling\n")
; 323  :         _T("                                 - 0  set MV cost to be 0\n")
; 324  :         _T("                                 - 1  set MV cost 1/2 of default\n")
; 325  :         _T("                                 - 2  set MV cost 1/4 of default\n")
; 326  :         _T("                                 - 3  set MV cost 1/8 of default\n")
; 327  :         _T("   --slices <int>               number of slices, default 0 (auto)\n")
; 328  :         _T("   --vbv-bufsize <int>          set vbv buffer size (kbit) / default: auto\n")
; 329  :         _T("   --no-deblock                 [h264] disables H.264 deblock feature\n")
; 330  :         _T("   --tskip                      [hevc] enable transform skip\n")
; 331  :         _T("   --sao <string>               [hevc]\n")
; 332  :         _T("                                 - auto    default\n")
; 333  :         _T("                                 - none    disable sao\n")
; 334  :         _T("                                 - luma    enable sao for luma\n")
; 335  :         _T("                                 - chroma  enable sao for chroma\n")
; 336  :         _T("                                 - all     enable sao for luma & chroma\n")
; 337  :         _T("   --ctu <int>                  [hevc] max ctu size\n")
; 338  :         _T("                                 - auto(default), 16, 32, 64\n")
; 339  :         _T("   --sharpness <int>            [vp8] set sharpness level for vp8 enc\n")
; 340  :         _T("\n"),
; 341  :         QSV_ASYNC_DEPTH_MAX,
; 342  :         QSV_LOOKAHEAD_DEPTH_MIN, QSV_LOOKAHEAD_DEPTH_MAX,
; 343  :         QSV_DEFAULT_REF,
; 344  :         QSV_DEFAULT_HEVC_BFRAMES, QSV_DEFAULT_H264_BFRAMES,
; 345  :         QSV_DEFAULT_GOP_LEN);
; 346  :     str += PrintMultipleListOptions(_T("--level <string>"), _T("set codec level"),

  00337	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG176359
  0033e	48 89 84 24 f0
	01 00 00	 mov	 QWORD PTR $T12[rsp], rax
  00346	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?list_avc_level@@3QBUCX_DESC@@B
  0034d	48 89 84 24 f8
	01 00 00	 mov	 QWORD PTR $T12[rsp+8], rax
  00355	c7 84 24 00 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T12[rsp+16], 0
  00360	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG176360
  00367	48 89 84 24 08
	02 00 00	 mov	 QWORD PTR $T12[rsp+24], rax
  0036f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?list_hevc_level@@3QBUCX_DESC@@B
  00376	48 89 84 24 10
	02 00 00	 mov	 QWORD PTR $T12[rsp+32], rax
  0037e	c7 84 24 18 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T12[rsp+40], 0
  00389	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG176361
  00390	48 89 84 24 20
	02 00 00	 mov	 QWORD PTR $T12[rsp+48], rax
  00398	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?list_mpeg2_level@@3QBUCX_DESC@@B
  0039f	48 89 84 24 28
	02 00 00	 mov	 QWORD PTR $T12[rsp+56], rax
  003a7	c7 84 24 30 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T12[rsp+64], 0
  003b2	48 8d 8c 24 38
	05 00 00	 lea	 rcx, QWORD PTR $T31[rsp]
  003ba	e8 00 00 00 00	 call	 ??0?$allocator@UListData@@@std@@QEAA@XZ ; std::allocator<ListData>::allocator<ListData>
  003bf	48 89 84 24 78
	06 00 00	 mov	 QWORD PTR tv179[rsp], rax
  003c7	48 8d 8c 24 38
	02 00 00	 lea	 rcx, QWORD PTR $T12[rsp+72]
  003cf	4c 8b c1	 mov	 r8, rcx
  003d2	48 8d 94 24 f0
	01 00 00	 lea	 rdx, QWORD PTR $T12[rsp]
  003da	48 8d 8c 24 40
	05 00 00	 lea	 rcx, QWORD PTR $T32[rsp]
  003e2	e8 00 00 00 00	 call	 ??0?$initializer_list@UListData@@@std@@QEAA@PEBUListData@@0@Z ; std::initializer_list<ListData>::initializer_list<ListData>
  003e7	48 8d 8c 24 c0
	05 00 00	 lea	 rcx, QWORD PTR $T39[rsp]
  003ef	48 8b f9	 mov	 rdi, rcx
  003f2	48 8b f0	 mov	 rsi, rax
  003f5	b9 10 00 00 00	 mov	 ecx, 16
  003fa	f3 a4		 rep movsb
  003fc	48 8b 84 24 78
	06 00 00	 mov	 rax, QWORD PTR tv179[rsp]
  00404	4c 8b c0	 mov	 r8, rax
  00407	48 8d 94 24 c0
	05 00 00	 lea	 rdx, QWORD PTR $T39[rsp]
  0040f	48 8d 8c 24 18
	05 00 00	 lea	 rcx, QWORD PTR $T30[rsp]
  00417	e8 00 00 00 00	 call	 ??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z ; std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >
  0041c	90		 npad	 1
  0041d	4c 8d 8c 24 18
	05 00 00	 lea	 r9, QWORD PTR $T30[rsp]
  00425	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG176362
  0042c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176363
  00433	48 8d 8c 24 40
	02 00 00	 lea	 rcx, QWORD PTR $T13[rsp]
  0043b	e8 00 00 00 00	 call	 ?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z ; PrintMultipleListOptions
  00440	48 89 84 24 80
	06 00 00	 mov	 QWORD PTR tv177[rsp], rax
  00448	48 8b 84 24 80
	06 00 00	 mov	 rax, QWORD PTR tv177[rsp]
  00450	48 89 84 24 88
	06 00 00	 mov	 QWORD PTR tv466[rsp], rax
  00458	48 8b 94 24 88
	06 00 00	 mov	 rdx, QWORD PTR tv466[rsp]
  00460	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  00465	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  0046a	90		 npad	 1
  0046b	48 8d 8c 24 40
	02 00 00	 lea	 rcx, QWORD PTR $T13[rsp]
  00473	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00478	90		 npad	 1
  00479	48 8d 8c 24 18
	05 00 00	 lea	 rcx, QWORD PTR $T30[rsp]
  00481	e8 00 00 00 00	 call	 ??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >

; 347  :         { { _T("H.264"), list_avc_level,   0 },
; 348  :           { _T("HEVC"),  list_hevc_level,  0 },
; 349  :           { _T("MPEG2"), list_mpeg2_level, 0 }
; 350  :         });
; 351  :     str += PrintMultipleListOptions(_T("--profile <string>"), _T("set codec profile"),

  00486	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG176364
  0048d	48 89 84 24 70
	02 00 00	 mov	 QWORD PTR $T14[rsp], rax
  00495	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?list_avc_profile@@3QBUCX_DESC@@B
  0049c	48 89 84 24 78
	02 00 00	 mov	 QWORD PTR $T14[rsp+8], rax
  004a4	c7 84 24 80 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T14[rsp+16], 0
  004af	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG176365
  004b6	48 89 84 24 88
	02 00 00	 mov	 QWORD PTR $T14[rsp+24], rax
  004be	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?list_hevc_profile@@3QBUCX_DESC@@B
  004c5	48 89 84 24 90
	02 00 00	 mov	 QWORD PTR $T14[rsp+32], rax
  004cd	c7 84 24 98 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T14[rsp+40], 0
  004d8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG176366
  004df	48 89 84 24 a0
	02 00 00	 mov	 QWORD PTR $T14[rsp+48], rax
  004e7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?list_mpeg2_profile@@3QBUCX_DESC@@B
  004ee	48 89 84 24 a8
	02 00 00	 mov	 QWORD PTR $T14[rsp+56], rax
  004f6	c7 84 24 b0 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T14[rsp+64], 0
  00501	48 8d 8c 24 70
	05 00 00	 lea	 rcx, QWORD PTR $T34[rsp]
  00509	e8 00 00 00 00	 call	 ??0?$allocator@UListData@@@std@@QEAA@XZ ; std::allocator<ListData>::allocator<ListData>
  0050e	48 89 84 24 90
	06 00 00	 mov	 QWORD PTR tv232[rsp], rax
  00516	48 8d 8c 24 b8
	02 00 00	 lea	 rcx, QWORD PTR $T14[rsp+72]
  0051e	4c 8b c1	 mov	 r8, rcx
  00521	48 8d 94 24 70
	02 00 00	 lea	 rdx, QWORD PTR $T14[rsp]
  00529	48 8d 8c 24 78
	05 00 00	 lea	 rcx, QWORD PTR $T35[rsp]
  00531	e8 00 00 00 00	 call	 ??0?$initializer_list@UListData@@@std@@QEAA@PEBUListData@@0@Z ; std::initializer_list<ListData>::initializer_list<ListData>
  00536	48 8d 8c 24 d0
	05 00 00	 lea	 rcx, QWORD PTR $T40[rsp]
  0053e	48 8b f9	 mov	 rdi, rcx
  00541	48 8b f0	 mov	 rsi, rax
  00544	b9 10 00 00 00	 mov	 ecx, 16
  00549	f3 a4		 rep movsb
  0054b	48 8b 84 24 90
	06 00 00	 mov	 rax, QWORD PTR tv232[rsp]
  00553	4c 8b c0	 mov	 r8, rax
  00556	48 8d 94 24 d0
	05 00 00	 lea	 rdx, QWORD PTR $T40[rsp]
  0055e	48 8d 8c 24 50
	05 00 00	 lea	 rcx, QWORD PTR $T33[rsp]
  00566	e8 00 00 00 00	 call	 ??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z ; std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >
  0056b	90		 npad	 1
  0056c	4c 8d 8c 24 50
	05 00 00	 lea	 r9, QWORD PTR $T33[rsp]
  00574	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG176367
  0057b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176368
  00582	48 8d 8c 24 c0
	02 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  0058a	e8 00 00 00 00	 call	 ?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z ; PrintMultipleListOptions
  0058f	48 89 84 24 98
	06 00 00	 mov	 QWORD PTR tv230[rsp], rax
  00597	48 8b 84 24 98
	06 00 00	 mov	 rax, QWORD PTR tv230[rsp]
  0059f	48 89 84 24 a0
	06 00 00	 mov	 QWORD PTR tv469[rsp], rax
  005a7	48 8b 94 24 a0
	06 00 00	 mov	 rdx, QWORD PTR tv469[rsp]
  005af	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  005b4	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  005b9	90		 npad	 1
  005ba	48 8d 8c 24 c0
	02 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  005c2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  005c7	90		 npad	 1
  005c8	48 8d 8c 24 50
	05 00 00	 lea	 rcx, QWORD PTR $T33[rsp]
  005d0	e8 00 00 00 00	 call	 ??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >

; 352  :         { { _T("H.264"), list_avc_profile,   0 },
; 353  :           { _T("HEVC"),  list_hevc_profile,  0 },
; 354  :           { _T("MPEG2"), list_mpeg2_profile, 0 }
; 355  :         });
; 356  :     str += PrintMultipleListOptions(_T("--tier <string>"), _T("set codec tier"),

  005d5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG176369
  005dc	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR $T16[rsp], rax
  005e4	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?list_hevc_tier@@3QBUCX_DESC@@B
  005eb	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR $T16[rsp+8], rax
  005f3	c7 84 24 f8 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T16[rsp+16], 0
  005fe	48 8d 8c 24 a8
	05 00 00	 lea	 rcx, QWORD PTR $T37[rsp]
  00606	e8 00 00 00 00	 call	 ??0?$allocator@UListData@@@std@@QEAA@XZ ; std::allocator<ListData>::allocator<ListData>
  0060b	48 89 84 24 a8
	06 00 00	 mov	 QWORD PTR tv253[rsp], rax
  00613	48 8d 8c 24 00
	03 00 00	 lea	 rcx, QWORD PTR $T16[rsp+24]
  0061b	4c 8b c1	 mov	 r8, rcx
  0061e	48 8d 94 24 e8
	02 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00626	48 8d 8c 24 b0
	05 00 00	 lea	 rcx, QWORD PTR $T38[rsp]
  0062e	e8 00 00 00 00	 call	 ??0?$initializer_list@UListData@@@std@@QEAA@PEBUListData@@0@Z ; std::initializer_list<ListData>::initializer_list<ListData>
  00633	48 8d 8c 24 e0
	05 00 00	 lea	 rcx, QWORD PTR $T41[rsp]
  0063b	48 8b f9	 mov	 rdi, rcx
  0063e	48 8b f0	 mov	 rsi, rax
  00641	b9 10 00 00 00	 mov	 ecx, 16
  00646	f3 a4		 rep movsb
  00648	48 8b 84 24 a8
	06 00 00	 mov	 rax, QWORD PTR tv253[rsp]
  00650	4c 8b c0	 mov	 r8, rax
  00653	48 8d 94 24 e0
	05 00 00	 lea	 rdx, QWORD PTR $T41[rsp]
  0065b	48 8d 8c 24 88
	05 00 00	 lea	 rcx, QWORD PTR $T36[rsp]
  00663	e8 00 00 00 00	 call	 ??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z ; std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >
  00668	90		 npad	 1
  00669	4c 8d 8c 24 88
	05 00 00	 lea	 r9, QWORD PTR $T36[rsp]
  00671	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG176370
  00678	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176371
  0067f	48 8d 8c 24 08
	03 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  00687	e8 00 00 00 00	 call	 ?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z ; PrintMultipleListOptions
  0068c	48 89 84 24 b0
	06 00 00	 mov	 QWORD PTR tv251[rsp], rax
  00694	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR tv251[rsp]
  0069c	48 89 84 24 b8
	06 00 00	 mov	 QWORD PTR tv472[rsp], rax
  006a4	48 8b 94 24 b8
	06 00 00	 mov	 rdx, QWORD PTR tv472[rsp]
  006ac	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  006b1	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  006b6	90		 npad	 1
  006b7	48 8d 8c 24 08
	03 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  006bf	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  006c4	90		 npad	 1
  006c5	48 8d 8c 24 88
	05 00 00	 lea	 rcx, QWORD PTR $T36[rsp]
  006cd	e8 00 00 00 00	 call	 ??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >

; 357  :         { { _T("HEVC"),  list_hevc_tier,  0 },
; 358  :         });
; 359  : 
; 360  :     str += strsprintf(_T("\n")

  006d2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176372
  006d9	48 8d 8c 24 30
	03 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  006e1	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  006e6	48 89 84 24 c0
	06 00 00	 mov	 QWORD PTR tv509[rsp], rax
  006ee	48 8b 84 24 c0
	06 00 00	 mov	 rax, QWORD PTR tv509[rsp]
  006f6	48 89 84 24 c8
	06 00 00	 mov	 QWORD PTR tv474[rsp], rax
  006fe	48 8b 94 24 c8
	06 00 00	 mov	 rdx, QWORD PTR tv474[rsp]
  00706	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  0070b	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00710	90		 npad	 1
  00711	48 8d 8c 24 30
	03 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  00719	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 361  :         _T("   --sar <int>:<int>            set Sample Aspect Ratio\n")
; 362  :         _T("   --dar <int>:<int>            set Display Aspect Ratio\n")
; 363  :         _T("   --bluray                     for H.264 bluray encoding\n")
; 364  :         _T("\n")
; 365  :         _T("   --crop <int>,<int>,<int>,<int>\n")
; 366  :         _T("                                set crop pixels of left, up, right, bottom.\n")
; 367  :         _T("\n"));
; 368  :     str += PrintListOptions(_T("--videoformat <string>"), list_videoformat, 0);

  0071e	45 33 c9	 xor	 r9d, r9d
  00721	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?list_videoformat@@3QBUCX_DESC@@B
  00728	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176373
  0072f	48 8d 8c 24 58
	03 00 00	 lea	 rcx, QWORD PTR $T19[rsp]
  00737	e8 00 00 00 00	 call	 ?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z ; PrintListOptions
  0073c	48 89 84 24 d0
	06 00 00	 mov	 QWORD PTR tv510[rsp], rax
  00744	48 8b 84 24 d0
	06 00 00	 mov	 rax, QWORD PTR tv510[rsp]
  0074c	48 89 84 24 d8
	06 00 00	 mov	 QWORD PTR tv476[rsp], rax
  00754	48 8b 94 24 d8
	06 00 00	 mov	 rdx, QWORD PTR tv476[rsp]
  0075c	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  00761	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00766	90		 npad	 1
  00767	48 8d 8c 24 58
	03 00 00	 lea	 rcx, QWORD PTR $T19[rsp]
  0076f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 369  :     str += PrintListOptions(_T("--colormatrix <string>"), list_colormatrix, 0);

  00774	45 33 c9	 xor	 r9d, r9d
  00777	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?list_colormatrix@@3QBUCX_DESC@@B
  0077e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176374
  00785	48 8d 8c 24 80
	03 00 00	 lea	 rcx, QWORD PTR $T20[rsp]
  0078d	e8 00 00 00 00	 call	 ?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z ; PrintListOptions
  00792	48 89 84 24 e0
	06 00 00	 mov	 QWORD PTR tv511[rsp], rax
  0079a	48 8b 84 24 e0
	06 00 00	 mov	 rax, QWORD PTR tv511[rsp]
  007a2	48 89 84 24 e8
	06 00 00	 mov	 QWORD PTR tv478[rsp], rax
  007aa	48 8b 94 24 e8
	06 00 00	 mov	 rdx, QWORD PTR tv478[rsp]
  007b2	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  007b7	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  007bc	90		 npad	 1
  007bd	48 8d 8c 24 80
	03 00 00	 lea	 rcx, QWORD PTR $T20[rsp]
  007c5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 370  :     str += PrintListOptions(_T("--colorprim <string>"),   list_colorprim,   0);

  007ca	45 33 c9	 xor	 r9d, r9d
  007cd	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?list_colorprim@@3QBUCX_DESC@@B
  007d4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176375
  007db	48 8d 8c 24 a8
	03 00 00	 lea	 rcx, QWORD PTR $T21[rsp]
  007e3	e8 00 00 00 00	 call	 ?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z ; PrintListOptions
  007e8	48 89 84 24 f0
	06 00 00	 mov	 QWORD PTR tv512[rsp], rax
  007f0	48 8b 84 24 f0
	06 00 00	 mov	 rax, QWORD PTR tv512[rsp]
  007f8	48 89 84 24 f8
	06 00 00	 mov	 QWORD PTR tv480[rsp], rax
  00800	48 8b 94 24 f8
	06 00 00	 mov	 rdx, QWORD PTR tv480[rsp]
  00808	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  0080d	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00812	90		 npad	 1
  00813	48 8d 8c 24 a8
	03 00 00	 lea	 rcx, QWORD PTR $T21[rsp]
  0081b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 371  :     str += PrintListOptions(_T("--transfer <string>"),    list_transfer,    0);

  00820	45 33 c9	 xor	 r9d, r9d
  00823	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?list_transfer@@3QBUCX_DESC@@B
  0082a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176376
  00831	48 8d 8c 24 d0
	03 00 00	 lea	 rcx, QWORD PTR $T22[rsp]
  00839	e8 00 00 00 00	 call	 ?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z ; PrintListOptions
  0083e	48 89 84 24 00
	07 00 00	 mov	 QWORD PTR tv513[rsp], rax
  00846	48 8b 84 24 00
	07 00 00	 mov	 rax, QWORD PTR tv513[rsp]
  0084e	48 89 84 24 08
	07 00 00	 mov	 QWORD PTR tv482[rsp], rax
  00856	48 8b 94 24 08
	07 00 00	 mov	 rdx, QWORD PTR tv482[rsp]
  0085e	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  00863	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00868	90		 npad	 1
  00869	48 8d 8c 24 d0
	03 00 00	 lea	 rcx, QWORD PTR $T22[rsp]
  00871	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 372  :     str += strsprintf(_T("")

  00876	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176377
  0087d	48 8d 8c 24 f8
	03 00 00	 lea	 rcx, QWORD PTR $T23[rsp]
  00885	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0088a	48 89 84 24 10
	07 00 00	 mov	 QWORD PTR tv514[rsp], rax
  00892	48 8b 84 24 10
	07 00 00	 mov	 rax, QWORD PTR tv514[rsp]
  0089a	48 89 84 24 18
	07 00 00	 mov	 QWORD PTR tv484[rsp], rax
  008a2	48 8b 94 24 18
	07 00 00	 mov	 rdx, QWORD PTR tv484[rsp]
  008aa	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  008af	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  008b4	90		 npad	 1
  008b5	48 8d 8c 24 f8
	03 00 00	 lea	 rcx, QWORD PTR $T23[rsp]
  008bd	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 373  :         _T("   --aud                        insert aud nal unit to ouput stream.\n")
; 374  :         _T("   --pic-struct                 insert pic-timing SEI with pic_struct.\n")
; 375  :         _T("   --chromaloc <int>            set chroma location flag [ 0 ... 5 ]\n")
; 376  :         _T("                                  default: 0 = unspecified\n")
; 377  :         _T("   --fullrange                  set stream as fullrange yuv\n")
; 378  :         _T("   --max-cll <int>,<int>        set MaxCLL and MaxFall in nits. e.g. \"1000,300\"\n")
; 379  :         _T("   --master-display <string>    set Mastering display data.\n")
; 380  :         _T("      e.g. \"G(13250,34500)B(7500,3000)R(34000,16000)WP(15635,16450)L(10000000,1)\"\n"));
; 381  :     str += strsprintf(_T("\n")

  008c2	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR [rsp+40], 1
  008ca	c7 44 24 20 03
	00 00 00	 mov	 DWORD PTR [rsp+32], 3
  008d2	41 b9 10 00 00
	00		 mov	 r9d, 16
  008d8	41 b8 01 00 00
	00		 mov	 r8d, 1
  008de	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176378
  008e5	48 8d 8c 24 20
	04 00 00	 lea	 rcx, QWORD PTR $T24[rsp]
  008ed	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  008f2	48 89 84 24 20
	07 00 00	 mov	 QWORD PTR tv515[rsp], rax
  008fa	48 8b 84 24 20
	07 00 00	 mov	 rax, QWORD PTR tv515[rsp]
  00902	48 89 84 24 28
	07 00 00	 mov	 QWORD PTR tv486[rsp], rax
  0090a	48 8b 94 24 28
	07 00 00	 mov	 rdx, QWORD PTR tv486[rsp]
  00912	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  00917	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  0091c	90		 npad	 1
  0091d	48 8d 8c 24 20
	04 00 00	 lea	 rcx, QWORD PTR $T24[rsp]
  00925	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 382  :         //_T("   --sw                         use software encoding, instead of QSV (hw)\n")
; 383  :         _T("   --input-buf <int>            buffer size for input in frames (%d-%d)\n")
; 384  :         _T("                                 default   hw: %d,  sw: %d\n")
; 385  :         _T("                                 cannot be used with avqsv reader.\n"),
; 386  :         QSV_INPUT_BUF_MIN, QSV_INPUT_BUF_MAX,
; 387  :         QSV_DEFAULT_INPUT_BUF_HW, QSV_DEFAULT_INPUT_BUF_SW
; 388  :         );
; 389  :     str += strsprintf(_T("")

  0092a	41 b9 80 00 00
	00		 mov	 r9d, 128		; 00000080H
  00930	41 b8 08 00 00
	00		 mov	 r8d, 8
  00936	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176379
  0093d	48 8d 8c 24 48
	04 00 00	 lea	 rcx, QWORD PTR $T25[rsp]
  00945	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0094a	48 89 84 24 30
	07 00 00	 mov	 QWORD PTR tv516[rsp], rax
  00952	48 8b 84 24 30
	07 00 00	 mov	 rax, QWORD PTR tv516[rsp]
  0095a	48 89 84 24 38
	07 00 00	 mov	 QWORD PTR tv488[rsp], rax
  00962	48 8b 94 24 38
	07 00 00	 mov	 rdx, QWORD PTR tv488[rsp]
  0096a	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  0096f	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00974	90		 npad	 1
  00975	48 8d 8c 24 48
	04 00 00	 lea	 rcx, QWORD PTR $T25[rsp]
  0097d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 390  :         _T("   --output-buf <int>           buffer size for output in MByte\n")
; 391  :         _T("                                 default %d MB (0-%d)\n"),
; 392  :         QSV_DEFAULT_OUTPUT_BUF_MB, RGY_OUTPUT_BUF_MB_MAX
; 393  :         );
; 394  :     str += strsprintf(_T("")

  00982	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176380
  00989	48 8d 8c 24 70
	04 00 00	 lea	 rcx, QWORD PTR $T26[rsp]
  00991	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00996	48 89 84 24 40
	07 00 00	 mov	 QWORD PTR tv517[rsp], rax
  0099e	48 8b 84 24 40
	07 00 00	 mov	 rax, QWORD PTR tv517[rsp]
  009a6	48 89 84 24 48
	07 00 00	 mov	 QWORD PTR tv490[rsp], rax
  009ae	48 8b 94 24 48
	07 00 00	 mov	 rdx, QWORD PTR tv490[rsp]
  009b6	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  009bb	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  009c0	90		 npad	 1
  009c1	48 8d 8c 24 70
	04 00 00	 lea	 rcx, QWORD PTR $T26[rsp]
  009c9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 395  : #if defined(_WIN32) || defined(_WIN64)
; 396  :         _T("   --mfx-thread <int>          set mfx thread num (-1 (auto), 2, 3, ...)\n")
; 397  :         _T("                                 note that mfx thread cannot be less than 2.\n")
; 398  : #endif
; 399  :         _T("   --input-thread <int>        set input thread num\n")
; 400  :         _T("                                  0: disable (slow, but less cpu usage)\n")
; 401  :         _T("                                  1: use one thread\n")
; 402  : #if ENABLE_AVCODEC_OUT_THREAD
; 403  :         _T("   --output-thread <int>        set output thread num\n")
; 404  :         _T("                                 -1: auto (= default)\n")
; 405  :         _T("                                  0: disable (slow, but less memory usage)\n")
; 406  :         _T("                                  1: use one thread\n")
; 407  : #if 0
; 408  :         _T("   --audio-thread <int>         set audio thread num, available only with output thread\n")
; 409  :         _T("                                 -1: auto (= default)\n")
; 410  :         _T("                                  0: disable (slow, but less memory usage)\n")
; 411  :         _T("                                  1: use one thread\n")
; 412  :         _T("                                  2: use two thread\n")
; 413  : #endif //#if ENABLE_AVCODEC_AUDPROCESS_THREAD
; 414  : #endif //#if ENABLE_AVCODEC_OUT_THREAD
; 415  :         _T("   --min-memory                 minimize memory usage of QSVEncC.\n")
; 416  :         _T("                                 same as --output-thread 0 --audio-thread 0\n")
; 417  :         _T("                                   --mfx-thread 2 -a 1 --input-buf 1 --output-buf 0\n")
; 418  :         _T("                                 this will cause lower performance!\n")
; 419  :         _T("   --max-procfps <int>         limit processing speed to lower resource usage.\n")
; 420  :         _T("                                 default:0 (no limit)\n")
; 421  :         );
; 422  :     str += strsprintf(

  009ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176381
  009d5	48 8d 8c 24 98
	04 00 00	 lea	 rcx, QWORD PTR $T27[rsp]
  009dd	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  009e2	48 89 84 24 50
	07 00 00	 mov	 QWORD PTR tv518[rsp], rax
  009ea	48 8b 84 24 50
	07 00 00	 mov	 rax, QWORD PTR tv518[rsp]
  009f2	48 89 84 24 58
	07 00 00	 mov	 QWORD PTR tv492[rsp], rax
  009fa	48 8b 94 24 58
	07 00 00	 mov	 rdx, QWORD PTR tv492[rsp]
  00a02	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  00a07	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00a0c	90		 npad	 1
  00a0d	48 8d 8c 24 98
	04 00 00	 lea	 rcx, QWORD PTR $T27[rsp]
  00a15	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 423  :         _T("   --log <string>               output log to file (txt or html).\n")
; 424  :         _T("   --log-level <string>         set output log level\n")
; 425  :         _T("                                 info(default), warn, error, debug\n")
; 426  :         _T("   --log-framelist <string>     output frame info for avqsv reader (for debug)\n")
; 427  : #if _DEBUG
; 428  :         _T("   --log-mus-ts <string>         (for debug)\n")
; 429  :         _T("   --log-copy-framedata <string> (for debug)\n")
; 430  : #endif
; 431  :         );
; 432  : #if ENABLE_SESSION_THREAD_CONFIG
; 433  :     str += strsprintf(_T("")
; 434  :         _T("   --session-threads            set num of threads for QSV session. (0-%d)\n")
; 435  :         _T("                                 default: 0 (=auto)\n")
; 436  :         _T("   --session-thread-priority    set thread priority for QSV session.\n")
; 437  :         _T("                                  - low, normal(default), high\n"),
; 438  :         QSV_SESSION_THREAD_MAX);
; 439  : #endif
; 440  :     str += strsprintf(_T("\n")

  00a1a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176382
  00a21	48 8d 8c 24 c0
	04 00 00	 lea	 rcx, QWORD PTR $T28[rsp]
  00a29	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00a2e	48 89 84 24 60
	07 00 00	 mov	 QWORD PTR tv519[rsp], rax
  00a36	48 8b 84 24 60
	07 00 00	 mov	 rax, QWORD PTR tv519[rsp]
  00a3e	48 89 84 24 68
	07 00 00	 mov	 QWORD PTR tv494[rsp], rax
  00a46	48 8b 94 24 68
	07 00 00	 mov	 rdx, QWORD PTR tv494[rsp]
  00a4e	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  00a53	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00a58	90		 npad	 1
  00a59	48 8d 8c 24 c0
	04 00 00	 lea	 rcx, QWORD PTR $T28[rsp]
  00a61	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 441  :         _T("   --benchmark <string>         run in benchmark mode\n")
; 442  :         _T("                                 and write result in txt file\n")
; 443  :         _T("   --bench-quality \"all\" or <string>[,<string>][,<string>]...\n")
; 444  :         _T("                                 default: \"best,balanced,fastest\"\n")
; 445  :         _T("                                list of target quality to check on benchmark\n")
; 446  :         _T("   --perf-monitor [<string>][,<string>]...\n")
; 447  :         _T("       check performance info of QSVEncC and output to log file\n")
; 448  :         _T("       select counter from below, default = all\n")
; 449  :         _T("   --perf-monitor-plot [<string>][,<string>]...\n")
; 450  :         _T("       plot perf monitor realtime (required python, pyqtgraph)\n")
; 451  :         _T("       select counter from below, default = cpu,bitrate\n")
; 452  :         _T("                                 \n")
; 453  :         _T("     counters for perf-monitor, perf-monitor-plot\n")
; 454  :         _T("                                 all          ... monitor all info\n")
; 455  :         _T("                                 cpu_total    ... cpu total usage (%%)\n")
; 456  :         _T("                                 cpu_kernel   ... cpu kernel usage (%%)\n")
; 457  : #if defined(_WIN32) || defined(_WIN64)
; 458  :         _T("                                 cpu_main     ... cpu main thread usage (%%)\n")
; 459  :         _T("                                 cpu_enc      ... cpu encode thread usage (%%)\n")
; 460  :         _T("                                 cpu_in       ... cpu input thread usage (%%)\n")
; 461  :         _T("                                 cpu_out      ... cpu output thread usage (%%)\n")
; 462  :         _T("                                 cpu_aud_proc ... cpu aud proc thread usage (%%)\n")
; 463  :         _T("                                 cpu_aud_enc  ... cpu aud enc thread usage (%%)\n")
; 464  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 465  :         _T("                                 cpu          ... monitor all cpu info\n")
; 466  : #if defined(_WIN32) || defined(_WIN64)
; 467  :         _T("                                 gpu_load    ... gpu usage (%%)\n")
; 468  :         _T("                                 gpu_clock   ... gpu avg clock (%%)\n")
; 469  :         _T("                                 gpu         ... monitor all gpu info\n")
; 470  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 471  :         _T("                                 queue       ... queue usage\n")
; 472  :         _T("                                 mem_private ... private memory (MB)\n")
; 473  :         _T("                                 mem_virtual ... virtual memory (MB)\n")
; 474  :         _T("                                 mem         ... monitor all memory info\n")
; 475  :         _T("                                 io_read     ... io read  (MB/s)\n")
; 476  :         _T("                                 io_write    ... io write (MB/s)\n")
; 477  :         _T("                                 io          ... monitor all io info\n")
; 478  :         _T("                                 fps         ... encode speed (fps)\n")
; 479  :         _T("                                 fps_avg     ... encode avg. speed (fps)\n")
; 480  :         _T("                                 bitrate     ... encode bitrate (kbps)\n")
; 481  :         _T("                                 bitrate_avg ... encode avg. bitrate (kbps)\n")
; 482  :         _T("                                 frame_out   ... written_frames\n")
; 483  :         _T("                                 \n")
; 484  :         _T("   --python <string>            set python path for --perf-monitor-plot\n")
; 485  :         _T("                                 default: python\n")
; 486  :         _T("   --perf-monitor-interval <int> set perf monitor check interval (millisec)\n")
; 487  :         _T("                                 default 250, must be 50 or more\n")
; 488  : #if defined(_WIN32) || defined(_WIN64)
; 489  :         _T("   --(no-)timer-period-tuning   enable(disable) timer period tuning\n")
; 490  :         _T("                                  default: enabled\n")
; 491  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 492  :         );
; 493  : #if 0
; 494  :     str += strsprintf(_T("\n")
; 495  :         _T(" Settings below are available only for software ecoding.\n")
; 496  :         _T("   --cavlc                      use cavlc instead of cabac\n")
; 497  :         _T("   --rdo                        use rate distortion optmization\n")
; 498  :         _T("   --inter-pred <int>           set minimum block size used for\n")
; 499  :         _T("   --intra-pred <int>           inter/intra prediction\n")
; 500  :         _T("                                  0: auto(default)   1: 16x16\n")
; 501  :         _T("                                  2: 8x8             3: 4x4\n")
; 502  :         _T("   --mv-search <int>            set window size for mv search\n")
; 503  :         _T("                                  default: 0 (auto)\n")
; 504  :         _T("   --mv-precision <int>         set precision of mv search\n")
; 505  :         _T("                                  0: auto(default)   1: full-pell\n")
; 506  :         _T("                                  2: half-pell       3: quater-pell\n")
; 507  :         );
; 508  : #endif
; 509  :     str += strsprintf(_T("\nVPP Options:\n")

  00a66	c7 44 24 48 80
	00 00 00	 mov	 DWORD PTR [rsp+72], 128	; 00000080H
  00a6e	c7 44 24 40 64
	00 00 00	 mov	 DWORD PTR [rsp+64], 100	; 00000064H
  00a76	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  00a7f	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  00a88	c7 44 24 28 14
	00 00 00	 mov	 DWORD PTR [rsp+40], 20
  00a90	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  00a98	41 b9 64 00 00
	00		 mov	 r9d, 100		; 00000064H
  00a9e	45 33 c0	 xor	 r8d, r8d
  00aa1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176383
  00aa8	48 8d 8c 24 e8
	04 00 00	 lea	 rcx, QWORD PTR $T29[rsp]
  00ab0	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00ab5	48 89 84 24 70
	07 00 00	 mov	 QWORD PTR tv520[rsp], rax
  00abd	48 8b 84 24 70
	07 00 00	 mov	 rax, QWORD PTR tv520[rsp]
  00ac5	48 89 84 24 78
	07 00 00	 mov	 QWORD PTR tv496[rsp], rax
  00acd	48 8b 94 24 78
	07 00 00	 mov	 rdx, QWORD PTR tv496[rsp]
  00ad5	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  00ada	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00adf	90		 npad	 1
  00ae0	48 8d 8c 24 e8
	04 00 00	 lea	 rcx, QWORD PTR $T29[rsp]
  00ae8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 510  :         _T("   --vpp-denoise <int>          use vpp denoise, set strength (%d-%d)\n")
; 511  :         _T("   --vpp-mctf [\"auto\" or <int>] use vpp motion compensated temporal filter(mctf)\n")
; 512  :         _T("                                  set strength (%d-%d), default: %d (auto)\n")
; 513  :         _T("   --vpp-detail-enhance <int>   use vpp detail enahancer, set strength (%d-%d)\n")
; 514  :         _T("   --vpp-deinterlace <string>   set vpp deinterlace mode\n")
; 515  :         _T("                                 - none     disable deinterlace\n")
; 516  :         _T("                                 - normal   normal deinterlace\n")
; 517  :         _T("                                 - it       inverse telecine\n")
; 518  : #if ENABLE_ADVANCED_DEINTERLACE
; 519  :         _T("                                 - it-manual <string>\n")
; 520  :         _T("                                     \"32\", \"2332\", \"repeat\", \"41\"\n")
; 521  : #endif
; 522  :         _T("                                 - bob      double framerate\n")
; 523  : #if ENABLE_ADVANCED_DEINTERLACE
; 524  :         _T("                                 - auto     auto deinterlace\n")
; 525  :         _T("                                 - auto-bob auto bob deinterlace\n")
; 526  : #endif
; 527  : #if ENABLE_FPS_CONVERSION
; 528  :         _T("   --vpp-fps-conv <string>      set fps conversion mode\n")
; 529  :         _T("                                enabled only when input is progressive\n")
; 530  :         _T("                                 - none, x2, x2.5\n")
; 531  : #endif
; 532  :         _T("   --vpp-image-stab <string>    set image stabilizer mode\n")
; 533  :         _T("                                 - none, upscale, box\n")
; 534  :         _T("   --vpp-rotate <int>           rotate image\n")
; 535  :         _T("                                 90, 180, 270.\n")
; 536  :         _T("   --vpp-mirror <string>        mirror image\n")
; 537  :         _T("                                 - h   mirror in horizontal direction\n")
; 538  :         _T("                                 - v   mirror in vertical   direction\n")
; 539  :         _T("   --vpp-half-turn              half turn video image\n")
; 540  :         _T("                                 unoptimized and very slow.\n")
; 541  :         _T("   --vpp-resize <string>        set scaling quality\n")
; 542  :         _T("                                 - auto(default)\n")
; 543  :         _T("                                 - simple   use simple scaling\n")
; 544  :         _T("                                 - fine     use high quality scaling\n")
; 545  : #if ENABLE_CUSTOM_VPP
; 546  :         _T("   --vpp-delogo <string>        set delogo file path\n")
; 547  :         _T("   --vpp-delogo-select <string> set target logo name or auto select file\n")
; 548  :         _T("                                 or logo index starting from 1.\n")
; 549  :         _T("   --vpp-delogo-pos <int>:<int> set delogo pos offset\n")
; 550  :         _T("   --vpp-delogo-depth <int>     set delogo depth [default:%d]\n")
; 551  :         _T("   --vpp-delogo-y  <int>        set delogo y  param\n")
; 552  :         _T("   --vpp-delogo-cb <int>        set delogo cb param\n")
; 553  :         _T("   --vpp-delogo-cr <int>        set delogo cr param\n")
; 554  :         _T("   --vpp-delogo-add             add logo mode\n"),
; 555  : #endif //#if ENABLE_CUSTOM_VPP,
; 556  :         QSV_VPP_DENOISE_MIN, QSV_VPP_DENOISE_MAX,
; 557  :         QSV_VPP_MCTF_MIN, QSV_VPP_MCTF_MAX, QSV_VPP_MCTF_AUTO,
; 558  :         QSV_VPP_DETAIL_ENHANCE_MIN, QSV_VPP_DETAIL_ENHANCE_MAX,
; 559  :         QSV_DEFAULT_VPP_DELOGO_DEPTH
; 560  :         );
; 561  :     return str;

  00aed	48 8d 54 24 78	 lea	 rdx, QWORD PTR str$[rsp]
  00af2	48 8b 8c 24 b0
	07 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00afa	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00aff	8b 84 24 f0 05
	00 00		 mov	 eax, DWORD PTR $T42[rsp]
  00b06	83 c8 01	 or	 eax, 1
  00b09	89 84 24 f0 05
	00 00		 mov	 DWORD PTR $T42[rsp], eax
  00b10	48 8d 4c 24 78	 lea	 rcx, QWORD PTR str$[rsp]
  00b15	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00b1a	48 8b 84 24 b0
	07 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 562  : }

  00b22	48 8b f8	 mov	 rdi, rax
  00b25	48 8b cc	 mov	 rcx, rsp
  00b28	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcFrameData
  00b2f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00b34	48 8b c7	 mov	 rax, rdi
  00b37	48 8b 8c 24 80
	07 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00b3f	48 33 cc	 xor	 rcx, rsp
  00b42	e8 00 00 00 00	 call	 __security_check_cookie
  00b47	48 81 c4 98 07
	00 00		 add	 rsp, 1944		; 00000798H
  00b4e	5f		 pop	 rdi
  00b4f	5e		 pop	 rsi
  00b50	c3		 ret	 0
  00b51	cc		 int	 3
?help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; help
_TEXT	ENDS
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$0@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 78	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$0
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$1@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d a8 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$1
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$2@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d d0 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$2
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$3@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	48 8d 8d f8 00
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  00089	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
?dtor$3@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$3
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$4@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$4
  00095	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009f	55		 push	 rbp
  000a0	57		 push	 rdi
  000a1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a5	48 8b ea	 mov	 rbp, rdx
  000a8	48 8d 8d 20 01
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  000af	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b8	5f		 pop	 rdi
  000b9	5d		 pop	 rbp
  000ba	c3		 ret	 0
?dtor$4@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$4
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$5@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$5
  000bb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c5	55		 push	 rbp
  000c6	57		 push	 rdi
  000c7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cb	48 8b ea	 mov	 rbp, rdx
  000ce	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
?dtor$5@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$5
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$6@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$6
  000e1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000eb	55		 push	 rbp
  000ec	57		 push	 rdi
  000ed	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f1	48 8b ea	 mov	 rbp, rdx
  000f4	48 8d 8d 70 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  000fb	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00100	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00104	5f		 pop	 rdi
  00105	5d		 pop	 rbp
  00106	c3		 ret	 0
?dtor$6@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$6
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$7@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$7
  00107	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0010c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00111	55		 push	 rbp
  00112	57		 push	 rdi
  00113	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00117	48 8b ea	 mov	 rbp, rdx
  0011a	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  00121	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00126	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0012a	5f		 pop	 rdi
  0012b	5d		 pop	 rbp
  0012c	c3		 ret	 0
?dtor$7@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$7
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$8@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$8
  0012d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00132	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00137	55		 push	 rbp
  00138	57		 push	 rdi
  00139	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0013d	48 8b ea	 mov	 rbp, rdx
  00140	48 8d 8d c0 01
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00147	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0014c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00150	5f		 pop	 rdi
  00151	5d		 pop	 rbp
  00152	c3		 ret	 0
?dtor$8@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$8
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$9@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$9
  00153	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00158	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0015d	55		 push	 rbp
  0015e	57		 push	 rdi
  0015f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00163	48 8b ea	 mov	 rbp, rdx
  00166	48 8d 8d 18 05
	00 00		 lea	 rcx, QWORD PTR $T30[rbp]
  0016d	e8 00 00 00 00	 call	 ??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >
  00172	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00176	5f		 pop	 rdi
  00177	5d		 pop	 rbp
  00178	c3		 ret	 0
?dtor$9@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$9
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$10@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$10
  00179	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0017e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00183	55		 push	 rbp
  00184	57		 push	 rdi
  00185	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00189	48 8b ea	 mov	 rbp, rdx
  0018c	48 8d 8d 40 02
	00 00		 lea	 rcx, QWORD PTR $T13[rbp]
  00193	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00198	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0019c	5f		 pop	 rdi
  0019d	5d		 pop	 rbp
  0019e	c3		 ret	 0
?dtor$10@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$10
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$11@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$11
  0019f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001a4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001a9	55		 push	 rbp
  001aa	57		 push	 rdi
  001ab	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001af	48 8b ea	 mov	 rbp, rdx
  001b2	48 8d 8d 50 05
	00 00		 lea	 rcx, QWORD PTR $T33[rbp]
  001b9	e8 00 00 00 00	 call	 ??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >
  001be	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001c2	5f		 pop	 rdi
  001c3	5d		 pop	 rbp
  001c4	c3		 ret	 0
?dtor$11@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$11
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$12@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$12
  001c5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001ca	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001cf	55		 push	 rbp
  001d0	57		 push	 rdi
  001d1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001d5	48 8b ea	 mov	 rbp, rdx
  001d8	48 8d 8d c0 02
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  001df	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001e4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001e8	5f		 pop	 rdi
  001e9	5d		 pop	 rbp
  001ea	c3		 ret	 0
?dtor$12@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$12
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$13@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$13
  001eb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001f0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001f5	55		 push	 rbp
  001f6	57		 push	 rdi
  001f7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001fb	48 8b ea	 mov	 rbp, rdx
  001fe	48 8d 8d 88 05
	00 00		 lea	 rcx, QWORD PTR $T36[rbp]
  00205	e8 00 00 00 00	 call	 ??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >
  0020a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0020e	5f		 pop	 rdi
  0020f	5d		 pop	 rbp
  00210	c3		 ret	 0
?dtor$13@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$13
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$14@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$14
  00211	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00216	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0021b	55		 push	 rbp
  0021c	57		 push	 rdi
  0021d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00221	48 8b ea	 mov	 rbp, rdx
  00224	48 8d 8d 08 03
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  0022b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00230	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00234	5f		 pop	 rdi
  00235	5d		 pop	 rbp
  00236	c3		 ret	 0
?dtor$14@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$14
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$15@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$15
  00237	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0023c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00241	55		 push	 rbp
  00242	57		 push	 rdi
  00243	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00247	48 8b ea	 mov	 rbp, rdx
  0024a	48 8d 8d 30 03
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  00251	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00256	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0025a	5f		 pop	 rdi
  0025b	5d		 pop	 rbp
  0025c	c3		 ret	 0
?dtor$15@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$15
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$16@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$16
  0025d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00262	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00267	55		 push	 rbp
  00268	57		 push	 rdi
  00269	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0026d	48 8b ea	 mov	 rbp, rdx
  00270	48 8d 8d 58 03
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  00277	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0027c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00280	5f		 pop	 rdi
  00281	5d		 pop	 rbp
  00282	c3		 ret	 0
?dtor$16@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$16
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$17@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$17
  00283	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00288	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0028d	55		 push	 rbp
  0028e	57		 push	 rdi
  0028f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00293	48 8b ea	 mov	 rbp, rdx
  00296	48 8d 8d 80 03
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  0029d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002a2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002a6	5f		 pop	 rdi
  002a7	5d		 pop	 rbp
  002a8	c3		 ret	 0
?dtor$17@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$17
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$18@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$18
  002a9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002ae	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002b3	55		 push	 rbp
  002b4	57		 push	 rdi
  002b5	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002b9	48 8b ea	 mov	 rbp, rdx
  002bc	48 8d 8d a8 03
	00 00		 lea	 rcx, QWORD PTR $T21[rbp]
  002c3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002c8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002cc	5f		 pop	 rdi
  002cd	5d		 pop	 rbp
  002ce	c3		 ret	 0
?dtor$18@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$18
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$19@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$19
  002cf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002d4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002d9	55		 push	 rbp
  002da	57		 push	 rdi
  002db	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002df	48 8b ea	 mov	 rbp, rdx
  002e2	48 8d 8d d0 03
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  002e9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002ee	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002f2	5f		 pop	 rdi
  002f3	5d		 pop	 rbp
  002f4	c3		 ret	 0
?dtor$19@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$19
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$20@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$20
  002f5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002fa	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002ff	55		 push	 rbp
  00300	57		 push	 rdi
  00301	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00305	48 8b ea	 mov	 rbp, rdx
  00308	48 8d 8d f8 03
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  0030f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00314	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00318	5f		 pop	 rdi
  00319	5d		 pop	 rbp
  0031a	c3		 ret	 0
?dtor$20@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$20
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$21@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$21
  0031b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00320	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00325	55		 push	 rbp
  00326	57		 push	 rdi
  00327	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0032b	48 8b ea	 mov	 rbp, rdx
  0032e	48 8d 8d 20 04
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  00335	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0033a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0033e	5f		 pop	 rdi
  0033f	5d		 pop	 rbp
  00340	c3		 ret	 0
?dtor$21@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$21
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$22@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$22
  00341	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00346	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0034b	55		 push	 rbp
  0034c	57		 push	 rdi
  0034d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00351	48 8b ea	 mov	 rbp, rdx
  00354	48 8d 8d 48 04
	00 00		 lea	 rcx, QWORD PTR $T25[rbp]
  0035b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00360	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00364	5f		 pop	 rdi
  00365	5d		 pop	 rbp
  00366	c3		 ret	 0
?dtor$22@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$22
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$23@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$23
  00367	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0036c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00371	55		 push	 rbp
  00372	57		 push	 rdi
  00373	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00377	48 8b ea	 mov	 rbp, rdx
  0037a	48 8d 8d 70 04
	00 00		 lea	 rcx, QWORD PTR $T26[rbp]
  00381	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00386	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0038a	5f		 pop	 rdi
  0038b	5d		 pop	 rbp
  0038c	c3		 ret	 0
?dtor$23@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$23
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$24@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$24
  0038d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00392	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00397	55		 push	 rbp
  00398	57		 push	 rdi
  00399	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0039d	48 8b ea	 mov	 rbp, rdx
  003a0	48 8d 8d 98 04
	00 00		 lea	 rcx, QWORD PTR $T27[rbp]
  003a7	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003ac	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003b0	5f		 pop	 rdi
  003b1	5d		 pop	 rbp
  003b2	c3		 ret	 0
?dtor$24@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$24
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$25@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$25
  003b3	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  003b8	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  003bd	55		 push	 rbp
  003be	57		 push	 rdi
  003bf	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  003c3	48 8b ea	 mov	 rbp, rdx
  003c6	48 8d 8d c0 04
	00 00		 lea	 rcx, QWORD PTR $T28[rbp]
  003cd	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003d2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003d6	5f		 pop	 rdi
  003d7	5d		 pop	 rbp
  003d8	c3		 ret	 0
?dtor$25@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$25
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$26@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$26
  003d9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  003de	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  003e3	55		 push	 rbp
  003e4	57		 push	 rdi
  003e5	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  003e9	48 8b ea	 mov	 rbp, rdx
  003ec	48 8d 8d e8 04
	00 00		 lea	 rcx, QWORD PTR $T29[rbp]
  003f3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003f8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003fc	5f		 pop	 rdi
  003fd	5d		 pop	 rbp
  003fe	c3		 ret	 0
?dtor$26@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$26
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$27@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$27
  003ff	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00404	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00409	55		 push	 rbp
  0040a	57		 push	 rdi
  0040b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0040f	48 8b ea	 mov	 rbp, rdx
  00412	8b 85 f0 05 00
	00		 mov	 eax, DWORD PTR $T42[rbp]
  00418	83 e0 01	 and	 eax, 1
  0041b	85 c0		 test	 eax, eax
  0041d	74 13		 je	 SHORT $LN31@dtor$27
  0041f	83 a5 f0 05 00
	00 fe		 and	 DWORD PTR $T42[rbp], -2
  00426	48 8b 8d b0 07
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0042d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN31@dtor$27:
  00432	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00436	5f		 pop	 rdi
  00437	5d		 pop	 rbp
  00438	c3		 ret	 0
?dtor$27@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$27
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$0@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 78	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$1@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d a8 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$2@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d d0 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$3@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	48 8d 8d f8 00
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  00089	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
?dtor$3@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$4@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$4
  00095	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009f	55		 push	 rbp
  000a0	57		 push	 rdi
  000a1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a5	48 8b ea	 mov	 rbp, rdx
  000a8	48 8d 8d 20 01
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  000af	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b8	5f		 pop	 rdi
  000b9	5d		 pop	 rbp
  000ba	c3		 ret	 0
?dtor$4@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$5@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$5
  000bb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c5	55		 push	 rbp
  000c6	57		 push	 rdi
  000c7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cb	48 8b ea	 mov	 rbp, rdx
  000ce	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
?dtor$5@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$6@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$6
  000e1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000eb	55		 push	 rbp
  000ec	57		 push	 rdi
  000ed	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f1	48 8b ea	 mov	 rbp, rdx
  000f4	48 8d 8d 70 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  000fb	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00100	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00104	5f		 pop	 rdi
  00105	5d		 pop	 rbp
  00106	c3		 ret	 0
?dtor$6@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$7@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$7
  00107	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0010c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00111	55		 push	 rbp
  00112	57		 push	 rdi
  00113	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00117	48 8b ea	 mov	 rbp, rdx
  0011a	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  00121	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00126	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0012a	5f		 pop	 rdi
  0012b	5d		 pop	 rbp
  0012c	c3		 ret	 0
?dtor$7@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$8@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$8
  0012d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00132	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00137	55		 push	 rbp
  00138	57		 push	 rdi
  00139	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0013d	48 8b ea	 mov	 rbp, rdx
  00140	48 8d 8d c0 01
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00147	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0014c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00150	5f		 pop	 rdi
  00151	5d		 pop	 rbp
  00152	c3		 ret	 0
?dtor$8@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$9@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$9
  00153	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00158	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0015d	55		 push	 rbp
  0015e	57		 push	 rdi
  0015f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00163	48 8b ea	 mov	 rbp, rdx
  00166	48 8d 8d 18 05
	00 00		 lea	 rcx, QWORD PTR $T30[rbp]
  0016d	e8 00 00 00 00	 call	 ??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >
  00172	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00176	5f		 pop	 rdi
  00177	5d		 pop	 rbp
  00178	c3		 ret	 0
?dtor$9@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$10@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$10
  00179	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0017e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00183	55		 push	 rbp
  00184	57		 push	 rdi
  00185	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00189	48 8b ea	 mov	 rbp, rdx
  0018c	48 8d 8d 40 02
	00 00		 lea	 rcx, QWORD PTR $T13[rbp]
  00193	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00198	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0019c	5f		 pop	 rdi
  0019d	5d		 pop	 rbp
  0019e	c3		 ret	 0
?dtor$10@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$11@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$11
  0019f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001a4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001a9	55		 push	 rbp
  001aa	57		 push	 rdi
  001ab	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001af	48 8b ea	 mov	 rbp, rdx
  001b2	48 8d 8d 50 05
	00 00		 lea	 rcx, QWORD PTR $T33[rbp]
  001b9	e8 00 00 00 00	 call	 ??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >
  001be	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001c2	5f		 pop	 rdi
  001c3	5d		 pop	 rbp
  001c4	c3		 ret	 0
?dtor$11@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$12@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$12
  001c5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001ca	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001cf	55		 push	 rbp
  001d0	57		 push	 rdi
  001d1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001d5	48 8b ea	 mov	 rbp, rdx
  001d8	48 8d 8d c0 02
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  001df	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001e4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001e8	5f		 pop	 rdi
  001e9	5d		 pop	 rbp
  001ea	c3		 ret	 0
?dtor$12@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$13@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$13
  001eb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001f0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001f5	55		 push	 rbp
  001f6	57		 push	 rdi
  001f7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001fb	48 8b ea	 mov	 rbp, rdx
  001fe	48 8d 8d 88 05
	00 00		 lea	 rcx, QWORD PTR $T36[rbp]
  00205	e8 00 00 00 00	 call	 ??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >
  0020a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0020e	5f		 pop	 rdi
  0020f	5d		 pop	 rbp
  00210	c3		 ret	 0
?dtor$13@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$14@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$14
  00211	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00216	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0021b	55		 push	 rbp
  0021c	57		 push	 rdi
  0021d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00221	48 8b ea	 mov	 rbp, rdx
  00224	48 8d 8d 08 03
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  0022b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00230	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00234	5f		 pop	 rdi
  00235	5d		 pop	 rbp
  00236	c3		 ret	 0
?dtor$14@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$15@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$15
  00237	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0023c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00241	55		 push	 rbp
  00242	57		 push	 rdi
  00243	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00247	48 8b ea	 mov	 rbp, rdx
  0024a	48 8d 8d 30 03
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  00251	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00256	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0025a	5f		 pop	 rdi
  0025b	5d		 pop	 rbp
  0025c	c3		 ret	 0
?dtor$15@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$16@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$16
  0025d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00262	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00267	55		 push	 rbp
  00268	57		 push	 rdi
  00269	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0026d	48 8b ea	 mov	 rbp, rdx
  00270	48 8d 8d 58 03
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  00277	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0027c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00280	5f		 pop	 rdi
  00281	5d		 pop	 rbp
  00282	c3		 ret	 0
?dtor$16@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$17@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$17
  00283	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00288	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0028d	55		 push	 rbp
  0028e	57		 push	 rdi
  0028f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00293	48 8b ea	 mov	 rbp, rdx
  00296	48 8d 8d 80 03
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  0029d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002a2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002a6	5f		 pop	 rdi
  002a7	5d		 pop	 rbp
  002a8	c3		 ret	 0
?dtor$17@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$18@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$18
  002a9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002ae	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002b3	55		 push	 rbp
  002b4	57		 push	 rdi
  002b5	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002b9	48 8b ea	 mov	 rbp, rdx
  002bc	48 8d 8d a8 03
	00 00		 lea	 rcx, QWORD PTR $T21[rbp]
  002c3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002c8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002cc	5f		 pop	 rdi
  002cd	5d		 pop	 rbp
  002ce	c3		 ret	 0
?dtor$18@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$19@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$19
  002cf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002d4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002d9	55		 push	 rbp
  002da	57		 push	 rdi
  002db	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002df	48 8b ea	 mov	 rbp, rdx
  002e2	48 8d 8d d0 03
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  002e9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002ee	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002f2	5f		 pop	 rdi
  002f3	5d		 pop	 rbp
  002f4	c3		 ret	 0
?dtor$19@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$19
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$20@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$20
  002f5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002fa	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002ff	55		 push	 rbp
  00300	57		 push	 rdi
  00301	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00305	48 8b ea	 mov	 rbp, rdx
  00308	48 8d 8d f8 03
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  0030f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00314	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00318	5f		 pop	 rdi
  00319	5d		 pop	 rbp
  0031a	c3		 ret	 0
?dtor$20@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$21@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$21
  0031b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00320	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00325	55		 push	 rbp
  00326	57		 push	 rdi
  00327	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0032b	48 8b ea	 mov	 rbp, rdx
  0032e	48 8d 8d 20 04
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  00335	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0033a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0033e	5f		 pop	 rdi
  0033f	5d		 pop	 rbp
  00340	c3		 ret	 0
?dtor$21@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$21
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$22@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$22
  00341	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00346	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0034b	55		 push	 rbp
  0034c	57		 push	 rdi
  0034d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00351	48 8b ea	 mov	 rbp, rdx
  00354	48 8d 8d 48 04
	00 00		 lea	 rcx, QWORD PTR $T25[rbp]
  0035b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00360	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00364	5f		 pop	 rdi
  00365	5d		 pop	 rbp
  00366	c3		 ret	 0
?dtor$22@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$23@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$23
  00367	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0036c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00371	55		 push	 rbp
  00372	57		 push	 rdi
  00373	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00377	48 8b ea	 mov	 rbp, rdx
  0037a	48 8d 8d 70 04
	00 00		 lea	 rcx, QWORD PTR $T26[rbp]
  00381	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00386	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0038a	5f		 pop	 rdi
  0038b	5d		 pop	 rbp
  0038c	c3		 ret	 0
?dtor$23@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$23
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$24@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$24
  0038d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00392	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00397	55		 push	 rbp
  00398	57		 push	 rdi
  00399	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0039d	48 8b ea	 mov	 rbp, rdx
  003a0	48 8d 8d 98 04
	00 00		 lea	 rcx, QWORD PTR $T27[rbp]
  003a7	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003ac	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003b0	5f		 pop	 rdi
  003b1	5d		 pop	 rbp
  003b2	c3		 ret	 0
?dtor$24@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$24
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$25@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$25
  003b3	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  003b8	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  003bd	55		 push	 rbp
  003be	57		 push	 rdi
  003bf	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  003c3	48 8b ea	 mov	 rbp, rdx
  003c6	48 8d 8d c0 04
	00 00		 lea	 rcx, QWORD PTR $T28[rbp]
  003cd	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003d2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003d6	5f		 pop	 rdi
  003d7	5d		 pop	 rbp
  003d8	c3		 ret	 0
?dtor$25@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$25
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$26@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$26
  003d9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  003de	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  003e3	55		 push	 rbp
  003e4	57		 push	 rdi
  003e5	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  003e9	48 8b ea	 mov	 rbp, rdx
  003ec	48 8d 8d e8 04
	00 00		 lea	 rcx, QWORD PTR $T29[rbp]
  003f3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003f8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003fc	5f		 pop	 rdi
  003fd	5d		 pop	 rbp
  003fe	c3		 ret	 0
?dtor$26@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$26
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 120
$T4 = 168
$T5 = 208
$T6 = 248
$T7 = 288
$T8 = 328
$T9 = 368
$T10 = 408
$T11 = 448
$T12 = 496
$T13 = 576
$T14 = 624
$T15 = 704
$T16 = 744
$T17 = 776
$T18 = 816
$T19 = 856
$T20 = 896
$T21 = 936
$T22 = 976
$T23 = 1016
$T24 = 1056
$T25 = 1096
$T26 = 1136
$T27 = 1176
$T28 = 1216
$T29 = 1256
$T30 = 1304
$T31 = 1336
$T32 = 1344
$T33 = 1360
$T34 = 1392
$T35 = 1400
$T36 = 1416
$T37 = 1448
$T38 = 1456
$T39 = 1472
$T40 = 1488
$T41 = 1504
$T42 = 1520
tv65 = 1528
tv449 = 1536
tv502 = 1544
tv451 = 1552
tv503 = 1560
tv453 = 1568
tv504 = 1576
tv455 = 1584
tv505 = 1592
tv457 = 1600
tv506 = 1608
tv459 = 1616
tv507 = 1624
tv461 = 1632
tv508 = 1640
tv463 = 1648
tv179 = 1656
tv177 = 1664
tv466 = 1672
tv232 = 1680
tv230 = 1688
tv469 = 1696
tv253 = 1704
tv251 = 1712
tv472 = 1720
tv509 = 1728
tv474 = 1736
tv510 = 1744
tv476 = 1752
tv511 = 1760
tv478 = 1768
tv512 = 1776
tv480 = 1784
tv513 = 1792
tv482 = 1800
tv514 = 1808
tv484 = 1816
tv515 = 1824
tv486 = 1832
tv516 = 1840
tv488 = 1848
tv517 = 1856
tv490 = 1864
tv518 = 1872
tv492 = 1880
tv519 = 1888
tv494 = 1896
tv520 = 1904
tv496 = 1912
__$ArrayPad$ = 1920
__$ReturnUdt$ = 1968
?dtor$27@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `help'::`1'::dtor$27
  003ff	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00404	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00409	55		 push	 rbp
  0040a	57		 push	 rdi
  0040b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0040f	48 8b ea	 mov	 rbp, rdx
  00412	8b 85 f0 05 00
	00		 mov	 eax, DWORD PTR $T42[rbp]
  00418	83 e0 01	 and	 eax, 1
  0041b	85 c0		 test	 eax, eax
  0041d	74 13		 je	 SHORT $LN31@dtor$27
  0041f	83 a5 f0 05 00
	00 fe		 and	 DWORD PTR $T42[rbp], -2
  00426	48 8b 8d b0 07
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0042d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN31@dtor$27:
  00432	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00436	5f		 pop	 rdi
  00437	5d		 pop	 rbp
  00438	c3		 ret	 0
?dtor$27@?0??help@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `help'::`1'::dtor$27
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\numeric
;	COMDAT ??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
$T1 = 48
$T2 = 64
_First$ = 128
_Last$ = 136
_Val$ = 144
_Reduce_op$ = 152
??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z PROC ; std::accumulate<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,int,<lambda_4d8cc05983fd0010d774c5fc658865f4> >, COMDAT

; 22   : _NODISCARD _Ty accumulate(const _InIt _First, const _InIt _Last, _Ty _Val, _Fn _Reduce_op) {

  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 1a 00 00 00	 mov	 ecx, 26
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 23   :     // return noncommutative and nonassociative reduction of _Val and all in [_First, _Last), using _Reduce_op
; 24   :     _Adl_verify_range(_First, _Last);

  00031	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  00039	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > > >

; 25   :     auto _UFirst      = _Get_unwrapped(_First);

  00046	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  0004e	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@$0A@@std@@YAPEBUListData@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,0>
  00053	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 26   :     const auto _ULast = _Get_unwrapped(_Last);

  00058	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@$0A@@std@@YAPEBUListData@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,0>
  00065	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 27   :     for (; _UFirst != _ULast; ++_UFirst) {

  0006a	eb 0e		 jmp	 SHORT $LN4@accumulate
$LN2@accumulate:
  0006c	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00071	48 83 c0 18	 add	 rax, 24
  00075	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@accumulate:
  0007a	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007f	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00084	74 36		 je	 SHORT $LN3@accumulate

; 28   : #if _HAS_CXX20
; 29   :         _Val = _Reduce_op(_STD move(_Val), *_UFirst);
; 30   : #else // ^^^ _HAS_CXX20 ^^^ // vvv !_HAS_CXX20 vvv
; 31   :         _Val = _Reduce_op(_Val, *_UFirst);

  00086	48 8d 44 24 40	 lea	 rax, QWORD PTR $T2[rsp]
  0008b	48 8b f8	 mov	 rdi, rax
  0008e	48 8b 74 24 20	 mov	 rsi, QWORD PTR _UFirst$[rsp]
  00093	b9 18 00 00 00	 mov	 ecx, 24
  00098	f3 a4		 rep movsb
  0009a	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T2[rsp]
  0009f	8b 94 24 90 00
	00 00		 mov	 edx, DWORD PTR _Val$[rsp]
  000a6	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR _Reduce_op$[rsp]
  000ae	e8 00 00 00 00	 call	 ??R<lambda_4d8cc05983fd0010d774c5fc658865f4>@@QEBAHHUListData@@@Z ; <lambda_4d8cc05983fd0010d774c5fc658865f4>::operator()
  000b3	89 84 24 90 00
	00 00		 mov	 DWORD PTR _Val$[rsp], eax

; 32   : #endif // _HAS_CXX20
; 33   :     }

  000ba	eb b0		 jmp	 SHORT $LN2@accumulate
$LN3@accumulate:

; 34   :     return _Val;

  000bc	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Val$[rsp]
  000c3	89 44 24 30	 mov	 DWORD PTR $T1[rsp], eax
  000c7	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000cf	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
  000d4	90		 npad	 1
  000d5	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  000dd	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
  000e2	8b 44 24 30	 mov	 eax, DWORD PTR $T1[rsp]

; 35   : }

  000e6	48 83 c4 68	 add	 rsp, 104		; 00000068H
  000ea	5f		 pop	 rdi
  000eb	5e		 pop	 rsi
  000ec	c3		 ret	 0
??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z ENDP ; std::accumulate<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,int,<lambda_4d8cc05983fd0010d774c5fc658865f4> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
$T1 = 48
$T2 = 64
_First$ = 128
_Last$ = 136
_Val$ = 144
_Reduce_op$ = 152
?dtor$0@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA PROC ; `std::accumulate<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,int,<lambda_4d8cc05983fd0010d774c5fc658865f4> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA ENDP ; `std::accumulate<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,int,<lambda_4d8cc05983fd0010d774c5fc658865f4> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
$T1 = 48
$T2 = 64
_First$ = 128
_Last$ = 136
_Val$ = 144
_Reduce_op$ = 152
?dtor$1@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA PROC ; `std::accumulate<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,int,<lambda_4d8cc05983fd0010d774c5fc658865f4> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA ENDP ; `std::accumulate<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,int,<lambda_4d8cc05983fd0010d774c5fc658865f4> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
$T1 = 48
$T2 = 64
_First$ = 128
_Last$ = 136
_Val$ = 144
_Reduce_op$ = 152
?dtor$0@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA PROC ; `std::accumulate<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,int,<lambda_4d8cc05983fd0010d774c5fc658865f4> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA ENDP ; `std::accumulate<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,int,<lambda_4d8cc05983fd0010d774c5fc658865f4> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
$T1 = 48
$T2 = 64
_First$ = 128
_Last$ = 136
_Val$ = 144
_Reduce_op$ = 152
?dtor$1@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA PROC ; `std::accumulate<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,int,<lambda_4d8cc05983fd0010d774c5fc658865f4> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z@4HA ENDP ; `std::accumulate<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,int,<lambda_4d8cc05983fd0010d774c5fc658865f4> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
;	COMDAT ??R<lambda_4d8cc05983fd0010d774c5fc658865f4>@@QEBAHHUListData@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
max_len$ = 72
data$ = 80
??R<lambda_4d8cc05983fd0010d774c5fc658865f4>@@QEBAHHUListData@@@Z PROC ; <lambda_4d8cc05983fd0010d774c5fc658865f4>::operator(), COMDAT

; 136  :         [](const int max_len, const ListData data) { return (std::max)(max_len, (int)_tcslen(data.name)); });

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 0c 00 00 00	 mov	 ecx, 12
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00027	48 8b 44 24 50	 mov	 rax, QWORD PTR data$[rsp]
  0002c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0002f	e8 00 00 00 00	 call	 strlen
  00034	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00038	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0003d	48 8d 4c 24 48	 lea	 rcx, QWORD PTR max_len$[rsp]
  00042	e8 00 00 00 00	 call	 ??$max@H@std@@YAAEBHAEBH0@Z ; std::max<int>
  00047	8b 00		 mov	 eax, DWORD PTR [rax]
  00049	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
??R<lambda_4d8cc05983fd0010d774c5fc658865f4>@@QEBAHHUListData@@@Z ENDP ; <lambda_4d8cc05983fd0010d774c5fc658865f4>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEBAPEBUListData@@XZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEBAPEBUListData@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Unwrapped, COMDAT

; 184  :     _NODISCARD const value_type* _Unwrapped() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 185  :         return _Unfancy(_Ptr);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy@UListData@@@std@@YAPEAUListData@@PEAU1@@Z ; std::_Unfancy<ListData>

; 186  :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEBAPEBUListData@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 48
_First$ = 80
_Last$ = 88
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 176  :     friend void _Verify_range(const _Vector_const_iterator& _First, const _Vector_const_iterator& _Last) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
$LN4@Verify_ran:

; 177  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "vector iterators in range are from different containers");

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _First$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	48 89 44 24 30	 mov	 QWORD PTR tv69[rsp], rax
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Last$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv69[rsp]
  00041	48 3b c8	 cmp	 rcx, rax
  00044	75 02		 jne	 SHORT $LN14@Verify_ran
  00046	eb 6b		 jmp	 SHORT $LN15@Verify_ran
$LN14@Verify_ran:
$LN7@Verify_ran:
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
  0004f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00054	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00060	45 33 c9	 xor	 r9d, r9d
  00063	41 b8 b1 00 00
	00		 mov	 r8d, 177		; 000000b1H
  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007b	83 f8 01	 cmp	 eax, 1
  0007e	75 03		 jne	 SHORT $LN19@Verify_ran
  00080	cc		 int	 3
  00081	33 c0		 xor	 eax, eax
$LN19@Verify_ran:
  00083	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008c	41 b9 b1 00 00
	00		 mov	 r9d, 177		; 000000b1H
  00092	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000ad	33 c0		 xor	 eax, eax
  000af	85 c0		 test	 eax, eax
  000b1	75 95		 jne	 SHORT $LN7@Verify_ran
$LN15@Verify_ran:
  000b3	33 c0		 xor	 eax, eax
  000b5	85 c0		 test	 eax, eax
  000b7	0f 85 66 ff ff
	ff		 jne	 $LN4@Verify_ran
$LN10@Verify_ran:

; 178  :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "vector iterator range transposed");

  000bd	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  000c2	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Last$[rsp]
  000c7	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000cb	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000cf	77 02		 ja	 SHORT $LN16@Verify_ran
  000d1	eb 6b		 jmp	 SHORT $LN17@Verify_ran
$LN16@Verify_ran:
$LN13@Verify_ran:
  000d3	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
  000da	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000df	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000e6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000eb	45 33 c9	 xor	 r9d, r9d
  000ee	41 b8 b2 00 00
	00		 mov	 r8d, 178		; 000000b2H
  000f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000fb	b9 02 00 00 00	 mov	 ecx, 2
  00100	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00106	83 f8 01	 cmp	 eax, 1
  00109	75 03		 jne	 SHORT $LN20@Verify_ran
  0010b	cc		 int	 3
  0010c	33 c0		 xor	 eax, eax
$LN20@Verify_ran:
  0010e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00117	41 b9 b2 00 00
	00		 mov	 r9d, 178		; 000000b2H
  0011d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00124	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  0012b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  00132	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00138	33 c0		 xor	 eax, eax
  0013a	85 c0		 test	 eax, eax
  0013c	75 95		 jne	 SHORT $LN13@Verify_ran
$LN17@Verify_ran:
  0013e	33 c0		 xor	 eax, eax
  00140	85 c0		 test	 eax, eax
  00142	0f 85 75 ff ff
	ff		 jne	 $LN10@Verify_ran

; 179  :     }

  00148	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0014c	5f		 pop	 rdi
  0014d	c3		 ret	 0
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >, COMDAT

; 36   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) : _Ptr(_Parg) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Parg$[rsp]
  0003d	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 37   :         this->_Adopt(_Pvector);

  00041	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Pvector$[rsp]
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
  00050	90		 npad	 1

; 38   :     }

  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UListData@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UListData@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UListData@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UListData@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UListData@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UListData@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<ListData> >::_Vector_val<std::_Simple_types<ListData> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<ListData> >::_Vector_val<std::_Simple_types<ListData> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEBAAEBV?$allocator@UListData@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEBAAEBV?$allocator@UListData@@@2@XZ PROC ; std::vector<ListData,std::allocator<ListData> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UListData@@@2@XZ ; std::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEBAAEBV?$allocator@UListData@@@2@XZ ENDP ; std::vector<ListData,std::allocator<ListData> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ PROC ; std::vector<ListData,std::allocator<ListData> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UListData@@@2@XZ ; std::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ ENDP ; std::vector<ListData,std::allocator<ListData> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@CAXXZ PROC ; std::vector<ListData,std::allocator<ListData> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@CAXXZ ENDP ; std::vector<ListData,std::allocator<ListData> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ PROC ; std::vector<ListData,std::allocator<ListData> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	0f 84 85 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00071	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEAUListData@@0@Z ; std::vector<ListData,std::allocator<ListData> >::_Destroy
  00086	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 99		 cdq
  0009c	b9 18 00 00 00	 mov	 ecx, 24
  000a1	48 f7 f9	 idiv	 rcx
  000a4	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::_Getal
  000b3	90		 npad	 1
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000b9	4c 8b c1	 mov	 r8, rcx
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UListData@@@std@@QEAAXQEAUListData@@_K@Z ; std::allocator<ListData>::deallocate
  000cc	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d2	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000de	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ea	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000f1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f5	5f		 pop	 rdi
  000f6	c3		 ret	 0
?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ ENDP ; std::vector<ListData,std::allocator<ListData> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<ListData,std::allocator<ListData> >::_Buy_nonzero, COMDAT

; 1605 :     void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1606 :         // allocate array with _Newcapacity elements
; 1607 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1608 :         auto& _My_data    = _Mypair._Myval2;
; 1609 :         pointer& _Myfirst = _My_data._Myfirst;
; 1610 :         pointer& _Mylast  = _My_data._Mylast;
; 1611 :         pointer& _Myend   = _My_data._Myend;
; 1612 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1613 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1614 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1615 : 
; 1616 :         if (_Newcapacity > max_size()) {

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA_KXZ ; std::vector<ListData,std::allocator<ListData> >::max_size
  0002d	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00032	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 1617 :             _Xlength();

  00034	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@CAXXZ ; std::vector<ListData,std::allocator<ListData> >::_Xlength
$LN2@Buy_nonzer:

; 1618 :         }
; 1619 : 
; 1620 :         _Buy_raw(_Newcapacity);

  00039	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z ; std::vector<ListData,std::allocator<ListData> >::_Buy_raw
$LN3@Buy_nonzer:

; 1621 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Buy_nonzero@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<ListData,std::allocator<ListData> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<ListData,std::allocator<ListData> >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@UListData@@@std@@QEAAPEAUListData@@_K@Z ; std::allocator<ListData>::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 6b 44 24 68
	18		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 24
  00093	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00098	48 03 c8	 add	 rcx, rax
  0009b	48 8b c1	 mov	 rax, rcx
  0009e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a3	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a6	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
?_Buy_raw@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<ListData,std::allocator<ListData> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEAUListData@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEAUListData@@0@Z PROC ; std::vector<ListData,std::allocator<ListData> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UListData@@@std@@@std@@YAXPEAUListData@@QEAU1@AEAV?$allocator@UListData@@@0@@Z ; std::_Destroy_range<std::allocator<ListData> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEAUListData@@0@Z ENDP ; std::vector<ListData,std::allocator<ListData> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA_KXZ PROC ; std::vector<ListData,std::allocator<ListData> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEBAAEBV?$allocator@UListData@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@UListData@@@std@@@std@@SA_KAEBV?$allocator@UListData@@@2@@Z ; std::_Default_allocator_traits<std::allocator<ListData> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<ListData,std::allocator<ListData> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ PROC ; std::vector<ListData,std::allocator<ListData> >::_Unchecked_end, COMDAT

; 1427 :     const_pointer _Unchecked_end() const noexcept { // return pointer for end of nonmutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1428 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1429 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ ENDP ; std::vector<ListData,std::allocator<ListData> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ PROC ; std::vector<ListData,std::allocator<ListData> >::_Unchecked_begin, COMDAT

; 1419 :     const_pointer _Unchecked_begin() const noexcept { // return pointer for beginning of nonmutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1420 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1421 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ ENDP ; std::vector<ListData,std::allocator<ListData> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ PROC ; std::vector<ListData,std::allocator<ListData> >::end, COMDAT

; 1375 :     _NODISCARD const_iterator end() const noexcept { // return iterator for end of nonmutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1376 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1377 :         return const_iterator(_My_data._Mylast, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@0@AEBV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<ListData> > const >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1378 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ ENDP ; std::vector<ListData,std::allocator<ListData> >::end
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<ListData,std::allocator<ListData> >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<ListData,std::allocator<ListData> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<ListData,std::allocator<ListData> >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<ListData,std::allocator<ListData> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ PROC ; std::vector<ListData,std::allocator<ListData> >::begin, COMDAT

; 1365 :     _NODISCARD const_iterator begin() const noexcept { // return iterator for beginning of nonmutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1366 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1367 :         return const_iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@UListData@@@std@@@0@AEBV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<ListData> > const >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@PEAUListData@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1368 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ ENDP ; std::vector<ListData,std::allocator<ListData> >::begin
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<ListData,std::allocator<ListData> >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<ListData,std::allocator<ListData> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<ListData,std::allocator<ListData> >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<ListData,std::allocator<ListData> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S20$ = 52
$T4 = 68
this$ = 96
??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ PROC ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXXZ ; std::vector<ListData,std::allocator<ListData> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S20$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0UListData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UListData@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><ListData>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S20$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@XZ ENDP ; std::vector<ListData,std::allocator<ListData> >::~vector<ListData,std::allocator<ListData> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S21$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z PROC ; std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >, COMDAT

; 458  :     vector(initializer_list<_Ty> _Ilist, const _Alloc& _Al = _Alloc())

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 459  :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from initializer_list, optional allocator

  0002e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00036	4c 8b 84 24 a0
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  0003e	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00043	48 8b c8	 mov	 rcx, rax
  00046	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@UListData@@@std@@$$V@?$_Compressed_pair@V?$allocator@UListData@@@std@@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@UListData@@@1@@Z ; std::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1>::_Compressed_pair<std::allocator<ListData>,std::_Vector_val<std::_Simple_types<ListData> >,1><std::allocator<ListData> const &>

; 460  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0004b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ?_Getal@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAAEAV?$allocator@UListData@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::_Getal
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S21$[rsp]
  00060	e8 00 00 00 00	 call	 ??$?0UListData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UListData@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><ListData>
  00065	48 8d 44 24 34	 lea	 rax, QWORD PTR $S21$[rsp]
  0006a	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 461  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  0006f	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00077	4c 8b c0	 mov	 r8, rax
  0007a	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  0007f	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00084	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00089	90		 npad	 1

; 462  :         _Range_construct_or_tidy(_Ilist.begin(), _Ilist.end(), random_access_iterator_tag{});

  0008a	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Ilist$[rsp]
  00092	e8 00 00 00 00	 call	 ?end@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ ; std::initializer_list<ListData>::end
  00097	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  0009c	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Ilist$[rsp]
  000a4	e8 00 00 00 00	 call	 ?begin@?$initializer_list@UListData@@@std@@QEBAPEBUListData@@XZ ; std::initializer_list<ListData>::begin
  000a9	44 0f b6 4c 24
	76		 movzx	 r9d, BYTE PTR $T6[rsp]
  000af	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  000b4	4c 8b c1	 mov	 r8, rcx
  000b7	48 8b d0	 mov	 rdx, rax
  000ba	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c2	e8 00 00 00 00	 call	 ??$_Range_construct_or_tidy@PEBUListData@@@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@AEAAXPEBUListData@@0Uforward_iterator_tag@1@@Z ; std::vector<ListData,std::allocator<ListData> >::_Range_construct_or_tidy<ListData const *>

; 463  :         _Proxy._Release();

  000c7	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000cc	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000d1	90		 npad	 1

; 464  :     }

  000d2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000d7	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000dc	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e4	48 8b f8	 mov	 rdi, rax
  000e7	48 8b cc	 mov	 rcx, rsp
  000ea	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z$rtcFrameData
  000f1	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f6	48 8b c7	 mov	 rax, rdi
  000f9	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00100	5f		 pop	 rdi
  00101	c3		 ret	 0
??0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z ENDP ; std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S21$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
?dtor$0@?0???0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z@4HA PROC ; `std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z@4HA ENDP ; `std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S21$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
?dtor$0@?0???0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z@4HA PROC ; `std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEAA@V?$initializer_list@UListData@@@1@AEBV?$allocator@UListData@@@1@@Z@4HA ENDP ; `std::vector<ListData,std::allocator<ListData> >::vector<ListData,std::allocator<ListData> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UListData@@@std@@@std@@SA_KAEBV?$allocator@UListData@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@UListData@@@std@@@std@@SA_KAEBV?$allocator@UListData@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<ListData> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 aa aa aa
	aa aa aa aa 0a	 mov	 rax, 768614336404564650	; 0aaaaaaaaaaaaaaaH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@UListData@@@std@@@std@@SA_KAEBV?$allocator@UListData@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<ListData> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@UListData@@@std@@QEAAPEAUListData@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@UListData@@@std@@QEAAPEAUListData@@_K@Z PROC ; std::allocator<ListData>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z ; std::_Get_size_of_n<24>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@UListData@@@std@@QEAAPEAUListData@@_K@Z ENDP ; std::allocator<ListData>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@UListData@@@std@@QEAAXQEAUListData@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UListData@@@std@@QEAAXQEAUListData@@_K@Z PROC ; std::allocator<ListData>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	18		 imul	 rax, QWORD PTR _Count$[rsp], 24
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@UListData@@@std@@QEAAXQEAUListData@@_K@Z ENDP ; std::allocator<ListData>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@UListData@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@UListData@@@std@@QEAA@XZ PROC		; std::allocator<ListData>::allocator<ListData>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@UListData@@@std@@QEAA@XZ ENDP		; std::allocator<ListData>::allocator<ListData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z PROC ; PrintMultipleListOptions

; 125  : static tstring PrintMultipleListOptions(const TCHAR *option_name, const TCHAR *option_desc, const vector<ListData>& listDatas) {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 30 03
	00 00		 sub	 rsp, 816		; 00000330H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 cc 00 00 00	 mov	 ecx, 204		; 000000ccH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 40
	03 00 00	 mov	 rcx, QWORD PTR [rsp+832]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 20
	03 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00045	c7 84 24 60 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T25[rsp], 0

; 126  :     tstring str;

  00050	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00055	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005a	90		 npad	 1

; 127  :     const TCHAR *indent_space = _T("                                ");

  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG176248
  00062	48 89 44 24 58	 mov	 QWORD PTR indent_space$[rsp], rax

; 128  :     const int indent_len = (int)_tcslen(indent_space);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR indent_space$[rsp]
  0006c	e8 00 00 00 00	 call	 strlen
  00071	89 44 24 60	 mov	 DWORD PTR indent_len$[rsp], eax

; 129  :     const int max_len = 79;

  00075	c7 44 24 64 4f
	00 00 00	 mov	 DWORD PTR max_len$[rsp], 79 ; 0000004fH

; 130  :     str += strsprintf(_T("   %s "), option_name);

  0007d	4c 8b 84 24 48
	03 00 00	 mov	 r8, QWORD PTR option_name$[rsp]
  00085	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176249
  0008c	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T5[rsp]
  00091	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00096	48 89 84 24 68
	02 00 00	 mov	 QWORD PTR tv65[rsp], rax
  0009e	48 8b 84 24 68
	02 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  000a6	48 89 84 24 70
	02 00 00	 mov	 QWORD PTR tv265[rsp], rax
  000ae	48 8b 94 24 70
	02 00 00	 mov	 rdx, QWORD PTR tv265[rsp]
  000b6	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  000bb	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  000c0	90		 npad	 1
  000c1	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T5[rsp]
  000c6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN2@PrintMulti:

; 131  :     while ((int)str.length() < indent_len) {

  000cb	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  000d0	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  000d5	3b 44 24 60	 cmp	 eax, DWORD PTR indent_len$[rsp]
  000d9	7d 13		 jge	 SHORT $LN3@PrintMulti

; 132  :         str += _T(" ");

  000db	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176250
  000e2	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  000e7	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 133  :     }

  000ec	eb dd		 jmp	 SHORT $LN2@PrintMulti
$LN3@PrintMulti:

; 134  :     str += strsprintf(_T("%s\n"), option_desc);

  000ee	4c 8b 84 24 50
	03 00 00	 mov	 r8, QWORD PTR option_desc$[rsp]
  000f6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176251
  000fd	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  00105	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0010a	48 89 84 24 78
	02 00 00	 mov	 QWORD PTR tv290[rsp], rax
  00112	48 8b 84 24 78
	02 00 00	 mov	 rax, QWORD PTR tv290[rsp]
  0011a	48 89 84 24 80
	02 00 00	 mov	 QWORD PTR tv267[rsp], rax
  00122	48 8b 94 24 80
	02 00 00	 mov	 rdx, QWORD PTR tv267[rsp]
  0012a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0012f	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00134	90		 npad	 1
  00135	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  0013d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 135  :     const auto data_name_max_len = indent_len + 4 + std::accumulate(listDatas.begin(), listDatas.end(), 0,

  00142	48 8d 84 24 18
	02 00 00	 lea	 rax, QWORD PTR $T20[rsp]
  0014a	48 8b f8	 mov	 rdi, rax
  0014d	33 c0		 xor	 eax, eax
  0014f	b9 01 00 00 00	 mov	 ecx, 1
  00154	f3 aa		 rep stosb
  00156	48 8d 84 24 20
	02 00 00	 lea	 rax, QWORD PTR $T21[rsp]
  0015e	48 89 84 24 38
	02 00 00	 mov	 QWORD PTR $T22[rsp], rax
  00166	48 8d 84 24 40
	02 00 00	 lea	 rax, QWORD PTR $T23[rsp]
  0016e	48 89 84 24 58
	02 00 00	 mov	 QWORD PTR $T24[rsp], rax
  00176	48 8b 94 24 38
	02 00 00	 mov	 rdx, QWORD PTR $T22[rsp]
  0017e	48 8b 8c 24 58
	03 00 00	 mov	 rcx, QWORD PTR listDatas$[rsp]
  00186	e8 00 00 00 00	 call	 ?end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::end
  0018b	48 89 84 24 88
	02 00 00	 mov	 QWORD PTR tv291[rsp], rax
  00193	48 8b 84 24 88
	02 00 00	 mov	 rax, QWORD PTR tv291[rsp]
  0019b	48 89 84 24 90
	02 00 00	 mov	 QWORD PTR tv269[rsp], rax
  001a3	48 8b 94 24 58
	02 00 00	 mov	 rdx, QWORD PTR $T24[rsp]
  001ab	48 8b 8c 24 58
	03 00 00	 mov	 rcx, QWORD PTR listDatas$[rsp]
  001b3	e8 00 00 00 00	 call	 ?begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@2@XZ ; std::vector<ListData,std::allocator<ListData> >::begin
  001b8	48 89 84 24 98
	02 00 00	 mov	 QWORD PTR tv292[rsp], rax
  001c0	48 8b 84 24 98
	02 00 00	 mov	 rax, QWORD PTR tv292[rsp]
  001c8	48 89 84 24 a0
	02 00 00	 mov	 QWORD PTR tv271[rsp], rax
  001d0	44 0f b6 8c 24
	18 02 00 00	 movzx	 r9d, BYTE PTR $T20[rsp]
  001d9	45 33 c0	 xor	 r8d, r8d
  001dc	48 8b 94 24 90
	02 00 00	 mov	 rdx, QWORD PTR tv269[rsp]
  001e4	48 8b 8c 24 a0
	02 00 00	 mov	 rcx, QWORD PTR tv271[rsp]
  001ec	e8 00 00 00 00	 call	 ??$accumulate@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@std@@YAHV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@0@0HV<lambda_4d8cc05983fd0010d774c5fc658865f4>@@@Z ; std::accumulate<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ListData> > >,int,<lambda_4d8cc05983fd0010d774c5fc658865f4> >
  001f1	8b 4c 24 60	 mov	 ecx, DWORD PTR indent_len$[rsp]
  001f5	8d 44 01 04	 lea	 eax, DWORD PTR [rcx+rax+4]
  001f9	89 84 24 b8 00
	00 00		 mov	 DWORD PTR data_name_max_len$[rsp], eax

; 136  :         [](const int max_len, const ListData data) { return (std::max)(max_len, (int)_tcslen(data.name)); });
; 137  : 
; 138  :     for (const auto& data : listDatas) {

  00200	48 8b 84 24 58
	03 00 00	 mov	 rax, QWORD PTR listDatas$[rsp]
  00208	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR <range>$L0$7[rsp], rax
  00210	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <range>$L0$7[rsp]
  00218	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ ; std::vector<ListData,std::allocator<ListData> >::_Unchecked_begin
  0021d	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR <begin>$L0$8[rsp], rax
  00225	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <range>$L0$7[rsp]
  0022d	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@UListData@@V?$allocator@UListData@@@std@@@std@@QEBAPEBUListData@@XZ ; std::vector<ListData,std::allocator<ListData> >::_Unchecked_end
  00232	48 89 84 24 d0
	00 00 00	 mov	 QWORD PTR <end>$L0$9[rsp], rax
  0023a	eb 14		 jmp	 SHORT $LN6@PrintMulti
$LN4@PrintMulti:
  0023c	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <begin>$L0$8[rsp]
  00244	48 83 c0 18	 add	 rax, 24
  00248	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR <begin>$L0$8[rsp], rax
$LN6@PrintMulti:
  00250	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <end>$L0$9[rsp]
  00258	48 39 84 24 c8
	00 00 00	 cmp	 QWORD PTR <begin>$L0$8[rsp], rax
  00260	0f 84 c1 03 00
	00		 je	 $LN5@PrintMulti
  00266	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <begin>$L0$8[rsp]
  0026e	48 89 84 24 d8
	00 00 00	 mov	 QWORD PTR data$10[rsp], rax

; 139  :         tstring line = strsprintf(_T("%s- %s: "), indent_space, data.name);

  00276	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR data$10[rsp]
  0027e	4c 8b 08	 mov	 r9, QWORD PTR [rax]
  00281	4c 8b 44 24 58	 mov	 r8, QWORD PTR indent_space$[rsp]
  00286	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176252
  0028d	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR line$11[rsp]
  00295	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0029a	90		 npad	 1
$LN7@PrintMulti:

; 140  :         while ((int)line.length() < data_name_max_len) {

  0029b	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR line$11[rsp]
  002a3	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  002a8	3b 84 24 b8 00
	00 00		 cmp	 eax, DWORD PTR data_name_max_len$[rsp]
  002af	7d 51		 jge	 SHORT $LN8@PrintMulti

; 141  :             line += strsprintf(_T(" "));

  002b1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176253
  002b8	48 8d 8c 24 18
	01 00 00	 lea	 rcx, QWORD PTR $T12[rsp]
  002c0	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  002c5	48 89 84 24 a8
	02 00 00	 mov	 QWORD PTR tv158[rsp], rax
  002cd	48 8b 84 24 a8
	02 00 00	 mov	 rax, QWORD PTR tv158[rsp]
  002d5	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR tv274[rsp], rax
  002dd	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR tv274[rsp]
  002e5	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR line$11[rsp]
  002ed	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  002f2	90		 npad	 1
  002f3	48 8d 8c 24 18
	01 00 00	 lea	 rcx, QWORD PTR $T12[rsp]
  002fb	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 142  :         }

  00300	eb 99		 jmp	 SHORT $LN7@PrintMulti
$LN8@PrintMulti:

; 143  :         for (int i = 0; data.list[i].desc; i++) {

  00302	c7 84 24 40 01
	00 00 00 00 00
	00		 mov	 DWORD PTR i$13[rsp], 0
  0030d	eb 10		 jmp	 SHORT $LN11@PrintMulti
$LN9@PrintMulti:
  0030f	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR i$13[rsp]
  00316	ff c0		 inc	 eax
  00318	89 84 24 40 01
	00 00		 mov	 DWORD PTR i$13[rsp], eax
$LN11@PrintMulti:
  0031f	48 63 84 24 40
	01 00 00	 movsxd	 rax, DWORD PTR i$13[rsp]
  00327	48 6b c0 10	 imul	 rax, rax, 16
  0032b	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR data$10[rsp]
  00333	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00337	48 83 3c 01 00	 cmp	 QWORD PTR [rcx+rax], 0
  0033c	0f 84 7e 02 00
	00		 je	 $LN10@PrintMulti

; 144  :             const int desc_len = (int)(_tcslen(data.list[i].desc) + _tcslen(_T(", ")) + ((i == data.default_index) ? _tcslen(_T("(default)")) : 0));

  00342	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR data$10[rsp]
  0034a	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0034d	39 84 24 40 01
	00 00		 cmp	 DWORD PTR i$13[rsp], eax
  00354	75 16		 jne	 SHORT $LN18@PrintMulti
  00356	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG176255
  0035d	e8 00 00 00 00	 call	 strlen
  00362	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR tv197[rsp], rax
  0036a	eb 0c		 jmp	 SHORT $LN19@PrintMulti
$LN18@PrintMulti:
  0036c	48 c7 84 24 b8
	02 00 00 00 00
	00 00		 mov	 QWORD PTR tv197[rsp], 0
$LN19@PrintMulti:
  00378	48 63 84 24 40
	01 00 00	 movsxd	 rax, DWORD PTR i$13[rsp]
  00380	48 6b c0 10	 imul	 rax, rax, 16
  00384	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR data$10[rsp]
  0038c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00390	48 8b 0c 01	 mov	 rcx, QWORD PTR [rcx+rax]
  00394	e8 00 00 00 00	 call	 strlen
  00399	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR tv183[rsp], rax
  003a1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG176254
  003a8	e8 00 00 00 00	 call	 strlen
  003ad	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR tv197[rsp]
  003b5	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR tv183[rsp]
  003bd	48 03 ca	 add	 rcx, rdx
  003c0	48 03 c1	 add	 rax, rcx
  003c3	89 84 24 44 01
	00 00		 mov	 DWORD PTR desc_len$14[rsp], eax

; 145  :             if (line.length() + desc_len >= max_len) {

  003ca	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR line$11[rsp]
  003d2	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  003d7	48 63 8c 24 44
	01 00 00	 movsxd	 rcx, DWORD PTR desc_len$14[rsp]
  003df	48 03 c1	 add	 rax, rcx
  003e2	48 83 f8 4f	 cmp	 rax, 79			; 0000004fH
  003e6	0f 82 cf 00 00
	00		 jb	 $LN14@PrintMulti

; 146  :                 str += line + _T("\n");

  003ec	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG176258
  003f3	48 8d 94 24 e8
	00 00 00	 lea	 rdx, QWORD PTR line$11[rsp]
  003fb	48 8d 8c 24 48
	01 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  00403	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00408	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR tv293[rsp], rax
  00410	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR tv293[rsp]
  00418	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR tv276[rsp], rax
  00420	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR tv276[rsp]
  00428	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0042d	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00432	90		 npad	 1
  00433	48 8d 8c 24 48
	01 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  0043b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 147  :                 line = indent_space;

  00440	48 8b 54 24 58	 mov	 rdx, QWORD PTR indent_space$[rsp]
  00445	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR line$11[rsp]
  0044d	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
$LN12@PrintMulti:

; 148  :                 while ((int)line.length() < data_name_max_len) {

  00452	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR line$11[rsp]
  0045a	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  0045f	3b 84 24 b8 00
	00 00		 cmp	 eax, DWORD PTR data_name_max_len$[rsp]
  00466	7d 51		 jge	 SHORT $LN13@PrintMulti

; 149  :                     line += strsprintf(_T(" "));

  00468	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176259
  0046f	48 8d 8c 24 70
	01 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00477	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0047c	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR tv294[rsp], rax
  00484	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR tv294[rsp]
  0048c	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR tv278[rsp], rax
  00494	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR tv278[rsp]
  0049c	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR line$11[rsp]
  004a4	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  004a9	90		 npad	 1
  004aa	48 8d 8c 24 70
	01 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  004b2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 150  :                 }

  004b7	eb 99		 jmp	 SHORT $LN12@PrintMulti
$LN13@PrintMulti:

; 151  :             } else {

  004b9	eb 59		 jmp	 SHORT $LN15@PrintMulti
$LN14@PrintMulti:

; 152  :                 if (i) {

  004bb	83 bc 24 40 01
	00 00 00	 cmp	 DWORD PTR i$13[rsp], 0
  004c3	74 4f		 je	 SHORT $LN15@PrintMulti

; 153  :                     line += strsprintf(_T(", "));

  004c5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176261
  004cc	48 8d 8c 24 98
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  004d4	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  004d9	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR tv295[rsp], rax
  004e1	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR tv295[rsp]
  004e9	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR tv280[rsp], rax
  004f1	48 8b 94 24 f0
	02 00 00	 mov	 rdx, QWORD PTR tv280[rsp]
  004f9	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR line$11[rsp]
  00501	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00506	90		 npad	 1
  00507	48 8d 8c 24 98
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  0050f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN15@PrintMulti:

; 154  :                 }
; 155  :             }
; 156  :             line += strsprintf(_T("%s%s"), data.list[i].desc, (i == data.default_index) ? _T("(default)") : _T(""));

  00514	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR data$10[rsp]
  0051c	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0051f	39 84 24 40 01
	00 00		 cmp	 DWORD PTR i$13[rsp], eax
  00526	75 11		 jne	 SHORT $LN20@PrintMulti
  00528	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG176262
  0052f	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR tv239[rsp], rax
  00537	eb 0f		 jmp	 SHORT $LN21@PrintMulti
$LN20@PrintMulti:
  00539	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG176263
  00540	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR tv239[rsp], rax
$LN21@PrintMulti:
  00548	48 63 84 24 40
	01 00 00	 movsxd	 rax, DWORD PTR i$13[rsp]
  00550	48 6b c0 10	 imul	 rax, rax, 16
  00554	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR data$10[rsp]
  0055c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00560	4c 8b 8c 24 f8
	02 00 00	 mov	 r9, QWORD PTR tv239[rsp]
  00568	4c 8b 04 01	 mov	 r8, QWORD PTR [rcx+rax]
  0056c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG176264
  00573	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  0057b	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00580	48 89 84 24 00
	03 00 00	 mov	 QWORD PTR tv296[rsp], rax
  00588	48 8b 84 24 00
	03 00 00	 mov	 rax, QWORD PTR tv296[rsp]
  00590	48 89 84 24 08
	03 00 00	 mov	 QWORD PTR tv282[rsp], rax
  00598	48 8b 94 24 08
	03 00 00	 mov	 rdx, QWORD PTR tv282[rsp]
  005a0	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR line$11[rsp]
  005a8	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  005ad	90		 npad	 1
  005ae	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  005b6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 157  :         }

  005bb	e9 4f fd ff ff	 jmp	 $LN9@PrintMulti
$LN10@PrintMulti:

; 158  :         str += line + _T("\n");

  005c0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG176265
  005c7	48 8d 94 24 e8
	00 00 00	 lea	 rdx, QWORD PTR line$11[rsp]
  005cf	48 8d 8c 24 e8
	01 00 00	 lea	 rcx, QWORD PTR $T19[rsp]
  005d7	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  005dc	48 89 84 24 10
	03 00 00	 mov	 QWORD PTR tv297[rsp], rax
  005e4	48 8b 84 24 10
	03 00 00	 mov	 rax, QWORD PTR tv297[rsp]
  005ec	48 89 84 24 18
	03 00 00	 mov	 QWORD PTR tv284[rsp], rax
  005f4	48 8b 94 24 18
	03 00 00	 mov	 rdx, QWORD PTR tv284[rsp]
  005fc	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00601	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00606	90		 npad	 1
  00607	48 8d 8c 24 e8
	01 00 00	 lea	 rcx, QWORD PTR $T19[rsp]
  0060f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00614	90		 npad	 1

; 159  :     }

  00615	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR line$11[rsp]
  0061d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00622	e9 15 fc ff ff	 jmp	 $LN4@PrintMulti
$LN5@PrintMulti:

; 160  :     return str;

  00627	48 8d 54 24 28	 lea	 rdx, QWORD PTR str$[rsp]
  0062c	48 8b 8c 24 40
	03 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00634	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00639	8b 84 24 60 02
	00 00		 mov	 eax, DWORD PTR $T25[rsp]
  00640	83 c8 01	 or	 eax, 1
  00643	89 84 24 60 02
	00 00		 mov	 DWORD PTR $T25[rsp], eax
  0064a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0064f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00654	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 161  : }

  0065c	48 8b f8	 mov	 rdi, rax
  0065f	48 8b cc	 mov	 rcx, rsp
  00662	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z$rtcFrameData
  00669	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0066e	48 8b c7	 mov	 rax, rdi
  00671	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00679	48 33 cc	 xor	 rcx, rsp
  0067c	e8 00 00 00 00	 call	 __security_check_cookie
  00681	48 81 c4 30 03
	00 00		 add	 rsp, 816		; 00000330H
  00688	5f		 pop	 rdi
  00689	c3		 ret	 0
  0068a	cc		 int	 3
?PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z ENDP ; PrintMultipleListOptions
_TEXT	ENDS
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$0@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$0
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$1@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 68	 lea	 rcx, QWORD PTR $T5[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$1
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$2@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8d 8d 90 00
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$2
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$3@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8b 8d 38 02
	00 00		 mov	 rcx, QWORD PTR $T22[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$3
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$4@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8b 8d 58 02
	00 00		 mov	 rcx, QWORD PTR $T24[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$4
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$5@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$5
  000b8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000bd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c2	55		 push	 rbp
  000c3	57		 push	 rdi
  000c4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000c8	48 8b ea	 mov	 rbp, rdx
  000cb	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR line$11[rbp]
  000d2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000db	5f		 pop	 rdi
  000dc	5d		 pop	 rbp
  000dd	c3		 ret	 0
?dtor$5@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$5
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$6@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$6
  000de	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000e8	55		 push	 rbp
  000e9	57		 push	 rdi
  000ea	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ee	48 8b ea	 mov	 rbp, rdx
  000f1	48 8d 8d 18 01
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  000f8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000fd	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00101	5f		 pop	 rdi
  00102	5d		 pop	 rbp
  00103	c3		 ret	 0
?dtor$6@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$6
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$7@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$7
  00104	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00109	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0010e	55		 push	 rbp
  0010f	57		 push	 rdi
  00110	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00114	48 8b ea	 mov	 rbp, rdx
  00117	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  0011e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00123	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00127	5f		 pop	 rdi
  00128	5d		 pop	 rbp
  00129	c3		 ret	 0
?dtor$7@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$7
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$8@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$8
  0012a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0012f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00134	55		 push	 rbp
  00135	57		 push	 rdi
  00136	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0013a	48 8b ea	 mov	 rbp, rdx
  0013d	48 8d 8d 70 01
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  00144	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00149	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0014d	5f		 pop	 rdi
  0014e	5d		 pop	 rbp
  0014f	c3		 ret	 0
?dtor$8@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$8
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$9@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$9
  00150	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00155	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0015a	55		 push	 rbp
  0015b	57		 push	 rdi
  0015c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00160	48 8b ea	 mov	 rbp, rdx
  00163	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  0016a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0016f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00173	5f		 pop	 rdi
  00174	5d		 pop	 rbp
  00175	c3		 ret	 0
?dtor$9@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$9
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$10@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$10
  00176	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0017b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00180	55		 push	 rbp
  00181	57		 push	 rdi
  00182	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00186	48 8b ea	 mov	 rbp, rdx
  00189	48 8d 8d c0 01
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  00190	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00195	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00199	5f		 pop	 rdi
  0019a	5d		 pop	 rbp
  0019b	c3		 ret	 0
?dtor$10@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$10
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$11@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$11
  0019c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001a1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001a6	55		 push	 rbp
  001a7	57		 push	 rdi
  001a8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001ac	48 8b ea	 mov	 rbp, rdx
  001af	48 8d 8d e8 01
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  001b6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001bb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001bf	5f		 pop	 rdi
  001c0	5d		 pop	 rbp
  001c1	c3		 ret	 0
?dtor$11@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$11
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$12@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$12
  001c2	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001c7	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001cc	55		 push	 rbp
  001cd	57		 push	 rdi
  001ce	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001d2	48 8b ea	 mov	 rbp, rdx
  001d5	8b 85 60 02 00
	00		 mov	 eax, DWORD PTR $T25[rbp]
  001db	83 e0 01	 and	 eax, 1
  001de	85 c0		 test	 eax, eax
  001e0	74 13		 je	 SHORT $LN35@dtor$12
  001e2	83 a5 60 02 00
	00 fe		 and	 DWORD PTR $T25[rbp], -2
  001e9	48 8b 8d 40 03
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  001f0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN35@dtor$12:
  001f5	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001f9	5f		 pop	 rdi
  001fa	5d		 pop	 rbp
  001fb	c3		 ret	 0
?dtor$12@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$0@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$1@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 68	 lea	 rcx, QWORD PTR $T5[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$2@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8d 8d 90 00
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$3@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8b 8d 38 02
	00 00		 mov	 rcx, QWORD PTR $T22[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$4@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8b 8d 58 02
	00 00		 mov	 rcx, QWORD PTR $T24[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UListData@@@std@@@std@@@std@@QEAA@XZ
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$5@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$5
  000b8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000bd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c2	55		 push	 rbp
  000c3	57		 push	 rdi
  000c4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000c8	48 8b ea	 mov	 rbp, rdx
  000cb	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR line$11[rbp]
  000d2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000db	5f		 pop	 rdi
  000dc	5d		 pop	 rbp
  000dd	c3		 ret	 0
?dtor$5@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$6@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$6
  000de	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000e8	55		 push	 rbp
  000e9	57		 push	 rdi
  000ea	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ee	48 8b ea	 mov	 rbp, rdx
  000f1	48 8d 8d 18 01
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  000f8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000fd	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00101	5f		 pop	 rdi
  00102	5d		 pop	 rbp
  00103	c3		 ret	 0
?dtor$6@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$7@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$7
  00104	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00109	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0010e	55		 push	 rbp
  0010f	57		 push	 rdi
  00110	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00114	48 8b ea	 mov	 rbp, rdx
  00117	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  0011e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00123	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00127	5f		 pop	 rdi
  00128	5d		 pop	 rbp
  00129	c3		 ret	 0
?dtor$7@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$8@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$8
  0012a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0012f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00134	55		 push	 rbp
  00135	57		 push	 rdi
  00136	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0013a	48 8b ea	 mov	 rbp, rdx
  0013d	48 8d 8d 70 01
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  00144	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00149	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0014d	5f		 pop	 rdi
  0014e	5d		 pop	 rbp
  0014f	c3		 ret	 0
?dtor$8@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$9@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$9
  00150	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00155	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0015a	55		 push	 rbp
  0015b	57		 push	 rdi
  0015c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00160	48 8b ea	 mov	 rbp, rdx
  00163	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  0016a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0016f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00173	5f		 pop	 rdi
  00174	5d		 pop	 rbp
  00175	c3		 ret	 0
?dtor$9@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$10@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$10
  00176	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0017b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00180	55		 push	 rbp
  00181	57		 push	 rdi
  00182	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00186	48 8b ea	 mov	 rbp, rdx
  00189	48 8d 8d c0 01
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  00190	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00195	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00199	5f		 pop	 rdi
  0019a	5d		 pop	 rbp
  0019b	c3		 ret	 0
?dtor$10@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$11@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$11
  0019c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001a1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001a6	55		 push	 rbp
  001a7	57		 push	 rdi
  001a8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001ac	48 8b ea	 mov	 rbp, rdx
  001af	48 8d 8d e8 01
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  001b6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001bb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001bf	5f		 pop	 rdi
  001c0	5d		 pop	 rbp
  001c1	c3		 ret	 0
?dtor$11@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
indent_space$ = 88
indent_len$ = 96
max_len$ = 100
$T5 = 104
$T6 = 144
data_name_max_len$ = 184
<range>$L0$7 = 192
<begin>$L0$8 = 200
<end>$L0$9 = 208
data$10 = 216
line$11 = 232
$T12 = 280
i$13 = 320
desc_len$14 = 324
$T15 = 328
$T16 = 368
$T17 = 408
$T18 = 448
$T19 = 488
$T20 = 536
$T21 = 544
$T22 = 568
$T23 = 576
$T24 = 600
$T25 = 608
tv65 = 616
tv265 = 624
tv290 = 632
tv267 = 640
tv291 = 648
tv269 = 656
tv292 = 664
tv271 = 672
tv158 = 680
tv274 = 688
tv197 = 696
tv183 = 704
tv293 = 712
tv276 = 720
tv294 = 728
tv278 = 736
tv295 = 744
tv280 = 752
tv239 = 760
tv296 = 768
tv282 = 776
tv297 = 784
tv284 = 792
__$ArrayPad$ = 800
__$ReturnUdt$ = 832
option_name$ = 840
option_desc$ = 848
listDatas$ = 856
?dtor$12@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA PROC ; `PrintMultipleListOptions'::`1'::dtor$12
  001c2	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001c7	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001cc	55		 push	 rbp
  001cd	57		 push	 rdi
  001ce	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001d2	48 8b ea	 mov	 rbp, rdx
  001d5	8b 85 60 02 00
	00		 mov	 eax, DWORD PTR $T25[rbp]
  001db	83 e0 01	 and	 eax, 1
  001de	85 c0		 test	 eax, eax
  001e0	74 13		 je	 SHORT $LN35@dtor$12
  001e2	83 a5 60 02 00
	00 fe		 and	 DWORD PTR $T25[rbp], -2
  001e9	48 8b 8d 40 03
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  001f0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN35@dtor$12:
  001f5	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001f9	5f		 pop	 rdi
  001fa	5d		 pop	 rbp
  001fb	c3		 ret	 0
?dtor$12@?0??PrintMultipleListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD0AEBV?$vector@UListData@@V?$allocator@UListData@@@std@@@2@@Z@4HA ENDP ; `PrintMultipleListOptions'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z PROC ; PrintListOptions

; 68   : static tstring PrintListOptions(const TCHAR *option_name, const CX_DESC *list, int default_index) {

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 80 01
	00 00		 sub	 rsp, 384		; 00000180H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 60 00 00 00	 mov	 ecx, 96			; 00000060H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR [rsp+400]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 70
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00045	c7 84 24 18 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T9[rsp], 0

; 69   :     const TCHAR *indent_space = _T("                                ");

  00050	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG174715
  00057	48 89 44 24 20	 mov	 QWORD PTR indent_space$[rsp], rax

; 70   :     const int indent_len = (int)_tcslen(indent_space);

  0005c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR indent_space$[rsp]
  00061	e8 00 00 00 00	 call	 strlen
  00066	89 44 24 28	 mov	 DWORD PTR indent_len$[rsp], eax

; 71   :     const int max_len = 77;

  0006a	c7 44 24 2c 4d
	00 00 00	 mov	 DWORD PTR max_len$[rsp], 77 ; 0000004dH

; 72   :     tstring str = strsprintf(_T("   %s "), option_name);

  00072	4c 8b 84 24 98
	01 00 00	 mov	 r8, QWORD PTR option_name$[rsp]
  0007a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG174716
  00081	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00086	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0008b	90		 npad	 1
$LN2@PrintListO:

; 73   :     while ((int)str.length() < indent_len)

  0008c	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00091	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  00096	3b 44 24 28	 cmp	 eax, DWORD PTR indent_len$[rsp]
  0009a	7d 13		 jge	 SHORT $LN3@PrintListO

; 74   :         str += _T(" ");

  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG174717
  000a3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  000a8	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  000ad	eb dd		 jmp	 SHORT $LN2@PrintListO
$LN3@PrintListO:

; 75   :     int line_len = (int)str.length();

  000af	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  000b4	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  000b9	89 44 24 64	 mov	 DWORD PTR line_len$[rsp], eax

; 76   :     for (int i = 0; list[i].desc; i++) {

  000bd	c7 44 24 68 00
	00 00 00	 mov	 DWORD PTR i$4[rsp], 0
  000c5	eb 0a		 jmp	 SHORT $LN6@PrintListO
$LN4@PrintListO:
  000c7	8b 44 24 68	 mov	 eax, DWORD PTR i$4[rsp]
  000cb	ff c0		 inc	 eax
  000cd	89 44 24 68	 mov	 DWORD PTR i$4[rsp], eax
$LN6@PrintListO:
  000d1	48 63 44 24 68	 movsxd	 rax, DWORD PTR i$4[rsp]
  000d6	48 6b c0 10	 imul	 rax, rax, 16
  000da	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR list$[rsp]
  000e2	48 83 3c 01 00	 cmp	 QWORD PTR [rcx+rax], 0
  000e7	0f 84 9c 01 00
	00		 je	 $LN5@PrintListO

; 77   :         if (line_len + _tcslen(list[i].desc) + _tcslen(_T(", ")) >= max_len) {

  000ed	48 63 44 24 64	 movsxd	 rax, DWORD PTR line_len$[rsp]
  000f2	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR tv87[rsp], rax
  000fa	48 63 4c 24 68	 movsxd	 rcx, DWORD PTR i$4[rsp]
  000ff	48 6b c9 10	 imul	 rcx, rcx, 16
  00103	48 8b 94 24 a0
	01 00 00	 mov	 rdx, QWORD PTR list$[rsp]
  0010b	48 8b 0c 0a	 mov	 rcx, QWORD PTR [rdx+rcx]
  0010f	e8 00 00 00 00	 call	 strlen
  00114	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR tv87[rsp]
  0011c	48 03 c8	 add	 rcx, rax
  0011f	48 8b c1	 mov	 rax, rcx
  00122	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR tv94[rsp], rax
  0012a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG174720
  00131	e8 00 00 00 00	 call	 strlen
  00136	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR tv94[rsp]
  0013e	48 03 c8	 add	 rcx, rax
  00141	48 8b c1	 mov	 rax, rcx
  00144	48 83 f8 4d	 cmp	 rax, 77			; 0000004dH
  00148	72 55		 jb	 SHORT $LN7@PrintListO

; 78   :             str += strsprintf(_T("\n%s"), indent_space);

  0014a	4c 8b 44 24 20	 mov	 r8, QWORD PTR indent_space$[rsp]
  0014f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG174721
  00156	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T5[rsp]
  0015b	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00160	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR tv67[rsp], rax
  00168	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR tv67[rsp]
  00170	48 89 84 24 38
	01 00 00	 mov	 QWORD PTR tv187[rsp], rax
  00178	48 8b 94 24 38
	01 00 00	 mov	 rdx, QWORD PTR tv187[rsp]
  00180	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00185	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  0018a	90		 npad	 1
  0018b	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T5[rsp]
  00190	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 79   :             line_len = indent_len;

  00195	8b 44 24 28	 mov	 eax, DWORD PTR indent_len$[rsp]
  00199	89 44 24 64	 mov	 DWORD PTR line_len$[rsp], eax

; 80   :         } else {

  0019d	eb 5e		 jmp	 SHORT $LN8@PrintListO
$LN7@PrintListO:

; 81   :             if (i) {

  0019f	83 7c 24 68 00	 cmp	 DWORD PTR i$4[rsp], 0
  001a4	74 57		 je	 SHORT $LN8@PrintListO

; 82   :                 str += strsprintf(_T(", "));

  001a6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG174723
  001ad	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  001b5	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  001ba	48 89 84 24 40
	01 00 00	 mov	 QWORD PTR tv199[rsp], rax
  001c2	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR tv199[rsp]
  001ca	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR tv189[rsp], rax
  001d2	48 8b 94 24 48
	01 00 00	 mov	 rdx, QWORD PTR tv189[rsp]
  001da	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  001df	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  001e4	90		 npad	 1
  001e5	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  001ed	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 83   :                 line_len += 2;

  001f2	8b 44 24 64	 mov	 eax, DWORD PTR line_len$[rsp]
  001f6	83 c0 02	 add	 eax, 2
  001f9	89 44 24 64	 mov	 DWORD PTR line_len$[rsp], eax
$LN8@PrintListO:

; 84   :             }
; 85   :         }
; 86   :         str += strsprintf(_T("%s"), list[i].desc);

  001fd	48 63 44 24 68	 movsxd	 rax, DWORD PTR i$4[rsp]
  00202	48 6b c0 10	 imul	 rax, rax, 16
  00206	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR list$[rsp]
  0020e	4c 8b 04 01	 mov	 r8, QWORD PTR [rcx+rax]
  00212	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG174724
  00219	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  00221	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00226	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR tv200[rsp], rax
  0022e	48 8b 84 24 50
	01 00 00	 mov	 rax, QWORD PTR tv200[rsp]
  00236	48 89 84 24 58
	01 00 00	 mov	 QWORD PTR tv191[rsp], rax
  0023e	48 8b 94 24 58
	01 00 00	 mov	 rdx, QWORD PTR tv191[rsp]
  00246	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  0024b	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00250	90		 npad	 1
  00251	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  00259	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 87   :         line_len += (int)_tcslen(list[i].desc);

  0025e	48 63 44 24 68	 movsxd	 rax, DWORD PTR i$4[rsp]
  00263	48 6b c0 10	 imul	 rax, rax, 16
  00267	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR list$[rsp]
  0026f	48 8b 0c 01	 mov	 rcx, QWORD PTR [rcx+rax]
  00273	e8 00 00 00 00	 call	 strlen
  00278	8b 4c 24 64	 mov	 ecx, DWORD PTR line_len$[rsp]
  0027c	03 c8		 add	 ecx, eax
  0027e	8b c1		 mov	 eax, ecx
  00280	89 44 24 64	 mov	 DWORD PTR line_len$[rsp], eax

; 88   :     }

  00284	e9 3e fe ff ff	 jmp	 $LN4@PrintListO
$LN5@PrintListO:

; 89   :     str += strsprintf(_T("\n%s default: %s\n"), indent_space, list[default_index].desc);

  00289	48 63 84 24 a8
	01 00 00	 movsxd	 rax, DWORD PTR default_index$[rsp]
  00291	48 6b c0 10	 imul	 rax, rax, 16
  00295	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR list$[rsp]
  0029d	4c 8b 0c 01	 mov	 r9, QWORD PTR [rcx+rax]
  002a1	4c 8b 44 24 20	 mov	 r8, QWORD PTR indent_space$[rsp]
  002a6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG174725
  002ad	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  002b5	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  002ba	48 89 84 24 60
	01 00 00	 mov	 QWORD PTR tv201[rsp], rax
  002c2	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR tv201[rsp]
  002ca	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR tv193[rsp], rax
  002d2	48 8b 94 24 68
	01 00 00	 mov	 rdx, QWORD PTR tv193[rsp]
  002da	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  002df	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  002e4	90		 npad	 1
  002e5	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  002ed	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 90   :     return str;

  002f2	48 8d 54 24 38	 lea	 rdx, QWORD PTR str$[rsp]
  002f7	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  002ff	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00304	8b 84 24 18 01
	00 00		 mov	 eax, DWORD PTR $T9[rsp]
  0030b	83 c8 01	 or	 eax, 1
  0030e	89 84 24 18 01
	00 00		 mov	 DWORD PTR $T9[rsp], eax
  00315	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  0031a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0031f	48 8b 84 24 90
	01 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 91   : }

  00327	48 8b f8	 mov	 rdi, rax
  0032a	48 8b cc	 mov	 rcx, rsp
  0032d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z$rtcFrameData
  00334	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00339	48 8b c7	 mov	 rax, rdi
  0033c	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00344	48 33 cc	 xor	 rcx, rsp
  00347	e8 00 00 00 00	 call	 __security_check_cookie
  0034c	48 81 c4 80 01
	00 00		 add	 rsp, 384		; 00000180H
  00353	5f		 pop	 rdi
  00354	c3		 ret	 0
  00355	cc		 int	 3
?PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z ENDP ; PrintListOptions
_TEXT	ENDS
text$x	SEGMENT
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?dtor$0@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA PROC ; `PrintListOptions'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA ENDP ; `PrintListOptions'::`1'::dtor$0
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?dtor$1@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA PROC ; `PrintListOptions'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 70	 lea	 rcx, QWORD PTR $T5[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA ENDP ; `PrintListOptions'::`1'::dtor$1
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?dtor$2@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA PROC ; `PrintListOptions'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA ENDP ; `PrintListOptions'::`1'::dtor$2
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?dtor$3@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA PROC ; `PrintListOptions'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8d 8d c0 00
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA ENDP ; `PrintListOptions'::`1'::dtor$3
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?dtor$4@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA PROC ; `PrintListOptions'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA ENDP ; `PrintListOptions'::`1'::dtor$4
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?dtor$5@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA PROC ; `PrintListOptions'::`1'::dtor$5
  000b8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000bd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c2	55		 push	 rbp
  000c3	57		 push	 rdi
  000c4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000c8	48 8b ea	 mov	 rbp, rdx
  000cb	8b 85 18 01 00
	00		 mov	 eax, DWORD PTR $T9[rbp]
  000d1	83 e0 01	 and	 eax, 1
  000d4	85 c0		 test	 eax, eax
  000d6	74 13		 je	 SHORT $LN17@dtor$5
  000d8	83 a5 18 01 00
	00 fe		 and	 DWORD PTR $T9[rbp], -2
  000df	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000e6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN17@dtor$5:
  000eb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ef	5f		 pop	 rdi
  000f0	5d		 pop	 rbp
  000f1	c3		 ret	 0
?dtor$5@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA ENDP ; `PrintListOptions'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?dtor$0@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA PROC ; `PrintListOptions'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA ENDP ; `PrintListOptions'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?dtor$1@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA PROC ; `PrintListOptions'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 70	 lea	 rcx, QWORD PTR $T5[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA ENDP ; `PrintListOptions'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?dtor$2@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA PROC ; `PrintListOptions'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA ENDP ; `PrintListOptions'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?dtor$3@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA PROC ; `PrintListOptions'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8d 8d c0 00
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA ENDP ; `PrintListOptions'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?dtor$4@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA PROC ; `PrintListOptions'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA ENDP ; `PrintListOptions'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
indent_space$ = 32
indent_len$ = 40
max_len$ = 44
str$ = 56
line_len$ = 100
i$4 = 104
$T5 = 112
$T6 = 152
$T7 = 192
$T8 = 232
$T9 = 280
tv87 = 288
tv94 = 296
tv67 = 304
tv187 = 312
tv199 = 320
tv189 = 328
tv200 = 336
tv191 = 344
tv201 = 352
tv193 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 400
option_name$ = 408
list$ = 416
default_index$ = 424
?dtor$5@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA PROC ; `PrintListOptions'::`1'::dtor$5
  000b8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000bd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c2	55		 push	 rbp
  000c3	57		 push	 rdi
  000c4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000c8	48 8b ea	 mov	 rbp, rdx
  000cb	8b 85 18 01 00
	00		 mov	 eax, DWORD PTR $T9[rbp]
  000d1	83 e0 01	 and	 eax, 1
  000d4	85 c0		 test	 eax, eax
  000d6	74 13		 je	 SHORT $LN17@dtor$5
  000d8	83 a5 18 01 00
	00 fe		 and	 DWORD PTR $T9[rbp], -2
  000df	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000e6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN17@dtor$5:
  000eb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ef	5f		 pop	 rdi
  000f0	5d		 pop	 rbp
  000f1	c3		 ret	 0
?dtor$5@?0??PrintListOptions@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDPEBUCX_DESC@@H@Z@4HA ENDP ; `PrintListOptions'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
_TEXT	SEGMENT
$T1 = 32
tv77 = 80
tv76 = 88
tv70 = 96
__$ArrayPad$ = 104
?show_version@@YAXXZ PROC				; show_version

; 64   : static void show_version() {

  00000	40 57		 push	 rdi
  00002	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 1c 00 00 00	 mov	 ecx, 28
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001c	48 33 c4	 xor	 rax, rsp
  0001f	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 65   :     _ftprintf(stdout, _T("%s"), GetQSVEncVersion().c_str());

  00024	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00029	e8 00 00 00 00	 call	 ?GetQSVEncVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; GetQSVEncVersion
  0002e	48 89 44 24 50	 mov	 QWORD PTR tv77[rsp], rax
  00033	48 8b 44 24 50	 mov	 rax, QWORD PTR tv77[rsp]
  00038	48 89 44 24 58	 mov	 QWORD PTR tv76[rsp], rax
  0003d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv76[rsp]
  00042	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00047	48 89 44 24 60	 mov	 QWORD PTR tv70[rsp], rax
  0004c	b9 01 00 00 00	 mov	 ecx, 1
  00051	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv70[rsp]
  0005c	4c 8b c1	 mov	 r8, rcx
  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG174688
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 fprintf
  0006e	90		 npad	 1
  0006f	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 66   : }

  00079	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0007e	48 33 cc	 xor	 rcx, rsp
  00081	e8 00 00 00 00	 call	 __security_check_cookie
  00086	48 83 c4 70	 add	 rsp, 112		; 00000070H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
?show_version@@YAXXZ ENDP				; show_version
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
tv77 = 80
tv76 = 88
tv70 = 96
__$ArrayPad$ = 104
?dtor$0@?0??show_version@@YAXXZ@4HA PROC		; `show_version'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??show_version@@YAXXZ@4HA ENDP		; `show_version'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
tv77 = 80
tv76 = 88
tv70 = 96
__$ArrayPad$ = 104
?dtor$0@?0??show_version@@YAXXZ@4HA PROC		; `show_version'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??show_version@@YAXXZ@4HA ENDP		; `show_version'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Fversion@dtl@@YAXXZ
text$yd	SEGMENT
??__Fversion@dtl@@YAXXZ PROC				; dtl::`dynamic atexit destructor for 'version'', COMDAT
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?version@dtl@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
  0001c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
??__Fversion@dtl@@YAXXZ ENDP				; dtl::`dynamic atexit destructor for 'version''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\dtl\dtl\variables.hpp
;	COMDAT ??__Eversion@dtl@@YAXXZ
text$di	SEGMENT
??__Eversion@dtl@@YAXXZ PROC				; dtl::`dynamic initializer for 'version'', COMDAT

; 66   :     const string version = "1.19";

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG173321
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?version@dtl@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
  00023	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__Fversion@dtl@@YAXXZ ; dtl::`dynamic atexit destructor for 'version''
  0002f	e8 00 00 00 00	 call	 atexit
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__Eversion@dtl@@YAXXZ ENDP				; dtl::`dynamic initializer for 'version''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1ParseCmdError@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1ParseCmdError@@QEAA@XZ PROC				; ParseCmdError::~ParseCmdError, COMDAT
$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 78	 add	 rax, 120		; 00000078H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002f	90		 npad	 1
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 83 c0 50	 add	 rax, 80			; 00000050H
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00041	90		 npad	 1
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c0 28	 add	 rax, 40			; 00000028H
  0004b	48 8b c8	 mov	 rcx, rax
  0004e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00053	90		 npad	 1
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 8b c8	 mov	 rcx, rax
  0005c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00061	90		 npad	 1
  00062	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
??1ParseCmdError@@QEAA@XZ ENDP				; ParseCmdError::~ParseCmdError
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::~ParseCmdError'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::~ParseCmdError'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::~ParseCmdError'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???1ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::~ParseCmdError'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::~ParseCmdError'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 50	 add	 rcx, 80			; 00000050H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???1ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::~ParseCmdError'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::~ParseCmdError'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 78	 add	 rcx, 120		; 00000078H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$3@?0???1ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::~ParseCmdError'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::~ParseCmdError'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::~ParseCmdError'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::~ParseCmdError'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???1ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::~ParseCmdError'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::~ParseCmdError'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 50	 add	 rcx, 80			; 00000050H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???1ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::~ParseCmdError'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::~ParseCmdError'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 78	 add	 rcx, 120		; 00000078H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$3@?0???1ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::~ParseCmdError'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0ParseCmdError@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0ParseCmdError@@QEAA@XZ PROC				; ParseCmdError::ParseCmdError, COMDAT
$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002b	90		 npad	 1
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 83 c0 28	 add	 rax, 40			; 00000028H
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003d	90		 npad	 1
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c0 50	 add	 rax, 80			; 00000050H
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004f	90		 npad	 1
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c0 78	 add	 rax, 120		; 00000078H
  00059	48 8b c8	 mov	 rcx, rax
  0005c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00061	90		 npad	 1
  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0ParseCmdError@@QEAA@XZ ENDP				; ParseCmdError::ParseCmdError
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::ParseCmdError'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::ParseCmdError'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::ParseCmdError'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::ParseCmdError'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???0ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::ParseCmdError'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 50	 add	 rcx, 80			; 00000050H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???0ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::ParseCmdError'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$3@?0???0ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::ParseCmdError'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 78	 add	 rcx, 120		; 00000078H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$3@?0???0ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::ParseCmdError'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::ParseCmdError'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::ParseCmdError'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::ParseCmdError'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::ParseCmdError'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???0ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::ParseCmdError'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 50	 add	 rcx, 80			; 00000050H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???0ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::ParseCmdError'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$3@?0???0ParseCmdError@@QEAA@XZ@4HA PROC		; `ParseCmdError::ParseCmdError'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 78	 add	 rcx, 120		; 00000078H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$3@?0???0ParseCmdError@@QEAA@XZ@4HA ENDP		; `ParseCmdError::ParseCmdError'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEBAAEBV?$allocator@I@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEBAAEBV?$allocator@I@2@XZ PROC ; std::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEBAAEBV?$allocator@I@2@XZ ENDP ; std::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAAAEAV?$allocator@I@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAAAEAV?$allocator@I@2@XZ PROC ; std::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAAAEAV?$allocator@I@2@XZ ENDP ; std::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@I@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@I@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<unsigned int> >::_Vector_val<std::_Simple_types<unsigned int> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@I@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<unsigned int> >::_Vector_val<std::_Simple_types<unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEBAAEBV?$allocator@I@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEBAAEBV?$allocator@I@2@XZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEBAAEBV?$allocator@I@2@XZ ; std::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEBAAEBV?$allocator@I@2@XZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@I@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QEAAAEAV?$allocator@I@2@XZ ; std::_Compressed_pair<std::allocator<unsigned int>,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 02	 sar	 rax, 2
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@I@std@@QEAAXQEAI_K@Z ; std::allocator<unsigned int>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Buy_nonzero, COMDAT

; 1605 :     void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1606 :         // allocate array with _Newcapacity elements
; 1607 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1608 :         auto& _My_data    = _Mypair._Myval2;
; 1609 :         pointer& _Myfirst = _My_data._Myfirst;
; 1610 :         pointer& _Mylast  = _My_data._Mylast;
; 1611 :         pointer& _Myend   = _My_data._Myend;
; 1612 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1613 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1614 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1615 : 
; 1616 :         if (_Newcapacity > max_size()) {

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::max_size
  0002d	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00032	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 1617 :             _Xlength();

  00034	e8 00 00 00 00	 call	 ?_Xlength@?$vector@IV?$allocator@I@std@@@std@@CAXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlength
$LN2@Buy_nonzer:

; 1618 :         }
; 1619 : 
; 1620 :         _Buy_raw(_Newcapacity);

  00039	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Buy_raw
$LN3@Buy_nonzer:

; 1621 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Buy_nonzero@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@I@std@@QEAAPEAI_K@Z ; std::allocator<unsigned int>::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 8b 44 24 40	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00092	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newcapacity$[rsp]
  00097	48 8d 04 88	 lea	 rax, QWORD PTR [rax+rcx*4]
  0009b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a0	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000a7	5f		 pop	 rdi
  000a8	c3		 ret	 0
?_Buy_raw@?$vector@IV?$allocator@I@std@@@std@@AEAAX_K@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI0@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPEAIQEAIAEAV?$allocator@I@0@@Z ; std::_Destroy_range<std::allocator<unsigned int> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@IV?$allocator@I@std@@@std@@AEAAXPEAI0@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEBAAEBV?$allocator@I@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SA_KAEBV?$allocator@I@2@@Z ; std::_Default_allocator_traits<std::allocator<unsigned int> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@IV?$allocator@I@std@@@std@@QEBA_KXZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S26$ = 52
$T4 = 68
this$ = 96
??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@IV?$allocator@I@std@@@std@@AEAAXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@IV?$allocator@I@std@@@std@@AEAAAEAV?$allocator@I@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S26$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0I@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@I@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned int>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S26$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@IV?$allocator@I@std@@@std@@QEAA@XZ ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SA_KAEBV?$allocator@I@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SA_KAEBV?$allocator@I@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<unsigned int> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 3f	 mov	 rax, 4611686018427387903 ; 3fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@I@std@@@std@@SA_KAEBV?$allocator@I@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<unsigned int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@I@std@@QEAAPEAI_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@I@std@@QEAAPEAI_K@Z PROC		; std::allocator<unsigned int>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$03@std@@YA_K_K@Z ; std::_Get_size_of_n<4>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@I@std@@QEAAPEAI_K@Z ENDP		; std::allocator<unsigned int>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@I@std@@QEAAXQEAI_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@I@std@@QEAAXQEAI_K@Z PROC	; std::allocator<unsigned int>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 02	 shl	 rax, 2
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@I@std@@QEAAXQEAI_K@Z ENDP	; std::allocator<unsigned int>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@I@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@I@std@@QEAA@XZ PROC			; std::allocator<unsigned int>::allocator<unsigned int>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@I@std@@QEAA@XZ ENDP			; std::allocator<unsigned int>::allocator<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$max@H@std@@YAAEBHAEBH0@Z
_TEXT	SEGMENT
_Left$ = 64
_Right$ = 72
??$max@H@std@@YAAEBHAEBH0@Z PROC			; std::max<int>, COMDAT

; 4454 :     const _Ty& _Left, const _Ty& _Right) _NOEXCEPT_COND(noexcept(_Left < _Right)) { // strengthened

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4455 :     // return larger of _Left and _Right
; 4456 :     if (_Left < _Right) {

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0002f	39 08		 cmp	 DWORD PTR [rax], ecx
  00031	0f 8d 90 00 00
	00		 jge	 $LN8@max
$LN4@max:

; 4457 :         _STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00037	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  00041	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00043	39 08		 cmp	 DWORD PTR [rax], ecx
  00045	7c 02		 jl	 SHORT $LN7@max
  00047	eb 6d		 jmp	 SHORT $LN10@max
$LN7@max:
  00049	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00050	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00055	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00061	45 33 c9	 xor	 r9d, r9d
  00064	41 b8 69 11 00
	00		 mov	 r8d, 4457		; 00001169H
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00071	b9 02 00 00 00	 mov	 ecx, 2
  00076	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007c	90		 npad	 1
  0007d	83 f8 01	 cmp	 eax, 1
  00080	75 03		 jne	 SHORT $LN12@max
  00082	cc		 int	 3
  00083	33 c0		 xor	 eax, eax
$LN12@max:
  00085	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008e	41 b9 69 11 00
	00		 mov	 r9d, 4457		; 00001169H
  00094	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  000a2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000a9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000af	90		 npad	 1
  000b0	33 c0		 xor	 eax, eax
  000b2	85 c0		 test	 eax, eax
  000b4	75 93		 jne	 SHORT $LN7@max
$LN10@max:
  000b6	33 c0		 xor	 eax, eax
  000b8	85 c0		 test	 eax, eax
  000ba	0f 85 77 ff ff
	ff		 jne	 $LN4@max

; 4458 :         return _Right;

  000c0	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  000c5	eb 05		 jmp	 SHORT $LN1@max
$LN8@max:

; 4459 :     }
; 4460 : 
; 4461 :     return _Left;

  000c7	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
$LN1@max:

; 4462 : }

  000cc	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d0	5f		 pop	 rdi
  000d1	c3		 ret	 0
??$max@H@std@@YAAEBHAEBH0@Z ENDP			; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$max@I@std@@YAAEBIAEBI0@Z
_TEXT	SEGMENT
_Left$ = 64
_Right$ = 72
??$max@I@std@@YAAEBIAEBI0@Z PROC			; std::max<unsigned int>, COMDAT

; 4454 :     const _Ty& _Left, const _Ty& _Right) _NOEXCEPT_COND(noexcept(_Left < _Right)) { // strengthened

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4455 :     // return larger of _Left and _Right
; 4456 :     if (_Left < _Right) {

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0002f	39 08		 cmp	 DWORD PTR [rax], ecx
  00031	0f 83 90 00 00
	00		 jae	 $LN8@max
$LN4@max:

; 4457 :         _STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00037	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  00041	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00043	39 08		 cmp	 DWORD PTR [rax], ecx
  00045	72 02		 jb	 SHORT $LN7@max
  00047	eb 6d		 jmp	 SHORT $LN10@max
$LN7@max:
  00049	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00050	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00055	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00061	45 33 c9	 xor	 r9d, r9d
  00064	41 b8 69 11 00
	00		 mov	 r8d, 4457		; 00001169H
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00071	b9 02 00 00 00	 mov	 ecx, 2
  00076	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007c	90		 npad	 1
  0007d	83 f8 01	 cmp	 eax, 1
  00080	75 03		 jne	 SHORT $LN12@max
  00082	cc		 int	 3
  00083	33 c0		 xor	 eax, eax
$LN12@max:
  00085	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008e	41 b9 69 11 00
	00		 mov	 r9d, 4457		; 00001169H
  00094	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  000a2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000a9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000af	90		 npad	 1
  000b0	33 c0		 xor	 eax, eax
  000b2	85 c0		 test	 eax, eax
  000b4	75 93		 jne	 SHORT $LN7@max
$LN10@max:
  000b6	33 c0		 xor	 eax, eax
  000b8	85 c0		 test	 eax, eax
  000ba	0f 85 77 ff ff
	ff		 jne	 $LN4@max

; 4458 :         return _Right;

  000c0	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  000c5	eb 05		 jmp	 SHORT $LN1@max
$LN8@max:

; 4459 :     }
; 4460 : 
; 4461 :     return _Left;

  000c7	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
$LN1@max:

; 4462 : }

  000cc	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d0	5f		 pop	 rdi
  000d1	c3		 ret	 0
??$max@I@std@@YAAEBIAEBI0@Z ENDP			; std::max<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F_AtlWinModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlWinModule'', COMDAT
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  0001c	e8 00 00 00 00	 call	 ??1CAtlWinModule@ATL@@QEAA@XZ ; ATL::CAtlWinModule::~CAtlWinModule
  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
??__F_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlWinModule''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlWinModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlWinModule'', COMDAT

; 2972 : __declspec(selectany) CAtlWinModule _AtlWinModule;

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  0001c	e8 00 00 00 00	 call	 ??0CAtlWinModule@ATL@@QEAA@XZ ; ATL::CAtlWinModule::CAtlWinModule
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_AtlWinModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlWinModule''
  00028	e8 00 00 00 00	 call	 atexit
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??__E_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlWinModule''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlWinModule@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Term@CAtlWinModule@ATL@@QEAAXXZ PROC			; ATL::CAtlWinModule::Term, COMDAT

; 2956 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2957 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
  00025	e8 00 00 00 00	 call	 ?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
  0002a	48 8b d0	 mov	 rdx, rax
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2958 : 	}

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?Term@CAtlWinModule@ATL@@QEAAXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlWinModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CAtlWinModule@ATL@@QEAA@XZ PROC			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT

; 2951 : 	{

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2952 : 		Term();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Term@CAtlWinModule@ATL@@QEAAXXZ ; ATL::CAtlWinModule::Term
  00028	90		 npad	 1

; 2953 : 	}

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
  00033	90		 npad	 1
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??1CAtlWinModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CAtlWinModule@ATL@@QEAA@XZ@4HA PROC	; `ATL::CAtlWinModule::~CAtlWinModule'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1CAtlWinModule@ATL@@QEAA@XZ@4HA ENDP	; `ATL::CAtlWinModule::~CAtlWinModule'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CAtlWinModule@ATL@@QEAA@XZ@4HA PROC	; `ATL::CAtlWinModule::~CAtlWinModule'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1CAtlWinModule@ATL@@QEAA@XZ@4HA ENDP	; `ATL::CAtlWinModule::~CAtlWinModule'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlWinModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
hr$ = 48
this$ = 80
??0CAtlWinModule@ATL@@QEAA@XZ PROC			; ATL::CAtlWinModule::CAtlWinModule, COMDAT

; 2937 : 	CAtlWinModule()

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
  00028	90		 npad	 1

; 2938 : 	{
; 2939 : 		cbSize = sizeof(_ATL_WIN_MODULE);

  00029	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0002e	c7 00 48 00 00
	00		 mov	 DWORD PTR [rax], 72	; 00000048H

; 2940 : 		HRESULT hr = AtlWinModuleInit(this);

  00034	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00039	e8 00 00 00 00	 call	 ?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
  0003e	89 44 24 30	 mov	 DWORD PTR hr$[rsp], eax

; 2941 : 		if (FAILED(hr))

  00042	83 7c 24 30 00	 cmp	 DWORD PTR hr$[rsp], 0
  00047	7d 53		 jge	 SHORT $LN2@CAtlWinMod

; 2942 : 		{
; 2943 : 			ATLASSERT(0);

  00049	33 c0		 xor	 eax, eax
  0004b	85 c0		 test	 eax, eax
  0004d	75 3b		 jne	 SHORT $LN4@CAtlWinMod
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  00056	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00062	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00067	45 33 c9	 xor	 r9d, r9d
  0006a	41 b8 7f 0b 00
	00		 mov	 r8d, 2943		; 00000b7fH
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@KMMBJFLB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  00082	83 f8 01	 cmp	 eax, 1
  00085	75 03		 jne	 SHORT $LN4@CAtlWinMod
  00087	cc		 int	 3
  00088	33 c0		 xor	 eax, eax
$LN4@CAtlWinMod:

; 2944 : 			CAtlBaseModule::m_bInitFailed = true;

  0008a	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2945 : 			cbSize = 0;

  00091	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00096	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN2@CAtlWinMod:

; 2946 : 			return;
; 2947 : 		}
; 2948 : 	}

  0009c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a1	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a5	5f		 pop	 rdi
  000a6	c3		 ret	 0
??0CAtlWinModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
hr$ = 48
this$ = 80
?dtor$0@?0???0CAtlWinModule@ATL@@QEAA@XZ@4HA PROC	; `ATL::CAtlWinModule::CAtlWinModule'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0CAtlWinModule@ATL@@QEAA@XZ@4HA ENDP	; `ATL::CAtlWinModule::CAtlWinModule'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
hr$ = 48
this$ = 80
?dtor$0@?0???0CAtlWinModule@ATL@@QEAA@XZ@4HA PROC	; `ATL::CAtlWinModule::CAtlWinModule'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 50	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0CAtlWinModule@ATL@@QEAA@XZ@4HA ENDP	; `ATL::CAtlWinModule::CAtlWinModule'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F_AtlComModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlComModule'', COMDAT
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  0001c	e8 00 00 00 00	 call	 ??1CAtlComModule@ATL@@QEAA@XZ ; ATL::CAtlComModule::~CAtlComModule
  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
??__F_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlComModule''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlComModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlComModule'', COMDAT

; 2716 : __declspec(selectany) CAtlComModule _AtlComModule;

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  0001c	e8 00 00 00 00	 call	 ??0CAtlComModule@ATL@@QEAA@XZ ; ATL::CAtlComModule::CAtlComModule
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_AtlComModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlComModule''
  00028	e8 00 00 00 00	 call	 atexit
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??__E_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlComModule''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlComModule@ATL@@QEAAXXZ
_TEXT	SEGMENT
ppEntry$1 = 32
pCache$2 = 40
factory$3 = 48
this$ = 80
?Term@CAtlComModule@ATL@@QEAAXXZ PROC			; ATL::CAtlComModule::Term, COMDAT

; 2613 : 	{

$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 2614 : 		if (cbSize == 0)

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	83 38 00	 cmp	 DWORD PTR [rax], 0
  00026	75 05		 jne	 SHORT $LN5@Term

; 2615 : 			return;

  00028	e9 a2 00 00 00	 jmp	 $LN1@Term
$LN5@Term:

; 2616 : 
; 2617 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00036	48 89 44 24 20	 mov	 QWORD PTR ppEntry$1[rsp], rax
  0003b	eb 0e		 jmp	 SHORT $LN4@Term
$LN2@Term:
  0003d	48 8b 44 24 20	 mov	 rax, QWORD PTR ppEntry$1[rsp]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 20	 mov	 QWORD PTR ppEntry$1[rsp], rax
$LN4@Term:
  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 39 44 24 20	 cmp	 QWORD PTR ppEntry$1[rsp], rax
  00059	73 58		 jae	 SHORT $LN3@Term

; 2618 : 		{
; 2619 : 			if (*ppEntry != NULL)

  0005b	48 8b 44 24 20	 mov	 rax, QWORD PTR ppEntry$1[rsp]
  00060	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00064	74 4b		 je	 SHORT $LN6@Term

; 2620 : 			{
; 2621 : 				_ATL_OBJMAP_CACHE* pCache = (**ppEntry).pCache;

  00066	48 8b 44 24 20	 mov	 rax, QWORD PTR ppEntry$1[rsp]
  0006b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006e	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00072	48 89 44 24 28	 mov	 QWORD PTR pCache$2[rsp], rax

; 2622 : 
; 2623 : 				if (pCache->pCF != NULL)

  00077	48 8b 44 24 28	 mov	 rax, QWORD PTR pCache$2[rsp]
  0007c	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00080	74 2f		 je	 SHORT $LN7@Term

; 2624 : 				{
; 2625 : 					// Decode factory pointer if it's not null
; 2626 : 					IUnknown *factory = reinterpret_cast<IUnknown*>(::DecodePointer(pCache->pCF));

  00082	48 8b 44 24 28	 mov	 rax, QWORD PTR pCache$2[rsp]
  00087	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0008a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DecodePointer
  00090	48 89 44 24 30	 mov	 QWORD PTR factory$3[rsp], rax

; 2627 : 					_Analysis_assume_(factory != nullptr);
; 2628 : 					factory->Release();

  00095	48 8b 44 24 30	 mov	 rax, QWORD PTR factory$3[rsp]
  0009a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR factory$3[rsp]
  000a2	ff 50 10	 call	 QWORD PTR [rax+16]

; 2629 : 					pCache->pCF = NULL;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR pCache$2[rsp]
  000aa	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN7@Term:
$LN6@Term:

; 2630 : 				}
; 2631 : 			}
; 2632 : 		}

  000b1	eb 8a		 jmp	 SHORT $LN2@Term
$LN3@Term:

; 2633 : 		m_csObjMap.Term();

  000b3	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000b8	48 83 c0 20	 add	 rax, 32			; 00000020H
  000bc	48 8b c8	 mov	 rcx, rax
  000bf	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Term

; 2634 : 		// Set to 0 to indicate that this function has been called
; 2635 : 		// At this point no one should be concerned about cbsize
; 2636 : 		// having the correct value
; 2637 : 		cbSize = 0;

  000c4	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000c9	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN1@Term:

; 2638 : 	}

  000cf	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d3	5f		 pop	 rdi
  000d4	c3		 ret	 0
?Term@CAtlComModule@ATL@@QEAAXXZ ENDP			; ATL::CAtlComModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlComModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CAtlComModule@ATL@@QEAA@XZ PROC			; ATL::CAtlComModule::~CAtlComModule, COMDAT

; 2607 : 	{

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2608 : 		Term();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Term@CAtlComModule@ATL@@QEAAXXZ ; ATL::CAtlComModule::Term
  00028	90		 npad	 1

; 2609 : 	}

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
  00033	90		 npad	 1
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??1CAtlComModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlComModule::~CAtlComModule
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CAtlComModule@ATL@@QEAA@XZ@4HA PROC	; `ATL::CAtlComModule::~CAtlComModule'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1CAtlComModule@ATL@@QEAA@XZ@4HA ENDP	; `ATL::CAtlComModule::~CAtlComModule'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CAtlComModule@ATL@@QEAA@XZ@4HA PROC	; `ATL::CAtlComModule::~CAtlComModule'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1CAtlComModule@ATL@@QEAA@XZ@4HA ENDP	; `ATL::CAtlComModule::~CAtlComModule'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlComModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 48
tv144 = 64
this$ = 96
??0CAtlComModule@ATL@@QEAA@XZ PROC			; ATL::CAtlComModule::CAtlComModule, COMDAT

; 2586 : 	CAtlComModule() throw()

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_ATL_COM_MODULE70@ATL@@QEAA@XZ
  00028	90		 npad	 1

; 2587 : 	{
; 2588 : 		cbSize = 0;

  00029	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 2589 : 
; 2590 : 		m_hInstTypeLib = reinterpret_cast<HINSTANCE>(&__ImageBase);

  00034	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  00040	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 2591 : 
; 2592 : 		m_ppAutoObjMapFirst = &__pobjMapEntryFirst + 1;

  00044	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:__pobjMapEntryFirst
  0004b	48 83 c0 08	 add	 rax, 8
  0004f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00054	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 2593 : 		m_ppAutoObjMapLast = &__pobjMapEntryLast;

  00058	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__pobjMapEntryLast
  00064	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2594 : 
; 2595 : 		if (FAILED(m_csObjMap.Init()))

  00068	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0006d	48 83 c0 20	 add	 rax, 32			; 00000020H
  00071	48 8b c8	 mov	 rcx, rax
  00074	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Init
  00079	85 c0		 test	 eax, eax
  0007b	0f 8d 89 00 00
	00		 jge	 $LN2@CAtlComMod

; 2596 : 		{
; 2597 : 			ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to initialize critical section in CAtlComModule\n"));

  00081	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00088	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  0008d	89 44 24 40	 mov	 DWORD PTR tv144[rsp], eax
  00091	41 b8 25 0a 00
	00		 mov	 r8d, 2597		; 00000a25H
  00097	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0HB@NHAHFMOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0009e	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp]
  000a3	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000a8	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0EA@EJEMLPD@ERROR?5?3?5Unable?5to?5initialize?5cr@
  000af	45 33 c0	 xor	 r8d, r8d
  000b2	8b 4c 24 40	 mov	 ecx, DWORD PTR tv144[rsp]
  000b6	8b d1		 mov	 edx, ecx
  000b8	48 8b c8	 mov	 rcx, rax
  000bb	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ ; ATL::CTraceFileAndLineInfo::operator()

; 2598 : 			ATLASSERT(0);

  000c0	33 c0		 xor	 eax, eax
  000c2	85 c0		 test	 eax, eax
  000c4	75 3b		 jne	 SHORT $LN4@CAtlComMod
  000c6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  000cd	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000d2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000d9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000de	45 33 c9	 xor	 r9d, r9d
  000e1	41 b8 26 0a 00
	00		 mov	 r8d, 2598		; 00000a26H
  000e7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@KMMBJFLB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000ee	b9 02 00 00 00	 mov	 ecx, 2
  000f3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  000f9	83 f8 01	 cmp	 eax, 1
  000fc	75 03		 jne	 SHORT $LN4@CAtlComMod
  000fe	cc		 int	 3
  000ff	33 c0		 xor	 eax, eax
$LN4@CAtlComMod:

; 2599 : 			CAtlBaseModule::m_bInitFailed = true;

  00101	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2600 : 			return;

  00108	eb 0b		 jmp	 SHORT $LN1@CAtlComMod
$LN2@CAtlComMod:

; 2601 : 		}
; 2602 : 		// Set cbSize on success.
; 2603 : 		cbSize = sizeof(_ATL_COM_MODULE);

  0010a	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0010f	c7 00 48 00 00
	00		 mov	 DWORD PTR [rax], 72	; 00000048H
$LN1@CAtlComMod:

; 2604 : 	}

  00115	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0011a	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0011e	5f		 pop	 rdi
  0011f	c3		 ret	 0
??0CAtlComModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlComModule::CAtlComModule
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
tv144 = 64
this$ = 96
?dtor$0@?0???0CAtlComModule@ATL@@QEAA@XZ@4HA PROC	; `ATL::CAtlComModule::CAtlComModule'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0CAtlComModule@ATL@@QEAA@XZ@4HA ENDP	; `ATL::CAtlComModule::CAtlComModule'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
tv144 = 64
this$ = 96
?dtor$0@?0???0CAtlComModule@ATL@@QEAA@XZ@4HA PROC	; `ATL::CAtlComModule::CAtlComModule'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0CAtlComModule@ATL@@QEAA@XZ@4HA ENDP	; `ATL::CAtlComModule::CAtlComModule'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z
_TEXT	SEGMENT
i$1 = 32
pWinModule$ = 64
hInst$ = 72
?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z PROC ; ATL::AtlWinModuleTerm, COMDAT

; 7652 : {

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 7653 : 	if (pWinModule == NULL)

  00023	48 83 7c 24 40
	00		 cmp	 QWORD PTR pWinModule$[rsp], 0
  00029	75 0a		 jne	 SHORT $LN5@AtlWinModu

; 7654 : 		return E_INVALIDARG;

  0002b	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  00030	e9 a9 00 00 00	 jmp	 $LN1@AtlWinModu
$LN5@AtlWinModu:

; 7655 : 	if (pWinModule->cbSize == 0)

  00035	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  0003a	83 38 00	 cmp	 DWORD PTR [rax], 0
  0003d	75 07		 jne	 SHORT $LN6@AtlWinModu

; 7656 : 		return S_OK;

  0003f	33 c0		 xor	 eax, eax
  00041	e9 98 00 00 00	 jmp	 $LN1@AtlWinModu
$LN6@AtlWinModu:

; 7657 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  00046	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  0004b	8b 00		 mov	 eax, DWORD PTR [rax]
  0004d	48 83 f8 48	 cmp	 rax, 72			; 00000048H
  00051	74 0a		 je	 SHORT $LN7@AtlWinModu

; 7658 : 		return E_INVALIDARG;

  00053	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  00058	e9 81 00 00 00	 jmp	 $LN1@AtlWinModu
$LN7@AtlWinModu:

; 7659 : 
; 7660 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

  0005d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  00065	eb 0a		 jmp	 SHORT $LN4@AtlWinModu
$LN2@AtlWinModu:
  00067	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  0006b	ff c0		 inc	 eax
  0006d	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@AtlWinModu:
  00071	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00076	48 83 c0 38	 add	 rax, 56			; 00000038H
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
  00082	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  00086	7d 27		 jge	 SHORT $LN3@AtlWinModu

; 7661 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

  00088	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  0008d	48 83 c0 38	 add	 rax, 56			; 00000038H
  00091	8b 54 24 20	 mov	 edx, DWORD PTR i$1[rsp]
  00095	48 8b c8	 mov	 rcx, rax
  00098	e8 00 00 00 00	 call	 ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
  0009d	0f b7 00	 movzx	 eax, WORD PTR [rax]
  000a0	48 8b 54 24 48	 mov	 rdx, QWORD PTR hInst$[rsp]
  000a5	8b c8		 mov	 ecx, eax
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_UnregisterClassA
  000ad	eb b8		 jmp	 SHORT $LN2@AtlWinModu
$LN3@AtlWinModu:

; 7662 : 	pWinModule->m_rgWindowClassAtoms.RemoveAll();

  000af	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  000b4	48 83 c0 38	 add	 rax, 56			; 00000038H
  000b8	48 8b c8	 mov	 rcx, rax
  000bb	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 7663 : 	pWinModule->m_csWindowCreate.Term();

  000c0	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  000c5	48 83 c0 08	 add	 rax, 8
  000c9	48 8b c8	 mov	 rcx, rax
  000cc	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Term

; 7664 : 	pWinModule->cbSize = 0;

  000d1	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  000d6	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 7665 : 	return S_OK;

  000dc	33 c0		 xor	 eax, eax
$LN1@AtlWinModu:

; 7666 : }

  000de	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e2	5f		 pop	 rdi
  000e3	c3		 ret	 0
?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
hr$ = 48
$T1 = 56
tv81 = 72
pWinModule$ = 96
?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z PROC ; ATL::AtlWinModuleInit, COMDAT

; 8396 : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 8397 : 	if (pWinModule == NULL)

  0001e	48 83 7c 24 60
	00		 cmp	 QWORD PTR pWinModule$[rsp], 0
  00024	75 0a		 jne	 SHORT $LN2@AtlWinModu

; 8398 : 		return E_INVALIDARG;

  00026	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  0002b	e9 c8 00 00 00	 jmp	 $LN1@AtlWinModu
$LN2@AtlWinModu:

; 8399 : 
; 8400 : 	// check only in the DLL
; 8401 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  00030	48 8b 44 24 60	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00035	8b 00		 mov	 eax, DWORD PTR [rax]
  00037	48 83 f8 48	 cmp	 rax, 72			; 00000048H
  0003b	74 0a		 je	 SHORT $LN3@AtlWinModu

; 8402 : 		return E_INVALIDARG;

  0003d	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  00042	e9 b1 00 00 00	 jmp	 $LN1@AtlWinModu
$LN3@AtlWinModu:

; 8403 : 
; 8404 : 	pWinModule->m_pCreateWndList = NULL;

  00047	48 8b 44 24 60	 mov	 rax, QWORD PTR pWinModule$[rsp]
  0004c	48 c7 40 30 00
	00 00 00	 mov	 QWORD PTR [rax+48], 0

; 8405 : 
; 8406 : 	HRESULT hr = pWinModule->m_csWindowCreate.Init();

  00054	48 8b 44 24 60	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00059	48 83 c0 08	 add	 rax, 8
  0005d	48 8b c8	 mov	 rcx, rax
  00060	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Init
  00065	89 44 24 30	 mov	 DWORD PTR hr$[rsp], eax

; 8407 : 	if (FAILED(hr))

  00069	83 7c 24 30 00	 cmp	 DWORD PTR hr$[rsp], 0
  0006e	0f 8d 80 00 00
	00		 jge	 $LN4@AtlWinModu

; 8408 : 	{
; 8409 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to initialize critical section in AtlWinModuleInit\n"));

  00074	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  0007b	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  00080	89 44 24 48	 mov	 DWORD PTR tv81[rsp], eax
  00084	41 b8 d9 20 00
	00		 mov	 r8d, 8409		; 000020d9H
  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0HB@NHAHFMOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00091	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T1[rsp]
  00096	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0009b	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0ED@GFNHMOFC@ERROR?5?3?5Unable?5to?5initialize?5cr@
  000a2	45 33 c0	 xor	 r8d, r8d
  000a5	8b 4c 24 48	 mov	 ecx, DWORD PTR tv81[rsp]
  000a9	8b d1		 mov	 edx, ecx
  000ab	48 8b c8	 mov	 rcx, rax
  000ae	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ ; ATL::CTraceFileAndLineInfo::operator()

; 8410 : 		ATLASSERT(0);

  000b3	33 c0		 xor	 eax, eax
  000b5	85 c0		 test	 eax, eax
  000b7	75 3b		 jne	 SHORT $LN6@AtlWinModu
  000b9	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  000c0	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000c5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000cc	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000d1	45 33 c9	 xor	 r9d, r9d
  000d4	41 b8 da 20 00
	00		 mov	 r8d, 8410		; 000020daH
  000da	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@KMMBJFLB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000e1	b9 02 00 00 00	 mov	 ecx, 2
  000e6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  000ec	83 f8 01	 cmp	 eax, 1
  000ef	75 03		 jne	 SHORT $LN6@AtlWinModu
  000f1	cc		 int	 3
  000f2	33 c0		 xor	 eax, eax
$LN6@AtlWinModu:
$LN4@AtlWinModu:

; 8411 : 	}
; 8412 : 	return hr;

  000f4	8b 44 24 30	 mov	 eax, DWORD PTR hr$[rsp]
$LN1@AtlWinModu:

; 8413 : }

  000f8	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000fc	5f		 pop	 rdi
  000fd	c3		 ret	 0
?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 38	 add	 rax, 56			; 00000038H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  0002f	90		 npad	 1
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 83 c0 08	 add	 rax, 8
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00041	90		 npad	 1
  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 38	 add	 rcx, 56			; 00000038H
  0001b	e8 00 00 00 00	 call	 ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 38	 add	 rcx, 56			; 00000038H
  0001b	e8 00 00 00 00	 call	 ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???1_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::CComCriticalSection
  0002f	90		 npad	 1
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 83 c0 38	 add	 rax, 56			; 00000038H
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  00041	90		 npad	 1
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 38	 add	 rcx, 56			; 00000038H
  0001b	e8 00 00 00 00	 call	 ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 38	 add	 rcx, 56			; 00000038H
  0001b	e8 00 00 00 00	 call	 ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpcoll.h
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z
_TEXT	SEGMENT
this$ = 64
nIndex$ = 72
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT

; 236  : 	{

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 237  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);

  00022	83 7c 24 48 00	 cmp	 DWORD PTR nIndex$[rsp], 0
  00027	7c 0e		 jl	 SHORT $LN5@operator
  00029	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002e	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00031	39 44 24 48	 cmp	 DWORD PTR nIndex$[rsp], eax
  00035	7c 3b		 jl	 SHORT $LN6@operator
$LN5@operator:
  00037	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
  0003e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00043	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0004a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004f	45 33 c9	 xor	 r9d, r9d
  00052	41 b8 ed 00 00
	00		 mov	 r8d, 237		; 000000edH
  00058	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OK@ENELOBIL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0005f	b9 02 00 00 00	 mov	 ecx, 2
  00064	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  0006a	83 f8 01	 cmp	 eax, 1
  0006d	75 03		 jne	 SHORT $LN6@operator
  0006f	cc		 int	 3
  00070	33 c0		 xor	 eax, eax
$LN6@operator:

; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

  00072	83 7c 24 48 00	 cmp	 DWORD PTR nIndex$[rsp], 0
  00077	7c 0e		 jl	 SHORT $LN3@operator
  00079	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007e	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00081	39 44 24 48	 cmp	 DWORD PTR nIndex$[rsp], eax
  00085	7c 0f		 jl	 SHORT $LN2@operator
$LN3@operator:

; 239  : 		{
; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

  00087	ba 01 00 00 00	 mov	 edx, 1
  0008c	b9 8c 00 00 c0	 mov	 ecx, -1073741684	; c000008cH
  00091	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN2@operator:

; 241  : 		}
; 242  : 		return m_aT[nIndex];

  00096	48 63 44 24 48	 movsxd	 rax, DWORD PTR nIndex$[rsp]
  0009b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000a0	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000a3	48 8d 04 41	 lea	 rax, QWORD PTR [rcx+rax*2]
$LN4@operator:

; 243  : 	}

  000a7	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ab	5f		 pop	 rdi
  000ac	c3		 ret	 0
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpcoll.h
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ
_TEXT	SEGMENT
i$1 = 32
this$ = 64
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT

; 215  : 	{

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 216  : 		if(m_aT != NULL)

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 3e		 je	 SHORT $LN5@RemoveAll

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)

  00029	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  00031	eb 0a		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  00033	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00037	ff c0		 inc	 eax
  00039	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@RemoveAll:
  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00045	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  00049	7d 02		 jge	 SHORT $LN3@RemoveAll

; 219  : 				m_aT[i].~T();

  0004b	eb e6		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 220  : 			free(m_aT);

  0004d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00055	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free

; 221  : 			m_aT = NULL;

  0005b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00060	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN5@RemoveAll:

; 222  : 		}
; 223  : 		m_nSize = 0;

  00067	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006c	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 224  : 		m_nAllocSize = 0;

  00073	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00078	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [rax+12], 0

; 225  :     }

  0007f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ
_TEXT	SEGMENT
this$ = 16
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT

; 160  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 161  : 		return m_nSize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	8b 40 08	 mov	 eax, DWORD PTR [rax+8]

; 162  : 	}

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT

; 310  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 311  : 	RemoveAll();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
  00028	90		 npad	 1

; 312  : }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT

; 120  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0
  0001e	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00023	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [rax+12], 0

; 121  : 	}

  0002a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_ATL_COM_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 20	 add	 rax, 32			; 00000020H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1_ATL_COM_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_ATL_COM_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0_ATL_COM_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 20	 add	 rax, 32			; 00000020H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::CComCriticalSection
  0002f	90		 npad	 1
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??0_ATL_COM_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0_ATL_COM_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ
_TEXT	SEGMENT
this$ = 16
?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ PROC ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT

; 289  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 290  : 		return m_hInst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 291  : 	}

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
;	COMDAT ?Term@CComCriticalSection@ATL@@QEAAJXZ
_TEXT	SEGMENT
this$ = 48
?Term@CComCriticalSection@ATL@@QEAAJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT

; 154  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 155  : 		DeleteCriticalSection(&m_sec);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeleteCriticalSection

; 156  : 		return S_OK;

  0002c	33 c0		 xor	 eax, eax

; 157  : 	}

  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5f		 pop	 rdi
  00033	c3		 ret	 0
?Term@CComCriticalSection@ATL@@QEAAJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
;	COMDAT ?Init@CComCriticalSection@ATL@@QEAAJXZ
_TEXT	SEGMENT
hRes$ = 32
this$ = 64
?Init@CComCriticalSection@ATL@@QEAAJXZ PROC		; ATL::CComCriticalSection::Init, COMDAT

; 143  : 	{

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 144  : 		HRESULT hRes = S_OK;

  0001e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR hRes$[rsp], 0

; 145  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  00026	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002b	45 33 c0	 xor	 r8d, r8d
  0002e	33 d2		 xor	 edx, edx
  00030	48 8b c8	 mov	 rcx, rax
  00033	e8 00 00 00 00	 call	 ?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
  00038	85 c0		 test	 eax, eax
  0003a	75 11		 jne	 SHORT $LN2@Init

; 146  : 		{
; 147  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  0003c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  00042	8b c8		 mov	 ecx, eax
  00044	e8 00 00 00 00	 call	 HRESULT_FROM_WIN32
  00049	89 44 24 20	 mov	 DWORD PTR hRes$[rsp], eax
$LN2@Init:

; 148  : 		}
; 149  : 
; 150  : 		return hRes;

  0004d	8b 44 24 20	 mov	 eax, DWORD PTR hRes$[rsp]

; 151  : 	}

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?Init@CComCriticalSection@ATL@@QEAAJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
;	COMDAT ??1CComCriticalSection@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1CComCriticalSection@ATL@@QEAA@XZ PROC		; ATL::CComCriticalSection::~CComCriticalSection, COMDAT

; 129  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 130  : 	}

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1CComCriticalSection@ATL@@QEAA@XZ ENDP		; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0CComCriticalSection@ATL@@QEAA@XZ PROC		; ATL::CComCriticalSection::CComCriticalSection, COMDAT

; 123  : 	CComCriticalSection() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 124  : 	{
; 125  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	41 b8 28 00 00
	00		 mov	 r8d, 40			; 00000028H
  00029	33 d2		 xor	 edx, edx
  0002b	48 8b c8	 mov	 rcx, rax
  0002e	e8 00 00 00 00	 call	 memset

; 126  : 	}

  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??0CComCriticalSection@ATL@@QEAA@XZ ENDP		; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlwinverapi.h
;	COMDAT ?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z
_TEXT	SEGMENT
lpCriticalSection$ = 48
dwSpinCount$ = 56
Flags$ = 64
?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z PROC ; ATL::_AtlInitializeCriticalSectionEx, COMDAT

; 727  : {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 728  : #if (NTDDI_VERSION >= NTDDI_VISTA) && !defined(_USING_V110_SDK71_) && !defined(_ATL_XP_TARGETING)
; 729  : 	// InitializeCriticalSectionEx is available in Vista or later, desktop or store apps
; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00027	44 8b 44 24 40	 mov	 r8d, DWORD PTR Flags$[rsp]
  0002c	8b 54 24 38	 mov	 edx, DWORD PTR dwSpinCount$[rsp]
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR lpCriticalSection$[rsp]
  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_InitializeCriticalSectionEx

; 731  : #else
; 732  : 	UNREFERENCED_PARAMETER(Flags);
; 733  : 
; 734  : 	// ...otherwise fall back to using InitializeCriticalSectionAndSpinCount.
; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);
; 736  : #endif
; 737  : }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z ENDP ; ATL::_AtlInitializeCriticalSectionEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
dwExceptionCode$ = 48
dwExceptionFlags$ = 56
?_AtlRaiseException@ATL@@YAXKK@Z PROC			; ATL::_AtlRaiseException, COMDAT

; 30   : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi
  00009	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 08 00 00 00	 mov	 ecx, 8
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 4c 24 30	 mov	 ecx, DWORD PTR [rsp+48]

; 31   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

  00020	45 33 c9	 xor	 r9d, r9d
  00023	45 33 c0	 xor	 r8d, r8d
  00026	8b 54 24 38	 mov	 edx, DWORD PTR dwExceptionFlags$[rsp]
  0002a	8b 4c 24 30	 mov	 ecx, DWORD PTR dwExceptionCode$[rsp]
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RaiseException

; 32   : }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ
_TEXT	SEGMENT
ple$ = 52
ptr$ = 88
this$ = 128
dwCategory$ = 136
nLevel$ = 144
pszFmt$ = 152
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ PROC	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 421  : 	{

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 1c 00 00 00	 mov	 ecx, 28
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 422  : 		CPreserveLastError ple;

  0002f	48 8d 4c 24 34	 lea	 rcx, QWORD PTR ple$[rsp]
  00034	e8 00 00 00 00	 call	 ??0CPreserveLastError@ATL@@QEAA@XZ ; ATL::CPreserveLastError::CPreserveLastError
  00039	90		 npad	 1

; 423  : 		va_list ptr; va_start(ptr, pszFmt);

  0003a	48 8d 84 24 a0
	00 00 00	 lea	 rax, QWORD PTR pszFmt$[rsp+8]
  00042	48 89 44 24 58	 mov	 QWORD PTR ptr$[rsp], rax

; 424  : 		ATL::CTrace::TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  00047	48 8b 44 24 58	 mov	 rax, QWORD PTR ptr$[rsp]
  0004c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00051	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR pszFmt$[rsp]
  00059	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0005e	44 8b 8c 24 90
	00 00 00	 mov	 r9d, DWORD PTR nLevel$[rsp]
  00066	44 8b 84 24 88
	00 00 00	 mov	 r8d, DWORD PTR dwCategory$[rsp]
  0006e	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00076	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  00079	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00081	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00084	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z ; ATL::CTrace::TraceV

; 425  : 		va_end(ptr);

  00089	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR ptr$[rsp], 0

; 426  : 	}

  00092	48 8d 4c 24 34	 lea	 rcx, QWORD PTR ple$[rsp]
  00097	e8 00 00 00 00	 call	 ??1CPreserveLastError@ATL@@QEAA@XZ ; ATL::CPreserveLastError::~CPreserveLastError
  0009c	48 8b cc	 mov	 rcx, rsp
  0009f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ$rtcFrameData
  000a6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000ab	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000af	5f		 pop	 rdi
  000b0	c3		 ret	 0
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ ENDP	; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ple$ = 52
ptr$ = 88
this$ = 128
dwCategory$ = 136
nLevel$ = 144
pszFmt$ = 152
?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ@4HA PROC ; `ATL::CTraceFileAndLineInfo::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR ple$[rbp]
  00017	e8 00 00 00 00	 call	 ??1CPreserveLastError@ATL@@QEAA@XZ ; ATL::CPreserveLastError::~CPreserveLastError
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ@4HA ENDP ; `ATL::CTraceFileAndLineInfo::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ple$ = 52
ptr$ = 88
this$ = 128
dwCategory$ = 136
nLevel$ = 144
pszFmt$ = 152
?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ@4HA PROC ; `ATL::CTraceFileAndLineInfo::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR ple$[rbp]
  00017	e8 00 00 00 00	 call	 ??1CPreserveLastError@ATL@@QEAA@XZ ; ATL::CPreserveLastError::~CPreserveLastError
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEBDZZ@4HA ENDP ; `ATL::CTraceFileAndLineInfo::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z
_TEXT	SEGMENT
this$ = 16
pszFileName$ = 24
nLineNo$ = 32
??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z PROC		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT

; 411  : 	{

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR pszFileName$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	8b 4c 24 20	 mov	 ecx, DWORD PTR nLineNo$[rsp]
  00026	89 48 08	 mov	 DWORD PTR [rax+8], ecx

; 412  : 	}

  00029	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??1CPreserveLastError@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CPreserveLastError@ATL@@QEAA@XZ PROC			; ATL::CPreserveLastError::~CPreserveLastError, COMDAT

; 396  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 397  : 		SetLastError(m_dwLastError);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	8b 08		 mov	 ecx, DWORD PTR [rax]
  00025	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetLastError
  0002b	90		 npad	 1

; 398  : 	}

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1CPreserveLastError@ATL@@QEAA@XZ ENDP			; ATL::CPreserveLastError::~CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0CPreserveLastError@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0CPreserveLastError@ATL@@QEAA@XZ PROC			; ATL::CPreserveLastError::CPreserveLastError, COMDAT

; 390  : 	CPreserveLastError()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 391  : 	{
; 392  : 		m_dwLastError = GetLastError();

  0001e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  00024	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00029	89 01		 mov	 DWORD PTR [rcx], eax

; 393  : 	}

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??0CPreserveLastError@ATL@@QEAA@XZ ENDP			; ATL::CPreserveLastError::CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA PROC ; `ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA ENDP ; `ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA PROC ; `ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA ENDP ; `ATL::CHeapPtr<char,ATL::CCRTAllocator>::~CHeapPtr<char,ATL::CCRTAllocator>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
_TEXT	SEGMENT
nBytes$ = 40
this$ = 80
nElements$ = 88
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z PROC ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate, COMDAT

; 455  : 	{

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 456  : 		size_t nBytes=0;

  00023	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR nBytes$[rsp], 0

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  0002c	41 b8 01 00 00
	00		 mov	 r8d, 1
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR nElements$[rsp]
  00037	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nBytes$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z ; ATL::AtlMultiply<unsigned __int64>
  00041	85 c0		 test	 eax, eax
  00043	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00045	32 c0		 xor	 al, al
  00047	eb 0f		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  00049	48 8b 54 24 28	 mov	 rdx, QWORD PTR nBytes$[rsp]
  0004e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00058	48 8b f8	 mov	 rdi, rax
  0005b	48 8b cc	 mov	 rcx, rsp
  0005e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcFrameData
  00065	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006a	48 8b c7	 mov	 rax, rdi
  0006d	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00071	5f		 pop	 rdi
  00072	c3		 ret	 0
?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ENDP ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>, COMDAT

; 434  : 	CHeapPtr() throw()

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 435  : 	{

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>
  00028	90		 npad	 1

; 436  : 	}

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5f		 pop	 rdi
  00033	c3		 ret	 0
??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP	; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA PROC ; `ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA ENDP ; `ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA PROC ; `ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA ENDP ; `ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAAXXZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free, COMDAT

; 407  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 408  : 		Allocator::Free(m_pData);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00026	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPEAX@Z ; ATL::CCRTAllocator::Free

; 409  : 		m_pData = NULL;

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 410  : 	}

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
_TEXT	SEGMENT
this$ = 64
nBytes$ = 72
?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes, COMDAT

; 381  : 	{

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 382  : 		ATLASSERT(m_pData == NULL);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0002c	74 3b		 je	 SHORT $LN4@AllocateBy
  0002e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00035	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0003a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00041	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00046	45 33 c9	 xor	 r9d, r9d
  00049	41 b8 7e 01 00
	00		 mov	 r8d, 382		; 0000017eH
  0004f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OE@BPCMJDLP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00056	b9 02 00 00 00	 mov	 ecx, 2
  0005b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  00061	83 f8 01	 cmp	 eax, 1
  00064	75 03		 jne	 SHORT $LN4@AllocateBy
  00066	cc		 int	 3
  00067	33 c0		 xor	 eax, eax
$LN4@AllocateBy:

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  00069	48 8b 4c 24 48	 mov	 rcx, QWORD PTR nBytes$[rsp]
  0006e	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z ; ATL::CCRTAllocator::Allocate
  00073	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00078	48 89 01	 mov	 QWORD PTR [rcx], rax

; 384  : 		if (m_pData == NULL)

  0007b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00080	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00084	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00086	32 c0		 xor	 al, al
  00088	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  0008a	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  0008c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00090	5f		 pop	 rdi
  00091	c3		 ret	 0
?AllocateBytes@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEBAPEADXZ
_TEXT	SEGMENT
this$ = 16
??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEBAPEADXZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *, COMDAT

; 363  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 364  : 		return m_pData;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 365  : 	}

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEBAPEADXZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>, COMDAT

; 349  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 350  : 		Free();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Free@?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::Free

; 351  : 	}

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::~CHeapPtrBase<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IEAA@XZ PROC ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>, COMDAT

; 336  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 335  : 		m_pData(NULL)

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 337  : 	}

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ENDP ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::CHeapPtrBase<char,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA PROC ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA ENDP ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA PROC ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA ENDP ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
_TEXT	SEGMENT
nBytes$ = 40
this$ = 80
nElements$ = 88
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate, COMDAT

; 455  : 	{

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 456  : 		size_t nBytes=0;

  00023	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR nBytes$[rsp], 0

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  0002c	41 b8 02 00 00
	00		 mov	 r8d, 2
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR nElements$[rsp]
  00037	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nBytes$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z ; ATL::AtlMultiply<unsigned __int64>
  00041	85 c0		 test	 eax, eax
  00043	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00045	32 c0		 xor	 al, al
  00047	eb 0f		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  00049	48 8b 54 24 28	 mov	 rdx, QWORD PTR nBytes$[rsp]
  0004e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00058	48 8b f8	 mov	 rdi, rax
  0005b	48 8b cc	 mov	 rcx, rsp
  0005e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcFrameData
  00065	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006a	48 8b c7	 mov	 rax, rdi
  0006d	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00071	5f		 pop	 rdi
  00072	c3		 ret	 0
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT

; 434  : 	CHeapPtr() throw()

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 435  : 	{

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
  00028	90		 npad	 1

; 436  : 	}

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5f		 pop	 rdi
  00033	c3		 ret	 0
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA PROC ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA ENDP ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA PROC ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ@4HA ENDP ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free, COMDAT

; 407  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 408  : 		Allocator::Free(m_pData);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00026	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPEAX@Z ; ATL::CCRTAllocator::Free

; 409  : 		m_pData = NULL;

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 410  : 	}

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
_TEXT	SEGMENT
this$ = 64
nBytes$ = 72
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes, COMDAT

; 381  : 	{

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 382  : 		ATLASSERT(m_pData == NULL);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0002c	74 3b		 je	 SHORT $LN4@AllocateBy
  0002e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00035	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0003a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00041	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00046	45 33 c9	 xor	 r9d, r9d
  00049	41 b8 7e 01 00
	00		 mov	 r8d, 382		; 0000017eH
  0004f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OE@BPCMJDLP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00056	b9 02 00 00 00	 mov	 ecx, 2
  0005b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  00061	83 f8 01	 cmp	 eax, 1
  00064	75 03		 jne	 SHORT $LN4@AllocateBy
  00066	cc		 int	 3
  00067	33 c0		 xor	 eax, eax
$LN4@AllocateBy:

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  00069	48 8b 4c 24 48	 mov	 rcx, QWORD PTR nBytes$[rsp]
  0006e	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z ; ATL::CCRTAllocator::Allocate
  00073	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00078	48 89 01	 mov	 QWORD PTR [rcx], rax

; 384  : 		if (m_pData == NULL)

  0007b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00080	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00084	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00086	32 c0		 xor	 al, al
  00088	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  0008a	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  0008c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00090	5f		 pop	 rdi
  00091	c3		 ret	 0
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ
_TEXT	SEGMENT
this$ = 16
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *, COMDAT

; 363  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 364  : 		return m_pData;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 365  : 	}

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT

; 349  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 350  : 		Free();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free

; 351  : 	}

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT

; 336  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 335  : 		m_pData(NULL)

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 337  : 	}

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z
_TEXT	SEGMENT
buffer$ = 64
__$ArrayPad$ = 336
pszCategory$ = 368
nCategory$ = 376
?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 81 ec 60 01
	00 00		 sub	 rsp, 352		; 00000160H
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR [rsp+368]
  00028	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002f	48 33 c4	 xor	 rax, rsp
  00032	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 330  : 		if (pszCategory == nullptr)

  0003a	48 83 bc 24 70
	01 00 00 00	 cmp	 QWORD PTR pszCategory$[rsp], 0
  00043	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  00045	e9 d6 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  0004a	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00051	72 46		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  00053	33 c0		 xor	 eax, eax
  00055	85 c0		 test	 eax, eax
  00057	75 3b		 jne	 SHORT $LN5@RegisterCa
  00059	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00060	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00065	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0006c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00071	45 33 c9	 xor	 r9d, r9d
  00074	41 b8 51 01 00
	00		 mov	 r8d, 337		; 00000151H
  0007a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OE@GMIHPBDM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00081	b9 02 00 00 00	 mov	 ecx, 2
  00086	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  0008c	83 f8 01	 cmp	 eax, 1
  0008f	75 03		 jne	 SHORT $LN5@RegisterCa
  00091	cc		 int	 3
  00092	33 c0		 xor	 eax, eax
$LN5@RegisterCa:

; 338  : 			return;

  00094	e9 87 00 00 00	 jmp	 $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00099	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  0009f	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  000a6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  000ad	8b 94 24 78 01
	00 00		 mov	 edx, DWORD PTR nCategory$[rsp]
  000b4	89 14 01	 mov	 DWORD PTR [rcx+rax], edx

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);
; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	

  000b7	48 8d 44 24 40	 lea	 rax, QWORD PTR buffer$[rsp]
  000bc	48 8b f8	 mov	 rdi, rax
  000bf	33 c0		 xor	 eax, eax
  000c1	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  000c6	f3 aa		 rep stosb

; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);

  000c8	4c 8b 8c 24 70
	01 00 00	 mov	 r9, QWORD PTR pszCategory$[rsp]
  000d0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  000d7	ba 7f 00 00 00	 mov	 edx, 127		; 0000007fH
  000dc	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buffer$[rsp]
  000e1	e8 00 00 00 00	 call	 swprintf_s

; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);

  000e6	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000ec	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  000f3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  000fa	48 8d 44 01 04	 lea	 rax, QWORD PTR [rcx+rax+4]
  000ff	4c 8d 44 24 40	 lea	 r8, QWORD PTR buffer$[rsp]
  00104	ba 7f 00 00 00	 mov	 edx, 127		; 0000007fH
  00109	48 8b c8	 mov	 rcx, rax
  0010c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcscpy_s

; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  00112	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  00118	ff c0		 inc	 eax
  0011a	89 05 00 00 00
	00		 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  00120	48 8b cc	 mov	 rcx, rsp
  00123	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z$rtcFrameData
  0012a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0012f	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00137	48 33 cc	 xor	 rcx, rsp
  0013a	e8 00 00 00 00	 call	 __security_check_cookie
  0013f	48 81 c4 60 01
	00 00		 add	 rsp, 352		; 00000160H
  00146	5f		 pop	 rdi
  00147	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z
_TEXT	SEGMENT
cchNeeded$ = 48
szBuf$ = 72
wszBuf$ = 104
tv89 = 120
tv92 = 128
tv153 = 136
tv160 = 144
pszFileName$ = 176
nLine$ = 184
dwCategory$ = 192
nLevel$ = 200
pszFmt$ = 208
args$ = 216
?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 238  : 	{

$LN10:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 239  : 		int cchNeeded = _vscprintf(pszFmt, args);

  00032	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR args$[rsp]
  0003a	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR pszFmt$[rsp]
  00042	e8 00 00 00 00	 call	 _vscprintf
  00047	89 44 24 30	 mov	 DWORD PTR cchNeeded$[rsp], eax

; 240  : 		if (cchNeeded < 0)

  0004b	83 7c 24 30 00	 cmp	 DWORD PTR cchNeeded$[rsp], 0
  00050	7d 05		 jge	 SHORT $LN2@TraceV

; 241  : 		{
; 242  : 			return;

  00052	e9 c8 01 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 243  : 		}
; 244  : 
; 245  : 		CHeapPtr<char> szBuf;

  00057	48 8d 4c 24 48	 lea	 rcx, QWORD PTR szBuf$[rsp]
  0005c	e8 00 00 00 00	 call	 ??0?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::CHeapPtr<char,ATL::CCRTAllocator>
  00061	90		 npad	 1

; 246  : 		if (!szBuf.Allocate(cchNeeded + 1))

  00062	8b 44 24 30	 mov	 eax, DWORD PTR cchNeeded$[rsp]
  00066	ff c0		 inc	 eax
  00068	48 98		 cdqe
  0006a	48 8b d0	 mov	 rdx, rax
  0006d	48 8d 4c 24 48	 lea	 rcx, QWORD PTR szBuf$[rsp]
  00072	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<char,ATL::CCRTAllocator>::Allocate
  00077	0f b6 c0	 movzx	 eax, al
  0007a	85 c0		 test	 eax, eax
  0007c	75 0f		 jne	 SHORT $LN3@TraceV

; 247  : 		{
; 248  : 			return;

  0007e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR szBuf$[rsp]
  00083	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  00088	e9 92 01 00 00	 jmp	 $LN1@TraceV
$LN3@TraceV:

; 249  : 		}
; 250  : 
; 251  : 		szBuf[0] = '\0';

  0008d	48 8d 4c 24 48	 lea	 rcx, QWORD PTR szBuf$[rsp]
  00092	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEBAPEADXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
  00097	b9 01 00 00 00	 mov	 ecx, 1
  0009c	48 6b c9 00	 imul	 rcx, rcx, 0
  000a0	c6 04 08 00	 mov	 BYTE PTR [rax+rcx], 0

; 252  : 
; 253  : 		if (_vsnprintf_s(szBuf, cchNeeded + 1, cchNeeded, pszFmt, args) == -1)

  000a4	48 63 44 24 30	 movsxd	 rax, DWORD PTR cchNeeded$[rsp]
  000a9	48 89 44 24 78	 mov	 QWORD PTR tv89[rsp], rax
  000ae	8b 4c 24 30	 mov	 ecx, DWORD PTR cchNeeded$[rsp]
  000b2	ff c1		 inc	 ecx
  000b4	48 63 c9	 movsxd	 rcx, ecx
  000b7	48 89 8c 24 80
	00 00 00	 mov	 QWORD PTR tv92[rsp], rcx
  000bf	48 8d 4c 24 48	 lea	 rcx, QWORD PTR szBuf$[rsp]
  000c4	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEBAPEADXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
  000c9	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  000d1	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000d6	4c 8b 8c 24 d0
	00 00 00	 mov	 r9, QWORD PTR pszFmt$[rsp]
  000de	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv89[rsp]
  000e3	4c 8b c1	 mov	 r8, rcx
  000e6	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR tv92[rsp]
  000ee	48 8b d1	 mov	 rdx, rcx
  000f1	48 8b c8	 mov	 rcx, rax
  000f4	e8 00 00 00 00	 call	 _vsnprintf_s
  000f9	83 f8 ff	 cmp	 eax, -1
  000fc	75 0f		 jne	 SHORT $LN4@TraceV

; 254  : 		{
; 255  : 			return;

  000fe	48 8d 4c 24 48	 lea	 rcx, QWORD PTR szBuf$[rsp]
  00103	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  00108	e9 12 01 00 00	 jmp	 $LN1@TraceV
$LN4@TraceV:

; 256  : 		}
; 257  : 
; 258  : 		CHeapPtr<wchar_t> wszBuf;

  0010d	48 8d 4c 24 68	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00112	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
  00117	90		 npad	 1

; 259  : 		if (!wszBuf.Allocate(cchNeeded + 1))

  00118	8b 44 24 30	 mov	 eax, DWORD PTR cchNeeded$[rsp]
  0011c	ff c0		 inc	 eax
  0011e	48 98		 cdqe
  00120	48 8b d0	 mov	 rdx, rax
  00123	48 8d 4c 24 68	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00128	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  0012d	0f b6 c0	 movzx	 eax, al
  00130	85 c0		 test	 eax, eax
  00132	75 1a		 jne	 SHORT $LN5@TraceV

; 260  : 		{
; 261  : 			return;

  00134	48 8d 4c 24 68	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00139	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  0013e	90		 npad	 1
  0013f	48 8d 4c 24 48	 lea	 rcx, QWORD PTR szBuf$[rsp]
  00144	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  00149	e9 d1 00 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:

; 262  : 		}
; 263  : 
; 264  : 		wszBuf[0] = '\0';

  0014e	48 8d 4c 24 68	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00153	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00158	b9 02 00 00 00	 mov	 ecx, 2
  0015d	48 6b c9 00	 imul	 rcx, rcx, 0
  00161	33 d2		 xor	 edx, edx
  00163	66 89 14 08	 mov	 WORD PTR [rax+rcx], dx

; 265  : 
; 266  : 		if (::MultiByteToWideChar(CP_ACP, 0, szBuf, -1, wszBuf, cchNeeded + 1) == 0)

  00167	8b 44 24 30	 mov	 eax, DWORD PTR cchNeeded$[rsp]
  0016b	ff c0		 inc	 eax
  0016d	89 84 24 88 00
	00 00		 mov	 DWORD PTR tv153[rsp], eax
  00174	48 8d 4c 24 68	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00179	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  0017e	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR tv160[rsp], rax
  00186	48 8d 4c 24 48	 lea	 rcx, QWORD PTR szBuf$[rsp]
  0018b	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@DVCCRTAllocator@ATL@@@ATL@@QEBAPEADXZ ; ATL::CHeapPtrBase<char,ATL::CCRTAllocator>::operator char *
  00190	8b 8c 24 88 00
	00 00		 mov	 ecx, DWORD PTR tv153[rsp]
  00197	89 4c 24 28	 mov	 DWORD PTR [rsp+40], ecx
  0019b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR tv160[rsp]
  001a3	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001a8	41 b9 ff ff ff
	ff		 mov	 r9d, -1
  001ae	4c 8b c0	 mov	 r8, rax
  001b1	33 d2		 xor	 edx, edx
  001b3	33 c9		 xor	 ecx, ecx
  001b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MultiByteToWideChar
  001bb	85 c0		 test	 eax, eax
  001bd	75 17		 jne	 SHORT $LN6@TraceV

; 267  : 		{
; 268  : 			return;

  001bf	48 8d 4c 24 68	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  001c4	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  001c9	90		 npad	 1
  001ca	48 8d 4c 24 48	 lea	 rcx, QWORD PTR szBuf$[rsp]
  001cf	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  001d4	eb 49		 jmp	 SHORT $LN1@TraceV
$LN6@TraceV:

; 269  : 		}
; 270  : 
; 271  : 		TraceV(pszFileName, nLine, dwCategory, nLevel, wszBuf);

  001d6	48 8d 4c 24 68	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  001db	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  001e0	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001e5	44 8b 8c 24 c8
	00 00 00	 mov	 r9d, DWORD PTR nLevel$[rsp]
  001ed	44 8b 84 24 c0
	00 00 00	 mov	 r8d, DWORD PTR dwCategory$[rsp]
  001f5	8b 94 24 b8 00
	00 00		 mov	 edx, DWORD PTR nLine$[rsp]
  001fc	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR pszFileName$[rsp]
  00204	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z ; ATL::CTrace::TraceV
  00209	90		 npad	 1

; 272  : 	}

  0020a	48 8d 4c 24 68	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0020f	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  00214	90		 npad	 1
  00215	48 8d 4c 24 48	 lea	 rcx, QWORD PTR szBuf$[rsp]
  0021a	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
$LN1@TraceV:
  0021f	48 8b cc	 mov	 rcx, rsp
  00222	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z$rtcFrameData
  00229	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0022e	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  00235	5f		 pop	 rdi
  00236	c3		 ret	 0
?TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cchNeeded$ = 48
szBuf$ = 72
wszBuf$ = 104
tv89 = 120
tv92 = 128
tv153 = 136
tv160 = 144
pszFileName$ = 176
nLine$ = 184
dwCategory$ = 192
nLevel$ = 200
pszFmt$ = 208
args$ = 216
?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA PROC ; `ATL::CTrace::TraceV'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR szBuf$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA ENDP ; `ATL::CTrace::TraceV'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
cchNeeded$ = 48
szBuf$ = 72
wszBuf$ = 104
tv89 = 120
tv92 = 128
tv153 = 136
tv160 = 144
pszFileName$ = 176
nLine$ = 184
dwCategory$ = 192
nLevel$ = 200
pszFmt$ = 208
args$ = 216
?dtor$1@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA PROC ; `ATL::CTrace::TraceV'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 68	 lea	 rcx, QWORD PTR wszBuf$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA ENDP ; `ATL::CTrace::TraceV'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cchNeeded$ = 48
szBuf$ = 72
wszBuf$ = 104
tv89 = 120
tv92 = 128
tv153 = 136
tv160 = 144
pszFileName$ = 176
nLine$ = 184
dwCategory$ = 192
nLevel$ = 200
pszFmt$ = 208
args$ = 216
?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA PROC ; `ATL::CTrace::TraceV'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR szBuf$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtr@DVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA ENDP ; `ATL::CTrace::TraceV'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cchNeeded$ = 48
szBuf$ = 72
wszBuf$ = 104
tv89 = 120
tv92 = 128
tv153 = 136
tv160 = 144
pszFileName$ = 176
nLine$ = 184
dwCategory$ = 192
nLevel$ = 200
pszFmt$ = 208
args$ = 216
?dtor$1@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA PROC ; `ATL::CTrace::TraceV'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 68	 lea	 rcx, QWORD PTR wszBuf$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0??TraceV@CTrace@ATL@@SAXPEBDHII0PEAD@Z@4HA ENDP ; `ATL::CTrace::TraceV'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z
_TEXT	SEGMENT
wszCategory$ = 64
categoryLength$ = 2116
pwszCategoryName$ = 2120
chCount$ = 2128
wszBuf$ = 2152
fileName$ = 2192
tv145 = 2736
__$ArrayPad$ = 2744
pszFileName$ = 2768
nLine$ = 2776
dwCategory$ = 2784
nLevel$ = 2792
pwszMessage$ = 2800
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 150  : 	{

$LN13:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec c0 0a
	00 00		 sub	 rsp, 2752		; 00000ac0H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 b0 02 00 00	 mov	 ecx, 688		; 000002b0H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 d0
	0a 00 00	 mov	 rcx, QWORD PTR [rsp+2768]
  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00039	48 33 c4	 xor	 rax, rsp
  0003c	48 89 84 24 b8
	0a 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 151  : 		if (CTrace::m_nLevel == CTrace::DisableTracing || CTrace::m_nLevel < nLevel || (CTrace::m_nCategory & dwCategory) == 0)

  00044	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, -1 ; ATL::CTrace::m_nLevel, ffffffffH
  0004b	74 24		 je	 SHORT $LN3@TraceV
  0004d	8b 84 24 e8 0a
	00 00		 mov	 eax, DWORD PTR nLevel$[rsp]
  00054	39 05 00 00 00
	00		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLevel
  0005a	72 15		 jb	 SHORT $LN3@TraceV
  0005c	8b 84 24 e0 0a
	00 00		 mov	 eax, DWORD PTR dwCategory$[rsp]
  00063	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nCategory
  00069	23 c8		 and	 ecx, eax
  0006b	8b c1		 mov	 eax, ecx
  0006d	85 c0		 test	 eax, eax
  0006f	75 05		 jne	 SHORT $LN2@TraceV
$LN3@TraceV:

; 152  : 		{
; 153  : 			return;

  00071	e9 10 02 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 154  : 		}
; 155  : 
; 156  : 		wchar_t wszCategory[TraceBufferSize] = {'\0'};

  00076	48 8d 44 24 40	 lea	 rax, QWORD PTR wszCategory$[rsp]
  0007b	48 8b f8	 mov	 rdi, rax
  0007e	33 c0		 xor	 eax, eax
  00080	b9 00 08 00 00	 mov	 ecx, 2048		; 00000800H
  00085	f3 aa		 rep stosb

; 157  : 		int categoryLength = 0;

  00087	c7 84 24 44 08
	00 00 00 00 00
	00		 mov	 DWORD PTR categoryLength$[rsp], 0

; 158  : 		const wchar_t *const pwszCategoryName = GetCategoryName(dwCategory);

  00092	8b 8c 24 e0 0a
	00 00		 mov	 ecx, DWORD PTR dwCategory$[rsp]
  00099	e8 00 00 00 00	 call	 ?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z ; ATL::CTrace::GetCategoryName
  0009e	48 89 84 24 48
	08 00 00	 mov	 QWORD PTR pwszCategoryName$[rsp], rax

; 159  : 		if (pwszCategoryName != nullptr)

  000a6	48 83 bc 24 48
	08 00 00 00	 cmp	 QWORD PTR pwszCategoryName$[rsp], 0
  000af	74 36		 je	 SHORT $LN4@TraceV

; 160  : 		{
; 161  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%ls - ", pwszCategoryName)) == -1)

  000b1	4c 8b 8c 24 48
	08 00 00	 mov	 r9, QWORD PTR pwszCategoryName$[rsp]
  000b9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
  000c0	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  000c5	48 8d 4c 24 40	 lea	 rcx, QWORD PTR wszCategory$[rsp]
  000ca	e8 00 00 00 00	 call	 swprintf_s
  000cf	89 84 24 44 08
	00 00		 mov	 DWORD PTR categoryLength$[rsp], eax
  000d6	83 bc 24 44 08
	00 00 ff	 cmp	 DWORD PTR categoryLength$[rsp], -1
  000de	75 05		 jne	 SHORT $LN6@TraceV

; 162  : 			{
; 163  : 				return;

  000e0	e9 a1 01 00 00	 jmp	 $LN1@TraceV
$LN6@TraceV:

; 164  : 			}
; 165  : 		}

  000e5	eb 34		 jmp	 SHORT $LN5@TraceV
$LN4@TraceV:

; 166  : 		else
; 167  : 		{
; 168  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%u - ", dwCategory)) == -1)

  000e7	44 8b 8c 24 e0
	0a 00 00	 mov	 r9d, DWORD PTR dwCategory$[rsp]
  000ef	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
  000f6	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  000fb	48 8d 4c 24 40	 lea	 rcx, QWORD PTR wszCategory$[rsp]
  00100	e8 00 00 00 00	 call	 swprintf_s
  00105	89 84 24 44 08
	00 00		 mov	 DWORD PTR categoryLength$[rsp], eax
  0010c	83 bc 24 44 08
	00 00 ff	 cmp	 DWORD PTR categoryLength$[rsp], -1
  00114	75 05		 jne	 SHORT $LN5@TraceV

; 169  : 			{
; 170  : 				return;

  00116	e9 6b 01 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:

; 171  : 			}
; 172  : 		}
; 173  : 
; 174  : 		int chCount = (int)wcslen(pwszMessage) + categoryLength + 1;

  0011b	48 8b 8c 24 f0
	0a 00 00	 mov	 rcx, QWORD PTR pwszMessage$[rsp]
  00123	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcslen
  00129	8b 8c 24 44 08
	00 00		 mov	 ecx, DWORD PTR categoryLength$[rsp]
  00130	8d 44 08 01	 lea	 eax, DWORD PTR [rax+rcx+1]
  00134	89 84 24 50 08
	00 00		 mov	 DWORD PTR chCount$[rsp], eax

; 175  : 		CHeapPtr<wchar_t> wszBuf;

  0013b	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00143	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
  00148	90		 npad	 1

; 176  : 		if (!wszBuf.Allocate(chCount))

  00149	48 63 84 24 50
	08 00 00	 movsxd	 rax, DWORD PTR chCount$[rsp]
  00151	48 8b d0	 mov	 rdx, rax
  00154	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0015c	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  00161	0f b6 c0	 movzx	 eax, al
  00164	85 c0		 test	 eax, eax
  00166	75 12		 jne	 SHORT $LN8@TraceV

; 177  : 		{
; 178  : 			return;

  00168	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00170	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  00175	e9 0c 01 00 00	 jmp	 $LN1@TraceV
$LN8@TraceV:

; 179  : 		}
; 180  : 
; 181  : 		wszBuf[0] = '\0';

  0017a	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00182	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00187	b9 02 00 00 00	 mov	 ecx, 2
  0018c	48 6b c9 00	 imul	 rcx, rcx, 0
  00190	33 d2		 xor	 edx, edx
  00192	66 89 14 08	 mov	 WORD PTR [rax+rcx], dx

; 182  : 
; 183  : 		if (swprintf_s(wszBuf, chCount, L"%ls%ls", wszCategory, pwszMessage) == -1)

  00196	48 63 84 24 50
	08 00 00	 movsxd	 rax, DWORD PTR chCount$[rsp]
  0019e	48 89 84 24 b0
	0a 00 00	 mov	 QWORD PTR tv145[rsp], rax
  001a6	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  001ae	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  001b3	48 8b 8c 24 f0
	0a 00 00	 mov	 rcx, QWORD PTR pwszMessage$[rsp]
  001bb	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001c0	4c 8d 4c 24 40	 lea	 r9, QWORD PTR wszCategory$[rsp]
  001c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
  001cc	48 8b 8c 24 b0
	0a 00 00	 mov	 rcx, QWORD PTR tv145[rsp]
  001d4	48 8b d1	 mov	 rdx, rcx
  001d7	48 8b c8	 mov	 rcx, rax
  001da	e8 00 00 00 00	 call	 swprintf_s
  001df	83 f8 ff	 cmp	 eax, -1
  001e2	75 12		 jne	 SHORT $LN9@TraceV

; 184  : 		{
; 185  : 			return;

  001e4	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  001ec	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  001f1	e9 90 00 00 00	 jmp	 $LN1@TraceV
$LN9@TraceV:

; 186  : 		}
; 187  : 
; 188  : 		wchar_t fileName[_MAX_PATH] = {'\0'};	

  001f6	48 8d 84 24 90
	08 00 00	 lea	 rax, QWORD PTR fileName$[rsp]
  001fe	48 8b f8	 mov	 rdi, rax
  00201	33 c0		 xor	 eax, eax
  00203	b9 08 02 00 00	 mov	 ecx, 520		; 00000208H
  00208	f3 aa		 rep stosb

; 189  : #if _MSC_VER < 1900
; 190  : 		if (swprintf_s(fileName, _MAX_PATH, L"%S", pszFileName) == -1)
; 191  : #else
; 192  : 		if (swprintf_s(fileName, _MAX_PATH, L"%hs", pszFileName) == -1)

  0020a	4c 8b 8c 24 d0
	0a 00 00	 mov	 r9, QWORD PTR pszFileName$[rsp]
  00212	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00219	ba 04 01 00 00	 mov	 edx, 260		; 00000104H
  0021e	48 8d 8c 24 90
	08 00 00	 lea	 rcx, QWORD PTR fileName$[rsp]
  00226	e8 00 00 00 00	 call	 swprintf_s
  0022b	83 f8 ff	 cmp	 eax, -1
  0022e	75 0f		 jne	 SHORT $LN10@TraceV

; 193  : #endif
; 194  : 		{
; 195  : 			return;

  00230	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00238	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  0023d	eb 47		 jmp	 SHORT $LN1@TraceV
$LN10@TraceV:

; 196  : 		}
; 197  : 
; 198  : 		_CrtDbgReportW(_CRT_WARN, fileName, nLine, nullptr, L"%ls", static_cast<const wchar_t*>(wszBuf));

  0023f	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00247	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  0024c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00251	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00258	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0025d	45 33 c9	 xor	 r9d, r9d
  00260	44 8b 84 24 d8
	0a 00 00	 mov	 r8d, DWORD PTR nLine$[rsp]
  00268	48 8d 94 24 90
	08 00 00	 lea	 rdx, QWORD PTR fileName$[rsp]
  00270	33 c9		 xor	 ecx, ecx
  00272	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  00278	90		 npad	 1

; 199  : 	}

  00279	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00281	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
$LN1@TraceV:
  00286	48 8b cc	 mov	 rcx, rsp
  00289	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcFrameData
  00290	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00295	48 8b 8c 24 b8
	0a 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0029d	48 33 cc	 xor	 rcx, rsp
  002a0	e8 00 00 00 00	 call	 __security_check_cookie
  002a5	48 81 c4 c0 0a
	00 00		 add	 rsp, 2752		; 00000ac0H
  002ac	5f		 pop	 rdi
  002ad	c3		 ret	 0
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
wszCategory$ = 64
categoryLength$ = 2116
pwszCategoryName$ = 2120
chCount$ = 2128
wszBuf$ = 2152
fileName$ = 2192
tv145 = 2736
__$ArrayPad$ = 2744
pszFileName$ = 2768
nLine$ = 2776
dwCategory$ = 2784
nLevel$ = 2792
pwszMessage$ = 2800
?dtor$0@?0??TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z@4HA PROC ; `ATL::CTrace::TraceV'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 68 08
	00 00		 lea	 rcx, QWORD PTR wszBuf$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z@4HA ENDP ; `ATL::CTrace::TraceV'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
wszCategory$ = 64
categoryLength$ = 2116
pwszCategoryName$ = 2120
chCount$ = 2128
wszBuf$ = 2152
fileName$ = 2192
tv145 = 2736
__$ArrayPad$ = 2744
pszFileName$ = 2768
nLine$ = 2776
dwCategory$ = 2784
nLevel$ = 2792
pwszMessage$ = 2800
?dtor$0@?0??TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z@4HA PROC ; `ATL::CTrace::TraceV'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 68 08
	00 00		 lea	 rcx, QWORD PTR wszBuf$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z@4HA ENDP ; `ATL::CTrace::TraceV'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z
_TEXT	SEGMENT
i$1 = 0
nCategory$ = 32
?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z PROC		; ATL::CTrace::GetCategoryName, COMDAT

; 132  : 	{

$LN7:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  0001c	c7 04 24 00 00
	00 00		 mov	 DWORD PTR i$1[rsp], 0
  00023	eb 08		 jmp	 SHORT $LN4@GetCategor
$LN2@GetCategor:
  00025	8b 04 24	 mov	 eax, DWORD PTR i$1[rsp]
  00028	ff c0		 inc	 eax
  0002a	89 04 24	 mov	 DWORD PTR i$1[rsp], eax
$LN4@GetCategor:
  0002d	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  00033	39 04 24	 cmp	 DWORD PTR i$1[rsp], eax
  00036	73 34		 jae	 SHORT $LN3@GetCategor

; 134  : 		{
; 135  : 			if (m_nMap[i].nCategory == nCategory)

  00038	8b 04 24	 mov	 eax, DWORD PTR i$1[rsp]
  0003b	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  00049	8b 54 24 20	 mov	 edx, DWORD PTR nCategory$[rsp]
  0004d	39 14 01	 cmp	 DWORD PTR [rcx+rax], edx
  00050	75 18		 jne	 SHORT $LN5@GetCategor

; 136  : 			{
; 137  : 				return m_nMap[i].categryName;

  00052	8b 04 24	 mov	 eax, DWORD PTR i$1[rsp]
  00055	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  0005c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  00063	48 8d 44 01 04	 lea	 rax, QWORD PTR [rcx+rax+4]
  00068	eb 04		 jmp	 SHORT $LN1@GetCategor
$LN5@GetCategor:

; 138  : 			}
; 139  : 		}

  0006a	eb b9		 jmp	 SHORT $LN2@GetCategor
$LN3@GetCategor:

; 140  : 
; 141  : 		return nullptr;

  0006c	33 c0		 xor	 eax, eax
$LN1@GetCategor:

; 142  : 	}

  0006e	48 83 c4 10	 add	 rsp, 16
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z ENDP		; ATL::CTrace::GetCategoryName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceISAPI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceISAPI@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceISAPI'', COMDAT

; 119  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceISAPI> atlTraceISAPI(_T("atlTraceISAPI"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG127239
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceISAPI@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceISAPI''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEBD@Z PROC ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 40 00	 mov	 edx, 4194304		; 00400000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEBD@Z ENDP ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSync@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSync@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSync'', COMDAT

; 118  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSync> atlTraceSync(_T("atlTraceSync"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG127190
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceSync@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSync''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEBD@Z PROC ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 20 00	 mov	 edx, 2097152		; 00200000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEBD@Z ENDP ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSecurity@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSecurity@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSecurity'', COMDAT

; 117  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSecurity> atlTraceSecurity(_T("atlTraceSecurity"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG127141
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceSecurity@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSecurity''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEBD@Z PROC ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 10 00	 mov	 edx, 1048576		; 00100000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEBD@Z ENDP ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceUtil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceUtil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceUtil'', COMDAT

; 116  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceUtil> atlTraceUtil(_T("atlTraceUtil"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG127092
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceUtil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceUtil''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceMap@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceMap@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceMap'', COMDAT

; 115  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceMap> atlTraceMap(_T("atlTraceMap"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG127087
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceMap@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceMap''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEBD@Z PROC ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 04 00	 mov	 edx, 262144		; 00040000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEBD@Z ENDP ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG127038
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEBD@Z PROC ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 02 00	 mov	 edx, 131072		; 00020000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEBD@Z ENDP ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceStencil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceStencil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceStencil'', COMDAT

; 113  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceStencil> atlTraceStencil(_T("atlTraceStencil"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126989
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceStencil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceStencil''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEBD@Z PROC ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 01 00	 mov	 edx, 65536		; 00010000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEBD@Z ENDP ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCache@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCache@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCache'', COMDAT

; 112  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCache> atlTraceCache(_T("atlTraceCache"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126940
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceCache@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCache''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 80 00 00	 mov	 edx, 32768		; 00008000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceTime@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceTime@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceTime'', COMDAT

; 111  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceTime> atlTraceTime(_T("atlTraceTime"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126891
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceTime@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceTime''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 40 00 00	 mov	 edx, 16384		; 00004000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126842
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 20 00 00	 mov	 edx, 8192		; 00002000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceAllocation@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceAllocation@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceAllocation'', COMDAT

; 109  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceAllocation> atlTraceAllocation(_T("atlTraceAllocation"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126793
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceAllocation@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceAllocation''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 10 00 00	 mov	 edx, 4096		; 00001000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceNotImpl@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceNotImpl@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceNotImpl'', COMDAT

; 108  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceNotImpl> atlTraceNotImpl(_T("atlTraceNotImpl"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126744
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceNotImpl@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceNotImpl''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 08 00 00	 mov	 edx, 2048		; 00000800H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSnapin@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSnapin@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSnapin'', COMDAT

; 107  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSnapin> atlTraceSnapin(_T("atlTraceSnapin"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126695
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceSnapin@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSnapin''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBProvider@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBProvider@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBProvider'', COMDAT

; 106  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBProvider> atlTraceDBProvider(_T("atlTraceDBProvider"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126646
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceDBProvider@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBProvider''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 02 00 00	 mov	 edx, 512		; 00000200H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBClient@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBClient@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBClient'', COMDAT

; 105  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBClient> atlTraceDBClient(_T("atlTraceDBClient"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126597
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceDBClient@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBClient''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 01 00 00	 mov	 edx, 256		; 00000100H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceHosting@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceHosting@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceHosting'', COMDAT

; 104  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceHosting> atlTraceHosting(_T("atlTraceHosting"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126548
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceHosting@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceHosting''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceControls@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceControls@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceControls'', COMDAT

; 103  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceControls> atlTraceControls(_T("atlTraceControls"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126499
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceControls@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceControls''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceWindowing@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceWindowing@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceWindowing'', COMDAT

; 102  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceWindowing> atlTraceWindowing(_T("atlTraceWindowing"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126450
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceWindowing@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceWindowing''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ
_TEXT	SEGMENT
this$ = 16
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ PROC	; ATL::CTraceCategoryEx<32,0>::operator unsigned int, COMDAT

; 79   : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00006	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ ENDP	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRefcount@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRefcount@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRefcount'', COMDAT

; 101  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRefcount> atlTraceRefcount(_T("atlTraceRefcount"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126401
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceRefcount@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRefcount''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 10 00 00 00	 mov	 edx, 16
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRegistrar@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRegistrar@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRegistrar'', COMDAT

; 100  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRegistrar> atlTraceRegistrar(_T("atlTraceRegistrar"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126352
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceRegistrar@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRegistrar''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 08 00 00 00	 mov	 edx, 8
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceQI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceQI@ATL@@YAXXZ PROC				; ATL::`dynamic initializer for 'atlTraceQI'', COMDAT

; 99   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceQI> atlTraceQI(_T("atlTraceQI"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126303
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceQI@ATL@@YAXXZ ENDP				; ATL::`dynamic initializer for 'atlTraceQI''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 04 00 00 00	 mov	 edx, 4
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCOM@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCOM@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCOM'', COMDAT

; 98   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCom> atlTraceCOM(_T("atlTraceCOM"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126254
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceCOM@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCOM''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ
_TEXT	SEGMENT
this$ = 16
??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ PROC		; ATL::CTraceCategoryEx<2,0>::operator unsigned int, COMDAT

; 79   : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00006	b8 02 00 00 00	 mov	 eax, 2

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ ENDP		; ATL::CTraceCategoryEx<2,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 02 00 00 00	 mov	 edx, 2
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceGeneral@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceGeneral@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceGeneral'', COMDAT

; 97   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceGeneral> atlTraceGeneral(_T("atlTraceGeneral"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG126205
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
  00023	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEBD@Z ; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??__EatlTraceGeneral@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceGeneral''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEBD@Z PROC	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEBD@Z ENDP	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEBD@Z PROC ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00023	ba 00 00 08 00	 mov	 edx, 524288		; 00080000H
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  0002d	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEBDI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEBD@Z ENDP ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPEAX@Z
_TEXT	SEGMENT
p$ = 48
?Free@CCRTAllocator@ATL@@SAXPEAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT

; 266  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 267  : 		free(p);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR p$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free

; 268  : 	}

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
?Free@CCRTAllocator@ATL@@SAXPEAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z
_TEXT	SEGMENT
nBytes$ = 48
?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z PROC		; ATL::CCRTAllocator::Allocate, COMDAT

; 261  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 262  : 		return malloc(nBytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR nBytes$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_malloc

; 263  : 	}

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?4U?$pair@HH@std@@$0A@@?$pair@HH@std@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
this$ = 16
_Right$ = 24
??$?4U?$pair@HH@std@@$0A@@?$pair@HH@std@@QEAAAEAU01@AEBU01@@Z PROC ; std::pair<int,int>::operator=<std::pair<int,int>,0>, COMDAT

; 187  :     pair& operator=(_Identity_t<const _Myself&> _Right) _NOEXCEPT_COND(conjunction_v<is_nothrow_copy_assignable<_Ty1>,

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 188  :         is_nothrow_copy_assignable<_Ty2>>) { // strengthened
; 189  : 
; 190  :         first  = _Right.first;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00017	89 08		 mov	 DWORD PTR [rax], ecx

; 191  :         second = _Right.second;

  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00023	8b 49 04	 mov	 ecx, DWORD PTR [rcx+4]
  00026	89 48 04	 mov	 DWORD PTR [rax+4], ecx

; 192  :         return *this;

  00029	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 193  :     }

  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
??$?4U?$pair@HH@std@@$0A@@?$pair@HH@std@@QEAAAEAU01@AEBU01@@Z ENDP ; std::pair<int,int>::operator=<std::pair<int,int>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0HH$0A@@?$pair@HH@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??$?0HH$0A@@?$pair@HH@std@@QEAA@XZ PROC			; std::pair<int,int>::pair<int,int><int,int,0>, COMDAT

; 93   :         : first(), second() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
  00011	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00016	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [rax+4], 0
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	5f		 pop	 rdi
  00023	c3		 ret	 0
??$?0HH$0A@@?$pair@HH@std@@QEAA@XZ ENDP			; std::pair<int,int>::pair<int,int><int,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
_TEXT	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4265 :     _In_z_ const _Elem* const _Right) { // return string + NTCTS

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 70	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003d	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 4266 :     using _String_type = basic_string<_Elem, _Traits, _Alloc>;
; 4267 :     using _Size_type   = typename _String_type::size_type;
; 4268 :     _String_type _Ans;

  00045	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0004a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004f	90		 npad	 1

; 4269 :     _Ans.reserve(_Convert_size<_Size_type>(_Left.size() + _Traits::length(_Right)));

  00050	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Left$[rsp]
  00058	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0005d	48 89 44 24 68	 mov	 QWORD PTR tv70[rsp], rax
  00062	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Right$[rsp]
  0006a	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0006f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv70[rsp]
  00074	48 03 c8	 add	 rcx, rax
  00077	48 8b c1	 mov	 rax, rcx
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00082	48 8b d0	 mov	 rdx, rax
  00085	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0008a	e8 00 00 00 00	 call	 ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

; 4270 :     _Ans += _Left;

  0008f	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Left$[rsp]
  00097	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0009c	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 4271 :     _Ans += _Right;

  000a1	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Right$[rsp]
  000a9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  000ae	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 4272 :     return _Ans;

  000b3	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Ans$[rsp]
  000b8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000c0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c5	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  000c9	83 c8 01	 or	 eax, 1
  000cc	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  000d0	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4273 : }

  000e2	48 8b f8	 mov	 rdi, rax
  000e5	48 8b cc	 mov	 rcx, rsp
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcFrameData
  000ef	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f4	48 8b c7	 mov	 rax, rdi
  000f7	48 8b 4c 24 70	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000fc	48 33 cc	 xor	 rcx, rsp
  000ff	e8 00 00 00 00	 call	 __security_check_cookie
  00104	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0010b	5f		 pop	 rdi
  0010c	c3		 ret	 0
  0010d	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ans$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$1
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ans$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$1
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspColorprimList@@YAXXZ
text$di	SEGMENT
$T1 = 112
$T2 = 168
$T3 = 172
$T4 = 176
$T5 = 180
$T6 = 184
$T7 = 188
$T8 = 192
$T9 = 196
$T10 = 200
$T11 = 204
$T12 = 208
$T13 = 212
$T14 = 216
__$ArrayPad$ = 264
??__ECspColorprimList@@YAXXZ PROC			; `dynamic initializer for 'CspColorprimList'', COMDAT

; 1187 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1174 : static const auto CspColorprimList = make_array<CspColorprim>(

  0002b	c7 84 24 a8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T2[rsp], 13
  00036	c7 84 24 ac 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T3[rsp], 12
  00041	c7 84 24 b0 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T4[rsp], 11
  0004c	c7 84 24 b4 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T5[rsp], 10
  00057	c7 84 24 b8 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T6[rsp], 9
  00062	c7 84 24 bc 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T7[rsp], 8
  0006d	c7 84 24 c0 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T8[rsp], 7
  00078	c7 84 24 c4 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T9[rsp], 6
  00083	c7 84 24 c8 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T10[rsp], 5
  0008e	c7 84 24 cc 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T11[rsp], 4
  00099	c7 84 24 d0 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T12[rsp], 2
  000a4	c7 84 24 d4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T13[rsp], 1
  000af	48 8d 84 24 a8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000b7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000bc	48 8d 84 24 ac
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000c4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000c9	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000d1	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000d6	48 8d 84 24 b4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000de	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  000e3	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  000eb	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  000f0	48 8d 84 24 bc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  000f8	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  000fd	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00105	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0010a	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00112	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00117	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0011f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00124	4c 8d 8c 24 cc
	00 00 00	 lea	 r9, QWORD PTR $T11[rsp]
  0012c	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T12[rsp]
  00134	48 8d 94 24 d4
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  0013c	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00144	e8 00 00 00 00	 call	 ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
  00149	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  0014e	48 8b f9	 mov	 rdi, rcx
  00151	48 8b f0	 mov	 rsi, rax
  00154	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00159	f3 a4		 rep movsb
  0015b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B
  00162	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  00167	48 8b f8	 mov	 rdi, rax
  0016a	48 8b f1	 mov	 rsi, rcx
  0016d	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00172	f3 a4		 rep movsb
  00174	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0017c	48 33 cc	 xor	 rcx, rsp
  0017f	e8 00 00 00 00	 call	 __security_check_cookie
  00184	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  0018b	5f		 pop	 rdi
  0018c	5e		 pop	 rsi
  0018d	c3		 ret	 0
??__ECspColorprimList@@YAXXZ ENDP			; `dynamic initializer for 'CspColorprimList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 56
$T2 = 96
<args_0>$ = 104
<args_1>$ = 112
<args_2>$ = 120
<args_3>$ = 128
<args_4>$ = 136
<args_5>$ = 144
<args_6>$ = 152
<args_7>$ = 160
<args_8>$ = 168
<args_9>$ = 176
<args_10>$ = 184
<args_11>$ = 192
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z PROC ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 68	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 44 24 70	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004c	8b 00		 mov	 eax, DWORD PTR [rax]
  0004e	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00052	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  0005d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  00065	8b 00		 mov	 eax, DWORD PTR [rax]
  00067	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  0006b	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00073	8b 00		 mov	 eax, DWORD PTR [rax]
  00075	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  00079	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  00087	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  0008f	8b 00		 mov	 eax, DWORD PTR [rax]
  00091	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  00095	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  0009d	8b 00		 mov	 eax, DWORD PTR [rax]
  0009f	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000ab	8b 00		 mov	 eax, DWORD PTR [rax]
  000ad	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b1	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000b9	8b 00		 mov	 eax, DWORD PTR [rax]
  000bb	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000bf	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000c7	8b 00		 mov	 eax, DWORD PTR [rax]
  000c9	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000cd	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000d5	8b 00		 mov	 eax, DWORD PTR [rax]
  000d7	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000db	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  000df	48 8b 7c 24 60	 mov	 rdi, QWORD PTR $T2[rsp]
  000e4	48 8b f0	 mov	 rsi, rax
  000e7	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000ec	f3 a4		 rep movsb
  000ee	48 8b 44 24 60	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  000f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000f8	48 33 cc	 xor	 rcx, rsp
  000fb	e8 00 00 00 00	 call	 __security_check_cookie
  00100	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00104	5f		 pop	 rdi
  00105	5e		 pop	 rsi
  00106	c3		 ret	 0
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ENDP ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspTransferList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 200
$T3 = 204
$T4 = 208
$T5 = 212
$T6 = 216
$T7 = 220
$T8 = 224
$T9 = 228
$T10 = 232
$T11 = 236
$T12 = 240
$T13 = 244
$T14 = 248
$T15 = 252
$T16 = 256
$T17 = 264
__$ArrayPad$ = 328
??__ECspTransferList@@YAXXZ PROC			; `dynamic initializer for 'CspTransferList'', COMDAT

; 1135 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1119 : static const auto CspTransferList = make_array<CspTransfer>(

  0002b	c7 84 24 c8 00
	00 00 12 00 00
	00		 mov	 DWORD PTR $T2[rsp], 18
  00036	c7 84 24 cc 00
	00 00 10 00 00
	00		 mov	 DWORD PTR $T3[rsp], 16
  00041	c7 84 24 d0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T4[rsp], 15
  0004c	c7 84 24 d4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T5[rsp], 14
  00057	c7 84 24 d8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T6[rsp], 13
  00062	c7 84 24 dc 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T7[rsp], 11
  0006d	c7 84 24 e0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T8[rsp], 10
  00078	c7 84 24 e4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T9[rsp], 9
  00083	c7 84 24 e8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T10[rsp], 8
  0008e	c7 84 24 ec 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T11[rsp], 7
  00099	c7 84 24 f0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T12[rsp], 6
  000a4	c7 84 24 f4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T13[rsp], 5
  000af	c7 84 24 f8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T14[rsp], 4
  000ba	c7 84 24 fc 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T15[rsp], 2
  000c5	c7 84 24 00 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T16[rsp], 1
  000d0	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000d8	48 89 44 24 78	 mov	 QWORD PTR [rsp+120], rax
  000dd	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000e5	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000ea	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000f2	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000f7	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000ff	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  00104	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  0010c	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  00111	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00119	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  0011e	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00126	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  0012b	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00133	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00138	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00140	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00145	48 8d 84 24 ec
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  0014d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00152	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0015a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0015f	48 8d 84 24 f4
	00 00 00	 lea	 rax, QWORD PTR $T13[rsp]
  00167	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0016c	4c 8d 8c 24 f8
	00 00 00	 lea	 r9, QWORD PTR $T14[rsp]
  00174	4c 8d 84 24 fc
	00 00 00	 lea	 r8, QWORD PTR $T15[rsp]
  0017c	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00184	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  0018c	e8 00 00 00 00	 call	 ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
  00191	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00199	48 8b f9	 mov	 rdi, rcx
  0019c	48 8b f0	 mov	 rsi, rax
  0019f	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001a4	f3 a4		 rep movsb
  001a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B
  001ad	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001b5	48 8b f8	 mov	 rdi, rax
  001b8	48 8b f1	 mov	 rsi, rcx
  001bb	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001c0	f3 a4		 rep movsb
  001c2	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001ca	48 33 cc	 xor	 rcx, rsp
  001cd	e8 00 00 00 00	 call	 __security_check_cookie
  001d2	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  001d9	5f		 pop	 rdi
  001da	5e		 pop	 rsi
  001db	c3		 ret	 0
??__ECspTransferList@@YAXXZ ENDP			; `dynamic initializer for 'CspTransferList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 72
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
<args_14>$ = 232
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z PROC ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR <args_14>$[rsp]
  00105	8b 00		 mov	 eax, DWORD PTR [rax]
  00107	89 44 24 38	 mov	 DWORD PTR $T1[rsp+56], eax
  0010b	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  0010f	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00114	48 8b f0	 mov	 rsi, rax
  00117	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0011c	f3 a4		 rep movsb
  0011e	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00123	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00128	48 33 cc	 xor	 rcx, rsp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00134	5f		 pop	 rdi
  00135	5e		 pop	 rsi
  00136	c3		 ret	 0
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ENDP ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspMatrixList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 192
$T3 = 196
$T4 = 200
$T5 = 204
$T6 = 208
$T7 = 212
$T8 = 216
$T9 = 220
$T10 = 224
$T11 = 228
$T12 = 232
$T13 = 236
$T14 = 240
$T15 = 244
$T16 = 248
__$ArrayPad$ = 304
??__ECspMatrixList@@YAXXZ PROC				; `dynamic initializer for 'CspMatrixList'', COMDAT

; 1080 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1065 : static const auto CspMatrixList = make_array<CspMatrix>(

  0002b	c7 84 24 c0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T2[rsp], 15
  00036	c7 84 24 c4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T3[rsp], 14
  00041	c7 84 24 c8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T4[rsp], 13
  0004c	c7 84 24 cc 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T5[rsp], 12
  00057	c7 84 24 d0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T6[rsp], 10
  00062	c7 84 24 d4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T7[rsp], 9
  0006d	c7 84 24 d8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T8[rsp], 8
  00078	c7 84 24 dc 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T9[rsp], 7
  00083	c7 84 24 e0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T10[rsp], 6
  0008e	c7 84 24 e4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T11[rsp], 5
  00099	c7 84 24 e8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T12[rsp], 4
  000a4	c7 84 24 ec 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T13[rsp], 2
  000af	c7 84 24 f0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T14[rsp], 1
  000ba	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T15[rsp], 0
  000c5	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000cd	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000d2	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000da	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000df	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000e7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000ec	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000f4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000f9	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00101	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  00106	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0010e	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  00113	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  0011b	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00120	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00128	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0012d	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00135	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0013a	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00142	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00147	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0014f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00154	4c 8d 8c 24 ec
	00 00 00	 lea	 r9, QWORD PTR $T13[rsp]
  0015c	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T14[rsp]
  00164	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  0016c	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00174	e8 00 00 00 00	 call	 ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
  00179	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00181	48 8b f9	 mov	 rdi, rcx
  00184	48 8b f0	 mov	 rsi, rax
  00187	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0018c	f3 a4		 rep movsb
  0018e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B
  00195	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  0019d	48 8b f8	 mov	 rdi, rax
  001a0	48 8b f1	 mov	 rsi, rcx
  001a3	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  001a8	f3 a4		 rep movsb
  001aa	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b2	48 33 cc	 xor	 rcx, rsp
  001b5	e8 00 00 00 00	 call	 __security_check_cookie
  001ba	48 81 c4 48 01
	00 00		 add	 rsp, 328		; 00000148H
  001c1	5f		 pop	 rdi
  001c2	5e		 pop	 rsi
  001c3	c3		 ret	 0
??__ECspMatrixList@@YAXXZ ENDP				; `dynamic initializer for 'CspMatrixList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 64
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z PROC ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 40	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  00101	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00106	48 8b f0	 mov	 rsi, rax
  00109	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0010e	f3 a4		 rep movsb
  00110	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00115	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0011a	48 33 cc	 xor	 rcx, rsp
  0011d	e8 00 00 00 00	 call	 __security_check_cookie
  00122	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00126	5f		 pop	 rdi
  00127	5e		 pop	 rsi
  00128	c3		 ret	 0
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ENDP ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\tchar.h
;	COMDAT _tcscmp
_TEXT	SEGMENT
_s1$ = 48
_s2$ = 56
_tcscmp	PROC						; COMDAT

; 1681 : _Check_return_ __inline int _tcscmp(_In_z_ _CPC _s1,_In_z_ _CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _s2$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _s1$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__mbscmp
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
_tcscmp	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\shared\winerror.h
;	COMDAT HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = 0
x$ = 32
HRESULT_FROM_WIN32 PROC					; COMDAT

; 28857: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]
  0001c	83 7c 24 20 00	 cmp	 DWORD PTR x$[rsp], 0
  00021	7f 09		 jg	 SHORT $LN3@HRESULT_FR
  00023	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00027	89 04 24	 mov	 DWORD PTR tv68[rsp], eax
  0002a	eb 15		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  0002c	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00030	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00035	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  0003a	0f ba e8 1f	 bts	 eax, 31
  0003e	89 04 24	 mov	 DWORD PTR tv68[rsp], eax
$LN4@HRESULT_FR:
  00041	8b 04 24	 mov	 eax, DWORD PTR tv68[rsp]
  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = 32
tv85 = 88
tv93 = 96
__$ArrayPad$ = 104
this$ = 144
__formal$ = 152
_Lobj$ = 160
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT

; 173  :     void __CLR_OR_THIS_CALL _Getvals(_Elem2, const _Locinfo& _Lobj) { // get values

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 1e 00 00 00	 mov	 ecx, 30
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  0002c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00033	48 33 c4	 xor	 rax, rsp
  00036	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 174  :         _Cvt = _Lobj._Getcvt();

  0003b	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00040	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
  0004e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	48 8d 79 2c	 lea	 rdi, QWORD PTR [rcx+44]
  0005a	48 8b f0	 mov	 rsi, rax
  0005d	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  00062	f3 a4		 rep movsb

; 175  : 
; 176  :         if (is_same_v<_Elem2, wchar_t>) {

  00064	33 c0		 xor	 eax, eax
  00066	83 f8 01	 cmp	 eax, 1
  00069	74 61		 je	 SHORT $LN2@Getvals

; 177  :             _Days = reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getdays())));

  0006b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  00073	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ
  00079	48 8b c8	 mov	 rcx, rax
  0007c	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  00081	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00089	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 178  :             _Months =

  0008d	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ
  0009b	48 8b c8	 mov	 rcx, rax
  0009e	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  000a3	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ab	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 179  :                 reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getmonths())));
; 180  :             _Ampm = reinterpret_cast<const _Elem*>(_Maklocwcs(L":AM:am:PM:pm"));

  000af	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  000b6	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  000bb	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c3	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 181  :         } else {

  000c7	e9 a3 00 00 00	 jmp	 $LN3@Getvals
$LN2@Getvals:

; 182  :             _Days   = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem*>(nullptr), _Cvt);

  000cc	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000d4	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  000d8	48 89 44 24 58	 mov	 QWORD PTR tv85[rsp], rax
  000dd	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  000e5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ
  000eb	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv85[rsp]
  000f0	4c 8b c1	 mov	 r8, rcx
  000f3	33 d2		 xor	 edx, edx
  000f5	48 8b c8	 mov	 rcx, rax
  000f8	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  000fd	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00105	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 183  :             _Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem*>(nullptr), _Cvt);

  00109	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00111	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  00115	48 89 44 24 60	 mov	 QWORD PTR tv93[rsp], rax
  0011a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  00122	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ
  00128	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv93[rsp]
  0012d	4c 8b c1	 mov	 r8, rcx
  00130	33 d2		 xor	 edx, edx
  00132	48 8b c8	 mov	 rcx, rax
  00135	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  0013a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00142	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 184  :             _Ampm   = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem*>(nullptr), _Cvt);

  00146	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0014e	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  00152	4c 8b c0	 mov	 r8, rax
  00155	33 d2		 xor	 edx, edx
  00157	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  0015e	e8 00 00 00 00	 call	 ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
  00163	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0016b	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
$LN3@Getvals:

; 185  :         }
; 186  :     }

  0016f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00174	48 33 cc	 xor	 rcx, rsp
  00177	e8 00 00 00 00	 call	 __security_check_cookie
  0017c	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00180	5f		 pop	 rdi
  00181	5e		 pop	 rsi
  00182	c3		 ret	 0
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xloctime
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = 32
tv85 = 88
tv93 = 96
__$ArrayPad$ = 104
this$ = 144
__formal$ = 152
_Lobj$ = 160
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT

; 173  :     void __CLR_OR_THIS_CALL _Getvals(_Elem2, const _Locinfo& _Lobj) { // get values

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 1e 00 00 00	 mov	 ecx, 30
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  0002c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00033	48 33 c4	 xor	 rax, rsp
  00036	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 174  :         _Cvt = _Lobj._Getcvt();

  0003b	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00040	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
  0004e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	48 8d 79 2c	 lea	 rdi, QWORD PTR [rcx+44]
  0005a	48 8b f0	 mov	 rsi, rax
  0005d	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  00062	f3 a4		 rep movsb

; 175  : 
; 176  :         if (is_same_v<_Elem2, wchar_t>) {

  00064	33 c0		 xor	 eax, eax
  00066	83 f8 01	 cmp	 eax, 1
  00069	74 61		 je	 SHORT $LN2@Getvals

; 177  :             _Days = reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getdays())));

  0006b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  00073	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ
  00079	48 8b c8	 mov	 rcx, rax
  0007c	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  00081	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00089	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 178  :             _Months =

  0008d	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ
  0009b	48 8b c8	 mov	 rcx, rax
  0009e	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  000a3	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ab	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 179  :                 reinterpret_cast<const _Elem*>(_Maklocwcs(reinterpret_cast<const wchar_t*>(_Lobj._W_Getmonths())));
; 180  :             _Ampm = reinterpret_cast<const _Elem*>(_Maklocwcs(L":AM:am:PM:pm"));

  000af	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
  000b6	e8 00 00 00 00	 call	 ?_Maklocwcs@std@@YAPEA_WPEB_W@Z ; std::_Maklocwcs
  000bb	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c3	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 181  :         } else {

  000c7	e9 a3 00 00 00	 jmp	 $LN3@Getvals
$LN2@Getvals:

; 182  :             _Days   = _Maklocstr(_Lobj._Getdays(), static_cast<_Elem*>(nullptr), _Cvt);

  000cc	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000d4	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  000d8	48 89 44 24 58	 mov	 QWORD PTR tv85[rsp], rax
  000dd	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  000e5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ
  000eb	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv85[rsp]
  000f0	4c 8b c1	 mov	 r8, rcx
  000f3	33 d2		 xor	 edx, edx
  000f5	48 8b c8	 mov	 rcx, rax
  000f8	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
  000fd	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00105	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 183  :             _Months = _Maklocstr(_Lobj._Getmonths(), static_cast<_Elem*>(nullptr), _Cvt);

  00109	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00111	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  00115	48 89 44 24 60	 mov	 QWORD PTR tv93[rsp], rax
  0011a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Lobj$[rsp]
  00122	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ
  00128	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv93[rsp]
  0012d	4c 8b c1	 mov	 r8, rcx
  00130	33 d2		 xor	 edx, edx
  00132	48 8b c8	 mov	 rcx, rax
  00135	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
  0013a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00142	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 184  :             _Ampm   = _Maklocstr(":AM:am:PM:pm", static_cast<_Elem*>(nullptr), _Cvt);

  00146	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0014e	48 83 c0 2c	 add	 rax, 44			; 0000002cH
  00152	4c 8b c0	 mov	 r8, rax
  00155	33 d2		 xor	 edx, edx
  00157	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
  0015e	e8 00 00 00 00	 call	 ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
  00163	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0016b	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
$LN3@Getvals:

; 185  :         }
; 186  :     }

  0016f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00174	48 33 cc	 xor	 rcx, rsp
  00177	e8 00 00 00 00	 call	 __security_check_cookie
  0017c	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00180	5f		 pop	 rdi
  00181	5e		 pop	 rsi
  00182	c3		 ret	 0
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
_TEXT	SEGMENT
_Time$ = 48
time	PROC

; 535  :         {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 536  :             return _time64(_Time);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Time$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__time64

; 537  :         }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\time.h
_TEXT	SEGMENT
_Time$ = 48
localtime PROC

; 509  :         {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 510  :             #pragma warning(push)
; 511  :             #pragma warning(disable: 4996)
; 512  :             return _localtime64(_Time);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Time$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__localtime64

; 513  :             #pragma warning(pop)
; 514  :         }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
localtime ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z
_TEXT	SEGMENT
tv69 = 32
_Byte$ = 64
_File$ = 72
??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z PROC		; std::_Ungetc<char>, COMDAT

; 125  : inline bool _Ungetc(const char& _Byte, FILE* _File) { // put back a char element to a C stream

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 126  :     return _CSTD ungetc(static_cast<unsigned char>(_Byte), _File) != EOF;

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR _Byte$[rsp]
  00028	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  0002b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _File$[rsp]
  00030	8b c8		 mov	 ecx, eax
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ungetc
  00038	83 f8 ff	 cmp	 eax, -1
  0003b	74 0a		 je	 SHORT $LN3@Ungetc
  0003d	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  00045	eb 08		 jmp	 SHORT $LN4@Ungetc
$LN3@Ungetc:
  00047	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@Ungetc:
  0004f	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 127  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z ENDP		; std::_Ungetc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z
_TEXT	SEGMENT
tv69 = 32
_Byte$ = 64
_File$ = 72
??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z PROC		; std::_Fputc<char>, COMDAT

; 102  : inline bool _Fputc(char _Byte, FILE* _File) { // put a char element to a C stream

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	0f b6 4c 24 40	 movzx	 ecx, BYTE PTR [rsp+64]

; 103  :     return _CSTD fputc(_Byte, _File) != EOF;

  00022	0f be 44 24 40	 movsx	 eax, BYTE PTR _Byte$[rsp]
  00027	48 8b 54 24 48	 mov	 rdx, QWORD PTR _File$[rsp]
  0002c	8b c8		 mov	 ecx, eax
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputc
  00034	83 f8 ff	 cmp	 eax, -1
  00037	74 0a		 je	 SHORT $LN3@Fputc
  00039	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  00041	eb 08		 jmp	 SHORT $LN4@Fputc
$LN3@Fputc:
  00043	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@Fputc:
  0004b	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 104  : }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z ENDP		; std::_Fputc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z
_TEXT	SEGMENT
_Meta$ = 32
_Byte$ = 64
_File$ = 72
??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z PROC		; std::_Fgetc<char>, COMDAT

; 61   : inline bool _Fgetc(char& _Byte, FILE* _File) { // get a char element from a C stream

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 62   :     int _Meta;
; 63   :     if ((_Meta = _CSTD fgetc(_File)) == EOF) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _File$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fgetc
  0002e	89 44 24 20	 mov	 DWORD PTR _Meta$[rsp], eax
  00032	83 7c 24 20 ff	 cmp	 DWORD PTR _Meta$[rsp], -1
  00037	75 06		 jne	 SHORT $LN2@Fgetc

; 64   :         return false;

  00039	32 c0		 xor	 al, al
  0003b	eb 10		 jmp	 SHORT $LN1@Fgetc

; 65   :     } else { // got one, convert to char

  0003d	eb 0e		 jmp	 SHORT $LN3@Fgetc
$LN2@Fgetc:

; 66   :         _Byte = static_cast<char>(_Meta);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR _Byte$[rsp]
  00044	0f b6 4c 24 20	 movzx	 ecx, BYTE PTR _Meta$[rsp]
  00049	88 08		 mov	 BYTE PTR [rax], cl

; 67   :         return true;

  0004b	b0 01		 mov	 al, 1
$LN3@Fgetc:
$LN1@Fgetc:

; 68   :     }
; 69   : }

  0004d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z ENDP		; std::_Fgetc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocnum
;	COMDAT ?_Maklocwcs@std@@YAPEA_WPEB_W@Z
_TEXT	SEGMENT
_Count$ = 48
_Ptrdest$ = 56
_Ptr$ = 80
?_Maklocwcs@std@@YAPEA_WPEB_W@Z PROC			; std::_Maklocwcs, COMDAT

; 89   : inline wchar_t* _Maklocwcs(const wchar_t* _Ptr) { // copy NTWCS to allocated storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 90   :     const size_t _Count = _CSTD wcslen(_Ptr) + 1;

  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcslen
  00029	48 ff c0	 inc	 rax
  0002c	48 89 44 24 30	 mov	 QWORD PTR _Count$[rsp], rax

; 91   : 
; 92   :     wchar_t* _Ptrdest = static_cast<wchar_t*>(_calloc_dbg(_Count, sizeof(wchar_t), _CRT_BLOCK, __FILE__, __LINE__));

  00031	c7 44 24 20 5c
	00 00 00	 mov	 DWORD PTR [rsp+32], 92	; 0000005cH
  00039	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0GI@HCALAGOG@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00040	41 b8 02 00 00
	00		 mov	 r8d, 2
  00046	ba 02 00 00 00	 mov	 edx, 2
  0004b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Count$[rsp]
  00050	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__calloc_dbg
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptrdest$[rsp], rax

; 93   : 
; 94   :     if (!_Ptrdest) {

  0005b	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptrdest$[rsp], 0
  00061	75 05		 jne	 SHORT $LN2@Maklocwcs

; 95   :         _Xbad_alloc();

  00063	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Maklocwcs:

; 96   :     }
; 97   : 
; 98   :     _CSTD wmemcpy(_Ptrdest, _Ptr, _Count);

  00068	4c 8b 44 24 30	 mov	 r8, QWORD PTR _Count$[rsp]
  0006d	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00072	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptrdest$[rsp]
  00077	e8 00 00 00 00	 call	 wmemcpy

; 99   :     return _Ptrdest;

  0007c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptrdest$[rsp]
$LN3@Maklocwcs:

; 100  : }

  00081	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00085	5f		 pop	 rdi
  00086	c3		 ret	 0
?_Maklocwcs@std@@YAPEA_WPEB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale
;	COMDAT ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Count$ = 48
_Count1$ = 56
_Wchars$ = 64
_Ptr1$ = 72
_Bytes$ = 80
_Wc$ = 100
_Mbst1$ = 136
_Ptrdest$ = 152
_Ptrnext$ = 160
_Mbst2$ = 184
_Ptr$ = 224
__formal$ = 232
_Cvt$ = 240
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z PROC ; std::_Maklocstr<wchar_t>, COMDAT

; 582  : inline wchar_t* __CRTDECL _Maklocstr(const char* _Ptr, wchar_t*, const _Locinfo::_Cvtvec& _Cvt) {

$LN12:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+224]

; 583  :     // convert C string to wchar_t sequence using _Cvtvec
; 584  :     size_t _Count;
; 585  :     size_t _Count1;
; 586  :     size_t _Wchars;
; 587  :     const char* _Ptr1;
; 588  :     int _Bytes;
; 589  :     wchar_t _Wc;
; 590  :     mbstate_t _Mbst1 = {};

  0002e	48 8d 84 24 88
	00 00 00	 lea	 rax, QWORD PTR _Mbst1$[rsp]
  00036	48 8b f8	 mov	 rdi, rax
  00039	33 c0		 xor	 eax, eax
  0003b	b9 08 00 00 00	 mov	 ecx, 8
  00040	f3 aa		 rep stosb

; 591  : 
; 592  :     _Count1 = _CSTD strlen(_Ptr) + 1;

  00042	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0004a	e8 00 00 00 00	 call	 strlen
  0004f	48 ff c0	 inc	 rax
  00052	48 89 44 24 38	 mov	 QWORD PTR _Count1$[rsp], rax

; 593  :     for (_Count = _Count1, _Wchars = 0, _Ptr1 = _Ptr; 0 < _Count; _Count -= _Bytes, _Ptr1 += _Bytes, ++_Wchars) {

  00057	48 8b 44 24 38	 mov	 rax, QWORD PTR _Count1$[rsp]
  0005c	48 89 44 24 30	 mov	 QWORD PTR _Count$[rsp], rax
  00061	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR _Wchars$[rsp], 0
  0006a	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00072	48 89 44 24 48	 mov	 QWORD PTR _Ptr1$[rsp], rax
  00077	eb 37		 jmp	 SHORT $LN4@Maklocstr
$LN2@Maklocstr:
  00079	48 63 44 24 50	 movsxd	 rax, DWORD PTR _Bytes$[rsp]
  0007e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Count$[rsp]
  00083	48 2b c8	 sub	 rcx, rax
  00086	48 8b c1	 mov	 rax, rcx
  00089	48 89 44 24 30	 mov	 QWORD PTR _Count$[rsp], rax
  0008e	48 63 44 24 50	 movsxd	 rax, DWORD PTR _Bytes$[rsp]
  00093	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ptr1$[rsp]
  00098	48 03 c8	 add	 rcx, rax
  0009b	48 8b c1	 mov	 rax, rcx
  0009e	48 89 44 24 48	 mov	 QWORD PTR _Ptr1$[rsp], rax
  000a3	48 8b 44 24 40	 mov	 rax, QWORD PTR _Wchars$[rsp]
  000a8	48 ff c0	 inc	 rax
  000ab	48 89 44 24 40	 mov	 QWORD PTR _Wchars$[rsp], rax
$LN4@Maklocstr:
  000b0	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  000b6	76 38		 jbe	 SHORT $LN3@Maklocstr

; 594  :         if ((_Bytes = _Mbrtowc(&_Wc, _Ptr1, _Count, &_Mbst1, &_Cvt)) <= 0) {

  000b8	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR _Cvt$[rsp]
  000c0	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c5	4c 8d 8c 24 88
	00 00 00	 lea	 r9, QWORD PTR _Mbst1$[rsp]
  000cd	4c 8b 44 24 30	 mov	 r8, QWORD PTR _Count$[rsp]
  000d2	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr1$[rsp]
  000d7	48 8d 4c 24 64	 lea	 rcx, QWORD PTR _Wc$[rsp]
  000dc	e8 00 00 00 00	 call	 _Mbrtowc
  000e1	89 44 24 50	 mov	 DWORD PTR _Bytes$[rsp], eax
  000e5	83 7c 24 50 00	 cmp	 DWORD PTR _Bytes$[rsp], 0
  000ea	7f 02		 jg	 SHORT $LN8@Maklocstr

; 595  :             break;

  000ec	eb 02		 jmp	 SHORT $LN3@Maklocstr
$LN8@Maklocstr:

; 596  :         }
; 597  :     }

  000ee	eb 89		 jmp	 SHORT $LN2@Maklocstr
$LN3@Maklocstr:

; 598  : 
; 599  :     ++_Wchars; // count terminating nul

  000f0	48 8b 44 24 40	 mov	 rax, QWORD PTR _Wchars$[rsp]
  000f5	48 ff c0	 inc	 rax
  000f8	48 89 44 24 40	 mov	 QWORD PTR _Wchars$[rsp], rax

; 600  : 
; 601  :     wchar_t* _Ptrdest = static_cast<wchar_t*>(_calloc_dbg(_Wchars, sizeof(wchar_t), _CRT_BLOCK, __FILE__, __LINE__));

  000fd	c7 44 24 20 59
	02 00 00	 mov	 DWORD PTR [rsp+32], 601	; 00000259H
  00105	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0GI@PBEGAEEH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0010c	41 b8 02 00 00
	00		 mov	 r8d, 2
  00112	ba 02 00 00 00	 mov	 edx, 2
  00117	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Wchars$[rsp]
  0011c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__calloc_dbg
  00122	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR _Ptrdest$[rsp], rax

; 602  : 
; 603  :     if (!_Ptrdest) {

  0012a	48 83 bc 24 98
	00 00 00 00	 cmp	 QWORD PTR _Ptrdest$[rsp], 0
  00133	75 05		 jne	 SHORT $LN9@Maklocstr

; 604  :         _Xbad_alloc();

  00135	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN9@Maklocstr:

; 605  :     }
; 606  : 
; 607  :     wchar_t* _Ptrnext = _Ptrdest;

  0013a	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR _Ptrdest$[rsp]
  00142	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR _Ptrnext$[rsp], rax

; 608  :     mbstate_t _Mbst2  = {};

  0014a	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR _Mbst2$[rsp]
  00152	48 8b f8	 mov	 rdi, rax
  00155	33 c0		 xor	 eax, eax
  00157	b9 08 00 00 00	 mov	 ecx, 8
  0015c	f3 aa		 rep stosb

; 609  : 
; 610  :     for (; 0 < _Wchars; _Count -= _Bytes, _Ptr += _Bytes, --_Wchars, ++_Ptrnext) {

  0015e	eb 51		 jmp	 SHORT $LN7@Maklocstr
$LN5@Maklocstr:
  00160	48 63 44 24 50	 movsxd	 rax, DWORD PTR _Bytes$[rsp]
  00165	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Count$[rsp]
  0016a	48 2b c8	 sub	 rcx, rax
  0016d	48 8b c1	 mov	 rax, rcx
  00170	48 89 44 24 30	 mov	 QWORD PTR _Count$[rsp], rax
  00175	48 63 44 24 50	 movsxd	 rax, DWORD PTR _Bytes$[rsp]
  0017a	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00182	48 03 c8	 add	 rcx, rax
  00185	48 8b c1	 mov	 rax, rcx
  00188	48 89 84 24 e0
	00 00 00	 mov	 QWORD PTR _Ptr$[rsp], rax
  00190	48 8b 44 24 40	 mov	 rax, QWORD PTR _Wchars$[rsp]
  00195	48 ff c8	 dec	 rax
  00198	48 89 44 24 40	 mov	 QWORD PTR _Wchars$[rsp], rax
  0019d	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR _Ptrnext$[rsp]
  001a5	48 83 c0 02	 add	 rax, 2
  001a9	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR _Ptrnext$[rsp], rax
$LN7@Maklocstr:
  001b1	48 83 7c 24 40
	00		 cmp	 QWORD PTR _Wchars$[rsp], 0
  001b7	76 41		 jbe	 SHORT $LN6@Maklocstr

; 611  :         if ((_Bytes = _Mbrtowc(_Ptrnext, _Ptr, _Count1, &_Mbst2, &_Cvt)) <= 0) {

  001b9	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR _Cvt$[rsp]
  001c1	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001c6	4c 8d 8c 24 b8
	00 00 00	 lea	 r9, QWORD PTR _Mbst2$[rsp]
  001ce	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count1$[rsp]
  001d3	48 8b 94 24 e0
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  001db	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ptrnext$[rsp]
  001e3	e8 00 00 00 00	 call	 _Mbrtowc
  001e8	89 44 24 50	 mov	 DWORD PTR _Bytes$[rsp], eax
  001ec	83 7c 24 50 00	 cmp	 DWORD PTR _Bytes$[rsp], 0
  001f1	7f 02		 jg	 SHORT $LN10@Maklocstr

; 612  :             break;

  001f3	eb 05		 jmp	 SHORT $LN6@Maklocstr
$LN10@Maklocstr:

; 613  :         }
; 614  :     }

  001f5	e9 66 ff ff ff	 jmp	 $LN5@Maklocstr
$LN6@Maklocstr:

; 615  : 
; 616  :     *_Ptrnext = L'\0';

  001fa	33 c0		 xor	 eax, eax
  001fc	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ptrnext$[rsp]
  00204	66 89 01	 mov	 WORD PTR [rcx], ax

; 617  : 
; 618  :     return _Ptrdest;

  00207	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR _Ptrdest$[rsp]
$LN11@Maklocstr:

; 619  : }

  0020f	48 8b f8	 mov	 rdi, rax
  00212	48 8b cc	 mov	 rcx, rsp
  00215	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcFrameData
  0021c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00221	48 8b c7	 mov	 rax, rdi
  00224	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  0022b	5f		 pop	 rdi
  0022c	c3		 ret	 0
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ENDP ; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale
;	COMDAT ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
_TEXT	SEGMENT
_Facptr$ = 32
_Ptr0$ = 40
tv71 = 48
this$ = 80
_Id$ = 88
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z PROC	; std::locale::_Getfacet, COMDAT

; 374  :     const facet* _Getfacet(size_t _Id) const { // look up a facet in locale object

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 375  :         const facet* _Facptr = _Id < _Ptr->_Facetcount ? _Ptr->_Facetvec[_Id] : nullptr; // null if id off end

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0002c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00030	48 39 44 24 58	 cmp	 QWORD PTR _Id$[rsp], rax
  00035	73 1d		 jae	 SHORT $LN6@Getfacet
  00037	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00040	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00044	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Id$[rsp]
  00049	48 8b 04 c8	 mov	 rax, QWORD PTR [rax+rcx*8]
  0004d	48 89 44 24 30	 mov	 QWORD PTR tv71[rsp], rax
  00052	eb 09		 jmp	 SHORT $LN7@Getfacet
$LN6@Getfacet:
  00054	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR tv71[rsp], 0
$LN7@Getfacet:
  0005d	48 8b 44 24 30	 mov	 rax, QWORD PTR tv71[rsp]
  00062	48 89 44 24 20	 mov	 QWORD PTR _Facptr$[rsp], rax

; 376  :         if (_Facptr || !_Ptr->_Xparent) {

  00067	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Facptr$[rsp], 0
  0006d	75 11		 jne	 SHORT $LN3@Getfacet
  0006f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00074	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00078	0f b6 40 24	 movzx	 eax, BYTE PTR [rax+36]
  0007c	85 c0		 test	 eax, eax
  0007e	75 07		 jne	 SHORT $LN2@Getfacet
$LN3@Getfacet:

; 377  :             return _Facptr; // found facet or not transparent

  00080	48 8b 44 24 20	 mov	 rax, QWORD PTR _Facptr$[rsp]
  00085	eb 30		 jmp	 SHORT $LN1@Getfacet
$LN2@Getfacet:

; 378  :         }
; 379  : 
; 380  :         // look in current locale
; 381  :         locale::_Locimp* _Ptr0 = _Getgloballocale();

  00087	e8 00 00 00 00	 call	 ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale
  0008c	48 89 44 24 28	 mov	 QWORD PTR _Ptr0$[rsp], rax

; 382  :         if (_Id < _Ptr0->_Facetcount) {

  00091	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptr0$[rsp]
  00096	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0009a	48 39 44 24 58	 cmp	 QWORD PTR _Id$[rsp], rax
  0009f	73 14		 jae	 SHORT $LN4@Getfacet

; 383  :             return _Ptr0->_Facetvec[_Id]; // get from current locale

  000a1	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptr0$[rsp]
  000a6	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000aa	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Id$[rsp]
  000af	48 8b 04 c8	 mov	 rax, QWORD PTR [rax+rcx*8]
  000b3	eb 02		 jmp	 SHORT $LN1@Getfacet
$LN4@Getfacet:

; 384  :         }
; 385  : 
; 386  :         return nullptr; // no entry in current locale

  000b5	33 c0		 xor	 eax, eax
$LN1@Getfacet:

; 387  :     }

  000b7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ENDP	; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale
;	COMDAT ??1locale@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
tv84 = 40
this$ = 64
??1locale@std@@QEAA@XZ PROC				; std::locale::~locale, COMDAT

; 351  :     ~locale() noexcept {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 352  :         if (_Ptr) {

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 49		 je	 SHORT $LN2@locale

; 353  :             delete _Ptr->_Decref();

  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00038	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	ff 50 10	 call	 QWORD PTR [rax+16]
  00042	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00047	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  0004d	74 1b		 je	 SHORT $LN4@locale
  0004f	48 8b 44 24 20	 mov	 rax, QWORD PTR $T1[rsp]
  00054	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00057	ba 01 00 00 00	 mov	 edx, 1
  0005c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00061	ff 10		 call	 QWORD PTR [rax]
  00063	48 89 44 24 28	 mov	 QWORD PTR tv84[rsp], rax
  00068	eb 09		 jmp	 SHORT $LN5@locale
$LN4@locale:
  0006a	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv84[rsp], 0
$LN5@locale:
$LN2@locale:

; 354  :         }
; 355  :     }

  00073	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00077	5f		 pop	 rdi
  00078	c3		 ret	 0
??1locale@std@@QEAA@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\typeinfo
;	COMDAT ?_Throw_bad_cast@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_cast@std@@YAXXZ PROC			; std::_Throw_bad_cast, COMDAT

; 78   : [[noreturn]] inline void _Throw_bad_cast() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 79   :     _THROW(bad_cast{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_cast@std@@QEAA@XZ ; std::bad_cast::bad_cast
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 80   : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_cast@std@@YAXXZ ENDP			; std::_Throw_bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_cast@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_cast@std@@UEAAPEAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_cast@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_cast@std@@UEAAPEAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_cast@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_cast@std@@QEAA@AEBV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_cast@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_cast@std@@QEAA@AEBV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_cast::bad_cast'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_cast::bad_cast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_cast::bad_cast'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_cast::bad_cast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_cast@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_cast@std@@UEAA@XZ PROC				; std::bad_cast::~bad_cast, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_cast@std@@UEAA@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA PROC		; `std::bad_cast::~bad_cast'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA ENDP		; `std::bad_cast::~bad_cast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA PROC		; `std::bad_cast::~bad_cast'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA ENDP		; `std::bad_cast::~bad_cast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_typeinfo.h
;	COMDAT ??0bad_cast@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_cast@std@@QEAA@XZ PROC				; std::bad_cast::bad_cast, COMDAT

; 131  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 130  :         : exception("bad cast", 1)

  0001e	41 b8 01 00 00
	00		 mov	 r8d, 1
  00024	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast@
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00030	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00035	90		 npad	 1

; 131  :     {

  00036	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_cast@std@@6B@
  00042	48 89 08	 mov	 QWORD PTR [rax], rcx

; 132  :     }

  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0bad_cast@std@@QEAA@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA PROC		; `std::bad_cast::bad_cast'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA ENDP		; `std::bad_cast::bad_cast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA PROC		; `std::bad_cast::bad_cast'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA ENDP		; `std::bad_cast::bad_cast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4198 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4199 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4200 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4194 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4195 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4196 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT

; 4190 :     void _Swap_proxy_and_iterators(basic_string& _Right) { // swap all iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4191 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4192 :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 4180 :     [[noreturn]] static void _Xlen() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 4181 :         _Xlength_error("string too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 4182 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 32
_Al$2 = 40
$T3 = 48
this$ = 80
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4164 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4165 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0002b	90		 npad	 1

; 4166 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00039	90		 npad	 1
  0003a	0f b6 c0	 movzx	 eax, al
  0003d	85 c0		 test	 eax, eax
  0003f	74 4f		 je	 SHORT $LN2@Tidy_deall

; 4167 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004a	48 89 44 24 20	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 4168 :             auto& _Al          = _Getal();

  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00059	90		 npad	 1
  0005a	48 89 44 24 28	 mov	 QWORD PTR _Al$2[rsp], rax

; 4169 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  0005f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>
  00070	90		 npad	 1

; 4170 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007a	48 ff c0	 inc	 rax
  0007d	4c 8b c0	 mov	 r8, rax
  00080	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$1[rsp]
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$2[rsp]
  0008a	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  0008f	90		 npad	 1
$LN2@Tidy_deall:

; 4171 :         }
; 4172 : 
; 4173 :         _Mypair._Myval2._Mysize = 0;

  00090	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00095	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4174 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4175 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4176 :         // write can alias this
; 4177 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000aa	c6 44 24 30 00	 mov	 BYTE PTR $T3[rsp], 0
  000af	b8 01 00 00 00	 mov	 eax, 1
  000b4	48 6b c0 00	 imul	 rax, rax, 0
  000b8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000c2	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T3[rsp]
  000c7	48 8b c8	 mov	 rcx, rax
  000ca	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  000cf	90		 npad	 1

; 4178 :     }

  000d0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4156 :     void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4157 :         _Mypair._Myval2._Mysize = 0;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4158 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4159 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4160 :         // write can alias this
; 4161 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00038	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  0003d	b8 01 00 00 00	 mov	 eax, 1
  00042	48 6b c0 00	 imul	 rax, rax, 0
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  00050	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4162 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$ = 32
_Al$ = 40
tv86 = 48
this$ = 80
?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small, COMDAT

; 4139 :     void _Become_small() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4140 :         // release any held storage and return to small string mode
; 4141 :         // pre: *this is in large string mode
; 4142 :         // pre: this is small enough to return to small string mode
; 4143 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4144 :         const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  0002b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00034	48 89 44 24 20	 mov	 QWORD PTR _Ptr$[rsp], rax

; 4145 :         auto& _Al          = _Getal();

  00039	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00043	48 89 44 24 28	 mov	 QWORD PTR _Al$[rsp], rax

; 4146 :         _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  00048	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c0 08	 add	 rax, 8
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>

; 4147 :         _Traits::copy(_Mypair._Myval2._Bx._Buf, _Unfancy(_Ptr), _Mypair._Myval2._Mysize + 1);

  00059	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00062	48 ff c0	 inc	 rax
  00065	48 89 44 24 30	 mov	 QWORD PTR tv86[rsp], rax
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00074	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00079	48 83 c1 08	 add	 rcx, 8
  0007d	48 8b 54 24 30	 mov	 rdx, QWORD PTR tv86[rsp]
  00082	4c 8b c2	 mov	 r8, rdx
  00085	48 8b d0	 mov	 rdx, rax
  00088	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 4148 :         _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0008d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00092	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00096	48 ff c0	 inc	 rax
  00099	4c 8b c0	 mov	 r8, rax
  0009c	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  000a1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$[rsp]
  000a6	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4149 :         _Mypair._Myval2._Myres = _BUF_SIZE - 1;

  000ab	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000b0	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4150 :     }

  000b8	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bc	5f		 pop	 rdi
  000bd	c3		 ret	 0
?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Requested$ = 56
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4077 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4078 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0002d	4c 8b c0	 mov	 r8, rax
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  00039	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Requested$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4079 :     }

  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 40
$T4 = 56
_Requested$ = 80
_Old$ = 88
_Max$ = 96
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4064 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4065 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _Requested$[rsp]
  0002d	48 83 c8 0f	 or	 rax, 15
  00031	48 89 44 24 28	 mov	 QWORD PTR _Masked$[rsp], rax

; 4066 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0003b	48 39 44 24 28	 cmp	 QWORD PTR _Masked$[rsp], rax
  00040	76 07		 jbe	 SHORT $LN2@Calculate_

; 4067 :             return _Max;

  00042	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  00047	eb 59		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4068 :         }
; 4069 : 
; 4070 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00049	33 d2		 xor	 edx, edx
  0004b	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00050	b9 02 00 00 00	 mov	 ecx, 2
  00055	48 f7 f1	 div	 rcx
  00058	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Max$[rsp]
  0005d	48 2b c8	 sub	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 39 44 24 58	 cmp	 QWORD PTR _Old$[rsp], rax
  00068	76 07		 jbe	 SHORT $LN3@Calculate_

; 4071 :             return _Max;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0006f	eb 31		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4072 :         }
; 4073 : 
; 4074 :         return _Max_value(_Masked, _Old + _Old / 2);

  00071	33 d2		 xor	 edx, edx
  00073	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00078	b9 02 00 00 00	 mov	 ecx, 2
  0007d	48 f7 f1	 div	 rcx
  00080	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old$[rsp]
  00085	48 03 c8	 add	 rcx, rax
  00088	48 8b c1	 mov	 rax, rcx
  0008b	48 89 44 24 38	 mov	 QWORD PTR $T4[rsp], rax
  00090	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T4[rsp]
  00095	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Masked$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0009f	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4075 :     }

  000a2	48 8b f8	 mov	 rdi, rax
  000a5	48 8b cc	 mov	 rcx, rsp
  000a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
  000af	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b4	48 8b c7	 mov	 rax, rdi
  000b7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
_Old_size$1 = 32
$T2 = 40
this$ = 64
_Newcap$ = 72
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve, COMDAT

; 3593 :     void reserve(_CRT_GUARDOVERFLOW const size_type _Newcap = 0) { // determine new minimum length of allocated storage

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3594 :         if (_Mypair._Myval2._Mysize > _Newcap) { // requested capacity is not large enough for current size, ignore

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  0002d	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00031	76 05		 jbe	 SHORT $LN2@reserve

; 3595 :             return; // nothing to do

  00033	e9 9d 00 00 00	 jmp	 $LN1@reserve
$LN2@reserve:

; 3596 :         }
; 3597 : 
; 3598 :         if (_Mypair._Myval2._Myres == _Newcap) { // we're already at the requested capacity

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  00042	48 39 48 20	 cmp	 QWORD PTR [rax+32], rcx
  00046	75 05		 jne	 SHORT $LN3@reserve

; 3599 :             return; // nothing to do

  00048	e9 88 00 00 00	 jmp	 $LN1@reserve
$LN3@reserve:

; 3600 :         }
; 3601 : 
; 3602 :         if (_Mypair._Myval2._Myres < _Newcap) { // reallocate to grow

  0004d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  00057	48 39 48 20	 cmp	 QWORD PTR [rax+32], rcx
  0005b	73 52		 jae	 SHORT $LN4@reserve

; 3603 :             const size_type _Old_size = _Mypair._Myval2._Mysize;

  0005d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00062	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00066	48 89 44 24 20	 mov	 QWORD PTR _Old_size$1[rsp], rax

; 3604 :             _Reallocate_grow_by(

  0006b	48 8d 44 24 28	 lea	 rax, QWORD PTR $T2[rsp]
  00070	48 8b f8	 mov	 rdi, rax
  00073	33 c0		 xor	 eax, eax
  00075	b9 01 00 00 00	 mov	 ecx, 1
  0007a	f3 aa		 rep stosb
  0007c	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$1[rsp]
  00081	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  00086	48 2b c8	 sub	 rcx, rax
  00089	48 8b c1	 mov	 rax, rcx
  0008c	44 0f b6 44 24
	28		 movzx	 r8d, BYTE PTR $T2[rsp]
  00092	48 8b d0	 mov	 rdx, rax
  00095	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >

; 3605 :                 _Newcap - _Old_size, [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size) {
; 3606 :                     _Traits::copy(_New_ptr, _Old_ptr, _Old_size + 1);
; 3607 :                 });
; 3608 : 
; 3609 :             _Mypair._Myval2._Mysize = _Old_size;

  0009f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_size$1[rsp]
  000a9	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 3610 :             return;

  000ad	eb 26		 jmp	 SHORT $LN1@reserve
$LN4@reserve:

; 3611 :         }
; 3612 : 
; 3613 :         if (_BUF_SIZE > _Newcap && _Mypair._Myval2._Large_string_engaged()) {

  000af	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Newcap$[rsp], 16
  000b5	73 1e		 jae	 SHORT $LN5@reserve
  000b7	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000bc	48 8b c8	 mov	 rcx, rax
  000bf	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  000c4	0f b6 c0	 movzx	 eax, al
  000c7	85 c0		 test	 eax, eax
  000c9	74 0a		 je	 SHORT $LN5@reserve

; 3614 :             // deallocate everything; switch back to "small" mode
; 3615 :             _Become_small();

  000cb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000d0	e8 00 00 00 00	 call	 ?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small
$LN5@reserve:
$LN1@reserve:

; 3616 :             return;
; 3617 :         }
; 3618 : 
; 3619 :         // ignore requests to reserve to [_BUF_SIZE, _Myres)
; 3620 :     }

  000d5	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d9	5f		 pop	 rdi
  000da	c3		 ret	 0
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 40
_Storage_max$ = 56
$T4 = 64
$T5 = 72
$T6 = 80
this$ = 112
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3570 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 3571 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  00030	48 89 44 24 28	 mov	 QWORD PTR _Alloc_max$[rsp], rax

; 3572 :         const size_type _Storage_max = // can always store small string

  00035	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR $T4[rsp], 16
  0003e	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  00043	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Alloc_max$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00050	48 89 44 24 38	 mov	 QWORD PTR _Storage_max$[rsp], rax

; 3573 :             _Max_value(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3574 :         return _Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Storage_max$[rsp]
  0005a	48 ff c8	 dec	 rax
  0005d	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  00062	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00067	48 89 44 24 50	 mov	 QWORD PTR $T6[rsp], rax
  0006c	48 8d 54 24 48	 lea	 rdx, QWORD PTR $T5[rsp]
  00071	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T6[rsp]
  00076	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3575 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3576 :         );
; 3577 :     }

  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b cc	 mov	 rcx, rsp
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
  0008b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00090	48 8b c7	 mov	 rax, rdi
  00093	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 3566 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3567 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3568 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length, COMDAT

; 3562 :     _NODISCARD size_type length() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3563 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3564 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT

; 3552 :     _NODISCARD _Ret_z_ const _Elem* data() const noexcept { // return pointer to immutable array

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3553 :         return _Mypair._Myval2._Myptr();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0002b	90		 npad	 1

; 3554 :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 3548 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept { // return pointer to null-terminated immutable array

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3549 :         return _Mypair._Myval2._Myptr();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0002b	90		 npad	 1

; 3550 :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ
_TEXT	SEGMENT
this$ = 64
?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front, COMDAT

; 3516 :     _NODISCARD reference front() {

$LN12:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@front:

; 3517 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3518 :         _STL_VERIFY(_Mypair._Myval2._Mysize != 0, "front() called on empty string");

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  00028	74 02		 je	 SHORT $LN8@front
  0002a	eb 6b		 jmp	 SHORT $LN9@front
$LN8@front:
$LN7@front:
  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BP@PFIPNLNI@front?$CI?$CJ?5called?5on?5empty?5string@
  00033	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00038	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0003f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00044	45 33 c9	 xor	 r9d, r9d
  00047	41 b8 be 0d 00
	00		 mov	 r8d, 3518		; 00000dbeH
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00054	b9 02 00 00 00	 mov	 ecx, 2
  00059	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0005f	83 f8 01	 cmp	 eax, 1
  00062	75 03		 jne	 SHORT $LN11@front
  00064	cc		 int	 3
  00065	33 c0		 xor	 eax, eax
$LN11@front:
  00067	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00070	41 b9 be 0d 00
	00		 mov	 r9d, 3518		; 00000dbeH
  00076	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LC@BJDDPGPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EC@DINNLDHA@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@
  0008b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00091	33 c0		 xor	 eax, eax
  00093	85 c0		 test	 eax, eax
  00095	75 95		 jne	 SHORT $LN7@front
$LN9@front:
  00097	33 c0		 xor	 eax, eax
  00099	85 c0		 test	 eax, eax
  0009b	75 81		 jne	 SHORT $LN4@front

; 3519 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3520 : 
; 3521 :         return _Mypair._Myval2._Myptr()[0];

  0009d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 8b c8	 mov	 rcx, rax
  000a5	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  000aa	b9 01 00 00 00	 mov	 ecx, 1
  000af	48 6b c9 00	 imul	 rcx, rcx, 0
  000b3	48 03 c1	 add	 rax, rcx

; 3522 :     }

  000b6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ba	5f		 pop	 rdi
  000bb	c3		 ret	 0
?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z
_TEXT	SEGMENT
_Old_size$ = 32
_Ptr$1 = 40
$T2 = 48
$T3 = 49
this$ = 80
_Ch$ = 88
?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back, COMDAT

; 3488 :     void push_back(const _Elem _Ch) { // insert element at end

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 10 00 00 00	 mov	 ecx, 16
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 3489 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00022	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0002b	48 89 44 24 20	 mov	 QWORD PTR _Old_size$[rsp], rax

; 3490 :         if (_Old_size < _Mypair._Myval2._Myres) {

  00030	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00039	48 39 44 24 20	 cmp	 QWORD PTR _Old_size$[rsp], rax
  0003e	73 63		 jae	 SHORT $LN2@push_back

; 3491 :             _Mypair._Myval2._Mysize = _Old_size + 1;

  00040	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00045	48 ff c0	 inc	 rax
  00048	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0004d	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 3492 :             _Elem* const _Ptr       = _Mypair._Myval2._Myptr();

  00051	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0005e	48 89 44 24 28	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 3493 :             _Traits::assign(_Ptr[_Old_size], _Ch);

  00063	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00068	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Ptr$1[rsp]
  0006d	48 03 c8	 add	 rcx, rax
  00070	48 8b c1	 mov	 rax, rcx
  00073	48 8d 54 24 58	 lea	 rdx, QWORD PTR _Ch$[rsp]
  00078	48 8b c8	 mov	 rcx, rax
  0007b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3494 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

  00080	c6 44 24 30 00	 mov	 BYTE PTR $T2[rsp], 0
  00085	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptr$1[rsp]
  0008a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0008f	48 8d 44 08 01	 lea	 rax, QWORD PTR [rax+rcx+1]
  00094	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T2[rsp]
  00099	48 8b c8	 mov	 rcx, rax
  0009c	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3495 :             return;

  000a1	eb 2c		 jmp	 SHORT $LN1@push_back
$LN2@push_back:

; 3496 :         }
; 3497 : 
; 3498 :         _Reallocate_grow_by(

  000a3	48 8d 44 24 31	 lea	 rax, QWORD PTR $T3[rsp]
  000a8	48 8b f8	 mov	 rdi, rax
  000ab	33 c0		 xor	 eax, eax
  000ad	b9 01 00 00 00	 mov	 ecx, 1
  000b2	f3 aa		 rep stosb
  000b4	44 0f b6 4c 24
	58		 movzx	 r9d, BYTE PTR _Ch$[rsp]
  000ba	44 0f b6 44 24
	31		 movzx	 r8d, BYTE PTR $T3[rsp]
  000c0	ba 01 00 00 00	 mov	 edx, 1
  000c5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000ca	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
$LN1@push_back:

; 3499 :             1,
; 3500 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem _Ch) {
; 3501 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 3502 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);
; 3503 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());
; 3504 :             },
; 3505 :             _Ch);
; 3506 :     }

  000cf	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d3	5f		 pop	 rdi
  000d4	c3		 ret	 0
?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z
_TEXT	SEGMENT
_Old_size$ = 32
_My_ptr$ = 40
_Erase_at$ = 48
_New_size$ = 56
this$ = 80
_Off$ = 88
_Count$ = 96
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 3094 :     basic_string& erase(const size_type _Off, size_type _Count) { // erase elements [_Off, _Off + _Count)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 3095 :         _Mypair._Myval2._Check_offset(_Off);

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Off$[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset

; 3096 :         _Count                    = _Mypair._Myval2._Clamp_suffix_size(_Off, _Count);

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Count$[rsp]
  00044	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Off$[rsp]
  00049	48 8b c8	 mov	 rcx, rax
  0004c	e8 00 00 00 00	 call	 ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
  00051	48 89 44 24 60	 mov	 QWORD PTR _Count$[rsp], rax

; 3097 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00056	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0005f	48 89 44 24 20	 mov	 QWORD PTR _Old_size$[rsp], rax

; 3098 :         _Elem* const _My_ptr      = _Mypair._Myval2._Myptr();

  00064	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00069	48 8b c8	 mov	 rcx, rax
  0006c	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00071	48 89 44 24 28	 mov	 QWORD PTR _My_ptr$[rsp], rax

; 3099 :         _Elem* const _Erase_at    = _My_ptr + _Off;

  00076	48 8b 44 24 58	 mov	 rax, QWORD PTR _Off$[rsp]
  0007b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _My_ptr$[rsp]
  00080	48 03 c8	 add	 rcx, rax
  00083	48 8b c1	 mov	 rax, rcx
  00086	48 89 44 24 30	 mov	 QWORD PTR _Erase_at$[rsp], rax

; 3100 :         const size_type _New_size = _Old_size - _Count;

  0008b	48 8b 44 24 60	 mov	 rax, QWORD PTR _Count$[rsp]
  00090	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00095	48 2b c8	 sub	 rcx, rax
  00098	48 8b c1	 mov	 rax, rcx
  0009b	48 89 44 24 38	 mov	 QWORD PTR _New_size$[rsp], rax

; 3101 :         _Mypair._Myval2._Mysize   = _New_size;

  000a0	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a5	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000aa	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 3102 :         _Traits::move(_Erase_at, _Erase_at + _Count, _New_size - _Off + 1); // move suffix + null up

  000ae	48 8b 44 24 58	 mov	 rax, QWORD PTR _Off$[rsp]
  000b3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000b8	48 2b c8	 sub	 rcx, rax
  000bb	48 8b c1	 mov	 rax, rcx
  000be	48 ff c0	 inc	 rax
  000c1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Count$[rsp]
  000c6	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Erase_at$[rsp]
  000cb	48 03 d1	 add	 rdx, rcx
  000ce	48 8b ca	 mov	 rcx, rdx
  000d1	4c 8b c0	 mov	 r8, rax
  000d4	48 8b d1	 mov	 rdx, rcx
  000d7	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Erase_at$[rsp]
  000dc	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 3103 :         return *this;

  000e1	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 3104 :     }

  000e6	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ea	5f		 pop	 rdi
  000eb	c3		 ret	 0
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2860 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2861 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2862 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 32
$T2 = 40
$T3 = 41
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2841 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2842 :         // assign [_Ptr, _Ptr + _Count)
; 2843 :         if (_Count <= _Mypair._Myval2._Myres) {

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 39 44 24 50	 cmp	 QWORD PTR _Count$[rsp], rax
  00036	77 5d		 ja	 SHORT $LN2@assign

; 2844 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00045	48 89 44 24 20	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2845 :             _Mypair._Myval2._Mysize = _Count;

  0004a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  00054	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2846 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  00058	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0005d	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00067	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2847 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0006c	c6 44 24 28 00	 mov	 BYTE PTR $T2[rsp], 0
  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00076	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  0007b	48 03 c8	 add	 rcx, rax
  0007e	48 8b c1	 mov	 rax, rcx
  00081	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2848 :             return *this;

  0008e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00093	eb 2b		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 2849 :         }
; 2850 : 
; 2851 :         return _Reallocate_for(

  00095	48 8d 44 24 29	 lea	 rax, QWORD PTR $T3[rsp]
  0009a	48 8b f8	 mov	 rdi, rax
  0009d	33 c0		 xor	 eax, eax
  0009f	b9 01 00 00 00	 mov	 ecx, 1
  000a4	f3 aa		 rep stosb
  000a6	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000ab	44 0f b6 44 24
	29		 movzx	 r8d, BYTE PTR $T3[rsp]
  000b1	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Count$[rsp]
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000bb	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
$LN1@assign:

; 2852 :             _Count,
; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 2856 :             },
; 2857 :             _Ptr);
; 2858 :     }

  000c0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2756 :     basic_string& append(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2757 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2758 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_size$ = 48
_Old_ptr$1 = 56
$T2 = 64
$T3 = 65
this$ = 96
_Ptr$ = 104
_Count$ = 112
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2734 :     basic_string& append(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2735 :         // append [_Ptr, _Ptr + _Count)
; 2736 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00031	48 89 44 24 30	 mov	 QWORD PTR _Old_size$[rsp], rax

; 2737 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00040	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00044	48 2b c1	 sub	 rax, rcx
  00047	48 39 44 24 70	 cmp	 QWORD PTR _Count$[rsp], rax
  0004c	0f 87 81 00 00
	00		 ja	 $LN2@append

; 2738 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00052	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0005c	48 03 c8	 add	 rcx, rax
  0005f	48 8b c1	 mov	 rax, rcx
  00062	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00067	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2739 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  0006b	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00078	48 89 44 24 38	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2740 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00082	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00087	48 03 c8	 add	 rcx, rax
  0008a	48 8b c1	 mov	 rax, rcx
  0008d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Count$[rsp]
  00092	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00097	48 8b c8	 mov	 rcx, rax
  0009a	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2741 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  0009f	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000a4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000a9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  000ae	48 03 c8	 add	 rcx, rax
  000b1	48 8b c1	 mov	 rax, rcx
  000b4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  000b9	48 03 c8	 add	 rcx, rax
  000bc	48 8b c1	 mov	 rax, rcx
  000bf	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T2[rsp]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2742 :             return *this;

  000cc	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000d1	eb 35		 jmp	 SHORT $LN1@append
$LN2@append:

; 2743 :         }
; 2744 : 
; 2745 :         return _Reallocate_grow_by(

  000d3	48 8d 44 24 41	 lea	 rax, QWORD PTR $T3[rsp]
  000d8	48 8b f8	 mov	 rdi, rax
  000db	33 c0		 xor	 eax, eax
  000dd	b9 01 00 00 00	 mov	 ecx, 1
  000e2	f3 aa		 rep stosb
  000e4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000e9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ee	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000f3	44 0f b6 44 24
	41		 movzx	 r8d, BYTE PTR $T3[rsp]
  000f9	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Count$[rsp]
  000fe	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
$LN1@append:

; 2746 :             _Count,
; 2747 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem* const _Ptr,
; 2748 :                 const size_type _Count) {
; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);
; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 2752 :             },
; 2753 :             _Ptr, _Count);
; 2754 :     }

  00108	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2708 :     basic_string& append(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2709 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00030	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00035	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  00039	48 8b d0	 mov	 rdx, rax
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2710 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2699 :     basic_string& operator+=(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2700 :         return append(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2701 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2688 :     basic_string& operator+=(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2689 :         return append(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2690 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2676 :     basic_string& operator=(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2677 :         return assign(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2678 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S41$ = 52
_To_delete$ = 72
this$ = 96
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2597 :     ~basic_string() noexcept { // destroy the string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2598 :         _Tidy_deallocate();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
  00028	90		 npad	 1

; 2599 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2600 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S41$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S41$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2601 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  0004c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 89 44 24 48	 mov	 QWORD PTR _To_delete$[rsp], rax

; 2602 :         _Mypair._Myval2._Myproxy = nullptr;

  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2603 :         _Delete_plain_internal(_Alproxy, _To_delete);

  00065	48 8b 54 24 48	 mov	 rdx, QWORD PTR _To_delete$[rsp]
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00074	90		 npad	 1

; 2604 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2605 :     }

  00075	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00082	90		 npad	 1
  00083	48 8b cc	 mov	 rcx, rsp
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
  0008d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00092	90		 npad	 1
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S41$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S41$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_Right_data$ = 32
_Right_size$ = 40
_Right_ptr$ = 48
_My_data$ = 56
_Al$ = 64
_New_capacity$ = 72
_New_array$ = 88
$T4 = 104
$T5 = 112
tv131 = 120
this$ = 144
_Right$ = 152
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents, COMDAT

; 2525 :     void _Construct_lv_contents(const basic_string& _Right) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2526 :         // assign by copying data stored in _Right
; 2527 :         // pre: this != &_Right
; 2528 :         // pre: *this owns no memory, iterators orphaned (note:
; 2529 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2530 :         auto& _Right_data             = _Right._Mypair._Myval2;

  00029	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR _Right$[rsp]
  00031	48 89 44 24 20	 mov	 QWORD PTR _Right_data$[rsp], rax

; 2531 :         const size_type _Right_size   = _Right_data._Mysize;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _Right_data$[rsp]
  0003b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0003f	48 89 44 24 28	 mov	 QWORD PTR _Right_size$[rsp], rax

; 2532 :         const _Elem* const _Right_ptr = _Right_data._Myptr();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Right_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Right_ptr$[rsp], rax

; 2533 :         auto& _My_data                = _Mypair._Myval2;

  00053	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 89 44 24 38	 mov	 QWORD PTR _My_data$[rsp], rax

; 2534 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00060	48 83 7c 24 28
	10		 cmp	 QWORD PTR _Right_size$[rsp], 16
  00066	73 3c		 jae	 SHORT $LN2@Construct_

; 2535 :             _Traits::copy(_My_data._Bx._Buf, _Right_ptr, _BUF_SIZE);

  00068	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0006d	48 83 c0 08	 add	 rax, 8
  00071	41 b8 10 00 00
	00		 mov	 r8d, 16
  00077	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Right_ptr$[rsp]
  0007c	48 8b c8	 mov	 rcx, rax
  0007f	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2536 :             _My_data._Mysize = _Right_size;

  00084	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  00089	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right_size$[rsp]
  0008e	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2537 :             _My_data._Myres  = _BUF_SIZE - 1;

  00092	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  00097	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 2538 :             return;

  0009f	e9 c1 00 00 00	 jmp	 $LN1@Construct_
$LN2@Construct_:

; 2539 :         }
; 2540 : 
; 2541 :         auto& _Al                     = _Getal();

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b1	48 89 44 24 40	 mov	 QWORD PTR _Al$[rsp], rax

; 2542 :         const size_type _New_capacity = _Min_value(_Right_size | _ALLOC_MASK, max_size());

  000b6	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000be	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  000c3	48 89 44 24 68	 mov	 QWORD PTR $T4[rsp], rax
  000c8	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right_size$[rsp]
  000cd	48 83 c8 0f	 or	 rax, 15
  000d1	48 89 44 24 70	 mov	 QWORD PTR $T5[rsp], rax
  000d6	48 8d 54 24 68	 lea	 rdx, QWORD PTR $T4[rsp]
  000db	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T5[rsp]
  000e0	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  000e5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000e8	48 89 44 24 48	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 2543 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  000ed	48 8b 44 24 48	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000f2	48 ff c0	 inc	 rax
  000f5	48 8b d0	 mov	 rdx, rax
  000f8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  000fd	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00102	48 89 44 24 58	 mov	 QWORD PTR _New_array$[rsp], rax

; 2544 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00107	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0010c	48 83 c0 08	 add	 rax, 8
  00110	48 8d 54 24 58	 lea	 rdx, QWORD PTR _New_array$[rsp]
  00115	48 8b c8	 mov	 rcx, rax
  00118	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2545 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  0011d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right_size$[rsp]
  00122	48 ff c0	 inc	 rax
  00125	48 89 44 24 78	 mov	 QWORD PTR tv131[rsp], rax
  0012a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _New_array$[rsp]
  0012f	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00134	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv131[rsp]
  00139	4c 8b c1	 mov	 r8, rcx
  0013c	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Right_ptr$[rsp]
  00141	48 8b c8	 mov	 rcx, rax
  00144	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2546 :         _My_data._Mysize = _Right_size;

  00149	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0014e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right_size$[rsp]
  00153	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2547 :         _My_data._Myres  = _New_capacity;

  00157	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0015c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  00161	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
$LN1@Construct_:

; 2548 :     }

  00165	48 8b cc	 mov	 rcx, rsp
  00168	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcFrameData
  0016f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00174	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0017b	5f		 pop	 rdi
  0017c	c3		 ret	 0
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT

; 2484 :     void _Take_contents(basic_string& _Right, true_type) noexcept {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2485 :         // assign by stealing _Right's buffer, memcpy optimization
; 2486 :         // pre: this != &_Right
; 2487 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2488 :         // pre: *this owns no memory, iterators orphaned (note:
; 2489 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2490 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2491 :         if (_Right._Mypair._Myval2._Large_string_engaged()) {

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00035	90		 npad	 1
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 12		 je	 SHORT $LN2@Take_conte

; 2492 :             // take ownership of _Right's iterators along with its buffer
; 2493 :             _Swap_proxy_and_iterators(_Right);

  0003d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
  0004c	90		 npad	 1

; 2494 :         } else {

  0004d	eb 0e		 jmp	 SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2495 :             _Right._Mypair._Myval2._Orphan_all();

  0004f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1
$LN3@Take_conte:

; 2496 :         }
; 2497 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2498 : 
; 2499 :         _Memcpy_val_from(_Right);

  0005d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00062	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00067	e8 00 00 00 00	 call	 ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
  0006c	90		 npad	 1

; 2500 :         _Right._Tidy_init();

  0006d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00072	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00077	90		 npad	 1

; 2501 :     }

  00078	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007c	5f		 pop	 rdi
  0007d	c3		 ret	 0
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 32
_Right_data_mem$ = 40
this$ = 64
_Right$ = 72
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT

; 2475 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2476 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2477 :         const auto _My_data_mem =

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  00030	90		 npad	 1
  00031	48 83 c0 08	 add	 rax, 8
  00035	48 89 44 24 20	 mov	 QWORD PTR _My_data_mem$[rsp], rax

; 2478 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2479 :         const auto _Right_data_mem =

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
  00047	90		 npad	 1
  00048	48 83 c0 08	 add	 rax, 8
  0004c	48 89 44 24 28	 mov	 QWORD PTR _Right_data_mem$[rsp], rax

; 2480 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2481 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00051	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  00057	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Right_data_mem$[rsp]
  0005c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data_mem$[rsp]
  00061	e8 00 00 00 00	 call	 memcpy
  00066	90		 npad	 1

; 2482 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2383 :     basic_string(basic_string&& _Right) noexcept : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  00049	90		 npad	 1

; 2384 :         // construct by moving _Right
; 2385 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 2386 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
  00097	90		 npad	 1

; 2387 :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S43$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2297 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t()) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00029	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00031	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  0003e	90		 npad	 1

; 2298 :         // construct from [_Ptr, <null>)
; 2299 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0003f	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S43$[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00059	48 8d 44 24 34	 lea	 rax, QWORD PTR $S43$[rsp]
  0005e	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2300 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006b	4c 8b c0	 mov	 r8, rax
  0006e	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00073	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00078	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0007d	90		 npad	 1

; 2301 :         _Tidy_init();

  0007e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00086	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2302 :         assign(_Ptr);

  0008b	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00093	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2303 :         _Proxy._Release();

  000a0	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000a5	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000aa	90		 npad	 1

; 2304 :     }

  000ab	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000b0	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000b5	90		 npad	 1
  000b6	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000be	48 8b f8	 mov	 rdi, rax
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 8b c7	 mov	 rax, rdi
  000d3	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000da	5f		 pop	 rdi
  000db	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S43$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S43$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S43$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S43$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Al$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2253 :     explicit basic_string(const _Alloc& _Al) noexcept : _Mypair(_One_then_variadic_args_t(), _Al) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Al$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
  0003a	90		 npad	 1

; 2254 :         // construct empty string with allocator
; 2255 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00040	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00045	90		 npad	 1
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0004e	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00053	90		 npad	 1
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00061	90		 npad	 1

; 2256 :         _Tidy_init();

  00062	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00067	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  0006c	90		 npad	 1

; 2257 :     }

  0006d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Al$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Al$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2247 :     basic_string() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t()) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  00030	90		 npad	 1

; 2248 :         // construct empty string
; 2249 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 2250 :         _Tidy_init();

  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00062	90		 npad	 1

; 2251 :     }

  00063	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S45$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2230 :     basic_string(const basic_string& _Right)

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2231 :         : _Mypair(_One_then_variadic_args_t(), _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00029	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Right$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00036	48 8b d0	 mov	 rdx, rax
  00039	48 8d 4c 24 74	 lea	 rcx, QWORD PTR $T5[rsp]
  0003e	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
  00043	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	4c 8b c0	 mov	 r8, rax
  0004e	0f b6 54 24 75	 movzx	 edx, BYTE PTR $T6[rsp]
  00053	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  00058	90		 npad	 1

; 2232 :         // construct by copying _Right
; 2233 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00059	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00066	48 8b d0	 mov	 rdx, rax
  00069	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S45$[rsp]
  0006e	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00073	48 8d 44 24 34	 lea	 rax, QWORD PTR $S45$[rsp]
  00078	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2234 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  0007d	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00085	4c 8b c0	 mov	 r8, rax
  00088	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  0008d	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00092	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00097	90		 npad	 1

; 2235 :         _Construct_lv_contents(_Right);

  00098	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Right$[rsp]
  000a0	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a8	e8 00 00 00 00	 call	 ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents

; 2236 :         _Proxy._Release();

  000ad	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000b2	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000b7	90		 npad	 1

; 2237 :     }

  000b8	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000bd	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000c2	90		 npad	 1
  000c3	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000cb	48 8b f8	 mov	 rdi, rax
  000ce	48 8b cc	 mov	 rcx, rsp
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcFrameData
  000d8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000dd	48 8b c7	 mov	 rax, rdi
  000e0	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000e7	5f		 pop	 rdi
  000e8	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S45$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S45$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S45$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S45$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2148 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2146 :         _Bxty() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Off$ = 72
_Size$ = 80
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size, COMDAT

; 2140 :     size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2141 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2142 :         return _Min_value(_Size, _Mysize - _Off);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Off$[rsp]
  00032	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00036	48 2b c1	 sub	 rax, rcx
  00039	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003e	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00043	48 8d 4c 24 50	 lea	 rcx, QWORD PTR _Size$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 2143 :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2136 :     [[noreturn]] static void _Xran() { // report an out_of_range error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 2137 :         _Xout_of_range("invalid string position");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  0001c	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
$LN2@Xran:

; 2138 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Check_offset, COMDAT

; 2124 :     void _Check_offset(const size_type _Off) const { // checks whether _Off is in the bounds of [0, size()]

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2125 :         if (_Mysize < _Off) {

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Off$[rsp]
  0002d	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00031	73 05		 jae	 SHORT $LN2@Check_offs

; 2126 :             _Xran();

  00033	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN2@Check_offs:
$LN3@Check_offs:

; 2127 :         }
; 2128 :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2120 :     bool _Large_string_engaged() const { // returns whether the large string mode (allocated memory) is engaged

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 2121 :         return _BUF_SIZE <= _Myres;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 20 10	 cmp	 QWORD PTR [rax+32], 16
  00028	72 09		 jb	 SHORT $LN3@Large_stri
  0002a	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00031	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  00033	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@Large_stri:
  0003a	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]

; 2122 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2111 :     const value_type* _Myptr() const { // determine current pointer to buffer for immutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2112 :         const value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2113 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2114 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2115 :         }
; 2116 : 
; 2117 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2118 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2102 :     value_type* _Myptr() { // determine current pointer to buffer for mutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2103 :         value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2104 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2105 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2106 :         }
; 2107 : 
; 2108 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2109 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2092 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 16
_Al$ = 24
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 770  :     _NODISCARD static _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 771  :         return _Al;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 772  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 768  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0002d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT

; 410  :     _NODISCARD static constexpr int_type eof() noexcept { // return end-of-file metacharacter

$LN3:
  00000	40 57		 push	 rdi

; 411  :         return static_cast<int_type>(EOF);

  00002	b8 ff ff ff ff	 mov	 eax, -1

; 412  :     }

  00007	5f		 pop	 rdi
  00008	c3		 ret	 0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z
_TEXT	SEGMENT
tv69 = 32
tv68 = 36
_Meta$ = 64
?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z PROC	; std::_Narrow_char_traits<char,int>::not_eof, COMDAT

; 406  :     _NODISCARD static constexpr int_type not_eof(const int_type& _Meta) noexcept { // return anything but EOF

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 407  :         return _Meta != eof() ? _Meta : !eof();

  0001e	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Meta$[rsp]
  00028	39 01		 cmp	 DWORD PTR [rcx], eax
  0002a	74 0d		 je	 SHORT $LN5@not_eof
  0002c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Meta$[rsp]
  00031	8b 00		 mov	 eax, DWORD PTR [rax]
  00033	89 44 24 20	 mov	 DWORD PTR tv69[rsp], eax
  00037	eb 23		 jmp	 SHORT $LN6@not_eof
$LN5@not_eof:
  00039	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0003e	85 c0		 test	 eax, eax
  00040	75 0a		 jne	 SHORT $LN3@not_eof
  00042	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR tv68[rsp], 1
  0004a	eb 08		 jmp	 SHORT $LN4@not_eof
$LN3@not_eof:
  0004c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR tv68[rsp], 0
$LN4@not_eof:
  00054	8b 44 24 24	 mov	 eax, DWORD PTR tv68[rsp]
  00058	89 44 24 20	 mov	 DWORD PTR tv69[rsp], eax
$LN6@not_eof:
  0005c	8b 44 24 20	 mov	 eax, DWORD PTR tv69[rsp]

; 408  :     }

  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ENDP	; std::_Narrow_char_traits<char,int>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 0
_Left$ = 32
_Right$ = 40
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT

; 401  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 402  :         // test for metacharacter equality
; 403  :         return _Left == _Right;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0002f	39 08		 cmp	 DWORD PTR [rax], ecx
  00031	75 09		 jne	 SHORT $LN3@eq_int_typ
  00033	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv65[rsp], 1
  0003a	eb 07		 jmp	 SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
  0003c	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv65[rsp], 0
$LN4@eq_int_typ:
  00043	0f b6 04 24	 movzx	 eax, BYTE PTR tv65[rsp]

; 404  :     }

  00047	48 83 c4 10	 add	 rsp, 16
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z
_TEXT	SEGMENT
_Ch$ = 16
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::to_int_type, COMDAT

; 396  :     _NODISCARD static constexpr int_type to_int_type(const _Elem& _Ch) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 397  :         // convert character to metacharacter
; 398  :         return static_cast<unsigned char>(_Ch);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ch$[rsp]
  0000b	0f b6 00	 movzx	 eax, BYTE PTR [rax]

; 399  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z
_TEXT	SEGMENT
_Meta$ = 16
?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z PROC ; std::_Narrow_char_traits<char,int>::to_char_type, COMDAT

; 391  :     _NODISCARD static constexpr _Elem to_char_type(const int_type& _Meta) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 392  :         // convert metacharacter to character
; 393  :         return static_cast<_Elem>(_Meta);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Meta$[rsp]
  0000b	0f b6 00	 movzx	 eax, BYTE PTR [rax]

; 394  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ENDP ; std::_Narrow_char_traits<char,int>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z
_TEXT	SEGMENT
tv67 = 0
_Left$ = 32
_Right$ = 40
?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z PROC	; std::_Narrow_char_traits<char,int>::eq, COMDAT

; 381  :     _NODISCARD static constexpr bool eq(const _Elem& _Left, const _Elem& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 382  :         // test for element equality
; 383  :         return _Left == _Right;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	0f be 00	 movsx	 eax, BYTE PTR [rax]
  0002b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  00030	0f be 09	 movsx	 ecx, BYTE PTR [rcx]
  00033	3b c1		 cmp	 eax, ecx
  00035	75 09		 jne	 SHORT $LN3@eq
  00037	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  0003e	eb 07		 jmp	 SHORT $LN4@eq
$LN3@eq:
  00040	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@eq:
  00047	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 384  :     }

  0004b	48 83 c4 10	 add	 rsp, 16
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z ENDP	; std::_Narrow_char_traits<char,int>::eq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 377  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept { // assign an element

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 378  :         _Left = _Right;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _Left$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00018	88 08		 mov	 BYTE PTR [rax], cl

; 379  :     }

  0001a	5f		 pop	 rdi
  0001b	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::move, COMDAT

; 366  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 367  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 368  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memmove
  0003c	90		 npad	 1

; 369  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::copy, COMDAT

; 331  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 332  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 333  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memcpy
  0003c	90		 npad	 1

; 334  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 310  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 311  :         // find length of null-terminated string
; 312  : #if _HAS_CXX17
; 313  : #if _HAS_CHAR8_T
; 314  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 315  : #if _HAS_U8_INTRINSICS
; 316  :             return __builtin_u8strlen(_First);
; 317  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 318  :             return _Char_traits<_Elem, _Int_type>::length(_First);
; 319  : #endif // _HAS_U8_INTRINSICS
; 320  :         } else
; 321  : #endif // _HAS_CHAR8_T
; 322  :         {
; 323  :             return __builtin_strlen(_First);
; 324  :         }
; 325  : #else // _HAS_CXX17
; 326  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00023	e8 00 00 00 00	 call	 strlen
  00028	90		 npad	 1

; 327  : #endif // _HAS_CXX17
; 328  :     }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1349 :         _Ptr = nullptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 48
this$ = 80
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT

; 1267 :     void _Orphan_me() noexcept {

$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1268 :         if (_Myproxy) { // adopted, remove self from list

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	0f 84 db 00 00
	00		 je	 $LN10@Orphan_me

; 1269 :             _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 83 c0 08	 add	 rax, 8
  00039	48 89 44 24 30	 mov	 QWORD PTR _Pnext$1[rsp], rax
$LN2@Orphan_me:

; 1270 :             while (*_Pnext && *_Pnext != this) {

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  00043	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00047	74 22		 je	 SHORT $LN6@Orphan_me
  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  0004e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00053	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00056	74 13		 je	 SHORT $LN6@Orphan_me

; 1271 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  00058	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  0005d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00060	48 83 c0 08	 add	 rax, 8
  00064	48 89 44 24 30	 mov	 QWORD PTR _Pnext$1[rsp], rax

; 1272 :             }

  00069	eb d3		 jmp	 SHORT $LN2@Orphan_me
$LN6@Orphan_me:

; 1273 : 
; 1274 :             _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

  0006b	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 02		 je	 SHORT $LN9@Orphan_me
  00076	eb 6d		 jmp	 SHORT $LN12@Orphan_me
$LN9@Orphan_me:
  00078	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
  0007f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00084	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00090	45 33 c9	 xor	 r9d, r9d
  00093	41 b8 fa 04 00
	00		 mov	 r8d, 1274		; 000004faH
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a0	b9 02 00 00 00	 mov	 ecx, 2
  000a5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ab	90		 npad	 1
  000ac	83 f8 01	 cmp	 eax, 1
  000af	75 03		 jne	 SHORT $LN14@Orphan_me
  000b1	cc		 int	 3
  000b2	33 c0		 xor	 eax, eax
$LN14@Orphan_me:
  000b4	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bd	41 b9 fa 04 00
	00		 mov	 r9d, 1274		; 000004faH
  000c3	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000ca	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
  000d1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
  000d8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000de	90		 npad	 1
  000df	33 c0		 xor	 eax, eax
  000e1	85 c0		 test	 eax, eax
  000e3	75 93		 jne	 SHORT $LN9@Orphan_me
$LN12@Orphan_me:
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 80		 jne	 SHORT $LN6@Orphan_me

; 1275 :             *_Pnext  = _Mynextiter;

  000eb	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  000f0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000f5	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000f9	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1276 :             _Myproxy = nullptr;

  000fc	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00101	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN10@Orphan_me:

; 1277 :         }
; 1278 :     }

  00108	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = 0
this$ = 32
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT

; 1262 :     const _Container_base12* _Getcont() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1263 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 11		 je	 SHORT $LN3@Getcont
  00029	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00034	48 89 04 24	 mov	 QWORD PTR tv68[rsp], rax
  00038	eb 08		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  0003a	48 c7 04 24 00
	00 00 00	 mov	 QWORD PTR tv68[rsp], 0
$LN4@Getcont:
  00042	48 8b 04 24	 mov	 rax, QWORD PTR tv68[rsp]

; 1264 :     }

  00046	48 83 c4 10	 add	 rsp, 16
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 1234 :     void _Adopt(const _Container_base12* _Parent) noexcept {

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 1c 00 00 00	 mov	 ecx, 28
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 1235 :         if (_Parent) {

  00026	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR _Parent$[rsp], 0
  0002f	0f 84 85 00 00
	00		 je	 $LN2@Adopt

; 1236 :             // have a parent, do adoption
; 1237 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

  00035	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR _Parent$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 89 44 24 20	 mov	 QWORD PTR _Parent_proxy$5[rsp], rax

; 1238 : 
; 1239 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1240 :             if (_Myproxy != _Parent_proxy) { // change parentage

  00045	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  00052	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00055	74 61		 je	 SHORT $LN4@Adopt

; 1241 :                 _Lockit _Lock(_LOCK_DEBUG);

  00057	ba 03 00 00 00	 mov	 edx, 3
  0005c	48 8d 4c 24 34	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  00061	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00067	90		 npad	 1

; 1242 :                 _Orphan_me();

  00068	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00070	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00075	90		 npad	 1

; 1243 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;

  00076	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  00083	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00087	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1244 :                 _Parent_proxy->_Myfirstiter = this;

  0008b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Parent_proxy$5[rsp]
  00090	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00098	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1245 :                 _Myproxy                    = _Parent_proxy;

  0009c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  000a9	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1246 :             }

  000ac	48 8d 4c 24 34	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  000b1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000b7	90		 npad	 1
$LN4@Adopt:

; 1247 : 
; 1248 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1249 :             _Myproxy = _Parent_proxy;
; 1250 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1251 :         } else {

  000b8	eb 2b		 jmp	 SHORT $LN3@Adopt
$LN2@Adopt:

; 1252 :             // no future parent, just disown current parent
; 1253 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1254 :             _Lockit _Lock(_LOCK_DEBUG);

  000ba	ba 03 00 00 00	 mov	 edx, 3
  000bf	48 8d 4c 24 54	 lea	 rcx, QWORD PTR _Lock$7[rsp]
  000c4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  000ca	90		 npad	 1

; 1255 :             _Orphan_me();

  000cb	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d3	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  000d8	90		 npad	 1

; 1256 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1257 :             _Myproxy = nullptr;
; 1258 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1259 :         }

  000d9	48 8d 4c 24 54	 lea	 rcx, QWORD PTR _Lock$7[rsp]
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000e4	90		 npad	 1
$LN3@Adopt:

; 1260 :     }

  000e5	48 8b cc	 mov	 rcx, rsp
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData
  000ef	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f4	90		 npad	 1
  000f5	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000f9	5f		 pop	 rdi
  000fa	c3		 ret	 0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 54	 lea	 rcx, QWORD PTR _Lock$7[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 54	 lea	 rcx, QWORD PTR _Lock$7[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 1227 :     ~_Iterator_base12() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1228 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1229 :         _Lockit _Lock(_LOCK_DEBUG);

  0001e	ba 03 00 00 00	 mov	 edx, 3
  00023	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  0002e	90		 npad	 1

; 1230 :         _Orphan_me();

  0002f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00034	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00039	90		 npad	 1

; 1231 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1232 :     }

  0003a	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00045	90		 npad	 1
  00046	48 8b cc	 mov	 rcx, rsp
  00049	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData
  00050	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00055	90		 npad	 1
  00056	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA PROC	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA ENDP	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA PROC	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA ENDP	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1204 :     _Iterator_base12() noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {} // construct orphaned iterator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1302 : inline void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1303 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1304 :     _Lockit _Lock(_LOCK_DEBUG);

  00023	ba 03 00 00 00	 mov	 edx, 3
  00028	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00033	90		 npad	 1

; 1305 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1306 : 
; 1307 :     _Container_proxy* _Temp = _Myproxy;

  00034	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 44 24 38	 mov	 QWORD PTR _Temp$[rsp], rax

; 1308 :     _Myproxy                = _Right._Myproxy;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1309 :     _Right._Myproxy         = _Temp;

  00051	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Temp$[rsp]
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1310 : 
; 1311 :     if (_Myproxy) {

  0005e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00067	74 10		 je	 SHORT $LN2@Swap_proxy

; 1312 :         _Myproxy->_Mycont = this;

  00069	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00076	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1313 :     }
; 1314 : 
; 1315 :     if (_Right._Myproxy) {

  00079	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0007e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00082	74 10		 je	 SHORT $LN3@Swap_proxy

; 1316 :         _Right._Myproxy->_Mycont = &_Right;

  00084	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00089	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00091	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1317 :     }
; 1318 : }

  00094	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00099	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0009f	90		 npad	 1
  000a0	48 8b cc	 mov	 rcx, rsp
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData
  000aa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000af	90		 npad	 1
  000b0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b4	5f		 pop	 rdi
  000b5	c3		 ret	 0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1073 : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1074 :     // convert size_t to size_t, unchanged
; 1075 :     return _Len;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Len$[rsp]

; 1076 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\wchar.h
;	COMDAT wmemcpy
_TEXT	SEGMENT
_S1$ = 48
_S2$ = 56
_N$ = 64
wmemcpy	PROC						; COMDAT

; 230  :     {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _N$[rsp]
  0002d	48 d1 e0	 shl	 rax, 1
  00030	4c 8b c0	 mov	 r8, rax
  00033	48 8b 54 24 38	 mov	 rdx, QWORD PTR _S2$[rsp]
  00038	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _S1$[rsp]
  0003d	e8 00 00 00 00	 call	 memcpy

; 234  :         #pragma warning(pop)
; 235  :     }

  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
wmemcpy	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vscprintf
_TEXT	SEGMENT
_Format$ = 48
_ArgList$ = 56
_vscprintf PROC						; COMDAT

; 1675 :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1676 :         return _vscprintf_l(_Format, NULL, _ArgList);

  00023	4c 8b 44 24 38	 mov	 r8, QWORD PTR _ArgList$[rsp]
  00028	33 d2		 xor	 edx, edx
  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Format$[rsp]
  0002f	e8 00 00 00 00	 call	 _vscprintf_l

; 1677 :     }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
_vscprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vscprintf_l
_TEXT	SEGMENT
_Result$ = 48
tv74 = 52
_Format$ = 80
_Locale$ = 88
_ArgList$ = 96
_vscprintf_l PROC					; COMDAT

; 1658 :     {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00028	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 83 c8 02	 or	 rax, 2
  00034	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00039	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00043	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00048	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Format$[rsp]
  0004d	45 33 c0	 xor	 r8d, r8d
  00050	33 d2		 xor	 edx, edx
  00052	48 8b c8	 mov	 rcx, rax
  00055	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsprintf
  0005b	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  0005f	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00064	7d 0a		 jge	 SHORT $LN3@vscprintf_
  00066	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv74[rsp], -1
  0006e	eb 08		 jmp	 SHORT $LN4@vscprintf_
$LN3@vscprintf_:
  00070	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00074	89 44 24 34	 mov	 DWORD PTR tv74[rsp], eax
$LN4@vscprintf_:
  00078	8b 44 24 34	 mov	 eax, DWORD PTR tv74[rsp]

; 1664 :     }

  0007c	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00080	5f		 pop	 rdi
  00081	c3		 ret	 0
_vscprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsnprintf_s
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_MaxCount$ = 80
_Format$ = 88
_ArgList$ = 96
_vsnprintf_s PROC					; COMDAT

; 1605 :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1606 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR _ArgList$[rsp]
  00032	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00037	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00040	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Format$[rsp]
  00045	4c 8b 44 24 50	 mov	 r8, QWORD PTR _MaxCount$[rsp]
  0004a	48 8b 54 24 48	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  0004f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00054	e8 00 00 00 00	 call	 _vsnprintf_s_l

; 1607 :     }

  00059	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
_vsnprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsnprintf_s_l
_TEXT	SEGMENT
_Result$ = 64
tv74 = 68
_Buffer$ = 96
_BufferCount$ = 104
_MaxCount$ = 112
_Format$ = 120
_Locale$ = 128
_ArgList$ = 136
_vsnprintf_s_l PROC					; COMDAT

; 1584 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1585 :         int const _Result = __stdio_common_vsnprintf_s(

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  0003a	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  0003f	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00047	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0004c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Format$[rsp]
  00051	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00056	4c 8b 4c 24 70	 mov	 r9, QWORD PTR _MaxCount$[rsp]
  0005b	4c 8b 44 24 68	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  00060	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00065	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00068	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsnprintf_s
  0006e	89 44 24 40	 mov	 DWORD PTR _Result$[rsp], eax

; 1586 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1587 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1588 : 
; 1589 :         return _Result < 0 ? -1 : _Result;

  00072	83 7c 24 40 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00077	7d 0a		 jge	 SHORT $LN3@vsnprintf_
  00079	c7 44 24 44 ff
	ff ff ff	 mov	 DWORD PTR tv74[rsp], -1
  00081	eb 08		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00083	8b 44 24 40	 mov	 eax, DWORD PTR _Result$[rsp]
  00087	89 44 24 44	 mov	 DWORD PTR tv74[rsp], eax
$LN4@vsnprintf_:
  0008b	8b 44 24 44	 mov	 eax, DWORD PTR tv74[rsp]

; 1590 :     }

  0008f	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00093	5f		 pop	 rdi
  00094	c3		 ret	 0
_vsnprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT printf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 56
_Format$ = 96
printf	PROC						; COMDAT

; 954  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 955  :         int _Result;
; 956  :         va_list _ArgList;
; 957  :         __crt_va_start(_ArgList, _Format);

  0002d	48 8d 44 24 68	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00032	48 89 44 24 38	 mov	 QWORD PTR _ArgList$[rsp], rax

; 958  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00042	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _ArgList$[rsp]
  00047	45 33 c0	 xor	 r8d, r8d
  0004a	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Format$[rsp]
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 _vfprintf_l
  00057	89 44 24 20	 mov	 DWORD PTR _Result$[rsp], eax

; 959  :         __crt_va_end(_ArgList);

  0005b	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 960  :         return _Result;

  00064	8b 44 24 20	 mov	 eax, DWORD PTR _Result$[rsp]

; 961  :     }

  00068	8b f8		 mov	 edi, eax
  0006a	48 8b cc	 mov	 rcx, rsp
  0006d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:printf$rtcFrameData
  00074	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00079	8b c7		 mov	 eax, edi
  0007b	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0007f	5f		 pop	 rdi
  00080	c3		 ret	 0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT fprintf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 56
_Stream$ = 96
_Format$ = 104
fprintf	PROC						; COMDAT

; 835  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 836  :         int _Result;
; 837  :         va_list _ArgList;
; 838  :         __crt_va_start(_ArgList, _Format);

  0002d	48 8d 44 24 70	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00032	48 89 44 24 38	 mov	 QWORD PTR _ArgList$[rsp], rax

; 839  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);

  00037	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _ArgList$[rsp]
  0003c	45 33 c0	 xor	 r8d, r8d
  0003f	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Format$[rsp]
  00044	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Stream$[rsp]
  00049	e8 00 00 00 00	 call	 _vfprintf_l
  0004e	89 44 24 20	 mov	 DWORD PTR _Result$[rsp], eax

; 840  :         __crt_va_end(_ArgList);

  00052	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 841  :         return _Result;

  0005b	8b 44 24 20	 mov	 eax, DWORD PTR _Result$[rsp]

; 842  :     }

  0005f	8b f8		 mov	 edi, eax
  00061	48 8b cc	 mov	 rcx, rsp
  00064	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:fprintf$rtcFrameData
  0006b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00070	8b c7		 mov	 eax, edi
  00072	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
fprintf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 642  :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0003c	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Locale$[rsp]
  00041	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Format$[rsp]
  00046	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Stream$[rsp]
  0004b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vfprintf

; 644  :     }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_wstdio.h
;	COMDAT swprintf_s
_TEXT	SEGMENT
_Result$ = 48
_ArgList$ = 72
_Buffer$ = 112
_BufferCount$ = 120
_Format$ = 128
swprintf_s PROC						; COMDAT

; 1538 :         {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1539 :             int _Result;
; 1540 :             va_list _ArgList;
; 1541 :             __crt_va_start(_ArgList, _Format);

  0002d	48 8d 84 24 88
	00 00 00	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00035	48 89 44 24 48	 mov	 QWORD PTR _ArgList$[rsp], rax

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _ArgList$[rsp]
  0003f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00044	45 33 c9	 xor	 r9d, r9d
  00047	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR _Format$[rsp]
  0004f	48 8b 54 24 78	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  00054	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00059	e8 00 00 00 00	 call	 _vswprintf_s_l
  0005e	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1543 :             __crt_va_end(_ArgList);

  00062	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 1544 :             return _Result;

  0006b	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]

; 1545 :         }

  0006f	8b f8		 mov	 edi, eax
  00071	48 8b cc	 mov	 rcx, rsp
  00074	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:swprintf_s$rtcFrameData
  0007b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00080	8b c7		 mov	 eax, edi
  00082	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00086	5f		 pop	 rdi
  00087	c3		 ret	 0
swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_wstdio.h
;	COMDAT _vswprintf_s_l
_TEXT	SEGMENT
_Result$ = 48
tv73 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vswprintf_s_l PROC					; COMDAT

; 1264 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003c	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00041	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00046	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  0004b	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  00050	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00055	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00058	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vswprintf_s
  0005e	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  00062	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00067	7d 0a		 jge	 SHORT $LN3@vswprintf_
  00069	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv73[rsp], -1
  00071	eb 08		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00073	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00077	89 44 24 34	 mov	 DWORD PTR tv73[rsp], eax
$LN4@vswprintf_:
  0007b	8b 44 24 34	 mov	 eax, DWORD PTR tv73[rsp]

; 1270 :     }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
_vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :     {

$LN3:
  00000	40 57		 push	 rdi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00002	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00009	5f		 pop	 rdi
  0000a	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVEncC\QSVEncC.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
