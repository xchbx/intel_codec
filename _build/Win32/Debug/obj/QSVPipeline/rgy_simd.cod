; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

	TITLE	D:\work\intel\intel_codec\QSVPipeline\rgy_simd.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?get_availableSIMD@@YAIXZ			; get_availableSIMD
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_simd.cpp
_TEXT	SEGMENT
tv189 = -48						; size = 8
_xgetbv$ = -40						; size = 8
_simd$ = -32						; size = 4
_CPUInfo$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
?get_availableSIMD@@YAIXZ PROC				; get_availableSIMD

; 37   : unsigned int get_availableSIMD() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0000c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 38   :     int CPUInfo[4];
; 39   :     __cpuid(CPUInfo, 1);

  00022	8d 75 e8	 lea	 esi, DWORD PTR _CPUInfo$[ebp]
  00025	b8 01 00 00 00	 mov	 eax, 1
  0002a	33 c9		 xor	 ecx, ecx
  0002c	0f a2		 cpuid
  0002e	89 06		 mov	 DWORD PTR [esi], eax
  00030	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  00033	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00036	89 56 0c	 mov	 DWORD PTR [esi+12], edx

; 40   :     uint32_t simd = NONE;

  00039	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _simd$[ebp], 0

; 41   :     if (CPUInfo[3] & 0x04000000) simd |= SSE2;

  00040	b8 04 00 00 00	 mov	 eax, 4
  00045	6b c8 03	 imul	 ecx, eax, 3
  00048	8b 54 0d e8	 mov	 edx, DWORD PTR _CPUInfo$[ebp+ecx]
  0004c	81 e2 00 00 00
	04		 and	 edx, 67108864		; 04000000H
  00052	74 09		 je	 SHORT $LN2@get_availa
  00054	8b 45 e0	 mov	 eax, DWORD PTR _simd$[ebp]
  00057	83 c8 01	 or	 eax, 1
  0005a	89 45 e0	 mov	 DWORD PTR _simd$[ebp], eax
$LN2@get_availa:

; 42   :     if (CPUInfo[2] & 0x00000001) simd |= SSE3;

  0005d	b9 04 00 00 00	 mov	 ecx, 4
  00062	d1 e1		 shl	 ecx, 1
  00064	8b 54 0d e8	 mov	 edx, DWORD PTR _CPUInfo$[ebp+ecx]
  00068	83 e2 01	 and	 edx, 1
  0006b	74 09		 je	 SHORT $LN3@get_availa
  0006d	8b 45 e0	 mov	 eax, DWORD PTR _simd$[ebp]
  00070	83 c8 02	 or	 eax, 2
  00073	89 45 e0	 mov	 DWORD PTR _simd$[ebp], eax
$LN3@get_availa:

; 43   :     if (CPUInfo[2] & 0x00000200) simd |= SSSE3;

  00076	b9 04 00 00 00	 mov	 ecx, 4
  0007b	d1 e1		 shl	 ecx, 1
  0007d	8b 54 0d e8	 mov	 edx, DWORD PTR _CPUInfo$[ebp+ecx]
  00081	81 e2 00 02 00
	00		 and	 edx, 512		; 00000200H
  00087	74 09		 je	 SHORT $LN4@get_availa
  00089	8b 45 e0	 mov	 eax, DWORD PTR _simd$[ebp]
  0008c	83 c8 04	 or	 eax, 4
  0008f	89 45 e0	 mov	 DWORD PTR _simd$[ebp], eax
$LN4@get_availa:

; 44   :     if (CPUInfo[2] & 0x00080000) simd |= SSE41;

  00092	b9 04 00 00 00	 mov	 ecx, 4
  00097	d1 e1		 shl	 ecx, 1
  00099	8b 54 0d e8	 mov	 edx, DWORD PTR _CPUInfo$[ebp+ecx]
  0009d	81 e2 00 00 08
	00		 and	 edx, 524288		; 00080000H
  000a3	74 09		 je	 SHORT $LN5@get_availa
  000a5	8b 45 e0	 mov	 eax, DWORD PTR _simd$[ebp]
  000a8	83 c8 08	 or	 eax, 8
  000ab	89 45 e0	 mov	 DWORD PTR _simd$[ebp], eax
$LN5@get_availa:

; 45   :     if (CPUInfo[2] & 0x00100000) simd |= SSE42;

  000ae	b9 04 00 00 00	 mov	 ecx, 4
  000b3	d1 e1		 shl	 ecx, 1
  000b5	8b 54 0d e8	 mov	 edx, DWORD PTR _CPUInfo$[ebp+ecx]
  000b9	81 e2 00 00 10
	00		 and	 edx, 1048576		; 00100000H
  000bf	74 09		 je	 SHORT $LN6@get_availa
  000c1	8b 45 e0	 mov	 eax, DWORD PTR _simd$[ebp]
  000c4	83 c8 10	 or	 eax, 16			; 00000010H
  000c7	89 45 e0	 mov	 DWORD PTR _simd$[ebp], eax
$LN6@get_availa:

; 46   :     if (CPUInfo[2] & 0x00800000) simd |= POPCNT;

  000ca	b9 04 00 00 00	 mov	 ecx, 4
  000cf	d1 e1		 shl	 ecx, 1
  000d1	8b 54 0d e8	 mov	 edx, DWORD PTR _CPUInfo$[ebp+ecx]
  000d5	81 e2 00 00 80
	00		 and	 edx, 8388608		; 00800000H
  000db	74 09		 je	 SHORT $LN7@get_availa
  000dd	8b 45 e0	 mov	 eax, DWORD PTR _simd$[ebp]
  000e0	83 c8 20	 or	 eax, 32			; 00000020H
  000e3	89 45 e0	 mov	 DWORD PTR _simd$[ebp], eax
$LN7@get_availa:

; 47   :     uint64_t xgetbv = 0;

  000e6	0f 57 c0	 xorps	 xmm0, xmm0
  000e9	66 0f 13 45 d8	 movlpd	 QWORD PTR _xgetbv$[ebp], xmm0

; 48   :     if ((CPUInfo[2] & 0x18000000) == 0x18000000) {

  000ee	b9 04 00 00 00	 mov	 ecx, 4
  000f3	d1 e1		 shl	 ecx, 1
  000f5	8b 54 0d e8	 mov	 edx, DWORD PTR _CPUInfo$[ebp+ecx]
  000f9	81 e2 00 00 00
	18		 and	 edx, 402653184		; 18000000H
  000ff	81 fa 00 00 00
	18		 cmp	 edx, 402653184		; 18000000H
  00105	75 51		 jne	 SHORT $LN8@get_availa

; 49   :         xgetbv = _xgetbv(0);

  00107	33 c9		 xor	 ecx, ecx
  00109	0f 01 d0	 xgetbv
  0010c	89 45 d8	 mov	 DWORD PTR _xgetbv$[ebp], eax
  0010f	89 55 dc	 mov	 DWORD PTR _xgetbv$[ebp+4], edx

; 50   :         if ((xgetbv & 0x06) == 0x06)

  00112	8b 45 d8	 mov	 eax, DWORD PTR _xgetbv$[ebp]
  00115	83 e0 06	 and	 eax, 6
  00118	8b 4d dc	 mov	 ecx, DWORD PTR _xgetbv$[ebp+4]
  0011b	83 e1 00	 and	 ecx, 0
  0011e	89 45 d0	 mov	 DWORD PTR tv189[ebp], eax
  00121	89 4d d4	 mov	 DWORD PTR tv189[ebp+4], ecx
  00124	83 7d d0 06	 cmp	 DWORD PTR tv189[ebp], 6
  00128	75 0f		 jne	 SHORT $LN9@get_availa
  0012a	83 7d d4 00	 cmp	 DWORD PTR tv189[ebp+4], 0
  0012e	75 09		 jne	 SHORT $LN9@get_availa

; 51   :             simd |= AVX;

  00130	8b 55 e0	 mov	 edx, DWORD PTR _simd$[ebp]
  00133	83 ca 40	 or	 edx, 64			; 00000040H
  00136	89 55 e0	 mov	 DWORD PTR _simd$[ebp], edx
$LN9@get_availa:

; 52   :         if (CPUInfo[2] & 0x00001000)

  00139	b8 04 00 00 00	 mov	 eax, 4
  0013e	d1 e0		 shl	 eax, 1
  00140	8b 4c 05 e8	 mov	 ecx, DWORD PTR _CPUInfo$[ebp+eax]
  00144	81 e1 00 10 00
	00		 and	 ecx, 4096		; 00001000H
  0014a	74 0c		 je	 SHORT $LN8@get_availa

; 53   :             simd |= FMA3;

  0014c	8b 55 e0	 mov	 edx, DWORD PTR _simd$[ebp]
  0014f	81 ca 00 01 00
	00		 or	 edx, 256		; 00000100H
  00155	89 55 e0	 mov	 DWORD PTR _simd$[ebp], edx
$LN8@get_availa:

; 54   :     }
; 55   :     __cpuid(CPUInfo, 7);

  00158	8d 75 e8	 lea	 esi, DWORD PTR _CPUInfo$[ebp]
  0015b	b8 07 00 00 00	 mov	 eax, 7
  00160	33 c9		 xor	 ecx, ecx
  00162	0f a2		 cpuid
  00164	89 06		 mov	 DWORD PTR [esi], eax
  00166	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  00169	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  0016c	89 56 0c	 mov	 DWORD PTR [esi+12], edx

; 56   :     if ((simd & AVX) && (CPUInfo[1] & 0x00000020))

  0016f	8b 45 e0	 mov	 eax, DWORD PTR _simd$[ebp]
  00172	83 e0 40	 and	 eax, 64			; 00000040H
  00175	74 1c		 je	 SHORT $LN11@get_availa
  00177	b9 04 00 00 00	 mov	 ecx, 4
  0017c	c1 e1 00	 shl	 ecx, 0
  0017f	8b 54 0d e8	 mov	 edx, DWORD PTR _CPUInfo$[ebp+ecx]
  00183	83 e2 20	 and	 edx, 32			; 00000020H
  00186	74 0b		 je	 SHORT $LN11@get_availa

; 57   :         simd |= AVX2;

  00188	8b 45 e0	 mov	 eax, DWORD PTR _simd$[ebp]
  0018b	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  00190	89 45 e0	 mov	 DWORD PTR _simd$[ebp], eax
$LN11@get_availa:

; 58   :     return simd;

  00193	8b 45 e0	 mov	 eax, DWORD PTR _simd$[ebp]

; 59   : }

  00196	52		 push	 edx
  00197	8b cd		 mov	 ecx, ebp
  00199	50		 push	 eax
  0019a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@get_availa
  001a0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001a5	58		 pop	 eax
  001a6	5a		 pop	 edx
  001a7	5f		 pop	 edi
  001a8	5e		 pop	 esi
  001a9	5b		 pop	 ebx
  001aa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ad	33 cd		 xor	 ecx, ebp
  001af	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b4	8b e5		 mov	 esp, ebp
  001b6	5d		 pop	 ebp
  001b7	c3		 ret	 0
$LN15@get_availa:
  001b8	01 00 00 00	 DD	 1
  001bc	00 00 00 00	 DD	 $LN14@get_availa
$LN14@get_availa:
  001c0	e8 ff ff ff	 DD	 -24			; ffffffe8H
  001c4	10 00 00 00	 DD	 16			; 00000010H
  001c8	00 00 00 00	 DD	 $LN13@get_availa
$LN13@get_availa:
  001cc	43		 DB	 67			; 00000043H
  001cd	50		 DB	 80			; 00000050H
  001ce	55		 DB	 85			; 00000055H
  001cf	49		 DB	 73			; 00000049H
  001d0	6e		 DB	 110			; 0000006eH
  001d1	66		 DB	 102			; 00000066H
  001d2	6f		 DB	 111			; 0000006fH
  001d3	00		 DB	 0
?get_availableSIMD@@YAIXZ ENDP				; get_availableSIMD
_TEXT	ENDS
END
